package FindingBestModel.BestModel.ProportionProbabilityForCharacterSubModel;


import java.util.HashMap;
import java.util.concurrent.ThreadLocalRandom;

public class TwoCharacterSubstitutionFirstHalf {

    HashMap<String,Character> twoCharacterInputToKnownOutput = new HashMap<>();
    HashMap<String, ProportionalProbability> twoCharacterInputWithUnknownOutput = new HashMap<>();
    ThreadLocalRandom random = ThreadLocalRandom.current();

    public TwoCharacterSubstitutionFirstHalf(){
        initialiseTwoCharacterInputToKnownOutputFirstHalf();
        initialiseTwoCharacterInputToKnownOutputSecondHalf();
        initialiseTwoCharacterInputToUnknownOutputPart1();
        initialiseTwoCharacterInputToUnknownOutputPart2();
        initialiseTwoCharacterInputToUnknownOutputPart3();
        initialiseTwoCharacterInputToUnknownOutputPart4();
        initialiseTwoCharacterInputToUnknownOutputPart5();
        initialiseTwoCharacterInputToUnknownOutputPart6();
        initialiseTwoCharacterInputToUnknownOutputPart7();
        initialiseTwoCharacterInputToUnknownOutputPart8();
        initialiseTwoCharacterInputToUnknownOutputPart9();
        initialiseTwoCharacterInputToUnknownOutputPart10();

    }

    public Character substitute(String input){
        Character knownOutput = twoCharacterInputToKnownOutput.get(input);
        if (knownOutput == null){
            ProportionalProbability proportionalProbability = twoCharacterInputWithUnknownOutput.get(input);
            if (proportionalProbability == null){
                return null;
            }else {
                return proportionalProbability.execute(random);
            }
        }else{
            return knownOutput;
        }
    }

    private void initialiseTwoCharacterInputToKnownOutputFirstHalf(){
        twoCharacterInputToKnownOutput.put("产科",'科');
        twoCharacterInputToKnownOutput.put("血[",'[');
        twoCharacterInputToKnownOutput.put("准备",'备');
        twoCharacterInputToKnownOutput.put("ذ<",' ');
        twoCharacterInputToKnownOutput.put("机 ",' ');
        twoCharacterInputToKnownOutput.put("ر<",' ');
        twoCharacterInputToKnownOutput.put("ز<",' ');
        twoCharacterInputToKnownOutput.put("机<",' ');
        twoCharacterInputToKnownOutput.put("س<",' ');
        twoCharacterInputToKnownOutput.put("科(",'(');
        twoCharacterInputToKnownOutput.put("ش<",' ');
        twoCharacterInputToKnownOutput.put(" 粪",'粪');
        twoCharacterInputToKnownOutput.put("ص<",' ');
        twoCharacterInputToKnownOutput.put("ض ",' ');
        twoCharacterInputToKnownOutput.put("제안",'안');
        twoCharacterInputToKnownOutput.put("ض<",' ');
        twoCharacterInputToKnownOutput.put("ط<",' ');
        twoCharacterInputToKnownOutput.put("ظ<",' ');
        twoCharacterInputToKnownOutput.put("ع<",' ');
        twoCharacterInputToKnownOutput.put(">秃",'秃');
        twoCharacterInputToKnownOutput.put("办 ",' ');
        twoCharacterInputToKnownOutput.put("대표",'표');
        twoCharacterInputToKnownOutput.put("淋病",'病');
        twoCharacterInputToKnownOutput.put("行<",' ');
        twoCharacterInputToKnownOutput.put("上个",'个');
        twoCharacterInputToKnownOutput.put("容易",'易');
        twoCharacterInputToKnownOutput.put(" ",' ');
        twoCharacterInputToKnownOutput.put("下个",'个');
        twoCharacterInputToKnownOutput.put("疸(",'(');
        twoCharacterInputToKnownOutput.put("疹(",'(');
        twoCharacterInputToKnownOutput.put("ℓ<",' ');
        twoCharacterInputToKnownOutput.put("a",'a');
        twoCharacterInputToKnownOutput.put("e",'e');
        twoCharacterInputToKnownOutput.put("s",'s');
        twoCharacterInputToKnownOutput.put("t",'t');
        twoCharacterInputToKnownOutput.put("咳(",'(');
        twoCharacterInputToKnownOutput.put("ق<",' ');
        twoCharacterInputToKnownOutput.put("−√",'√');
        twoCharacterInputToKnownOutput.put("전진",'진');
        twoCharacterInputToKnownOutput.put("ل<",' ');
        twoCharacterInputToKnownOutput.put("م ",' ');
        twoCharacterInputToKnownOutput.put("了<",' ');
        twoCharacterInputToKnownOutput.put("囊(",'(');
        twoCharacterInputToKnownOutput.put("م<",' ');
        twoCharacterInputToKnownOutput.put("动<",' ');
        twoCharacterInputToKnownOutput.put("ن<",' ');
        twoCharacterInputToKnownOutput.put("ه ",' ');
        twoCharacterInputToKnownOutput.put("ه<",' ');
        twoCharacterInputToKnownOutput.put("Же",'е');
        twoCharacterInputToKnownOutput.put(" （",'（');
        twoCharacterInputToKnownOutput.put("و<",' ');
        twoCharacterInputToKnownOutput.put(" ：",'：');
        twoCharacterInputToKnownOutput.put("‘’",'’');
        twoCharacterInputToKnownOutput.put("й ",' ');
        twoCharacterInputToKnownOutput.put("病(",'(');
        twoCharacterInputToKnownOutput.put("’’",'’');
        twoCharacterInputToKnownOutput.put("头痛",'痛');
        twoCharacterInputToKnownOutput.put("六月",'月');
        twoCharacterInputToKnownOutput.put("囊肿",'肿');
        twoCharacterInputToKnownOutput.put("症(",'(');
        twoCharacterInputToKnownOutput.put("™<",' ');
        twoCharacterInputToKnownOutput.put("外科",'科');
        twoCharacterInputToKnownOutput.put("о\"",'\"');
        twoCharacterInputToKnownOutput.put("외무",'무');
        twoCharacterInputToKnownOutput.put("结核",'核');
        twoCharacterInputToKnownOutput.put(" ",'');
        twoCharacterInputToKnownOutput.put("头皮",'皮');
        twoCharacterInputToKnownOutput.put("Пе",'е');
        twoCharacterInputToKnownOutput.put("р<",' ');
        twoCharacterInputToKnownOutput.put("По",'о');
        twoCharacterInputToKnownOutput.put(" !",'!');
        twoCharacterInputToKnownOutput.put("失眠",'眠');
        twoCharacterInputToKnownOutput.put(" @",'@');
        twoCharacterInputToKnownOutput.put("!*",'*');
        twoCharacterInputToKnownOutput.put("!,",',');
        twoCharacterInputToKnownOutput.put("!-",'-');
        twoCharacterInputToKnownOutput.put("!/",'/');
        twoCharacterInputToKnownOutput.put("Сб",'б');
        twoCharacterInputToKnownOutput.put("!8",'8');
        twoCharacterInputToKnownOutput.put("!;",';');
        twoCharacterInputToKnownOutput.put("!=",'=');
        twoCharacterInputToKnownOutput.put(" \\",'\\');
        twoCharacterInputToKnownOutput.put(" ]",']');
        twoCharacterInputToKnownOutput.put(" `",'`');
        twoCharacterInputToKnownOutput.put("!F",'F');
        twoCharacterInputToKnownOutput.put("\")",')');
        twoCharacterInputToKnownOutput.put("!K",'K');
        twoCharacterInputToKnownOutput.put("\"-",'-');
        twoCharacterInputToKnownOutput.put("\"0",'0');
        twoCharacterInputToKnownOutput.put("\"3",'3');
        twoCharacterInputToKnownOutput.put("\";",';');
        twoCharacterInputToKnownOutput.put("\">",'>');
        twoCharacterInputToKnownOutput.put("!]",']');
        twoCharacterInputToKnownOutput.put(" }",'}');
        twoCharacterInputToKnownOutput.put("肠热",'热');
        twoCharacterInputToKnownOutput.put(" ",'');
        twoCharacterInputToKnownOutput.put("\"E",'E');
        twoCharacterInputToKnownOutput.put("#\'",' ');
        twoCharacterInputToKnownOutput.put("\"H",'H');
        twoCharacterInputToKnownOutput.put("#)",')');
        twoCharacterInputToKnownOutput.put("!h",'h');
        twoCharacterInputToKnownOutput.put("\"J",'J');
        twoCharacterInputToKnownOutput.put("#,",',');
        twoCharacterInputToKnownOutput.put("\"K",'K');
        twoCharacterInputToKnownOutput.put("\"N",'N');
        twoCharacterInputToKnownOutput.put("#1",'1');
        twoCharacterInputToKnownOutput.put("\"Q",'Q');
        twoCharacterInputToKnownOutput.put("#4",'4');
        twoCharacterInputToKnownOutput.put("\"U",'U');
        twoCharacterInputToKnownOutput.put("#6",'6');
        twoCharacterInputToKnownOutput.put("\"V",'V');
        twoCharacterInputToKnownOutput.put("#8",'8');
        twoCharacterInputToKnownOutput.put("!w",'w');
        twoCharacterInputToKnownOutput.put("\"X",'X');
        twoCharacterInputToKnownOutput.put("\"Z",'Z');
        twoCharacterInputToKnownOutput.put("#<",' ');
        twoCharacterInputToKnownOutput.put("\"[",'[');
        twoCharacterInputToKnownOutput.put("#=",'=');
        twoCharacterInputToKnownOutput.put("\"_",'_');
        twoCharacterInputToKnownOutput.put("$$",'$');
        twoCharacterInputToKnownOutput.put(" £",'£');
        twoCharacterInputToKnownOutput.put("$(",'$');
        twoCharacterInputToKnownOutput.put("$)",')');
        twoCharacterInputToKnownOutput.put("$,",',');
        twoCharacterInputToKnownOutput.put(" ¨",'¨');
        twoCharacterInputToKnownOutput.put("\"j",'j');
        twoCharacterInputToKnownOutput.put("\"k",'k');
        twoCharacterInputToKnownOutput.put("\"l",'l');
        twoCharacterInputToKnownOutput.put("$/",'x');
        twoCharacterInputToKnownOutput.put("$0",'0');
        twoCharacterInputToKnownOutput.put("$3",'3');
        twoCharacterInputToKnownOutput.put("$4",'4');
        twoCharacterInputToKnownOutput.put("$5",'5');
        twoCharacterInputToKnownOutput.put("$6",'6');
        twoCharacterInputToKnownOutput.put("$7",'7');
        twoCharacterInputToKnownOutput.put(" ³",'³');
        twoCharacterInputToKnownOutput.put("\"v",'v');
        twoCharacterInputToKnownOutput.put(" µ",'µ');
        twoCharacterInputToKnownOutput.put("$9",'9');
        twoCharacterInputToKnownOutput.put("\"x",'x');
        twoCharacterInputToKnownOutput.put("\"z",'z');
        twoCharacterInputToKnownOutput.put("$<",'$');
        twoCharacterInputToKnownOutput.put(" ¾",'¾');
        twoCharacterInputToKnownOutput.put("#c",'c');
        twoCharacterInputToKnownOutput.put("%)",')');
        twoCharacterInputToKnownOutput.put(" Ä",'Ä');
        twoCharacterInputToKnownOutput.put(" É",'É');
        twoCharacterInputToKnownOutput.put("%1",'1');
        twoCharacterInputToKnownOutput.put("#s",'s');
        twoCharacterInputToKnownOutput.put("%;",';');
        twoCharacterInputToKnownOutput.put("%<",' ');
        twoCharacterInputToKnownOutput.put("%=",'/');
        twoCharacterInputToKnownOutput.put("客气",'气');
        twoCharacterInputToKnownOutput.put("节目",'目');
        twoCharacterInputToKnownOutput.put("%D",'D');
        twoCharacterInputToKnownOutput.put("&&",'&');
        twoCharacterInputToKnownOutput.put("\"£",'s');
        twoCharacterInputToKnownOutput.put(" â",'â');
        twoCharacterInputToKnownOutput.put(" ä",'ä');
        twoCharacterInputToKnownOutput.put("%N",'N');
        twoCharacterInputToKnownOutput.put("&/",'/');
        twoCharacterInputToKnownOutput.put(" ê",'ê');
        twoCharacterInputToKnownOutput.put(" ó",'ó');
        twoCharacterInputToKnownOutput.put("%^",'^');
        twoCharacterInputToKnownOutput.put(" ú",'ú');
        twoCharacterInputToKnownOutput.put("&A",'A');
        twoCharacterInputToKnownOutput.put("&B",'B');
        twoCharacterInputToKnownOutput.put(" ü",'ü');
        twoCharacterInputToKnownOutput.put("&E",'E');
        twoCharacterInputToKnownOutput.put("اب",'ب');
        twoCharacterInputToKnownOutput.put("&H",'H');
        twoCharacterInputToKnownOutput.put("ات",'ت');
        twoCharacterInputToKnownOutput.put("\'+",'+');
        twoCharacterInputToKnownOutput.put("اث",'\"');
        twoCharacterInputToKnownOutput.put("\'-",'-');
        twoCharacterInputToKnownOutput.put("اد",'د');
        twoCharacterInputToKnownOutput.put("&O",'O');
        twoCharacterInputToKnownOutput.put("ار",'ر');
        twoCharacterInputToKnownOutput.put("\'3",'i');
        twoCharacterInputToKnownOutput.put("اس",'س');
        twoCharacterInputToKnownOutput.put("&S",'S');
        twoCharacterInputToKnownOutput.put("\'8",'i');
        twoCharacterInputToKnownOutput.put("\'9",'9');
        twoCharacterInputToKnownOutput.put("\';",';');
        twoCharacterInputToKnownOutput.put("!÷",'÷');
        twoCharacterInputToKnownOutput.put("\'=",'=');
        twoCharacterInputToKnownOutput.put("1）",'）');
        twoCharacterInputToKnownOutput.put("(!",'t');
        twoCharacterInputToKnownOutput.put("(\"",'\"');
        twoCharacterInputToKnownOutput.put("\'B",'B');
        twoCharacterInputToKnownOutput.put(" ě",'ě');
        twoCharacterInputToKnownOutput.put("($",'$');
        twoCharacterInputToKnownOutput.put("ال",'ل');
        twoCharacterInputToKnownOutput.put("&c",'c');
        twoCharacterInputToKnownOutput.put("ام",'م');
        twoCharacterInputToKnownOutput.put("ان",'ن');
        twoCharacterInputToKnownOutput.put("با",'ا');
        twoCharacterInputToKnownOutput.put("\'F",'F');
        twoCharacterInputToKnownOutput.put("(\'",'\'');
        twoCharacterInputToKnownOutput.put("اه",'ه');
        twoCharacterInputToKnownOutput.put("\'G",'t');
        twoCharacterInputToKnownOutput.put("&g",'l');
        twoCharacterInputToKnownOutput.put("(*",'*');
        twoCharacterInputToKnownOutput.put("&i",'t');
        twoCharacterInputToKnownOutput.put("(.",'.');
        twoCharacterInputToKnownOutput.put("&l",'e');
        twoCharacterInputToKnownOutput.put("(/",'/');
        twoCharacterInputToKnownOutput.put("\'O",'O');
        twoCharacterInputToKnownOutput.put("\'P",'c');
        twoCharacterInputToKnownOutput.put("&o",'o');
        twoCharacterInputToKnownOutput.put("\'R",'…');
        twoCharacterInputToKnownOutput.put("&q",'q');
        twoCharacterInputToKnownOutput.put("آ",'ٓ');
        twoCharacterInputToKnownOutput.put("&t",'t');
        twoCharacterInputToKnownOutput.put("&w",'w');
        twoCharacterInputToKnownOutput.put("\'Y",'Y');
        twoCharacterInputToKnownOutput.put("\'[",'[');
        twoCharacterInputToKnownOutput.put("(>",'>');
        twoCharacterInputToKnownOutput.put("(?",'?');
        twoCharacterInputToKnownOutput.put(")\"",'\"');
        twoCharacterInputToKnownOutput.put(")&",'&');
        twoCharacterInputToKnownOutput.put("بي",'ي');
        twoCharacterInputToKnownOutput.put(" ł",'ł');
        twoCharacterInputToKnownOutput.put("\'j",'j');
        twoCharacterInputToKnownOutput.put("بَ",'َ');
        twoCharacterInputToKnownOutput.put(")1",'1');
        twoCharacterInputToKnownOutput.put(")2",'2');
        twoCharacterInputToKnownOutput.put(")3",'3');
        twoCharacterInputToKnownOutput.put("\'q",'q');
        twoCharacterInputToKnownOutput.put(")5",'5');
        twoCharacterInputToKnownOutput.put("\'x",'x');
        twoCharacterInputToKnownOutput.put("([",'[');
        twoCharacterInputToKnownOutput.put(")>",'>');
        twoCharacterInputToKnownOutput.put("(_",'_');
        twoCharacterInputToKnownOutput.put("اپ",'پ');
        twoCharacterInputToKnownOutput.put("3）",'）');
        twoCharacterInputToKnownOutput.put(")A",'A');
        twoCharacterInputToKnownOutput.put(")C",'C');
        twoCharacterInputToKnownOutput.put(")D",'D');
        twoCharacterInputToKnownOutput.put(" ś",'ś');
        twoCharacterInputToKnownOutput.put(")F",'F');
        twoCharacterInputToKnownOutput.put("*)",')');
        twoCharacterInputToKnownOutput.put(")H",'H');
        twoCharacterInputToKnownOutput.put("**",'*');
        twoCharacterInputToKnownOutput.put("*,",',');
        twoCharacterInputToKnownOutput.put(")L",'L');
        twoCharacterInputToKnownOutput.put(")M",'M');
        twoCharacterInputToKnownOutput.put("*.",'.');
        twoCharacterInputToKnownOutput.put(")N",'N');
        twoCharacterInputToKnownOutput.put(")O",'O');
        twoCharacterInputToKnownOutput.put("*1",'1');
        twoCharacterInputToKnownOutput.put(")P",'P');
        twoCharacterInputToKnownOutput.put("*2",'2');
        twoCharacterInputToKnownOutput.put("*3",'3');
        twoCharacterInputToKnownOutput.put("*4",'4');
        twoCharacterInputToKnownOutput.put("اڑ",'ڑ');
        twoCharacterInputToKnownOutput.put("∫√",'√');
        twoCharacterInputToKnownOutput.put(")U",'U');
        twoCharacterInputToKnownOutput.put(")V",'V');
        twoCharacterInputToKnownOutput.put("تط",'ط');
        twoCharacterInputToKnownOutput.put(")W",'W');
        twoCharacterInputToKnownOutput.put("ы<",' ');
        twoCharacterInputToKnownOutput.put("*<",' ');
        twoCharacterInputToKnownOutput.put("(z",'z');
        twoCharacterInputToKnownOutput.put("*=",'=');
        twoCharacterInputToKnownOutput.put("4）",'）');
        twoCharacterInputToKnownOutput.put("ь ",' ');
        twoCharacterInputToKnownOutput.put(")_",'_');
        twoCharacterInputToKnownOutput.put("∫∞",'∞');
        twoCharacterInputToKnownOutput.put("تق",'ق');
        twoCharacterInputToKnownOutput.put("*B",'r');
        twoCharacterInputToKnownOutput.put("*D",'o');
        twoCharacterInputToKnownOutput.put(")f",'f');
        twoCharacterInputToKnownOutput.put("*G",'G');
        twoCharacterInputToKnownOutput.put(")g",'g');
        twoCharacterInputToKnownOutput.put(",",'');
        twoCharacterInputToKnownOutput.put("+,",',');
        twoCharacterInputToKnownOutput.put("*K",'f');
        twoCharacterInputToKnownOutput.put("+-",'-');
        twoCharacterInputToKnownOutput.put(")k",'k');
        twoCharacterInputToKnownOutput.put("*L",'m');
        twoCharacterInputToKnownOutput.put(")l",'l');
        twoCharacterInputToKnownOutput.put("*N",'N');
        twoCharacterInputToKnownOutput.put(")n",'n');
        twoCharacterInputToKnownOutput.put(")o",'o');
        twoCharacterInputToKnownOutput.put("+2",'2');
        twoCharacterInputToKnownOutput.put(")p",'p');
        twoCharacterInputToKnownOutput.put("+3",'3');
        twoCharacterInputToKnownOutput.put(")q",'q');
        twoCharacterInputToKnownOutput.put("بڑ",'ڑ');
        twoCharacterInputToKnownOutput.put("\'±",'±');
        twoCharacterInputToKnownOutput.put("+6",'6');
        twoCharacterInputToKnownOutput.put("*U",'U');
        twoCharacterInputToKnownOutput.put(")u",'u');
        twoCharacterInputToKnownOutput.put("+8",'8');
        twoCharacterInputToKnownOutput.put(")v",'v');
        twoCharacterInputToKnownOutput.put(")y",'y');
        twoCharacterInputToKnownOutput.put("ь<",' ');
        twoCharacterInputToKnownOutput.put("+;",';');
        twoCharacterInputToKnownOutput.put("+<",' ');
        twoCharacterInputToKnownOutput.put("+=",'=');
        twoCharacterInputToKnownOutput.put(")|",'|');
        twoCharacterInputToKnownOutput.put(")}",'}');
        twoCharacterInputToKnownOutput.put("+A",'i');
        twoCharacterInputToKnownOutput.put("ثق",'و');
        twoCharacterInputToKnownOutput.put("*b",'b');
        twoCharacterInputToKnownOutput.put("*c",'c');
        twoCharacterInputToKnownOutput.put("*d",'d');
        twoCharacterInputToKnownOutput.put("(£",'£');
        twoCharacterInputToKnownOutput.put(",(",'p');
        twoCharacterInputToKnownOutput.put(",)",')');
        twoCharacterInputToKnownOutput.put("*g",'g');
        twoCharacterInputToKnownOutput.put("+H",' ');
        twoCharacterInputToKnownOutput.put("*h",'h');
        twoCharacterInputToKnownOutput.put("+I",'I');
        twoCharacterInputToKnownOutput.put(",+",'+');
        twoCharacterInputToKnownOutput.put("+K",'K');
        twoCharacterInputToKnownOutput.put("(¨",'¨');
        twoCharacterInputToKnownOutput.put("+L",'L');
        twoCharacterInputToKnownOutput.put("+M",'M');
        twoCharacterInputToKnownOutput.put("جد",'د');
        twoCharacterInputToKnownOutput.put(",/",'/');
        twoCharacterInputToKnownOutput.put("+N",'N');
        twoCharacterInputToKnownOutput.put("*n",'n');
        twoCharacterInputToKnownOutput.put("+P",'P');
        twoCharacterInputToKnownOutput.put("*o",'o');
        twoCharacterInputToKnownOutput.put("ای",'ی');
        twoCharacterInputToKnownOutput.put("(®",'®');
        twoCharacterInputToKnownOutput.put(",2",'2');
        twoCharacterInputToKnownOutput.put("+Q",'g');
        twoCharacterInputToKnownOutput.put(",4",'4');
        twoCharacterInputToKnownOutput.put("(°",'°');
        twoCharacterInputToKnownOutput.put("*s",'s');
        twoCharacterInputToKnownOutput.put("(±",'±');
        twoCharacterInputToKnownOutput.put("+T",'T');
        twoCharacterInputToKnownOutput.put(",7",'7');
        twoCharacterInputToKnownOutput.put("اے",'ے');
        twoCharacterInputToKnownOutput.put(",8",'8');
        twoCharacterInputToKnownOutput.put("+W",'W');
        twoCharacterInputToKnownOutput.put("*w",'w');
        twoCharacterInputToKnownOutput.put("(µ",'µ');
        twoCharacterInputToKnownOutput.put("*x",'x');
        twoCharacterInputToKnownOutput.put("*y",'y');
        twoCharacterInputToKnownOutput.put("(¹",'o');
        twoCharacterInputToKnownOutput.put("+]",']');
        twoCharacterInputToKnownOutput.put(",>",'>');
        twoCharacterInputToKnownOutput.put("+_",'_');
        twoCharacterInputToKnownOutput.put("(½",'½');
        twoCharacterInputToKnownOutput.put(",A",'A');
        twoCharacterInputToKnownOutput.put("+a",'a');
        twoCharacterInputToKnownOutput.put(",B",'B');
        twoCharacterInputToKnownOutput.put("-#",'#');
        twoCharacterInputToKnownOutput.put(",C",'C');
        twoCharacterInputToKnownOutput.put("-$",'$');
        twoCharacterInputToKnownOutput.put(",D",'D');
        twoCharacterInputToKnownOutput.put(",E",'E');
        twoCharacterInputToKnownOutput.put("+g",'g');
        twoCharacterInputToKnownOutput.put("+h",'h');
        twoCharacterInputToKnownOutput.put(",J",'J');
        twoCharacterInputToKnownOutput.put("+i",'i');
        twoCharacterInputToKnownOutput.put("-+",'+');
        twoCharacterInputToKnownOutput.put("-,",',');
        twoCharacterInputToKnownOutput.put("+j",'j');
        twoCharacterInputToKnownOutput.put(",K",'K');
        twoCharacterInputToKnownOutput.put("+k",'k');
        twoCharacterInputToKnownOutput.put(",L",'s');
        twoCharacterInputToKnownOutput.put("\'è",'è');
        twoCharacterInputToKnownOutput.put("+l",'l');
        twoCharacterInputToKnownOutput.put("+n",'n');
        twoCharacterInputToKnownOutput.put("痛(",'(');
        twoCharacterInputToKnownOutput.put(",P",'P');
        twoCharacterInputToKnownOutput.put(",R",'R');
        twoCharacterInputToKnownOutput.put("+r",'r');
        twoCharacterInputToKnownOutput.put(",S",'S');
        twoCharacterInputToKnownOutput.put("+s",'s');
        twoCharacterInputToKnownOutput.put(",T",'T');
        twoCharacterInputToKnownOutput.put("+t",'t');
        twoCharacterInputToKnownOutput.put("+u",'u');
        twoCharacterInputToKnownOutput.put(")³",'³');
        twoCharacterInputToKnownOutput.put("+v",'v');
        twoCharacterInputToKnownOutput.put("痛 ",' ');
        twoCharacterInputToKnownOutput.put(",W",'W');
        twoCharacterInputToKnownOutput.put("+w",'w');
        twoCharacterInputToKnownOutput.put("+x",'x');
        twoCharacterInputToKnownOutput.put(",Y",'Y');
        twoCharacterInputToKnownOutput.put("+y",'y');
        twoCharacterInputToKnownOutput.put(")·",'·');
        twoCharacterInputToKnownOutput.put("-;",';');
        twoCharacterInputToKnownOutput.put(",[",'[');
        twoCharacterInputToKnownOutput.put("-=",'=');
        twoCharacterInputToKnownOutput.put(",_",'_');
        twoCharacterInputToKnownOutput.put("(à",'à');
        twoCharacterInputToKnownOutput.put("(á",'á');
        twoCharacterInputToKnownOutput.put(",e",'e');
        twoCharacterInputToKnownOutput.put(",f",'f');
        twoCharacterInputToKnownOutput.put(",g",'g');
        twoCharacterInputToKnownOutput.put("(ä",'ä');
        twoCharacterInputToKnownOutput.put(",h",'h');
        twoCharacterInputToKnownOutput.put("حي",'ي');
        twoCharacterInputToKnownOutput.put("算了",'了');
        twoCharacterInputToKnownOutput.put("(ê",'ê');
        twoCharacterInputToKnownOutput.put(",o",'o');
        twoCharacterInputToKnownOutput.put("-Q",'Q');
        twoCharacterInputToKnownOutput.put(",u",'u');
        twoCharacterInputToKnownOutput.put(",w",'w');
        twoCharacterInputToKnownOutput.put(".:",':');
        twoCharacterInputToKnownOutput.put("-Y",'Y');
        twoCharacterInputToKnownOutput.put(",x",'x');
        twoCharacterInputToKnownOutput.put(",z",'z');
        twoCharacterInputToKnownOutput.put("-[",'[');
        twoCharacterInputToKnownOutput.put("-]",']');
        twoCharacterInputToKnownOutput.put(",|",'|');
        twoCharacterInputToKnownOutput.put("-_",'_');
        twoCharacterInputToKnownOutput.put("(ú",'ú');
        twoCharacterInputToKnownOutput.put("/#",'#');
        twoCharacterInputToKnownOutput.put("(ü",'ü');
        twoCharacterInputToKnownOutput.put("/%",'%');
        twoCharacterInputToKnownOutput.put("خل",'ل');
        twoCharacterInputToKnownOutput.put("دا",'ا');
        twoCharacterInputToKnownOutput.put("دت",'ت');
        twoCharacterInputToKnownOutput.put(".J",'J');
        twoCharacterInputToKnownOutput.put("/+",'/');
        twoCharacterInputToKnownOutput.put("-j",'j');
        twoCharacterInputToKnownOutput.put("/,",',');
        twoCharacterInputToKnownOutput.put(".K",'K');
        twoCharacterInputToKnownOutput.put("/.",'.');
        twoCharacterInputToKnownOutput.put(".Q",'a');
        twoCharacterInputToKnownOutput.put("دس",'س');
        twoCharacterInputToKnownOutput.put("/8",'8');
        twoCharacterInputToKnownOutput.put(".Y",'Y');
        twoCharacterInputToKnownOutput.put(")÷",'÷');
        twoCharacterInputToKnownOutput.put("/>",'>');
        twoCharacterInputToKnownOutput.put("/?",'?');
        twoCharacterInputToKnownOutput.put("0!",'!');
        twoCharacterInputToKnownOutput.put("._",'N');
        twoCharacterInputToKnownOutput.put("0\"",'\"');
        twoCharacterInputToKnownOutput.put("+½",'½');
        twoCharacterInputToKnownOutput.put("(ě",'ě');
        twoCharacterInputToKnownOutput.put("0$",'0');
        twoCharacterInputToKnownOutput.put("دم",'م');
        twoCharacterInputToKnownOutput.put("/G",'G');
        twoCharacterInputToKnownOutput.put("ده",'ه');
        twoCharacterInputToKnownOutput.put("/H",'H');
        twoCharacterInputToKnownOutput.put("دو",'و');
        twoCharacterInputToKnownOutput.put("0*",'*');
        twoCharacterInputToKnownOutput.put("/J",'J');
        twoCharacterInputToKnownOutput.put("دي",'ي');
        twoCharacterInputToKnownOutput.put("/K",'K');
        twoCharacterInputToKnownOutput.put("аг",'г');
        twoCharacterInputToKnownOutput.put(".q",'l');
        twoCharacterInputToKnownOutput.put(",±",'±');
        twoCharacterInputToKnownOutput.put("/U",'U');
        twoCharacterInputToKnownOutput.put("/X",'X');
        twoCharacterInputToKnownOutput.put("0:",':');
        twoCharacterInputToKnownOutput.put("/Y",'Y');
        twoCharacterInputToKnownOutput.put("0;",';');
        twoCharacterInputToKnownOutput.put("/Z",'Z');
        twoCharacterInputToKnownOutput.put("ам",'м');
        twoCharacterInputToKnownOutput.put(".z",'a');
        twoCharacterInputToKnownOutput.put("0=",'=');
        twoCharacterInputToKnownOutput.put("0>",'>');
        twoCharacterInputToKnownOutput.put("/^",'^');
        twoCharacterInputToKnownOutput.put("教<",' ');
        twoCharacterInputToKnownOutput.put("1!",'!');
        twoCharacterInputToKnownOutput.put("/_",'_');
        twoCharacterInputToKnownOutput.put(".",'');
        twoCharacterInputToKnownOutput.put("ау",'у');
        twoCharacterInputToKnownOutput.put("0C",'C');
        twoCharacterInputToKnownOutput.put("را",'ا');
        twoCharacterInputToKnownOutput.put("1(",'(');
        twoCharacterInputToKnownOutput.put("رب",'ب');
        twoCharacterInputToKnownOutput.put("0H",'H');
        twoCharacterInputToKnownOutput.put("0I",'I');
        twoCharacterInputToKnownOutput.put("1*",'*');
        twoCharacterInputToKnownOutput.put("0J",'J');
        twoCharacterInputToKnownOutput.put("0K",'K');
        twoCharacterInputToKnownOutput.put("0M",'M');
        twoCharacterInputToKnownOutput.put("0N",'N');
        twoCharacterInputToKnownOutput.put("رد",'د');
        twoCharacterInputToKnownOutput.put("0O",'O');
        twoCharacterInputToKnownOutput.put("0W",'W');
        twoCharacterInputToKnownOutput.put("-µ",'µ');
        twoCharacterInputToKnownOutput.put("0X",'X');
        twoCharacterInputToKnownOutput.put("1:",':');
        twoCharacterInputToKnownOutput.put("/x",'x');
        twoCharacterInputToKnownOutput.put("1;",';');
        twoCharacterInputToKnownOutput.put("/z",'z');
        twoCharacterInputToKnownOutput.put("1=",'=');
        twoCharacterInputToKnownOutput.put("-¹",'¹');
        twoCharacterInputToKnownOutput.put("1>",'>');
        twoCharacterInputToKnownOutput.put("0]",']');
        twoCharacterInputToKnownOutput.put("/|",'|');
        twoCharacterInputToKnownOutput.put("бо",'о');
        twoCharacterInputToKnownOutput.put("2!",'!');
        twoCharacterInputToKnownOutput.put("/~",'~');
        twoCharacterInputToKnownOutput.put("1A",'A');
        twoCharacterInputToKnownOutput.put("2\"",'\"');
        twoCharacterInputToKnownOutput.put("-½",'½');
        twoCharacterInputToKnownOutput.put("1B",'B');
        twoCharacterInputToKnownOutput.put("-¾",'¾');
        twoCharacterInputToKnownOutput.put("0b",'b');
        twoCharacterInputToKnownOutput.put("2\'",'\'');
        twoCharacterInputToKnownOutput.put("1F",'F');
        twoCharacterInputToKnownOutput.put("0f",'f');
        twoCharacterInputToKnownOutput.put("0g",'g');
        twoCharacterInputToKnownOutput.put("رو",'و');
        twoCharacterInputToKnownOutput.put("2*",'*');
        twoCharacterInputToKnownOutput.put("1I",'I');
        twoCharacterInputToKnownOutput.put("1J",'J');
        twoCharacterInputToKnownOutput.put("0i",'i');
        twoCharacterInputToKnownOutput.put("1L",'L');
        twoCharacterInputToKnownOutput.put("1M",'M');
        twoCharacterInputToKnownOutput.put("0l",'l');
        twoCharacterInputToKnownOutput.put("1N",'N');
        twoCharacterInputToKnownOutput.put("ва",'а');
        twoCharacterInputToKnownOutput.put("0o",'o');
        twoCharacterInputToKnownOutput.put("0p",'p');
        twoCharacterInputToKnownOutput.put("1Q",'Q');
        twoCharacterInputToKnownOutput.put("0q",'q');
        twoCharacterInputToKnownOutput.put(".²",'²');
        twoCharacterInputToKnownOutput.put("0u",'o');
        twoCharacterInputToKnownOutput.put("0v",'v');
        twoCharacterInputToKnownOutput.put("2;",';');
        twoCharacterInputToKnownOutput.put("0y",'y');
        twoCharacterInputToKnownOutput.put("1[",'[');
        twoCharacterInputToKnownOutput.put("2>",'>');
        twoCharacterInputToKnownOutput.put("0|",'|');
        twoCharacterInputToKnownOutput.put("0}",'}');
        twoCharacterInputToKnownOutput.put("3!",'!');
        twoCharacterInputToKnownOutput.put("预习",'习');
        twoCharacterInputToKnownOutput.put("1_",'_');
        twoCharacterInputToKnownOutput.put("3\"",'\"');
        twoCharacterInputToKnownOutput.put("2A",'A');
        twoCharacterInputToKnownOutput.put("1a",'a');
        twoCharacterInputToKnownOutput.put("1b",'b');
        twoCharacterInputToKnownOutput.put("2D",'D');
        twoCharacterInputToKnownOutput.put("1c",'c');
        twoCharacterInputToKnownOutput.put("1d",'d');
        twoCharacterInputToKnownOutput.put("-à",'à');
        twoCharacterInputToKnownOutput.put("2E",'E');
        twoCharacterInputToKnownOutput.put("1e",'e');
        twoCharacterInputToKnownOutput.put("سا",'ا');
        twoCharacterInputToKnownOutput.put("2F",'F');
        twoCharacterInputToKnownOutput.put("3\'",'\'');
        twoCharacterInputToKnownOutput.put("2G",'G');
        twoCharacterInputToKnownOutput.put("سب",'ب');
        twoCharacterInputToKnownOutput.put("3*",'*');
        twoCharacterInputToKnownOutput.put("3+",'+');
        twoCharacterInputToKnownOutput.put("1i",'i');
        twoCharacterInputToKnownOutput.put("1j",'j');
        twoCharacterInputToKnownOutput.put("2M",'M');
        twoCharacterInputToKnownOutput.put("2P",'P');
        twoCharacterInputToKnownOutput.put("سر",'ر');
        twoCharacterInputToKnownOutput.put("1p",'p');
        twoCharacterInputToKnownOutput.put("2R",'R');
        twoCharacterInputToKnownOutput.put("1t",'t');
        twoCharacterInputToKnownOutput.put("2U",'U');
        twoCharacterInputToKnownOutput.put("2V",'V');
        twoCharacterInputToKnownOutput.put("1u",'u');
        twoCharacterInputToKnownOutput.put("2X",'X');
        twoCharacterInputToKnownOutput.put("3:",':');
        twoCharacterInputToKnownOutput.put("3;",';');
        twoCharacterInputToKnownOutput.put("1y",'y');
        twoCharacterInputToKnownOutput.put("2[",'[');
        twoCharacterInputToKnownOutput.put("2\\",'\\');
        twoCharacterInputToKnownOutput.put("3=",'=');
        twoCharacterInputToKnownOutput.put("(ƒ",'ƒ');
        twoCharacterInputToKnownOutput.put("3>",'>');
        twoCharacterInputToKnownOutput.put("1|",'|');
        twoCharacterInputToKnownOutput.put("1}",'}');
        twoCharacterInputToKnownOutput.put("4!",'!');
        twoCharacterInputToKnownOutput.put("гр",'р');
        twoCharacterInputToKnownOutput.put("2_",'_');
        twoCharacterInputToKnownOutput.put("3A",'A');
        twoCharacterInputToKnownOutput.put("2b",'b');
        twoCharacterInputToKnownOutput.put("3C",'C');
        twoCharacterInputToKnownOutput.put("2d",'d');
        twoCharacterInputToKnownOutput.put("شا",'ا');
        twoCharacterInputToKnownOutput.put("4\'",'\'');
        twoCharacterInputToKnownOutput.put("2f",'f');
        twoCharacterInputToKnownOutput.put("3G",'G');
        twoCharacterInputToKnownOutput.put("سو",'و');
        twoCharacterInputToKnownOutput.put("2h",'h');
        twoCharacterInputToKnownOutput.put("4*",'*');
        twoCharacterInputToKnownOutput.put("3I",'o');
        twoCharacterInputToKnownOutput.put("2i",'i');
        twoCharacterInputToKnownOutput.put("4+",'+');
        twoCharacterInputToKnownOutput.put("2k",'k');
        twoCharacterInputToKnownOutput.put("2l",'l');
        twoCharacterInputToKnownOutput.put("3N",'N');
        twoCharacterInputToKnownOutput.put("3O",'O');
        twoCharacterInputToKnownOutput.put("3P",'P');
        twoCharacterInputToKnownOutput.put("2o",'o');
        twoCharacterInputToKnownOutput.put("2q",'q');
        twoCharacterInputToKnownOutput.put("2r",'r');
        twoCharacterInputToKnownOutput.put("0²",'²');
        twoCharacterInputToKnownOutput.put("2u",'u');
        twoCharacterInputToKnownOutput.put("0³",'³');
        twoCharacterInputToKnownOutput.put("3V",'V');
        twoCharacterInputToKnownOutput.put("红热",'热');
        twoCharacterInputToKnownOutput.put("3X",'X');
        twoCharacterInputToKnownOutput.put("2w",'w');
        twoCharacterInputToKnownOutput.put("4:",':');
        twoCharacterInputToKnownOutput.put("4;",';');
        twoCharacterInputToKnownOutput.put("0·",'·');
        twoCharacterInputToKnownOutput.put("4=",'=');
        twoCharacterInputToKnownOutput.put("0¹",'¹');
        twoCharacterInputToKnownOutput.put(")ƒ",'ƒ');
        twoCharacterInputToKnownOutput.put("2|",'|');
        twoCharacterInputToKnownOutput.put("4>",'>');
        twoCharacterInputToKnownOutput.put("3^",'^');
        twoCharacterInputToKnownOutput.put("5!",'!');
        twoCharacterInputToKnownOutput.put("3_",'_');
        twoCharacterInputToKnownOutput.put("3a",'a');
        twoCharacterInputToKnownOutput.put("4B",'B');
        twoCharacterInputToKnownOutput.put("3b",'b');
        twoCharacterInputToKnownOutput.put("4C",'C');
        twoCharacterInputToKnownOutput.put("3c",'c');
        twoCharacterInputToKnownOutput.put("4E",'E');
        twoCharacterInputToKnownOutput.put("/à",'à');
        twoCharacterInputToKnownOutput.put("3f",'.');
        twoCharacterInputToKnownOutput.put("4H",'H');
        twoCharacterInputToKnownOutput.put("5*",'*');
        twoCharacterInputToKnownOutput.put("3i",'i');
        twoCharacterInputToKnownOutput.put("3k",'k');
        twoCharacterInputToKnownOutput.put("/é",'é');
        twoCharacterInputToKnownOutput.put("4N",'N');
        twoCharacterInputToKnownOutput.put("3n",'n');
        twoCharacterInputToKnownOutput.put("/ê",'ê');
        twoCharacterInputToKnownOutput.put("4P",'P');
        twoCharacterInputToKnownOutput.put("52",'2');
        twoCharacterInputToKnownOutput.put("3q",'q');
        twoCharacterInputToKnownOutput.put("1°",'°');
        twoCharacterInputToKnownOutput.put("3s",'s');
        twoCharacterInputToKnownOutput.put("1±",'±');
        twoCharacterInputToKnownOutput.put("1²",'²');
        twoCharacterInputToKnownOutput.put("ез",'з');
        twoCharacterInputToKnownOutput.put("4X",'X');
        twoCharacterInputToKnownOutput.put("5:",':');
        twoCharacterInputToKnownOutput.put("5;",';');
        twoCharacterInputToKnownOutput.put("ел",'л');
        twoCharacterInputToKnownOutput.put("ем",'м');
        twoCharacterInputToKnownOutput.put("0×",'×');
        twoCharacterInputToKnownOutput.put("3z",'z');
        twoCharacterInputToKnownOutput.put("5=",'=');
        twoCharacterInputToKnownOutput.put("3|",'|');
        twoCharacterInputToKnownOutput.put("4^",'^');
        twoCharacterInputToKnownOutput.put("3}",'.');
        twoCharacterInputToKnownOutput.put("ер",'р');
        twoCharacterInputToKnownOutput.put("6!",'!');
        twoCharacterInputToKnownOutput.put("5B",'s');
        twoCharacterInputToKnownOutput.put("5C",'C');
        twoCharacterInputToKnownOutput.put("4b",'b');
        twoCharacterInputToKnownOutput.put("4c",'c');
        twoCharacterInputToKnownOutput.put("4d",'d');
        twoCharacterInputToKnownOutput.put("6\'",'p');
        twoCharacterInputToKnownOutput.put("5F",'F');
        twoCharacterInputToKnownOutput.put("4f",'f');
        twoCharacterInputToKnownOutput.put("سچ",'چ');
        twoCharacterInputToKnownOutput.put("4g",'g');
        twoCharacterInputToKnownOutput.put("6*",'*');
        twoCharacterInputToKnownOutput.put("4h",'h');
        twoCharacterInputToKnownOutput.put("4i",'i');
        twoCharacterInputToKnownOutput.put("6+",'+');
        twoCharacterInputToKnownOutput.put("4j",'j');
        twoCharacterInputToKnownOutput.put("5L",'L');
        twoCharacterInputToKnownOutput.put("4k",'k');
        twoCharacterInputToKnownOutput.put("5M",'M');
        twoCharacterInputToKnownOutput.put("5N",'N');
        twoCharacterInputToKnownOutput.put("6/",'/');
        twoCharacterInputToKnownOutput.put("4n",'n');
        twoCharacterInputToKnownOutput.put("ضر",'ر');
        twoCharacterInputToKnownOutput.put("ری",'ی');
        twoCharacterInputToKnownOutput.put("4p",'p');
        twoCharacterInputToKnownOutput.put("2®",'®');
        twoCharacterInputToKnownOutput.put("4q",'q');
        twoCharacterInputToKnownOutput.put("2°",'°');
        twoCharacterInputToKnownOutput.put("2²",'²');
        twoCharacterInputToKnownOutput.put("5V",'V');
        twoCharacterInputToKnownOutput.put("2³",'³');
        twoCharacterInputToKnownOutput.put("4u",' ');
        twoCharacterInputToKnownOutput.put("5W",'W');
        twoCharacterInputToKnownOutput.put("6:",':');
        twoCharacterInputToKnownOutput.put("6;",';');
        twoCharacterInputToKnownOutput.put("2·",'·');
        twoCharacterInputToKnownOutput.put("4y",'y');
        twoCharacterInputToKnownOutput.put("4z",'y');
        twoCharacterInputToKnownOutput.put("6=",'=');
        twoCharacterInputToKnownOutput.put("4|",'|');
        twoCharacterInputToKnownOutput.put("5^",'^');
        twoCharacterInputToKnownOutput.put("4}",'.');
        twoCharacterInputToKnownOutput.put("7!",'!');
        twoCharacterInputToKnownOutput.put("5_",'_');
        twoCharacterInputToKnownOutput.put("6A",'A');
        twoCharacterInputToKnownOutput.put("6B",'B');
        twoCharacterInputToKnownOutput.put("5a",'a');
        twoCharacterInputToKnownOutput.put("5b",'b');
        twoCharacterInputToKnownOutput.put("6C",'C');
        twoCharacterInputToKnownOutput.put("5d",'d');
        twoCharacterInputToKnownOutput.put("5i",'i');
        twoCharacterInputToKnownOutput.put("7+",'+');
        twoCharacterInputToKnownOutput.put("6K",'K');
        twoCharacterInputToKnownOutput.put("5j",'j');
        twoCharacterInputToKnownOutput.put("5k",'k');
        twoCharacterInputToKnownOutput.put("5n",'n');
        twoCharacterInputToKnownOutput.put("за",'а');
        twoCharacterInputToKnownOutput.put("5p",'p');
        twoCharacterInputToKnownOutput.put("72",'2');
        twoCharacterInputToKnownOutput.put("3°",'°');
        twoCharacterInputToKnownOutput.put("3²",'²');
        twoCharacterInputToKnownOutput.put("зи",'и');
        twoCharacterInputToKnownOutput.put("5v",'v');
        twoCharacterInputToKnownOutput.put("5x",'x');
        twoCharacterInputToKnownOutput.put("5y",'y');
        twoCharacterInputToKnownOutput.put("7;",';');
        twoCharacterInputToKnownOutput.put("3·",'·');
        twoCharacterInputToKnownOutput.put("2×",'×');
        twoCharacterInputToKnownOutput.put("5z",'6');
        twoCharacterInputToKnownOutput.put("1÷",'÷');
        twoCharacterInputToKnownOutput.put("зо",'о');
        twoCharacterInputToKnownOutput.put("5|",'|');
        twoCharacterInputToKnownOutput.put("6^",'^');
        twoCharacterInputToKnownOutput.put("7A",'A');
        twoCharacterInputToKnownOutput.put("6a",'a');
        twoCharacterInputToKnownOutput.put("6b",'b');
        twoCharacterInputToKnownOutput.put("6c",'c');
        twoCharacterInputToKnownOutput.put("6d",'d');
        twoCharacterInputToKnownOutput.put("6e",'e');
        twoCharacterInputToKnownOutput.put("طن",'ن');
        twoCharacterInputToKnownOutput.put("طو",'و');
        twoCharacterInputToKnownOutput.put("6g",'g');
        twoCharacterInputToKnownOutput.put("7H",'H');
        twoCharacterInputToKnownOutput.put("6h",'h');
        twoCharacterInputToKnownOutput.put("8+",'+');
        twoCharacterInputToKnownOutput.put("6i",'i');
        twoCharacterInputToKnownOutput.put("6j",'j');
        twoCharacterInputToKnownOutput.put("6k",'k');
        twoCharacterInputToKnownOutput.put("شک",'ک');
        twoCharacterInputToKnownOutput.put("8/",'/');
        twoCharacterInputToKnownOutput.put("6n",'n');
        twoCharacterInputToKnownOutput.put("6p",'p');
        twoCharacterInputToKnownOutput.put("6s",'s');
        twoCharacterInputToKnownOutput.put("4±",'±');
        twoCharacterInputToKnownOutput.put("ие",'е');
        twoCharacterInputToKnownOutput.put("سے",'ے');
        twoCharacterInputToKnownOutput.put("4³",'³');
        twoCharacterInputToKnownOutput.put("6u",' ');
        twoCharacterInputToKnownOutput.put("6w",'w');
        twoCharacterInputToKnownOutput.put("8:",':');
        twoCharacterInputToKnownOutput.put("ик",'к');
        twoCharacterInputToKnownOutput.put("8;",';');
        twoCharacterInputToKnownOutput.put("6y",'y');
        twoCharacterInputToKnownOutput.put("3×",'×');
        twoCharacterInputToKnownOutput.put("肺炎",'炎');
        twoCharacterInputToKnownOutput.put("8=",'=');
        twoCharacterInputToKnownOutput.put("8>",'>');
        twoCharacterInputToKnownOutput.put("7^",'^');
        twoCharacterInputToKnownOutput.put("6}",'}');
        twoCharacterInputToKnownOutput.put("9!",'!');
        twoCharacterInputToKnownOutput.put("8A",'A');
        twoCharacterInputToKnownOutput.put("9\"",'\"');
        twoCharacterInputToKnownOutput.put("ит",'т');
        twoCharacterInputToKnownOutput.put("8B",'d');
        twoCharacterInputToKnownOutput.put("7a",'a');
        twoCharacterInputToKnownOutput.put("7b",'b');
        twoCharacterInputToKnownOutput.put("9%",'%');
        twoCharacterInputToKnownOutput.put("7c",'c');
        twoCharacterInputToKnownOutput.put("7d",'d');
        twoCharacterInputToKnownOutput.put("عا",'ا');
        twoCharacterInputToKnownOutput.put("9\'",'\'');
        twoCharacterInputToKnownOutput.put("7g",'g');
        twoCharacterInputToKnownOutput.put("8H",'H');
        twoCharacterInputToKnownOutput.put("9*",'*');
        twoCharacterInputToKnownOutput.put("7i",'i');
        twoCharacterInputToKnownOutput.put("9+",'+');
        twoCharacterInputToKnownOutput.put("7j",'j');
        twoCharacterInputToKnownOutput.put("8K",'r');
        twoCharacterInputToKnownOutput.put("9/",'/');
        twoCharacterInputToKnownOutput.put("7m",'m');
        twoCharacterInputToKnownOutput.put("8N",'N');
        twoCharacterInputToKnownOutput.put("7n",'n');
        twoCharacterInputToKnownOutput.put("면담",'담');
        twoCharacterInputToKnownOutput.put("7p",'p');
        twoCharacterInputToKnownOutput.put("7s",'s');
        twoCharacterInputToKnownOutput.put("弱(",'(');
        twoCharacterInputToKnownOutput.put("5²",'²');
        twoCharacterInputToKnownOutput.put("5³",'³');
        twoCharacterInputToKnownOutput.put("7x",'x');
        twoCharacterInputToKnownOutput.put("9:",':');
        twoCharacterInputToKnownOutput.put("9;",';');
        twoCharacterInputToKnownOutput.put("5·",'·');
        twoCharacterInputToKnownOutput.put("7y",'y');
        twoCharacterInputToKnownOutput.put("4×",'×');
        twoCharacterInputToKnownOutput.put("9=",'=');
        twoCharacterInputToKnownOutput.put("5¹",'¹');
        twoCharacterInputToKnownOutput.put("7|",'|');
        twoCharacterInputToKnownOutput.put("8^",'^');
        twoCharacterInputToKnownOutput.put("7}",'}');
        twoCharacterInputToKnownOutput.put("8_",'_');
        twoCharacterInputToKnownOutput.put("7~",'~');
        twoCharacterInputToKnownOutput.put("8a",'a');
        twoCharacterInputToKnownOutput.put(":(",'(');
        twoCharacterInputToKnownOutput.put("8f",'f');
        twoCharacterInputToKnownOutput.put(":)",')');
        twoCharacterInputToKnownOutput.put("8i",'i');
        twoCharacterInputToKnownOutput.put("عي",'ي');
        twoCharacterInputToKnownOutput.put(":-",'-');
        twoCharacterInputToKnownOutput.put("8n",'n');
        twoCharacterInputToKnownOutput.put(":1",'1');
        twoCharacterInputToKnownOutput.put(":2",'2');
        twoCharacterInputToKnownOutput.put("臀部",'部');
        twoCharacterInputToKnownOutput.put("8q",'q');
        twoCharacterInputToKnownOutput.put(":4",'4');
        twoCharacterInputToKnownOutput.put(":5",'5');
        twoCharacterInputToKnownOutput.put("6²",'²');
        twoCharacterInputToKnownOutput.put("8y",'y');
        twoCharacterInputToKnownOutput.put(":=",'=');
        twoCharacterInputToKnownOutput.put("4÷",'÷');
        twoCharacterInputToKnownOutput.put("/ƒ",'ƒ');
        twoCharacterInputToKnownOutput.put("9]",'o');
        twoCharacterInputToKnownOutput.put("ко",'о');
        twoCharacterInputToKnownOutput.put("8|",'|');
        twoCharacterInputToKnownOutput.put(":?",' ');
        twoCharacterInputToKnownOutput.put("9^",'^');
        twoCharacterInputToKnownOutput.put("亮<",' ');
        twoCharacterInputToKnownOutput.put("9a",'a');
        twoCharacterInputToKnownOutput.put("凉快",'快');
        twoCharacterInputToKnownOutput.put(":C",'C');
        twoCharacterInputToKnownOutput.put("9b",'b');
        twoCharacterInputToKnownOutput.put("9c",'c');
        twoCharacterInputToKnownOutput.put(":D",'D');
        twoCharacterInputToKnownOutput.put(":I",'I');
        twoCharacterInputToKnownOutput.put("9i",'i');
        twoCharacterInputToKnownOutput.put("9j",'j');
        twoCharacterInputToKnownOutput.put("9k",'k');
        twoCharacterInputToKnownOutput.put(":M",'M');
        twoCharacterInputToKnownOutput.put("9m",'m');
        twoCharacterInputToKnownOutput.put(":N",'N');
        twoCharacterInputToKnownOutput.put(";2",'2');
        twoCharacterInputToKnownOutput.put(":R",'R');
        twoCharacterInputToKnownOutput.put("7°",'°');
        twoCharacterInputToKnownOutput.put(";5",'5');
        twoCharacterInputToKnownOutput.put("ле",'е');
        twoCharacterInputToKnownOutput.put("7²",'²');
        twoCharacterInputToKnownOutput.put(":V",'V');
        twoCharacterInputToKnownOutput.put("9v",'t');
        twoCharacterInputToKnownOutput.put("9x",'x');
        twoCharacterInputToKnownOutput.put(";<",' ');
        twoCharacterInputToKnownOutput.put("лн",'н');
        twoCharacterInputToKnownOutput.put("7¹",'¹');
        twoCharacterInputToKnownOutput.put("9}",'}');
        twoCharacterInputToKnownOutput.put(":c",'c');
        twoCharacterInputToKnownOutput.put(";D",'D');
        twoCharacterInputToKnownOutput.put(":d",'d');
        twoCharacterInputToKnownOutput.put(":g",'s');
        twoCharacterInputToKnownOutput.put(":i",'i');
        twoCharacterInputToKnownOutput.put("<,",',');
        twoCharacterInputToKnownOutput.put("</",'/');
        twoCharacterInputToKnownOutput.put("<0",'0');
        twoCharacterInputToKnownOutput.put("<1",'1');
        twoCharacterInputToKnownOutput.put("<2",'2');
        twoCharacterInputToKnownOutput.put("<3",'3');
        twoCharacterInputToKnownOutput.put(" Θ",'Θ');
        twoCharacterInputToKnownOutput.put("<4",'4');
        twoCharacterInputToKnownOutput.put(":s",'s');
        twoCharacterInputToKnownOutput.put("8±",'±');
        twoCharacterInputToKnownOutput.put("<6",'6');
        twoCharacterInputToKnownOutput.put(":t",'t');
        twoCharacterInputToKnownOutput.put("8²",'²');
        twoCharacterInputToKnownOutput.put("<7",'7');
        twoCharacterInputToKnownOutput.put("<9",'9');
        twoCharacterInputToKnownOutput.put("<;",';');
        twoCharacterInputToKnownOutput.put(":y",'y');
        twoCharacterInputToKnownOutput.put("мм",'м');
        twoCharacterInputToKnownOutput.put("<=",'=');
        twoCharacterInputToKnownOutput.put("мн",'н');
        twoCharacterInputToKnownOutput.put("<>",'>');
        twoCharacterInputToKnownOutput.put("мп",'п');
        twoCharacterInputToKnownOutput.put("=\"",'\"');
        twoCharacterInputToKnownOutput.put("<A",'A');
        twoCharacterInputToKnownOutput.put(";a",'a');
        twoCharacterInputToKnownOutput.put(";b",'b');
        twoCharacterInputToKnownOutput.put(";c",'c');
        twoCharacterInputToKnownOutput.put(" Ω",'Ω');
        twoCharacterInputToKnownOutput.put(";d",'d');
        twoCharacterInputToKnownOutput.put(";e",'e');
        twoCharacterInputToKnownOutput.put(";f",'f');
        twoCharacterInputToKnownOutput.put("=+",'+');
        twoCharacterInputToKnownOutput.put(">而",'而');
        twoCharacterInputToKnownOutput.put("=,",',');
        twoCharacterInputToKnownOutput.put("мы",'ы');
        twoCharacterInputToKnownOutput.put("<L",'L');
        twoCharacterInputToKnownOutput.put("<M",'M');
        twoCharacterInputToKnownOutput.put(";m",'m');
        twoCharacterInputToKnownOutput.put(";n",'n');
        twoCharacterInputToKnownOutput.put(" γ",'γ');
        twoCharacterInputToKnownOutput.put(" δ",'t');
        twoCharacterInputToKnownOutput.put(";o",'o');
        twoCharacterInputToKnownOutput.put(" ε",'e');
        twoCharacterInputToKnownOutput.put("=4",'4');
        twoCharacterInputToKnownOutput.put("=5",'5');
        twoCharacterInputToKnownOutput.put(";s",'s');
        twoCharacterInputToKnownOutput.put("=6",'6');
        twoCharacterInputToKnownOutput.put(";t",'t');
        twoCharacterInputToKnownOutput.put("9²",'²');
        twoCharacterInputToKnownOutput.put("=8",'8');
        twoCharacterInputToKnownOutput.put("ни",'и');
        twoCharacterInputToKnownOutput.put("=:",':');
        twoCharacterInputToKnownOutput.put("위급",'급');
        twoCharacterInputToKnownOutput.put("8×",'×');
        twoCharacterInputToKnownOutput.put("<\\",'\\');
        twoCharacterInputToKnownOutput.put(" σ",'σ');
        twoCharacterInputToKnownOutput.put(">!",'!');
        twoCharacterInputToKnownOutput.put("=A",'A');
        twoCharacterInputToKnownOutput.put("<a",'a');
        twoCharacterInputToKnownOutput.put("<b",'b');
        twoCharacterInputToKnownOutput.put(">$",'$');
        twoCharacterInputToKnownOutput.put("<c",'c');
        twoCharacterInputToKnownOutput.put("=D",'D');
        twoCharacterInputToKnownOutput.put("<d",'d');
        twoCharacterInputToKnownOutput.put("=E",'E');
        twoCharacterInputToKnownOutput.put(" ψ",'ψ');
        twoCharacterInputToKnownOutput.put("<f",'f');
        twoCharacterInputToKnownOutput.put("=G",'G');
        twoCharacterInputToKnownOutput.put("=H",'H');
        twoCharacterInputToKnownOutput.put(">)",' ');
        twoCharacterInputToKnownOutput.put("=I",'I');
        twoCharacterInputToKnownOutput.put("<h",'h');
        twoCharacterInputToKnownOutput.put("<i",'i');
        twoCharacterInputToKnownOutput.put("=K",'K');
        twoCharacterInputToKnownOutput.put(">,",',');
        twoCharacterInputToKnownOutput.put("=L",'L');
        twoCharacterInputToKnownOutput.put("=M",'M');
        twoCharacterInputToKnownOutput.put("<l",'l');
        twoCharacterInputToKnownOutput.put("=O",'O');
        twoCharacterInputToKnownOutput.put("<o",'o');
        twoCharacterInputToKnownOutput.put("<p",'p');
        twoCharacterInputToKnownOutput.put("=Q",'Q');
        twoCharacterInputToKnownOutput.put("=R",'R');
        twoCharacterInputToKnownOutput.put("ог",'г');
        twoCharacterInputToKnownOutput.put("=S",'S');
        twoCharacterInputToKnownOutput.put("=T",'T');
        twoCharacterInputToKnownOutput.put("=U",'U');
        twoCharacterInputToKnownOutput.put("<t",'t');
        twoCharacterInputToKnownOutput.put(":³",'³');
        twoCharacterInputToKnownOutput.put("=V",'V');
        twoCharacterInputToKnownOutput.put("<u",'u');
        twoCharacterInputToKnownOutput.put("=W",'W');
        twoCharacterInputToKnownOutput.put("=X",'X');
        twoCharacterInputToKnownOutput.put("ой",'й');
        twoCharacterInputToKnownOutput.put("<x",'x');
        twoCharacterInputToKnownOutput.put(">;",';');
        twoCharacterInputToKnownOutput.put("ол",'л');
        twoCharacterInputToKnownOutput.put("=[",'[');
        twoCharacterInputToKnownOutput.put("9×",'×');
        twoCharacterInputToKnownOutput.put("ом",'м');
        twoCharacterInputToKnownOutput.put("=^",'^');
        twoCharacterInputToKnownOutput.put("оп",'п');
        twoCharacterInputToKnownOutput.put("=_",'_');
        twoCharacterInputToKnownOutput.put("?!",'!');
        twoCharacterInputToKnownOutput.put("=e",'e');
        twoCharacterInputToKnownOutput.put("=g",'g');
        twoCharacterInputToKnownOutput.put("=i",'i');
        twoCharacterInputToKnownOutput.put("?,",',');
        twoCharacterInputToKnownOutput.put("=k",'k');
        twoCharacterInputToKnownOutput.put("?-",'-');
        twoCharacterInputToKnownOutput.put("?.",'.');
        twoCharacterInputToKnownOutput.put("=l",'l');
        twoCharacterInputToKnownOutput.put("?/",'/');
        twoCharacterInputToKnownOutput.put("?1",'1');
        twoCharacterInputToKnownOutput.put("?2",'2');
        twoCharacterInputToKnownOutput.put("=q",'q');
        twoCharacterInputToKnownOutput.put("?4",'4');
        twoCharacterInputToKnownOutput.put(" ϵ",'ϵ');
        twoCharacterInputToKnownOutput.put("=s",'s');
        twoCharacterInputToKnownOutput.put("пе",'е');
        twoCharacterInputToKnownOutput.put("?6",'6');
        twoCharacterInputToKnownOutput.put("?7",'7');
        twoCharacterInputToKnownOutput.put("=w",'w');
        twoCharacterInputToKnownOutput.put("?9",'9');
        twoCharacterInputToKnownOutput.put("=x",'x');
        twoCharacterInputToKnownOutput.put("?:",':');
        twoCharacterInputToKnownOutput.put("=y",'y');
        twoCharacterInputToKnownOutput.put("=z",'z');
        twoCharacterInputToKnownOutput.put("?=",'=');
        twoCharacterInputToKnownOutput.put(">\\",'\\');
        twoCharacterInputToKnownOutput.put("=|",'|');
        twoCharacterInputToKnownOutput.put("по",'о');
        twoCharacterInputToKnownOutput.put("@ ",' ');
        twoCharacterInputToKnownOutput.put("пр",'р');
        twoCharacterInputToKnownOutput.put("?A",'A');
        twoCharacterInputToKnownOutput.put(">`",'`');
        twoCharacterInputToKnownOutput.put("?C",'C');
        twoCharacterInputToKnownOutput.put("공화",'화');
        twoCharacterInputToKnownOutput.put("пь",'ь');
        twoCharacterInputToKnownOutput.put("?N",'N');
        twoCharacterInputToKnownOutput.put("?O",'O');
        twoCharacterInputToKnownOutput.put("ра",'а');
        twoCharacterInputToKnownOutput.put("?R",'R');
        twoCharacterInputToKnownOutput.put("?S",'S');
        twoCharacterInputToKnownOutput.put("?T",'T');
        twoCharacterInputToKnownOutput.put("ре",'е');
        twoCharacterInputToKnownOutput.put("ри",'и');
        twoCharacterInputToKnownOutput.put(".ɪ",'ɪ');
        twoCharacterInputToKnownOutput.put(">{",'{');
        twoCharacterInputToKnownOutput.put(">|",'|');
        twoCharacterInputToKnownOutput.put("?]",']');
        twoCharacterInputToKnownOutput.put("ро",'о');
        twoCharacterInputToKnownOutput.put("Ѡ^",'^');
        twoCharacterInputToKnownOutput.put(">~",'~');
        twoCharacterInputToKnownOutput.put("A!",'o');
        twoCharacterInputToKnownOutput.put("?_",'_');
        twoCharacterInputToKnownOutput.put("A\"",'\"');
        twoCharacterInputToKnownOutput.put("ру",'у');
        twoCharacterInputToKnownOutput.put("A&",'&');
        twoCharacterInputToKnownOutput.put("A*",'*');
        twoCharacterInputToKnownOutput.put("A+",'+');
        twoCharacterInputToKnownOutput.put("ры",'ы');
        twoCharacterInputToKnownOutput.put("?l",' ');
        twoCharacterInputToKnownOutput.put("A1",'1');
        twoCharacterInputToKnownOutput.put("?p",'p');
        twoCharacterInputToKnownOutput.put(" в",'в');
        twoCharacterInputToKnownOutput.put("A3",'h');
        twoCharacterInputToKnownOutput.put("?r",'n');
        twoCharacterInputToKnownOutput.put("=±",'±');
        twoCharacterInputToKnownOutput.put("A5",'c');
        twoCharacterInputToKnownOutput.put("A;",';');
        twoCharacterInputToKnownOutput.put(" к",'к');
        twoCharacterInputToKnownOutput.put("A>",'>');
        twoCharacterInputToKnownOutput.put("=¼",'.');
        twoCharacterInputToKnownOutput.put(" п",'п');
        twoCharacterInputToKnownOutput.put("备<",' ');
        twoCharacterInputToKnownOutput.put("B\"",'\"');
        twoCharacterInputToKnownOutput.put("=½",'½');
        twoCharacterInputToKnownOutput.put("AA",'A');
        twoCharacterInputToKnownOutput.put(">¡",'¡');
        twoCharacterInputToKnownOutput.put("@c",'c');
        twoCharacterInputToKnownOutput.put("B&",'&');
        twoCharacterInputToKnownOutput.put(">£",'£');
        twoCharacterInputToKnownOutput.put("B(",'(');
        twoCharacterInputToKnownOutput.put("AH",'H');
        twoCharacterInputToKnownOutput.put("AJ",'J');
        twoCharacterInputToKnownOutput.put("B+",'+');
        twoCharacterInputToKnownOutput.put("قد",'د');
        twoCharacterInputToKnownOutput.put("AQ",'Q');
        twoCharacterInputToKnownOutput.put("те",'е');
        twoCharacterInputToKnownOutput.put("\"Ж",'Ж');
        twoCharacterInputToKnownOutput.put("AW",'W');
        twoCharacterInputToKnownOutput.put("痰(",'(');
        twoCharacterInputToKnownOutput.put("AX",'X');
        twoCharacterInputToKnownOutput.put("B:",':');
        twoCharacterInputToKnownOutput.put("B;",';');
        twoCharacterInputToKnownOutput.put("B>",'>');
        twoCharacterInputToKnownOutput.put("A_",'_');
        twoCharacterInputToKnownOutput.put("C\"",'\"');
        twoCharacterInputToKnownOutput.put(">À",'à');
        twoCharacterInputToKnownOutput.put("BF",'p');
        twoCharacterInputToKnownOutput.put("C(",'(');
        twoCharacterInputToKnownOutput.put("C*",'*');
        twoCharacterInputToKnownOutput.put("C+",'+');
        twoCharacterInputToKnownOutput.put("ть",'ь');
        twoCharacterInputToKnownOutput.put(">É",'é');
        twoCharacterInputToKnownOutput.put("BN",'N');
        twoCharacterInputToKnownOutput.put("C0",'0');
        twoCharacterInputToKnownOutput.put("Ao",'o');
        twoCharacterInputToKnownOutput.put("C4",'4');
        twoCharacterInputToKnownOutput.put("?²",'²');
        twoCharacterInputToKnownOutput.put("?³",'³');
        twoCharacterInputToKnownOutput.put("уз",'з');
        twoCharacterInputToKnownOutput.put("C7",'7');
        twoCharacterInputToKnownOutput.put("C8",'8');
        twoCharacterInputToKnownOutput.put("C9",'9');
        twoCharacterInputToKnownOutput.put(">Ö",'ö');
        twoCharacterInputToKnownOutput.put("C;",';');
        twoCharacterInputToKnownOutput.put("B]",']');
        twoCharacterInputToKnownOutput.put("A|",'|');
        twoCharacterInputToKnownOutput.put("D\"",'\"');
        twoCharacterInputToKnownOutput.put("Bb",'b');
        twoCharacterInputToKnownOutput.put("لا",'ا');
        twoCharacterInputToKnownOutput.put("D(",'(');
        twoCharacterInputToKnownOutput.put("уч",'ч');
        twoCharacterInputToKnownOutput.put("Bg",'g');
        twoCharacterInputToKnownOutput.put("痛苦",'苦');
        twoCharacterInputToKnownOutput.put("Bh",'h');
        twoCharacterInputToKnownOutput.put("电图",'图');
        twoCharacterInputToKnownOutput.put("لخ",'خ');
        twoCharacterInputToKnownOutput.put(">é",'é');
        twoCharacterInputToKnownOutput.put("Bm",'m');
        twoCharacterInputToKnownOutput.put("(Δ",'Δ');
        twoCharacterInputToKnownOutput.put("D1",'1');
        twoCharacterInputToKnownOutput.put("Bp",'-');
        twoCharacterInputToKnownOutput.put("(Θ",'Θ');
        twoCharacterInputToKnownOutput.put("D5",'5');
        twoCharacterInputToKnownOutput.put("CU",'U');
        twoCharacterInputToKnownOutput.put("Bv",'v');
        twoCharacterInputToKnownOutput.put("CX",'X');
        twoCharacterInputToKnownOutput.put("貧-",'-');
        twoCharacterInputToKnownOutput.put(">ö",'ö');
        twoCharacterInputToKnownOutput.put("D=",'=');
        twoCharacterInputToKnownOutput.put("/ˈ",'ˈ');
        twoCharacterInputToKnownOutput.put("B|",'|');
        twoCharacterInputToKnownOutput.put("C]",']');
        twoCharacterInputToKnownOutput.put("E\"",'\"');
        twoCharacterInputToKnownOutput.put("DC",'C');
        twoCharacterInputToKnownOutput.put("Cb",'b');
        twoCharacterInputToKnownOutput.put(">能",'能');
        twoCharacterInputToKnownOutput.put("Cd",'d');
        twoCharacterInputToKnownOutput.put("Cf",'f');
        twoCharacterInputToKnownOutput.put("DG",'G');
        twoCharacterInputToKnownOutput.put("لو",'و');
        twoCharacterInputToKnownOutput.put("مت",'ت');
        twoCharacterInputToKnownOutput.put("E+",'+');
        twoCharacterInputToKnownOutput.put("لي",'ي');
        twoCharacterInputToKnownOutput.put("Cj",'j');
        twoCharacterInputToKnownOutput.put("DK",'K');
        twoCharacterInputToKnownOutput.put("DL",'L');
        twoCharacterInputToKnownOutput.put("Ck",'k');
        twoCharacterInputToKnownOutput.put("Cm",'m');
        twoCharacterInputToKnownOutput.put("Cn",'n');
        twoCharacterInputToKnownOutput.put("(γ",'γ');
        twoCharacterInputToKnownOutput.put("E1",'1');
        twoCharacterInputToKnownOutput.put("مر",'ر');
        twoCharacterInputToKnownOutput.put("(ε",'ε');
        twoCharacterInputToKnownOutput.put("Cp",'p');
        twoCharacterInputToKnownOutput.put("E3",'3');
        twoCharacterInputToKnownOutput.put("E4",'4');
        twoCharacterInputToKnownOutput.put("A²",'²');
        twoCharacterInputToKnownOutput.put("(λ",'b');
        twoCharacterInputToKnownOutput.put("E9",'9');
        twoCharacterInputToKnownOutput.put("DZ",'Z');
        twoCharacterInputToKnownOutput.put("E;",';');
        twoCharacterInputToKnownOutput.put("Db",'b');
        twoCharacterInputToKnownOutput.put("مل",'ل');
        twoCharacterInputToKnownOutput.put("نا",'ا');
        twoCharacterInputToKnownOutput.put("(ω",'ω');
        twoCharacterInputToKnownOutput.put("EH",'H');
        twoCharacterInputToKnownOutput.put("液 ",' ');
        twoCharacterInputToKnownOutput.put("Dg",'g');
        twoCharacterInputToKnownOutput.put("F*",'*');
        twoCharacterInputToKnownOutput.put("F+",'+');
        twoCharacterInputToKnownOutput.put("EK",'K');
        twoCharacterInputToKnownOutput.put("Dl",'l');
        twoCharacterInputToKnownOutput.put("Dn",'n');
        twoCharacterInputToKnownOutput.put("F0",'0');
        twoCharacterInputToKnownOutput.put("F2",'2');
        twoCharacterInputToKnownOutput.put("F5",'5');
        twoCharacterInputToKnownOutput.put("Dt",'t');
        twoCharacterInputToKnownOutput.put("F6",'6');
        twoCharacterInputToKnownOutput.put("Dv",'v');
        twoCharacterInputToKnownOutput.put(")λ",' ');
        twoCharacterInputToKnownOutput.put("EZ",'Z');
        twoCharacterInputToKnownOutput.put("Dz",'z');
        twoCharacterInputToKnownOutput.put("F<",' ');
        twoCharacterInputToKnownOutput.put("E[",'[');
        twoCharacterInputToKnownOutput.put("A×",'×');
        twoCharacterInputToKnownOutput.put(")π",'π');
        twoCharacterInputToKnownOutput.put("E\\",'\\');
        twoCharacterInputToKnownOutput.put("G!",'!');
        twoCharacterInputToKnownOutput.put("E_",'_');
        twoCharacterInputToKnownOutput.put("精液",'液');
        twoCharacterInputToKnownOutput.put("液(",'(');
        twoCharacterInputToKnownOutput.put("人/",'/');
        twoCharacterInputToKnownOutput.put("Eb",'b');
        twoCharacterInputToKnownOutput.put("FG",'G');
        twoCharacterInputToKnownOutput.put("G(",'(');
        twoCharacterInputToKnownOutput.put("G)",')');
        twoCharacterInputToKnownOutput.put("نو",'و');
        twoCharacterInputToKnownOutput.put("FH",'d');
        twoCharacterInputToKnownOutput.put("G*",'*');
        twoCharacterInputToKnownOutput.put("G+",'+');
        twoCharacterInputToKnownOutput.put("FK",'K');
        twoCharacterInputToKnownOutput.put("Ej",'j');
        twoCharacterInputToKnownOutput.put("G-",'-');
        twoCharacterInputToKnownOutput.put("G.",'.');
        twoCharacterInputToKnownOutput.put("FN",'N');
        twoCharacterInputToKnownOutput.put("G/",'/');
        twoCharacterInputToKnownOutput.put("人<",' ');
        twoCharacterInputToKnownOutput.put("G2",'g');
        twoCharacterInputToKnownOutput.put("C°",'°');
        twoCharacterInputToKnownOutput.put("че",'е');
        twoCharacterInputToKnownOutput.put("C²",'²');
        twoCharacterInputToKnownOutput.put("FW",'W');
        twoCharacterInputToKnownOutput.put("Ew",'w');
        twoCharacterInputToKnownOutput.put("FX",'X');
        twoCharacterInputToKnownOutput.put("G:",':');
        twoCharacterInputToKnownOutput.put("G;",';');
        twoCharacterInputToKnownOutput.put("G<",' ');
        twoCharacterInputToKnownOutput.put("G=",'=');
        twoCharacterInputToKnownOutput.put("G?",'5');
        twoCharacterInputToKnownOutput.put("Aú",'ú');
        twoCharacterInputToKnownOutput.put("H\"",' ');
        twoCharacterInputToKnownOutput.put("Fb",'b');
        twoCharacterInputToKnownOutput.put("Fc",'c');
        twoCharacterInputToKnownOutput.put("H&",'&');
        twoCharacterInputToKnownOutput.put("Fd",'d');
        twoCharacterInputToKnownOutput.put("Bá",'á');
        twoCharacterInputToKnownOutput.put("وا",' ');
        twoCharacterInputToKnownOutput.put("H\'",'\'');
        twoCharacterInputToKnownOutput.put("GF",'F');
        twoCharacterInputToKnownOutput.put("H(",'(');
        twoCharacterInputToKnownOutput.put("图(",'(');
        twoCharacterInputToKnownOutput.put("Bâ",'â');
        twoCharacterInputToKnownOutput.put("Fh",'o');
        twoCharacterInputToKnownOutput.put("ٹ<",' ');
        twoCharacterInputToKnownOutput.put("H-",'-');
        twoCharacterInputToKnownOutput.put("لک",'ک');
        twoCharacterInputToKnownOutput.put("H.",'.');
        twoCharacterInputToKnownOutput.put("+α",'α');
        twoCharacterInputToKnownOutput.put("+β",'β');
        twoCharacterInputToKnownOutput.put("H/",'/');
        twoCharacterInputToKnownOutput.put("Fm",'m');
        twoCharacterInputToKnownOutput.put("ور",'ر');
        twoCharacterInputToKnownOutput.put("+θ",'θ');
        twoCharacterInputToKnownOutput.put("Ft",'t');
        twoCharacterInputToKnownOutput.put("GV",'V');
        twoCharacterInputToKnownOutput.put("وط",'ط');
        twoCharacterInputToKnownOutput.put("H8",'8');
        twoCharacterInputToKnownOutput.put("Fv",'v');
        twoCharacterInputToKnownOutput.put("Bó",'ó');
        twoCharacterInputToKnownOutput.put("H:",'o');
        twoCharacterInputToKnownOutput.put("Fy",'y');
        twoCharacterInputToKnownOutput.put("H;",';');
        twoCharacterInputToKnownOutput.put("H=",'=');
        twoCharacterInputToKnownOutput.put("+π",'π');
        twoCharacterInputToKnownOutput.put("癌症",'症');
        twoCharacterInputToKnownOutput.put("G^",'^');
        twoCharacterInputToKnownOutput.put("I\"",'\"');
        twoCharacterInputToKnownOutput.put("Gb",'n');
        twoCharacterInputToKnownOutput.put("Gd",'d');
        twoCharacterInputToKnownOutput.put("I&",'&');
        twoCharacterInputToKnownOutput.put("ون",'ن');
        twoCharacterInputToKnownOutput.put("+ω",'ω');
        twoCharacterInputToKnownOutput.put("HG",'G');
        twoCharacterInputToKnownOutput.put("I(",'(');
        twoCharacterInputToKnownOutput.put("I+",'+');
        twoCharacterInputToKnownOutput.put("Bą",'ą');
        twoCharacterInputToKnownOutput.put("HK",'K');
        twoCharacterInputToKnownOutput.put("HL",'L');
        twoCharacterInputToKnownOutput.put("Gk",'k');
        twoCharacterInputToKnownOutput.put("I/",'/');
        twoCharacterInputToKnownOutput.put("Gm",'m');
        twoCharacterInputToKnownOutput.put("Gn",'n');
        twoCharacterInputToKnownOutput.put("HP",'P');
        twoCharacterInputToKnownOutput.put("HR",'R');
        twoCharacterInputToKnownOutput.put("I3",'3');
        twoCharacterInputToKnownOutput.put("Gs",'s');
        twoCharacterInputToKnownOutput.put("Gt",'t');
        twoCharacterInputToKnownOutput.put("Gv",'v');
        twoCharacterInputToKnownOutput.put("Gw",'w');
        twoCharacterInputToKnownOutput.put("HX",'X');
        twoCharacterInputToKnownOutput.put("Cô",'ô');
        twoCharacterInputToKnownOutput.put("I:",':');
        twoCharacterInputToKnownOutput.put("I;",';');
        twoCharacterInputToKnownOutput.put("HZ",'Z');
        twoCharacterInputToKnownOutput.put(",π",'π');
        twoCharacterInputToKnownOutput.put("H]",']');
        twoCharacterInputToKnownOutput.put("H^",'^');
        twoCharacterInputToKnownOutput.put("Bę",'ę');
        twoCharacterInputToKnownOutput.put("H_",'2');
        twoCharacterInputToKnownOutput.put("Bě",'ě');
        twoCharacterInputToKnownOutput.put("Hb",'b');
        twoCharacterInputToKnownOutput.put("Dà",'à');
        twoCharacterInputToKnownOutput.put("J\'",'\'');
        twoCharacterInputToKnownOutput.put("يا",'ا');
        twoCharacterInputToKnownOutput.put("IK",'K');
        twoCharacterInputToKnownOutput.put("J,",',');
        twoCharacterInputToKnownOutput.put("J-",'-');
        twoCharacterInputToKnownOutput.put("-α",'α');
        twoCharacterInputToKnownOutput.put("Dè",'è');
        twoCharacterInputToKnownOutput.put("-β",'β');
        twoCharacterInputToKnownOutput.put("يد",'د');
        twoCharacterInputToKnownOutput.put("방<",' ');
        twoCharacterInputToKnownOutput.put("Hn",'n');
        twoCharacterInputToKnownOutput.put("می",'ی');
        twoCharacterInputToKnownOutput.put("IQ",'Q');
        twoCharacterInputToKnownOutput.put("Hp",'p');
        twoCharacterInputToKnownOutput.put("Dì",'ì');
        twoCharacterInputToKnownOutput.put("Dí",'d');
        twoCharacterInputToKnownOutput.put("⅓ ",' ');
        twoCharacterInputToKnownOutput.put("Bī",'ī');
        twoCharacterInputToKnownOutput.put("Hr",'r');
        twoCharacterInputToKnownOutput.put("Dî",'î');
        twoCharacterInputToKnownOutput.put(">膨",'膨');
        twoCharacterInputToKnownOutput.put("-θ",'θ');
        twoCharacterInputToKnownOutput.put("Hs",'s');
        twoCharacterInputToKnownOutput.put("يض",'ض');
        twoCharacterInputToKnownOutput.put("يط",'ط');
        twoCharacterInputToKnownOutput.put("IX",'X');
        twoCharacterInputToKnownOutput.put("Hw",'w');
        twoCharacterInputToKnownOutput.put("IY",'Y');
        twoCharacterInputToKnownOutput.put("J<",' ');
        twoCharacterInputToKnownOutput.put("Hz",'z');
        twoCharacterInputToKnownOutput.put("Dö",'ö');
        twoCharacterInputToKnownOutput.put("-π",'π');
        twoCharacterInputToKnownOutput.put("J=",'=');
        twoCharacterInputToKnownOutput.put("I^",'^');
        twoCharacterInputToKnownOutput.put("K!",'!');
        twoCharacterInputToKnownOutput.put("JA",'A');
        twoCharacterInputToKnownOutput.put("청<",' ');
        twoCharacterInputToKnownOutput.put("Ia",'a');
        twoCharacterInputToKnownOutput.put("JF",'F');
        twoCharacterInputToKnownOutput.put("K\'",'\'');
        twoCharacterInputToKnownOutput.put("K(",'(');
        twoCharacterInputToKnownOutput.put("يو",'و');
        twoCharacterInputToKnownOutput.put("Bł",'ł');
        twoCharacterInputToKnownOutput.put("K-",'-');
        twoCharacterInputToKnownOutput.put("JM",'M');
        twoCharacterInputToKnownOutput.put("K/",'/');
        twoCharacterInputToKnownOutput.put("5˚",'˚');
        twoCharacterInputToKnownOutput.put("JO",'O');
        twoCharacterInputToKnownOutput.put("JP",'P');
        twoCharacterInputToKnownOutput.put("K2",'2');
        twoCharacterInputToKnownOutput.put("Ip",'l');
        twoCharacterInputToKnownOutput.put("Iq",'q');
        twoCharacterInputToKnownOutput.put("JS",'u');
        twoCharacterInputToKnownOutput.put("/Θ",'Θ');
        twoCharacterInputToKnownOutput.put("G°",'°');
        twoCharacterInputToKnownOutput.put("JT",'T');
        twoCharacterInputToKnownOutput.put("JV",'V');
        twoCharacterInputToKnownOutput.put("Iu",'u');
        twoCharacterInputToKnownOutput.put("医生",'生');
        twoCharacterInputToKnownOutput.put("K:",'b');
        twoCharacterInputToKnownOutput.put("K<",' ');
        twoCharacterInputToKnownOutput.put("Iz",'z');
        twoCharacterInputToKnownOutput.put("Bœ",'œ');
        twoCharacterInputToKnownOutput.put("K=",'=');
        twoCharacterInputToKnownOutput.put("KB",'B');
        twoCharacterInputToKnownOutput.put("Dě",'ě');
        twoCharacterInputToKnownOutput.put("KC",'C');
        twoCharacterInputToKnownOutput.put("KD",'D');
        twoCharacterInputToKnownOutput.put("KF",'F');
        twoCharacterInputToKnownOutput.put("L(",'(');
        twoCharacterInputToKnownOutput.put("KG",'G');
        twoCharacterInputToKnownOutput.put("L*",'?');
        twoCharacterInputToKnownOutput.put("Jh",'h');
        twoCharacterInputToKnownOutput.put("L+",'+');
        twoCharacterInputToKnownOutput.put("KJ",'J');
        twoCharacterInputToKnownOutput.put("KK",'K');
        twoCharacterInputToKnownOutput.put("L,",',');
        twoCharacterInputToKnownOutput.put("Jj",'j');
        twoCharacterInputToKnownOutput.put("وک",'ک');
        twoCharacterInputToKnownOutput.put("KL",'L');
        twoCharacterInputToKnownOutput.put("L-",'-');
        twoCharacterInputToKnownOutput.put("/α",'α');
        twoCharacterInputToKnownOutput.put("Fè",'è');
        twoCharacterInputToKnownOutput.put("L/",'/');
        twoCharacterInputToKnownOutput.put("/γ",'γ');
        twoCharacterInputToKnownOutput.put("주당",'당');
        twoCharacterInputToKnownOutput.put("KP",'P');
        twoCharacterInputToKnownOutput.put("/δ",'/');
        twoCharacterInputToKnownOutput.put("Dī",'ī');
        twoCharacterInputToKnownOutput.put("وگ",'گ');
        twoCharacterInputToKnownOutput.put("Jr",'r');
        twoCharacterInputToKnownOutput.put("L4",'r');
        twoCharacterInputToKnownOutput.put("/θ",'θ');
        twoCharacterInputToKnownOutput.put("KT",',');
        twoCharacterInputToKnownOutput.put("KU",'U');
        twoCharacterInputToKnownOutput.put("KV",'V');
        twoCharacterInputToKnownOutput.put("L:",':');
        twoCharacterInputToKnownOutput.put("KY",'Y');
        twoCharacterInputToKnownOutput.put("Cœ",'œ');
        twoCharacterInputToKnownOutput.put("Fö",'ö');
        twoCharacterInputToKnownOutput.put("/π",'π');
        twoCharacterInputToKnownOutput.put("L=",'=');
        twoCharacterInputToKnownOutput.put("K]",']');
        twoCharacterInputToKnownOutput.put("L>",'>');
        twoCharacterInputToKnownOutput.put("K_",'_');
        twoCharacterInputToKnownOutput.put("M!",'!');
        twoCharacterInputToKnownOutput.put("Kb",'b');
        twoCharacterInputToKnownOutput.put("Kc",'c');
        twoCharacterInputToKnownOutput.put("Kd",'d');
        twoCharacterInputToKnownOutput.put("M&",'&');
        twoCharacterInputToKnownOutput.put("LF",'F');
        twoCharacterInputToKnownOutput.put("/ω",'ω');
        twoCharacterInputToKnownOutput.put("Kf",'f');
        twoCharacterInputToKnownOutput.put("LG",'G');
        twoCharacterInputToKnownOutput.put("Kg",'g');
        twoCharacterInputToKnownOutput.put("Dł",'ł');
        twoCharacterInputToKnownOutput.put("پ<",' ');
        twoCharacterInputToKnownOutput.put("M+",'+');
        twoCharacterInputToKnownOutput.put("Kj",'j');
        twoCharacterInputToKnownOutput.put("M-",'-');
        twoCharacterInputToKnownOutput.put("LM",'M');
        twoCharacterInputToKnownOutput.put("Km",'m');
        twoCharacterInputToKnownOutput.put("ью",'ю');
        twoCharacterInputToKnownOutput.put("LN",'h');
        twoCharacterInputToKnownOutput.put("Gê",'ê');
        twoCharacterInputToKnownOutput.put("0γ",'γ');
        twoCharacterInputToKnownOutput.put("0ε",'ε');
        twoCharacterInputToKnownOutput.put("Ks",'s');
        twoCharacterInputToKnownOutput.put("M6",'6');
        twoCharacterInputToKnownOutput.put("LV",'V');
        twoCharacterInputToKnownOutput.put("Kw",'w');
        twoCharacterInputToKnownOutput.put("LX",'X');
        twoCharacterInputToKnownOutput.put("Gó",'ó');
        twoCharacterInputToKnownOutput.put("Kx",'x');
        twoCharacterInputToKnownOutput.put("LZ",'Z');
        twoCharacterInputToKnownOutput.put("M;",';');
        twoCharacterInputToKnownOutput.put("Gö",'ö');
        twoCharacterInputToKnownOutput.put("K|",'|');
        twoCharacterInputToKnownOutput.put("L_",'_');
        twoCharacterInputToKnownOutput.put("N!",'!');
        twoCharacterInputToKnownOutput.put("N\"",'\"');
        twoCharacterInputToKnownOutput.put("L`",'`');
        twoCharacterInputToKnownOutput.put("Lb",'b');
        twoCharacterInputToKnownOutput.put("Hà",'à');
        twoCharacterInputToKnownOutput.put("َا",'ا');
        twoCharacterInputToKnownOutput.put("N\'",'\'');
        twoCharacterInputToKnownOutput.put("Há",'á');
        twoCharacterInputToKnownOutput.put("MG",'G');
        twoCharacterInputToKnownOutput.put("Hâ",'o');
        twoCharacterInputToKnownOutput.put("MH",'H');
        twoCharacterInputToKnownOutput.put("N*",'*');
        twoCharacterInputToKnownOutput.put("N+",'+');
        twoCharacterInputToKnownOutput.put(" ־",'־');
        twoCharacterInputToKnownOutput.put("Lj",'j');
        twoCharacterInputToKnownOutput.put("IÉ",'r');
        twoCharacterInputToKnownOutput.put("Lp",'p');
        twoCharacterInputToKnownOutput.put("Hí",'h');
        twoCharacterInputToKnownOutput.put("N3",'3');
        twoCharacterInputToKnownOutput.put("Lr",'r');
        twoCharacterInputToKnownOutput.put("2Θ",'Θ');
        twoCharacterInputToKnownOutput.put("Ls",'s');
        twoCharacterInputToKnownOutput.put("Lt",'t');
        twoCharacterInputToKnownOutput.put("MW",'e');
        twoCharacterInputToKnownOutput.put("Lv",'v');
        twoCharacterInputToKnownOutput.put("Lw",'w');
        twoCharacterInputToKnownOutput.put("MX",'X');
        twoCharacterInputToKnownOutput.put("N:",':');
        twoCharacterInputToKnownOutput.put("Gē",'ē');
        twoCharacterInputToKnownOutput.put("MY",'Y');
        twoCharacterInputToKnownOutput.put("MZ",'Z');
        twoCharacterInputToKnownOutput.put("N<",' ');
        twoCharacterInputToKnownOutput.put("1π",'π');
        twoCharacterInputToKnownOutput.put("N=",'=');
        twoCharacterInputToKnownOutput.put("M]",']');
        twoCharacterInputToKnownOutput.put("M^",'^');
        twoCharacterInputToKnownOutput.put(" ג",'ג');
        twoCharacterInputToKnownOutput.put("M_",'_');
        twoCharacterInputToKnownOutput.put("O!",'!');
        twoCharacterInputToKnownOutput.put("Gę",'ę');
        twoCharacterInputToKnownOutput.put("-п",'п');
        twoCharacterInputToKnownOutput.put(" ד",'ד');
        twoCharacterInputToKnownOutput.put("Gě",'ě');
        twoCharacterInputToKnownOutput.put("ют",'т');
        twoCharacterInputToKnownOutput.put("O#",'#');
        twoCharacterInputToKnownOutput.put(" ו",'ו');
        twoCharacterInputToKnownOutput.put("Mb",'b');
        twoCharacterInputToKnownOutput.put(" ז",'ז');
        twoCharacterInputToKnownOutput.put("Dź",'ź');
        twoCharacterInputToKnownOutput.put("Md",'d');
        twoCharacterInputToKnownOutput.put(" ח",'ח');
        twoCharacterInputToKnownOutput.put("O\'",'\'');
        twoCharacterInputToKnownOutput.put(" ט",'ט');
        twoCharacterInputToKnownOutput.put("Dż",'ż');
        twoCharacterInputToKnownOutput.put(" י",'י');
        twoCharacterInputToKnownOutput.put("O(",'(');
        twoCharacterInputToKnownOutput.put(" כ",'כ');
        twoCharacterInputToKnownOutput.put("O*",'*');
        twoCharacterInputToKnownOutput.put("NJ",'J');
        twoCharacterInputToKnownOutput.put("O+",'+');
        twoCharacterInputToKnownOutput.put("Mk",'k');
        twoCharacterInputToKnownOutput.put("2α",'α');
        twoCharacterInputToKnownOutput.put("Ml",'l');
        twoCharacterInputToKnownOutput.put(" נ",'נ');
        twoCharacterInputToKnownOutput.put("O/",'/');
        twoCharacterInputToKnownOutput.put("Mn",'n');
        twoCharacterInputToKnownOutput.put(" ס",'ס');
        twoCharacterInputToKnownOutput.put("NR",'R');
        twoCharacterInputToKnownOutput.put(" פ",'פ');
        twoCharacterInputToKnownOutput.put("2θ",'θ');
        twoCharacterInputToKnownOutput.put(" צ",'צ');
        twoCharacterInputToKnownOutput.put("O5",'5');
        twoCharacterInputToKnownOutput.put("K±",'±');
        twoCharacterInputToKnownOutput.put(" ק",'ק');
        twoCharacterInputToKnownOutput.put("Mt",'t');
        twoCharacterInputToKnownOutput.put(" ר",'ר');
        twoCharacterInputToKnownOutput.put("O7",'7');
        twoCharacterInputToKnownOutput.put("NW",'W');
        twoCharacterInputToKnownOutput.put("Mw",'w');
        twoCharacterInputToKnownOutput.put(" ת",'ת');
        twoCharacterInputToKnownOutput.put("Mx",'x');
        twoCharacterInputToKnownOutput.put("NZ",'Z');
        twoCharacterInputToKnownOutput.put("O;",';');
        twoCharacterInputToKnownOutput.put("O<",' ');
        twoCharacterInputToKnownOutput.put("N_",'2');
        twoCharacterInputToKnownOutput.put("Nb",'b');
        twoCharacterInputToKnownOutput.put("Nc",'c');
        twoCharacterInputToKnownOutput.put("Nd",'d');
        twoCharacterInputToKnownOutput.put("Ng",'g');
        twoCharacterInputToKnownOutput.put("Jä",'ä');
        twoCharacterInputToKnownOutput.put("P*",'*');
        twoCharacterInputToKnownOutput.put("Gł",'ł');
        twoCharacterInputToKnownOutput.put("P+",'+');
        twoCharacterInputToKnownOutput.put("Nn",'m');
        twoCharacterInputToKnownOutput.put("P2",'2');
        twoCharacterInputToKnownOutput.put("Jì",'ì');
        twoCharacterInputToKnownOutput.put("Np",'p');
        twoCharacterInputToKnownOutput.put("Ns",'s');
        twoCharacterInputToKnownOutput.put("3θ",'θ');
        twoCharacterInputToKnownOutput.put("L²",'²');
        twoCharacterInputToKnownOutput.put("P;",';');
        twoCharacterInputToKnownOutput.put("Ny",'y');
        twoCharacterInputToKnownOutput.put("O\\",'\\');
        twoCharacterInputToKnownOutput.put("PB",'B');
        twoCharacterInputToKnownOutput.put("Kà",'à');
        twoCharacterInputToKnownOutput.put("Q(",'(');
        twoCharacterInputToKnownOutput.put("Og",'g');
        twoCharacterInputToKnownOutput.put("Q)",')');
        twoCharacterInputToKnownOutput.put("Q*",'*');
        twoCharacterInputToKnownOutput.put("Ją",'ą');
        twoCharacterInputToKnownOutput.put("PK",'K');
        twoCharacterInputToKnownOutput.put("Q,",',');
        twoCharacterInputToKnownOutput.put("Oj",'j');
        twoCharacterInputToKnownOutput.put("Q-",'-');
        twoCharacterInputToKnownOutput.put("Q.",'.');
        twoCharacterInputToKnownOutput.put("Kè",'è');
        twoCharacterInputToKnownOutput.put("PN",'N');
        twoCharacterInputToKnownOutput.put("Oo",'o');
        twoCharacterInputToKnownOutput.put("Q1",'1');
        twoCharacterInputToKnownOutput.put("Q2",'2');
        twoCharacterInputToKnownOutput.put("PQ",'Q');
        twoCharacterInputToKnownOutput.put("Q3",'3');
        twoCharacterInputToKnownOutput.put("4θ",'θ');
        twoCharacterInputToKnownOutput.put(" ا",'ا');
        twoCharacterInputToKnownOutput.put("Kò",'ò');
        twoCharacterInputToKnownOutput.put("PY",'Y');
        twoCharacterInputToKnownOutput.put(" ت",'ت');
        twoCharacterInputToKnownOutput.put("Dǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("Ѳ=",'=');
        twoCharacterInputToKnownOutput.put("Q<",' ');
        twoCharacterInputToKnownOutput.put("P[",'[');
        twoCharacterInputToKnownOutput.put("4π",'π');
        twoCharacterInputToKnownOutput.put(" ج",'ج');
        twoCharacterInputToKnownOutput.put("Q=",'=');
        twoCharacterInputToKnownOutput.put("严厉",'厉');
        twoCharacterInputToKnownOutput.put("P]",']');
        twoCharacterInputToKnownOutput.put("P^",'^');
        twoCharacterInputToKnownOutput.put("Dǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("Ję",'ę');
        twoCharacterInputToKnownOutput.put("R!",'!');
        twoCharacterInputToKnownOutput.put("R\"",'\"');
        twoCharacterInputToKnownOutput.put("Pc",'c');
        twoCharacterInputToKnownOutput.put("Là",'à');
        twoCharacterInputToKnownOutput.put("R\'",'\'');
        twoCharacterInputToKnownOutput.put("Lá",'l');
        twoCharacterInputToKnownOutput.put("QF",'F');
        twoCharacterInputToKnownOutput.put("QG",'G');
        twoCharacterInputToKnownOutput.put("R(",'(');
        twoCharacterInputToKnownOutput.put("R*",'*');
        twoCharacterInputToKnownOutput.put(" ع",'ع');
        twoCharacterInputToKnownOutput.put("Pj",'j');
        twoCharacterInputToKnownOutput.put("Ką",'ą');
        twoCharacterInputToKnownOutput.put("Pn",'n');
        twoCharacterInputToKnownOutput.put("QP",'P');
        twoCharacterInputToKnownOutput.put("Lì",'ì');
        twoCharacterInputToKnownOutput.put("QQ",'Q');
        twoCharacterInputToKnownOutput.put("QR",'R');
        twoCharacterInputToKnownOutput.put("R3",'3');
        twoCharacterInputToKnownOutput.put("5θ",'θ');
        twoCharacterInputToKnownOutput.put("QT",'e');
        twoCharacterInputToKnownOutput.put("Pt",'t');
        twoCharacterInputToKnownOutput.put("N³",'³');
        twoCharacterInputToKnownOutput.put("R:",':');
        twoCharacterInputToKnownOutput.put("R;",';');
        twoCharacterInputToKnownOutput.put("5π",'π');
        twoCharacterInputToKnownOutput.put("R=",'=');
        twoCharacterInputToKnownOutput.put("Q_",'_');
        twoCharacterInputToKnownOutput.put("S\"",'\"');
        twoCharacterInputToKnownOutput.put("Lü",'ü');
        twoCharacterInputToKnownOutput.put("Qa",'a');
        twoCharacterInputToKnownOutput.put("S$",'$');
        twoCharacterInputToKnownOutput.put("Iś",'ś');
        twoCharacterInputToKnownOutput.put("S\'",'\'');
        twoCharacterInputToKnownOutput.put("RG",'G');
        twoCharacterInputToKnownOutput.put("S(",'(');
        twoCharacterInputToKnownOutput.put("RH",'H');
        twoCharacterInputToKnownOutput.put("Qi",'i');
        twoCharacterInputToKnownOutput.put("S-",'-');
        twoCharacterInputToKnownOutput.put("S1",'1');
        twoCharacterInputToKnownOutput.put("S2",'2');
        twoCharacterInputToKnownOutput.put("RQ",'Q');
        twoCharacterInputToKnownOutput.put("S3",'3');
        twoCharacterInputToKnownOutput.put("Qq",'q');
        twoCharacterInputToKnownOutput.put("ٓس",'س');
        twoCharacterInputToKnownOutput.put("Qr",'r');
        twoCharacterInputToKnownOutput.put("Qs",'s');
        twoCharacterInputToKnownOutput.put("Qt",'t');
        twoCharacterInputToKnownOutput.put("RU",'U');
        twoCharacterInputToKnownOutput.put("O²",'²');
        twoCharacterInputToKnownOutput.put("RV",'V');
        twoCharacterInputToKnownOutput.put("RW",'W');
        twoCharacterInputToKnownOutput.put("Mó",'ó');
        twoCharacterInputToKnownOutput.put("RX",'h');
        twoCharacterInputToKnownOutput.put("S;",';');
        twoCharacterInputToKnownOutput.put("S=",'=');
        twoCharacterInputToKnownOutput.put("R]",']');
        twoCharacterInputToKnownOutput.put("T!",'!');
        twoCharacterInputToKnownOutput.put("R_",'_');
        twoCharacterInputToKnownOutput.put("T\"",'\"');
        twoCharacterInputToKnownOutput.put("Mû",'û');
        twoCharacterInputToKnownOutput.put("Rb",'b');
        twoCharacterInputToKnownOutput.put("Rc",'c');
        twoCharacterInputToKnownOutput.put("Nà",'à');
        twoCharacterInputToKnownOutput.put("T(",'(');
        twoCharacterInputToKnownOutput.put("SG",'G');
        twoCharacterInputToKnownOutput.put("Rf",'f');
        twoCharacterInputToKnownOutput.put("Rg",'g');
        twoCharacterInputToKnownOutput.put("T+",'+');
        twoCharacterInputToKnownOutput.put("Kł",'ł');
        twoCharacterInputToKnownOutput.put("SK",'K');
        twoCharacterInputToKnownOutput.put("Mą",'ą');
        twoCharacterInputToKnownOutput.put("Rl",'l');
        twoCharacterInputToKnownOutput.put("T/",'/');
        twoCharacterInputToKnownOutput.put("Rn",'n');
        twoCharacterInputToKnownOutput.put("T2",'2');
        twoCharacterInputToKnownOutput.put("T4",'4');
        twoCharacterInputToKnownOutput.put("Rt",'t');
        twoCharacterInputToKnownOutput.put("SX",'X');
        twoCharacterInputToKnownOutput.put("Nó",'ó');
        twoCharacterInputToKnownOutput.put("SY",'Y');
        twoCharacterInputToKnownOutput.put("Ry",'y');
        twoCharacterInputToKnownOutput.put("Gǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("Rz",'z');
        twoCharacterInputToKnownOutput.put("7π",'π');
        twoCharacterInputToKnownOutput.put("S]",']');
        twoCharacterInputToKnownOutput.put("S^",'^');
        twoCharacterInputToKnownOutput.put("Nú",'n');
        twoCharacterInputToKnownOutput.put("Mę",'ę');
        twoCharacterInputToKnownOutput.put("S_",'_');
        twoCharacterInputToKnownOutput.put("Nü",'ü');
        twoCharacterInputToKnownOutput.put("TB",'B');
        twoCharacterInputToKnownOutput.put("비<",' ');
        twoCharacterInputToKnownOutput.put("Sb",'b');
        twoCharacterInputToKnownOutput.put("Sd",'d');
        twoCharacterInputToKnownOutput.put("TF",'F');
        twoCharacterInputToKnownOutput.put("U\'",'\'');
        twoCharacterInputToKnownOutput.put("Sf",'f');
        twoCharacterInputToKnownOutput.put("U(",'(');
        twoCharacterInputToKnownOutput.put("U)",')');
        twoCharacterInputToKnownOutput.put("Sg",'g');
        twoCharacterInputToKnownOutput.put("U+",'+');
        twoCharacterInputToKnownOutput.put("چ<",' ');
        twoCharacterInputToKnownOutput.put("TL",'L');
        twoCharacterInputToKnownOutput.put("U2",'2');
        twoCharacterInputToKnownOutput.put("Mī",'ī');
        twoCharacterInputToKnownOutput.put("Ss",'s');
        twoCharacterInputToKnownOutput.put("Sv",'v');
        twoCharacterInputToKnownOutput.put("TX",'X');
        twoCharacterInputToKnownOutput.put("Sx",'x');
        twoCharacterInputToKnownOutput.put("Sz",'z');
        twoCharacterInputToKnownOutput.put("U=",'=');
        twoCharacterInputToKnownOutput.put("T^",'^');
        twoCharacterInputToKnownOutput.put("\'ו",'ו');
        twoCharacterInputToKnownOutput.put("Tc",'c');
        twoCharacterInputToKnownOutput.put("Td",'a');
        twoCharacterInputToKnownOutput.put("Tf",'f');
        twoCharacterInputToKnownOutput.put("\'י",'י');
        twoCharacterInputToKnownOutput.put("V(",'(');
        twoCharacterInputToKnownOutput.put("UH",'H');
        twoCharacterInputToKnownOutput.put("Mł",'ł');
        twoCharacterInputToKnownOutput.put("V,",',');
        twoCharacterInputToKnownOutput.put("Tk",'k');
        twoCharacterInputToKnownOutput.put("Tl",'l');
        twoCharacterInputToKnownOutput.put("Pè",'è');
        twoCharacterInputToKnownOutput.put("Tm",'m');
        twoCharacterInputToKnownOutput.put("\'ס",'ס');
        twoCharacterInputToKnownOutput.put(":Δ",'Δ');
        twoCharacterInputToKnownOutput.put("V2",'2');
        twoCharacterInputToKnownOutput.put("Pí",'í');
        twoCharacterInputToKnownOutput.put("UU",'U');
        twoCharacterInputToKnownOutput.put("\'ק",'ק');
        twoCharacterInputToKnownOutput.put("R²",'²');
        twoCharacterInputToKnownOutput.put("Tv",'v');
        twoCharacterInputToKnownOutput.put("UX",'X');
        twoCharacterInputToKnownOutput.put("UY",'Y');
        twoCharacterInputToKnownOutput.put("V:",'t');
        twoCharacterInputToKnownOutput.put("V<",' ');
        twoCharacterInputToKnownOutput.put("U[",'[');
        twoCharacterInputToKnownOutput.put("Tz",'z');
        twoCharacterInputToKnownOutput.put("打折",'折');
        twoCharacterInputToKnownOutput.put("V?",':');
        twoCharacterInputToKnownOutput.put("Ua",'a');
        twoCharacterInputToKnownOutput.put("Ub",'b');
        twoCharacterInputToKnownOutput.put("(ו",'ו');
        twoCharacterInputToKnownOutput.put("VD",'D');
        twoCharacterInputToKnownOutput.put("Uc",'c');
        twoCharacterInputToKnownOutput.put("(ח",'ח');
        twoCharacterInputToKnownOutput.put("Ud",'d');
        twoCharacterInputToKnownOutput.put("Uf",'f');
        twoCharacterInputToKnownOutput.put("(י",'י');
        twoCharacterInputToKnownOutput.put("ᴾ.",'.');
        twoCharacterInputToKnownOutput.put("VJ",'J');
        twoCharacterInputToKnownOutput.put("ڈ<",' ');
        twoCharacterInputToKnownOutput.put("Ui",'i');
        twoCharacterInputToKnownOutput.put("W,",',');
        twoCharacterInputToKnownOutput.put("Uj",'j');
        twoCharacterInputToKnownOutput.put("VL",'L');
        twoCharacterInputToKnownOutput.put("W-",'-');
        twoCharacterInputToKnownOutput.put("W.",'.');
        twoCharacterInputToKnownOutput.put("(נ",'נ');
        twoCharacterInputToKnownOutput.put("VO",'O');
        twoCharacterInputToKnownOutput.put("VP",'P');
        twoCharacterInputToKnownOutput.put("VQ",'Q');
        twoCharacterInputToKnownOutput.put("Qì",'ì');
        twoCharacterInputToKnownOutput.put("VR",'R');
        twoCharacterInputToKnownOutput.put("W3",'3');
        twoCharacterInputToKnownOutput.put("W4",'4');
        twoCharacterInputToKnownOutput.put("S²",'²');
        twoCharacterInputToKnownOutput.put("VU",'U');
        twoCharacterInputToKnownOutput.put("Uu",'u');
        twoCharacterInputToKnownOutput.put("Uw",'w');
        twoCharacterInputToKnownOutput.put("Ux",'x');
        twoCharacterInputToKnownOutput.put("Uy",'y');
        twoCharacterInputToKnownOutput.put("Uz",'z');
        twoCharacterInputToKnownOutput.put("W<",' ');
        twoCharacterInputToKnownOutput.put("Nœ",'œ');
        twoCharacterInputToKnownOutput.put("W=",'=');
        twoCharacterInputToKnownOutput.put("V^",'^');
        twoCharacterInputToKnownOutput.put(")ב",'ב');
        twoCharacterInputToKnownOutput.put("X\"",'\"');
        twoCharacterInputToKnownOutput.put(")ד",'ד');
        twoCharacterInputToKnownOutput.put("WB",'B');
        twoCharacterInputToKnownOutput.put("Vb",'b');
        twoCharacterInputToKnownOutput.put("Vc",'c');
        twoCharacterInputToKnownOutput.put("Vd",'d');
        twoCharacterInputToKnownOutput.put("Vf",'f');
        twoCharacterInputToKnownOutput.put("X(",'(');
        twoCharacterInputToKnownOutput.put("Rä",'ä');
        twoCharacterInputToKnownOutput.put("Oł",'ł');
        twoCharacterInputToKnownOutput.put("X.",'.');
        twoCharacterInputToKnownOutput.put(")ן",'ן');
        twoCharacterInputToKnownOutput.put("WM",'M');
        twoCharacterInputToKnownOutput.put("WN",'N');
        twoCharacterInputToKnownOutput.put("Vm",'m');
        twoCharacterInputToKnownOutput.put(")ס",'ס');
        twoCharacterInputToKnownOutput.put("Rê",'ê');
        twoCharacterInputToKnownOutput.put("X1",'1');
        twoCharacterInputToKnownOutput.put("Vp",'p');
        twoCharacterInputToKnownOutput.put("X2",'2');
        twoCharacterInputToKnownOutput.put("X3",'3');
        twoCharacterInputToKnownOutput.put("WR",'R');
        twoCharacterInputToKnownOutput.put("Rí",'r');
        twoCharacterInputToKnownOutput.put("X4",'4');
        twoCharacterInputToKnownOutput.put(")ק",'ק');
        twoCharacterInputToKnownOutput.put("Vt",'t');
        twoCharacterInputToKnownOutput.put("WV",'V');
        twoCharacterInputToKnownOutput.put(")ר",'ר');
        twoCharacterInputToKnownOutput.put("Ró",'ó');
        twoCharacterInputToKnownOutput.put("Vx",'x');
        twoCharacterInputToKnownOutput.put("WY",'Y');
        twoCharacterInputToKnownOutput.put("Vy",'y');
        twoCharacterInputToKnownOutput.put("Kǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("빈<",' ');
        twoCharacterInputToKnownOutput.put("Vz",'z');
        twoCharacterInputToKnownOutput.put("X=",'=');
        twoCharacterInputToKnownOutput.put("V|",'|');
        twoCharacterInputToKnownOutput.put("Y!",'!');
        twoCharacterInputToKnownOutput.put("Rú",'ú');
        twoCharacterInputToKnownOutput.put("XA",'A');
        twoCharacterInputToKnownOutput.put("XC",'C');
        twoCharacterInputToKnownOutput.put("Oś",'ś');
        twoCharacterInputToKnownOutput.put("Wc",'c');
        twoCharacterInputToKnownOutput.put("XD",'D');
        twoCharacterInputToKnownOutput.put("XE",'E');
        twoCharacterInputToKnownOutput.put("Sá",'s');
        twoCharacterInputToKnownOutput.put("Y(",'(');
        twoCharacterInputToKnownOutput.put("Sã",'ã');
        twoCharacterInputToKnownOutput.put("Pł",'ł');
        twoCharacterInputToKnownOutput.put("Rą",'ą');
        twoCharacterInputToKnownOutput.put("Y-",'-');
        twoCharacterInputToKnownOutput.put("Sè",'s');
        twoCharacterInputToKnownOutput.put("Y.",'.');
        twoCharacterInputToKnownOutput.put("Y/",'/');
        twoCharacterInputToKnownOutput.put("XN",'N');
        twoCharacterInputToKnownOutput.put("XO",'O');
        twoCharacterInputToKnownOutput.put("=Δ",'Δ');
        twoCharacterInputToKnownOutput.put("XP",'P');
        twoCharacterInputToKnownOutput.put("Sì",'ì');
        twoCharacterInputToKnownOutput.put("Wp",'p');
        twoCharacterInputToKnownOutput.put("Qī",'ī');
        twoCharacterInputToKnownOutput.put("XT",'T');
        twoCharacterInputToKnownOutput.put("U±",'±');
        twoCharacterInputToKnownOutput.put("Wt",'t');
        twoCharacterInputToKnownOutput.put("XU",'U');
        twoCharacterInputToKnownOutput.put("Y7",'b');
        twoCharacterInputToKnownOutput.put("Rē",'ē');
        twoCharacterInputToKnownOutput.put("Y:",':');
        twoCharacterInputToKnownOutput.put("U·",'·');
        twoCharacterInputToKnownOutput.put("Y<",' ');
        twoCharacterInputToKnownOutput.put("Wz",'z');
        twoCharacterInputToKnownOutput.put("Y=",'=');
        twoCharacterInputToKnownOutput.put("S÷",'÷');
        twoCharacterInputToKnownOutput.put("ɪ.",'.');
        twoCharacterInputToKnownOutput.put("X]",']');
        twoCharacterInputToKnownOutput.put("X^",'^');
        twoCharacterInputToKnownOutput.put("Rę",'ę');
        twoCharacterInputToKnownOutput.put("Sú",'ú');
        twoCharacterInputToKnownOutput.put("Sû",'û');
        twoCharacterInputToKnownOutput.put("Xa",'a');
        twoCharacterInputToKnownOutput.put("YB",'B');
        twoCharacterInputToKnownOutput.put("Xc",'c');
        twoCharacterInputToKnownOutput.put("YD",'D');
        twoCharacterInputToKnownOutput.put("Tà",'à');
        twoCharacterInputToKnownOutput.put("Z\'",'\'');
        twoCharacterInputToKnownOutput.put("慢(",'(');
        twoCharacterInputToKnownOutput.put("YG",'G');
        twoCharacterInputToKnownOutput.put("Tâ",'â');
        twoCharacterInputToKnownOutput.put("YI",'e');
        twoCharacterInputToKnownOutput.put("Z,",',');
        twoCharacterInputToKnownOutput.put("YK",'w');
        twoCharacterInputToKnownOutput.put("Są",'ą');
        twoCharacterInputToKnownOutput.put("Z-",'-');
        twoCharacterInputToKnownOutput.put("Tè",'è');
        twoCharacterInputToKnownOutput.put("=α",'α');
        twoCharacterInputToKnownOutput.put("YN",'N');
        twoCharacterInputToKnownOutput.put(">Δ",'v');
        twoCharacterInputToKnownOutput.put("YP",'P');
        twoCharacterInputToKnownOutput.put("YR",'R');
        twoCharacterInputToKnownOutput.put("Xr",'r');
        twoCharacterInputToKnownOutput.put("YT",'T');
        twoCharacterInputToKnownOutput.put("=θ",'θ');
        twoCharacterInputToKnownOutput.put("Xu",'u');
        twoCharacterInputToKnownOutput.put("Tô",'ô');
        twoCharacterInputToKnownOutput.put("YY",'h');
        twoCharacterInputToKnownOutput.put("Tö",'ö');
        twoCharacterInputToKnownOutput.put("Z<",' ');
        twoCharacterInputToKnownOutput.put("=π",'π');
        twoCharacterInputToKnownOutput.put("Y]",']');
        twoCharacterInputToKnownOutput.put("Tú",'ú');
        twoCharacterInputToKnownOutput.put("Sę",'ę');
        twoCharacterInputToKnownOutput.put("ZA",'A');
        twoCharacterInputToKnownOutput.put("Tû",'û');
        twoCharacterInputToKnownOutput.put("Tü",'ü');
        twoCharacterInputToKnownOutput.put("Yb",'b');
        twoCharacterInputToKnownOutput.put("ZD",'D');
        twoCharacterInputToKnownOutput.put("段<",' ');
        twoCharacterInputToKnownOutput.put("=ω",'ω');
        twoCharacterInputToKnownOutput.put("ZI",'I');
        twoCharacterInputToKnownOutput.put("[+",'+');
        twoCharacterInputToKnownOutput.put("[-",'-');
        twoCharacterInputToKnownOutput.put("ZM",'M');
        twoCharacterInputToKnownOutput.put("Yl",'l');
        twoCharacterInputToKnownOutput.put("[0",'0');
        twoCharacterInputToKnownOutput.put("Yn",'n');
        twoCharacterInputToKnownOutput.put("ZO",'O');
        twoCharacterInputToKnownOutput.put(">δ",'v');
        twoCharacterInputToKnownOutput.put("Yr",'r');
        twoCharacterInputToKnownOutput.put(">θ",'π');
        twoCharacterInputToKnownOutput.put("[6",'I');
        twoCharacterInputToKnownOutput.put("Yt",'t');
        twoCharacterInputToKnownOutput.put("Yu",'u');
        twoCharacterInputToKnownOutput.put("[9",'T');
        twoCharacterInputToKnownOutput.put("ZY",'Y');
        twoCharacterInputToKnownOutput.put("Nǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("ZZ",'Z');
        twoCharacterInputToKnownOutput.put("[<",' ');
        twoCharacterInputToKnownOutput.put("[=",'=');
        twoCharacterInputToKnownOutput.put("\\ ",' ');
        twoCharacterInputToKnownOutput.put("[B",'B');
        twoCharacterInputToKnownOutput.put("Zb",'b');
        twoCharacterInputToKnownOutput.put("Zd",'d');
        twoCharacterInputToKnownOutput.put("ɪt",'t');
        twoCharacterInputToKnownOutput.put("-י",'י');
        twoCharacterInputToKnownOutput.put("Zg",'g');
        twoCharacterInputToKnownOutput.put("Zh",'h');
        twoCharacterInputToKnownOutput.put("-כ",'כ');
        twoCharacterInputToKnownOutput.put("Vä",'ä');
        twoCharacterInputToKnownOutput.put("[I",'I');
        twoCharacterInputToKnownOutput.put("Sł",'ł');
        twoCharacterInputToKnownOutput.put("[K",'K');
        twoCharacterInputToKnownOutput.put("Zj",'j');
        twoCharacterInputToKnownOutput.put("[L",'L');
        twoCharacterInputToKnownOutput.put("[N",'N');
        twoCharacterInputToKnownOutput.put("Zm",'m');
        twoCharacterInputToKnownOutput.put("Vê",'ê');
        twoCharacterInputToKnownOutput.put("[O",'O');
        twoCharacterInputToKnownOutput.put("排粪",'粪');
        twoCharacterInputToKnownOutput.put("[P",'P');
        twoCharacterInputToKnownOutput.put("[R",'R');
        twoCharacterInputToKnownOutput.put("\\3",'3');
        twoCharacterInputToKnownOutput.put("Ví",'í');
        twoCharacterInputToKnownOutput.put("Zr",'r');
        twoCharacterInputToKnownOutput.put("[S",'S');
        twoCharacterInputToKnownOutput.put("Zs",'r');
        twoCharacterInputToKnownOutput.put("[U",'U');
        twoCharacterInputToKnownOutput.put("Zv",'v');
        twoCharacterInputToKnownOutput.put("[W",'t');
        twoCharacterInputToKnownOutput.put("[X",'X');
        twoCharacterInputToKnownOutput.put("[Y",'Y');
        twoCharacterInputToKnownOutput.put("Zy",'y');
        twoCharacterInputToKnownOutput.put("Sœ",'œ');
        twoCharacterInputToKnownOutput.put("\\=",'=');
        twoCharacterInputToKnownOutput.put("Z|",' ');
        twoCharacterInputToKnownOutput.put(".ב",',');
        twoCharacterInputToKnownOutput.put("]\"",'\"');
        twoCharacterInputToKnownOutput.put("[b",'b');
        twoCharacterInputToKnownOutput.put("[c",'c');
        twoCharacterInputToKnownOutput.put("[d",'d');
        twoCharacterInputToKnownOutput.put("[e",'e');
        twoCharacterInputToKnownOutput.put("Wá",'á');
        twoCharacterInputToKnownOutput.put("\\F",'s');
        twoCharacterInputToKnownOutput.put("](",'(');
        twoCharacterInputToKnownOutput.put("])",')');
        twoCharacterInputToKnownOutput.put("[h",'h');
        twoCharacterInputToKnownOutput.put("]*",'*');
        twoCharacterInputToKnownOutput.put("[i",'i');
        twoCharacterInputToKnownOutput.put(".ל",' ');
        twoCharacterInputToKnownOutput.put("[k",'k');
        twoCharacterInputToKnownOutput.put(".מ",'o');
        twoCharacterInputToKnownOutput.put("Wè",'è');
        twoCharacterInputToKnownOutput.put("[m",'m');
        twoCharacterInputToKnownOutput.put("Wé",'é');
        twoCharacterInputToKnownOutput.put("\\O",'d');
        twoCharacterInputToKnownOutput.put("[n",'n');
        twoCharacterInputToKnownOutput.put("]0",'0');
        twoCharacterInputToKnownOutput.put("[o",'o');
        twoCharacterInputToKnownOutput.put("[p",'p');
        twoCharacterInputToKnownOutput.put("]2",'2');
        twoCharacterInputToKnownOutput.put("[r",'r');
        twoCharacterInputToKnownOutput.put("]4",'4');
        twoCharacterInputToKnownOutput.put("录(",'(');
        twoCharacterInputToKnownOutput.put("]6",'6');
        twoCharacterInputToKnownOutput.put(".ק",'o');
        twoCharacterInputToKnownOutput.put("[u",'u');
        twoCharacterInputToKnownOutput.put(".ר",'r');
        twoCharacterInputToKnownOutput.put("[w",' ');
        twoCharacterInputToKnownOutput.put("Wó",'ó');
        twoCharacterInputToKnownOutput.put("[x",'x');
        twoCharacterInputToKnownOutput.put("]:",':');
        twoCharacterInputToKnownOutput.put("];",';');
        twoCharacterInputToKnownOutput.put("]=",'=');
        twoCharacterInputToKnownOutput.put("[|",'|');
        twoCharacterInputToKnownOutput.put("]>",'>');
        twoCharacterInputToKnownOutput.put("]?",' ');
        twoCharacterInputToKnownOutput.put("\\_",'_');
        twoCharacterInputToKnownOutput.put("Wú",'ú');
        twoCharacterInputToKnownOutput.put("/ד",'ד');
        twoCharacterInputToKnownOutput.put("/ה",'ה');
        twoCharacterInputToKnownOutput.put("\\c",'c');
        twoCharacterInputToKnownOutput.put("]E",'E');
        twoCharacterInputToKnownOutput.put("^\'",'\'');
        twoCharacterInputToKnownOutput.put("/ט",'ט');
        twoCharacterInputToKnownOutput.put("/י",'י');
        twoCharacterInputToKnownOutput.put("/ל",'ל');
        twoCharacterInputToKnownOutput.put("Wą",'ą');
        twoCharacterInputToKnownOutput.put("^-",'-');
        twoCharacterInputToKnownOutput.put("/מ",'מ');
        twoCharacterInputToKnownOutput.put("^.",'.');
        twoCharacterInputToKnownOutput.put("/נ",'נ');
        twoCharacterInputToKnownOutput.put("^/",'/');
        twoCharacterInputToKnownOutput.put("/ס",'ס');
        twoCharacterInputToKnownOutput.put("\\n",'n');
        twoCharacterInputToKnownOutput.put("/ע",'ע');
        twoCharacterInputToKnownOutput.put("Aε",'ε');
        twoCharacterInputToKnownOutput.put("\\p",'p');
        twoCharacterInputToKnownOutput.put("Xí",'í');
        twoCharacterInputToKnownOutput.put("\\q",'q');
        twoCharacterInputToKnownOutput.put("^5",'5');
        twoCharacterInputToKnownOutput.put("/צ",'צ');
        twoCharacterInputToKnownOutput.put("^6",'6');
        twoCharacterInputToKnownOutput.put("]U",'U');
        twoCharacterInputToKnownOutput.put("^7",'7');
        twoCharacterInputToKnownOutput.put("^8",'8');
        twoCharacterInputToKnownOutput.put("^9",'9');
        twoCharacterInputToKnownOutput.put("/ת",'ת');
        twoCharacterInputToKnownOutput.put("]]",']');
        twoCharacterInputToKnownOutput.put("_\"",'\"');
        twoCharacterInputToKnownOutput.put("]a",'a');
        twoCharacterInputToKnownOutput.put("]b",'b');
        twoCharacterInputToKnownOutput.put("_$",'$');
        twoCharacterInputToKnownOutput.put("_%",'%');
        twoCharacterInputToKnownOutput.put("Uś",'ś');
        twoCharacterInputToKnownOutput.put("^E",'E');
        twoCharacterInputToKnownOutput.put("_&",'&');
        twoCharacterInputToKnownOutput.put("_\'",'\'');
        twoCharacterInputToKnownOutput.put("_(",'(');
        twoCharacterInputToKnownOutput.put("^H",'H');
        twoCharacterInputToKnownOutput.put("_)",')');
        twoCharacterInputToKnownOutput.put("_-",'-');
        twoCharacterInputToKnownOutput.put("_/",'/');
        twoCharacterInputToKnownOutput.put("_0",'0');
        twoCharacterInputToKnownOutput.put("]n",'n');
        twoCharacterInputToKnownOutput.put("]o",'o');
        twoCharacterInputToKnownOutput.put("^P",'P');
        twoCharacterInputToKnownOutput.put("^Q",'Q');
        twoCharacterInputToKnownOutput.put("]q",'q');
        twoCharacterInputToKnownOutput.put("_3",'3');
        twoCharacterInputToKnownOutput.put("Yí",'í');
        twoCharacterInputToKnownOutput.put("_4",'4');
        twoCharacterInputToKnownOutput.put("]r",'r');
        twoCharacterInputToKnownOutput.put("]s",' ');
        twoCharacterInputToKnownOutput.put("^T",'T');
        twoCharacterInputToKnownOutput.put("_9",'9');
        twoCharacterInputToKnownOutput.put("]x",'x');
        twoCharacterInputToKnownOutput.put("^Y",'Y');
        twoCharacterInputToKnownOutput.put("]y",'y');
        twoCharacterInputToKnownOutput.put("^Z",'n');
        twoCharacterInputToKnownOutput.put("_<",' ');
        twoCharacterInputToKnownOutput.put("Yù",'ù');
        twoCharacterInputToKnownOutput.put("_?",'?');
        twoCharacterInputToKnownOutput.put("` ",' ');
        twoCharacterInputToKnownOutput.put("Yú",'ú');
        twoCharacterInputToKnownOutput.put("^a",'a');
        twoCharacterInputToKnownOutput.put("^b",'b');
        twoCharacterInputToKnownOutput.put("_C",'C');
        twoCharacterInputToKnownOutput.put("^c",'c');
        twoCharacterInputToKnownOutput.put("^d",'d');
        twoCharacterInputToKnownOutput.put("Zà",'à');
        twoCharacterInputToKnownOutput.put("Uż",'ż');
        twoCharacterInputToKnownOutput.put("`(",'(');
        twoCharacterInputToKnownOutput.put("_H",'H');
        twoCharacterInputToKnownOutput.put("^g",'g');
        twoCharacterInputToKnownOutput.put("Zä",'ä');
        twoCharacterInputToKnownOutput.put("Wł",'ł');
        twoCharacterInputToKnownOutput.put("ڑ<",' ');
        twoCharacterInputToKnownOutput.put("`,",',');
        twoCharacterInputToKnownOutput.put("^j",'t');
        twoCharacterInputToKnownOutput.put("^k",'k');
        twoCharacterInputToKnownOutput.put("^l",'l');
        twoCharacterInputToKnownOutput.put("_M",'M');
        twoCharacterInputToKnownOutput.put("Zì",'ì');
        twoCharacterInputToKnownOutput.put("^p",'p');
        twoCharacterInputToKnownOutput.put("Xī",'ī');
        twoCharacterInputToKnownOutput.put("^r",'r');
        twoCharacterInputToKnownOutput.put("_T",'T');
        twoCharacterInputToKnownOutput.put("^t",'t');
        twoCharacterInputToKnownOutput.put("^u",'u');
        twoCharacterInputToKnownOutput.put("_V",'V');
        twoCharacterInputToKnownOutput.put("^v",'v');
        twoCharacterInputToKnownOutput.put("Zö",'ö');
        twoCharacterInputToKnownOutput.put("`<",' ');
        twoCharacterInputToKnownOutput.put("Zü",'ü');
        twoCharacterInputToKnownOutput.put("Yě",'ě');
        twoCharacterInputToKnownOutput.put("_c",'c');
        twoCharacterInputToKnownOutput.put("_d",'d');
        twoCharacterInputToKnownOutput.put("_e",'e');
        twoCharacterInputToKnownOutput.put("_f",'f');
        twoCharacterInputToKnownOutput.put("`H",'H');
        twoCharacterInputToKnownOutput.put("_h",'h');
        twoCharacterInputToKnownOutput.put("a*",'*');
        twoCharacterInputToKnownOutput.put("_i",'i');
        twoCharacterInputToKnownOutput.put("_j",'e');
        twoCharacterInputToKnownOutput.put("下颌",'颌');
        twoCharacterInputToKnownOutput.put("Zą",'ą');
        twoCharacterInputToKnownOutput.put("_k",'k');
        twoCharacterInputToKnownOutput.put("_l",'l');
        twoCharacterInputToKnownOutput.put("_m",'m');
        twoCharacterInputToKnownOutput.put("a0",'0');
        twoCharacterInputToKnownOutput.put("a1",'1');
        twoCharacterInputToKnownOutput.put("_o",'o');
        twoCharacterInputToKnownOutput.put("a2",'2');
        twoCharacterInputToKnownOutput.put("a3",'3');
        twoCharacterInputToKnownOutput.put("Yī",'ī');
        twoCharacterInputToKnownOutput.put("_r",'r');
        twoCharacterInputToKnownOutput.put("_s",'s');
        twoCharacterInputToKnownOutput.put("Dθ",'θ');
        twoCharacterInputToKnownOutput.put("_t",'t');
        twoCharacterInputToKnownOutput.put("]²",'²');
        twoCharacterInputToKnownOutput.put("_v",'v');
        twoCharacterInputToKnownOutput.put("_x",'x');
        twoCharacterInputToKnownOutput.put("]¹",'¹');
        twoCharacterInputToKnownOutput.put("a>",'>');
        twoCharacterInputToKnownOutput.put("_|",'|');
        twoCharacterInputToKnownOutput.put("大<",' ');
        twoCharacterInputToKnownOutput.put("b!",'!');
        twoCharacterInputToKnownOutput.put("b\"",'\"');
        twoCharacterInputToKnownOutput.put("aA",'A');
        twoCharacterInputToKnownOutput.put("Zě",'ě');
        twoCharacterInputToKnownOutput.put("`a",'a');
        twoCharacterInputToKnownOutput.put("b(",'(');
        twoCharacterInputToKnownOutput.put("b*",'*');
        twoCharacterInputToKnownOutput.put("b+",'+');
        twoCharacterInputToKnownOutput.put("aK",'K');
        twoCharacterInputToKnownOutput.put("aL",'L');
        twoCharacterInputToKnownOutput.put("`l",'l');
        twoCharacterInputToKnownOutput.put("aP",'P');
        twoCharacterInputToKnownOutput.put("`s",'s');
        twoCharacterInputToKnownOutput.put("aT",'T');
        twoCharacterInputToKnownOutput.put("aU",'U');
        twoCharacterInputToKnownOutput.put("b6",'6');
        twoCharacterInputToKnownOutput.put("aV",'V');
        twoCharacterInputToKnownOutput.put("aX",'X');
        twoCharacterInputToKnownOutput.put("b:",':');
        twoCharacterInputToKnownOutput.put("b>",'>');
        twoCharacterInputToKnownOutput.put("a]",']');
        twoCharacterInputToKnownOutput.put("a_",'_');
        twoCharacterInputToKnownOutput.put("c!",'!');
        twoCharacterInputToKnownOutput.put("bA",'A');
        twoCharacterInputToKnownOutput.put("c\"",'\"');
        twoCharacterInputToKnownOutput.put("^½",'½');
        twoCharacterInputToKnownOutput.put("bB",'B');
        twoCharacterInputToKnownOutput.put("bC",'C');
        twoCharacterInputToKnownOutput.put("考试",'试');
        twoCharacterInputToKnownOutput.put("bH",'H');
        twoCharacterInputToKnownOutput.put("c+",'+');
        twoCharacterInputToKnownOutput.put("Zł",'ł');
        twoCharacterInputToKnownOutput.put("部 ",' ');
        twoCharacterInputToKnownOutput.put("bL",'L');
        twoCharacterInputToKnownOutput.put("bO",'O');
        twoCharacterInputToKnownOutput.put("c0",'0');
        twoCharacterInputToKnownOutput.put("c1",'1');
        twoCharacterInputToKnownOutput.put("bP",'P');
        twoCharacterInputToKnownOutput.put("c2",'2');
        twoCharacterInputToKnownOutput.put("bS",'S');
        twoCharacterInputToKnownOutput.put("_°",'°');
        twoCharacterInputToKnownOutput.put("bT",'T');
        twoCharacterInputToKnownOutput.put("bU",'U');
        twoCharacterInputToKnownOutput.put("bV",'V');
        twoCharacterInputToKnownOutput.put("Fλ",'λ');
        twoCharacterInputToKnownOutput.put("a{",'{');
        twoCharacterInputToKnownOutput.put("c>",'>');
        twoCharacterInputToKnownOutput.put("a}",'}');
        twoCharacterInputToKnownOutput.put("cA",'A');
        twoCharacterInputToKnownOutput.put("cB",'B');
        twoCharacterInputToKnownOutput.put("cD",'D');
        twoCharacterInputToKnownOutput.put("d&",'&');
        twoCharacterInputToKnownOutput.put("cG",'G');
        twoCharacterInputToKnownOutput.put("cI",'I');
        twoCharacterInputToKnownOutput.put("d+",'+');
        twoCharacterInputToKnownOutput.put("cK",'K');
        twoCharacterInputToKnownOutput.put("d0",'0');
        twoCharacterInputToKnownOutput.put("d1",'1');
        twoCharacterInputToKnownOutput.put("d2",'2');
        twoCharacterInputToKnownOutput.put("d4",'4');
        twoCharacterInputToKnownOutput.put("cS",'S');
        twoCharacterInputToKnownOutput.put("部(",'(');
        twoCharacterInputToKnownOutput.put("d6",'6');
        twoCharacterInputToKnownOutput.put("d7",'7');
        twoCharacterInputToKnownOutput.put("cW",'W');
        twoCharacterInputToKnownOutput.put("Wǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("b{",'{');
        twoCharacterInputToKnownOutput.put("c]",']');
        twoCharacterInputToKnownOutput.put("d>",'>');
        twoCharacterInputToKnownOutput.put("b|",'|');
        twoCharacterInputToKnownOutput.put("Wǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("b}",'}');
        twoCharacterInputToKnownOutput.put("c_",'h');
        twoCharacterInputToKnownOutput.put("Wǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("dA",'A');
        twoCharacterInputToKnownOutput.put("dB",'B');
        twoCharacterInputToKnownOutput.put("cb",'b');
        twoCharacterInputToKnownOutput.put("dF",'F');
        twoCharacterInputToKnownOutput.put("cf",'f');
        twoCharacterInputToKnownOutput.put("cg",'g');
        twoCharacterInputToKnownOutput.put("e+",'+');
        twoCharacterInputToKnownOutput.put("cj",'j');
        twoCharacterInputToKnownOutput.put("dM",'M');
        twoCharacterInputToKnownOutput.put("dP",'P');
        twoCharacterInputToKnownOutput.put("dQ",'Q');
        twoCharacterInputToKnownOutput.put("cp",'p');
        twoCharacterInputToKnownOutput.put("e3",'3');
        twoCharacterInputToKnownOutput.put("e4",'r');
        twoCharacterInputToKnownOutput.put("dS",' ');
        twoCharacterInputToKnownOutput.put("a±",'±');
        twoCharacterInputToKnownOutput.put("dU",'U');
        twoCharacterInputToKnownOutput.put("a³",'³');
        twoCharacterInputToKnownOutput.put("cv",'v');
        twoCharacterInputToKnownOutput.put("dW",'W');
        twoCharacterInputToKnownOutput.put("a´",'´');
        twoCharacterInputToKnownOutput.put("cw",'w');
        twoCharacterInputToKnownOutput.put("a·",'·');
        twoCharacterInputToKnownOutput.put("a¹",'¹');
        twoCharacterInputToKnownOutput.put("c|",'|');
        twoCharacterInputToKnownOutput.put("d^",'^');
        twoCharacterInputToKnownOutput.put("d_",'_');
        twoCharacterInputToKnownOutput.put("c~",'~');
        twoCharacterInputToKnownOutput.put("eA",'A');
        twoCharacterInputToKnownOutput.put("(장",'장');
        twoCharacterInputToKnownOutput.put("eC",'C');
        twoCharacterInputToKnownOutput.put("f*",'*');
        twoCharacterInputToKnownOutput.put("f+",'+');
        twoCharacterInputToKnownOutput.put("🔺",'?');
        twoCharacterInputToKnownOutput.put("eL",'L');
        twoCharacterInputToKnownOutput.put("eM",'M');
        twoCharacterInputToKnownOutput.put("eO",'O');
        twoCharacterInputToKnownOutput.put("o：",'：');
        twoCharacterInputToKnownOutput.put("f1",'1');
        twoCharacterInputToKnownOutput.put("f2",'2');
        twoCharacterInputToKnownOutput.put("eS",'S');
        twoCharacterInputToKnownOutput.put("f4",'4');
        twoCharacterInputToKnownOutput.put("f5",'5');
        twoCharacterInputToKnownOutput.put("f6",'6');
        twoCharacterInputToKnownOutput.put("b²",'²');
        twoCharacterInputToKnownOutput.put("f7",'7');
        twoCharacterInputToKnownOutput.put("eV",'V');
        twoCharacterInputToKnownOutput.put("b³",'³');
        twoCharacterInputToKnownOutput.put("eW",'W');
        twoCharacterInputToKnownOutput.put("b·",'·');
        twoCharacterInputToKnownOutput.put("e[",'[');
        twoCharacterInputToKnownOutput.put("a×",'×');
        twoCharacterInputToKnownOutput.put("b¹",'¹');
        twoCharacterInputToKnownOutput.put("e\\",'\\');
        twoCharacterInputToKnownOutput.put("민주",'주');
        twoCharacterInputToKnownOutput.put("Yǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("e_",'_');
        twoCharacterInputToKnownOutput.put("fA",'A');
        twoCharacterInputToKnownOutput.put("e`",'`');
        twoCharacterInputToKnownOutput.put("➡ ",'i');
        twoCharacterInputToKnownOutput.put("Yǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("fB",'B');
        twoCharacterInputToKnownOutput.put("Iω",'ω');
        twoCharacterInputToKnownOutput.put("fJ",'J');
        twoCharacterInputToKnownOutput.put("g+",'+');
        twoCharacterInputToKnownOutput.put("ژ<",' ');
        twoCharacterInputToKnownOutput.put("g2",'2');
        twoCharacterInputToKnownOutput.put("g3",'3');
        twoCharacterInputToKnownOutput.put("g4",'4');
        twoCharacterInputToKnownOutput.put("c°",'°');
        twoCharacterInputToKnownOutput.put("Zǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("b×",'×');
        twoCharacterInputToKnownOutput.put("f[",'[');
        twoCharacterInputToKnownOutput.put("g=",'=');
        twoCharacterInputToKnownOutput.put("f]",']');
        twoCharacterInputToKnownOutput.put("e}",'a');
        twoCharacterInputToKnownOutput.put("f_",'_');
        twoCharacterInputToKnownOutput.put("aú",'ú');
        twoCharacterInputToKnownOutput.put("f`",'`');
        twoCharacterInputToKnownOutput.put("gB",'B');
        twoCharacterInputToKnownOutput.put("fd",'d');
        twoCharacterInputToKnownOutput.put("bà",'à');
        twoCharacterInputToKnownOutput.put("h&",'&');
        twoCharacterInputToKnownOutput.put("bá",'á');
        twoCharacterInputToKnownOutput.put("bâ",'â');
        twoCharacterInputToKnownOutput.put("h*",'*');
        twoCharacterInputToKnownOutput.put("gI",'I');
        twoCharacterInputToKnownOutput.put("fj",'j');
        twoCharacterInputToKnownOutput.put("ać",'ć');
        twoCharacterInputToKnownOutput.put("bè",'è');
        twoCharacterInputToKnownOutput.put("gN",'N');
        twoCharacterInputToKnownOutput.put("gO",'O');
        twoCharacterInputToKnownOutput.put("h1",'1');
        twoCharacterInputToKnownOutput.put("⅓π",'π');
        twoCharacterInputToKnownOutput.put("gP",'P');
        twoCharacterInputToKnownOutput.put("fp",'p');
        twoCharacterInputToKnownOutput.put("bì",'ì');
        twoCharacterInputToKnownOutput.put("h2",'2');
        twoCharacterInputToKnownOutput.put("gS",'S');
        twoCharacterInputToKnownOutput.put("h4",'4');
        twoCharacterInputToKnownOutput.put("h5",'5');
        twoCharacterInputToKnownOutput.put("h6",'6');
        twoCharacterInputToKnownOutput.put("d²",'²');
        twoCharacterInputToKnownOutput.put("d³",'³');
        twoCharacterInputToKnownOutput.put("h8",'8');
        twoCharacterInputToKnownOutput.put("fv",'v');
        twoCharacterInputToKnownOutput.put("h;",';');
        twoCharacterInputToKnownOutput.put("g[",'[');
        twoCharacterInputToKnownOutput.put("d¹",'¹');
        twoCharacterInputToKnownOutput.put("h=",'=');
        twoCharacterInputToKnownOutput.put("f|",'|');
        twoCharacterInputToKnownOutput.put("g^",'^');
        twoCharacterInputToKnownOutput.put("bù",'ù');
        twoCharacterInputToKnownOutput.put("i!",'!');
        twoCharacterInputToKnownOutput.put("g_",'_');
        twoCharacterInputToKnownOutput.put("g`",'`');
        twoCharacterInputToKnownOutput.put("e ",' ');
        twoCharacterInputToKnownOutput.put("i%",'%');
        twoCharacterInputToKnownOutput.put("hD",'D');
        twoCharacterInputToKnownOutput.put("câ",'â');
        twoCharacterInputToKnownOutput.put("i*",'*');
        twoCharacterInputToKnownOutput.put("i+",'+');
        twoCharacterInputToKnownOutput.put("bą",'ą');
        twoCharacterInputToKnownOutput.put("gj",'j');
        twoCharacterInputToKnownOutput.put("cê",'ê');
        twoCharacterInputToKnownOutput.put("i1",'1');
        twoCharacterInputToKnownOutput.put("gp",'p');
        twoCharacterInputToKnownOutput.put("i2",'2');
        twoCharacterInputToKnownOutput.put("i3",'3');
        twoCharacterInputToKnownOutput.put("gq",'q');
        twoCharacterInputToKnownOutput.put("e¯",'d');
        twoCharacterInputToKnownOutput.put("i4",'4');
        twoCharacterInputToKnownOutput.put("hT",'T');
        twoCharacterInputToKnownOutput.put("(정",'정');
        twoCharacterInputToKnownOutput.put("gv",'v');
        twoCharacterInputToKnownOutput.put("e´",'´');
        twoCharacterInputToKnownOutput.put("hW",'W');
        twoCharacterInputToKnownOutput.put("i:",':');
        twoCharacterInputToKnownOutput.put("i;",';');
        twoCharacterInputToKnownOutput.put("i=",'=');
        twoCharacterInputToKnownOutput.put("h\\",'e');
        twoCharacterInputToKnownOutput.put("^ƒ",'ƒ');
        twoCharacterInputToKnownOutput.put("i>",'>');
        twoCharacterInputToKnownOutput.put("h]",' ');
        twoCharacterInputToKnownOutput.put("h^",'^');
        twoCharacterInputToKnownOutput.put("bę",'ę');
        twoCharacterInputToKnownOutput.put("h_",'_');
        twoCharacterInputToKnownOutput.put("j!",'!');
        twoCharacterInputToKnownOutput.put("cú",'ú');
        twoCharacterInputToKnownOutput.put("土<",' ');
        twoCharacterInputToKnownOutput.put("iA",'A');
        twoCharacterInputToKnownOutput.put("j\"",'\"');
        twoCharacterInputToKnownOutput.put("iB",'B');
        twoCharacterInputToKnownOutput.put("bě",'ě');
        twoCharacterInputToKnownOutput.put("iE",'E');
        twoCharacterInputToKnownOutput.put("dà",'à');
        twoCharacterInputToKnownOutput.put("iF",'F');
        twoCharacterInputToKnownOutput.put("dá",'á');
        twoCharacterInputToKnownOutput.put("j(",'(');
        twoCharacterInputToKnownOutput.put("iH",'H');
        twoCharacterInputToKnownOutput.put("hh",'h');
        twoCharacterInputToKnownOutput.put("j+",'+');
        twoCharacterInputToKnownOutput.put("cą",'ą');
        twoCharacterInputToKnownOutput.put("j,",',');
        twoCharacterInputToKnownOutput.put("ań",'ń');
        twoCharacterInputToKnownOutput.put("j-",'-');
        twoCharacterInputToKnownOutput.put("j.",'.');
        twoCharacterInputToKnownOutput.put("dè",'è');
        twoCharacterInputToKnownOutput.put("j/",'/');
        twoCharacterInputToKnownOutput.put("iN",'N');
        twoCharacterInputToKnownOutput.put("dì",'ì');
        twoCharacterInputToKnownOutput.put("bī",'ī');
        twoCharacterInputToKnownOutput.put("iR",'R');
        twoCharacterInputToKnownOutput.put("iS",'S');
        twoCharacterInputToKnownOutput.put("f°",'°');
        twoCharacterInputToKnownOutput.put("iV",'V');
        twoCharacterInputToKnownOutput.put("f³",'³');
        twoCharacterInputToKnownOutput.put("hv",'v');
        twoCharacterInputToKnownOutput.put("hx",'x');
        twoCharacterInputToKnownOutput.put("j;",';');
        twoCharacterInputToKnownOutput.put("f¹",'¹');
        twoCharacterInputToKnownOutput.put("j=",'=');
        twoCharacterInputToKnownOutput.put("h|",'|');
        twoCharacterInputToKnownOutput.put("i]",']');
        twoCharacterInputToKnownOutput.put("dø",'ø');
        twoCharacterInputToKnownOutput.put("h}",'}');
        twoCharacterInputToKnownOutput.put("j?",' ');
        twoCharacterInputToKnownOutput.put("dú",'ú');
        twoCharacterInputToKnownOutput.put("NΦ",' ');
        twoCharacterInputToKnownOutput.put("aś",'ś');
        twoCharacterInputToKnownOutput.put("k*",'*');
        twoCharacterInputToKnownOutput.put("k+",'+');
        twoCharacterInputToKnownOutput.put("bł",'ł');
        twoCharacterInputToKnownOutput.put("dą",'ą');
        twoCharacterInputToKnownOutput.put("eé",'é');
        twoCharacterInputToKnownOutput.put("t；",'；');
        twoCharacterInputToKnownOutput.put("k1",'1');
        twoCharacterInputToKnownOutput.put("k2",'2');
        twoCharacterInputToKnownOutput.put("g°",'°');
        twoCharacterInputToKnownOutput.put("g²",'²');
        twoCharacterInputToKnownOutput.put("jU",'U');
        twoCharacterInputToKnownOutput.put("eó",'ó');
        twoCharacterInputToKnownOutput.put("k>",'>');
        twoCharacterInputToKnownOutput.put("dę",'ę');
        twoCharacterInputToKnownOutput.put("j_",'_');
        twoCharacterInputToKnownOutput.put("kA",'A');
        twoCharacterInputToKnownOutput.put("dě",'ě');
        twoCharacterInputToKnownOutput.put("jb",'b');
        twoCharacterInputToKnownOutput.put("kC",'e');
        twoCharacterInputToKnownOutput.put("aź",'ź');
        twoCharacterInputToKnownOutput.put("jd",'d');
        twoCharacterInputToKnownOutput.put("l&",'&');
        twoCharacterInputToKnownOutput.put("aż",'ż');
        twoCharacterInputToKnownOutput.put("kF",'F');
        twoCharacterInputToKnownOutput.put("jf",'f');
        twoCharacterInputToKnownOutput.put("kH",'H');
        twoCharacterInputToKnownOutput.put("jg",'g');
        twoCharacterInputToKnownOutput.put("l*",'*');
        twoCharacterInputToKnownOutput.put("kJ",'J');
        twoCharacterInputToKnownOutput.put("jj",'j');
        twoCharacterInputToKnownOutput.put("jk",'k');
        twoCharacterInputToKnownOutput.put("kL",'L');
        twoCharacterInputToKnownOutput.put("eć",'ć');
        twoCharacterInputToKnownOutput.put("fè",'è');
        twoCharacterInputToKnownOutput.put("jm",'m');
        twoCharacterInputToKnownOutput.put("jn",'n');
        twoCharacterInputToKnownOutput.put("kP",'P');
        twoCharacterInputToKnownOutput.put("kQ",'Q');
        twoCharacterInputToKnownOutput.put("jp",'p');
        twoCharacterInputToKnownOutput.put("l3",'3');
        twoCharacterInputToKnownOutput.put("dī",'ī');
        twoCharacterInputToKnownOutput.put("jr",'r');
        twoCharacterInputToKnownOutput.put("h±",'±');
        twoCharacterInputToKnownOutput.put("l5",'5');
        twoCharacterInputToKnownOutput.put("h²",'²');
        twoCharacterInputToKnownOutput.put("l6",'6');
        twoCharacterInputToKnownOutput.put("jw",'w');
        twoCharacterInputToKnownOutput.put("cœ",'œ');
        twoCharacterInputToKnownOutput.put("k[",'[');
        twoCharacterInputToKnownOutput.put("fö",'ö');
        twoCharacterInputToKnownOutput.put("l>",'>');
        twoCharacterInputToKnownOutput.put("k]",']');
        twoCharacterInputToKnownOutput.put("k^",'^');
        twoCharacterInputToKnownOutput.put("fù",'ù');
        twoCharacterInputToKnownOutput.put(">ב",'ב');
        twoCharacterInputToKnownOutput.put("k_",'_');
        twoCharacterInputToKnownOutput.put("lA",'A');
        twoCharacterInputToKnownOutput.put("lB",'B');
        twoCharacterInputToKnownOutput.put(">ה",'ה');
        twoCharacterInputToKnownOutput.put("lC",'N');
        twoCharacterInputToKnownOutput.put("m&",'s');
        twoCharacterInputToKnownOutput.put(">ח",'ח');
        twoCharacterInputToKnownOutput.put(">י",'י');
        twoCharacterInputToKnownOutput.put(">כ",'כ');
        twoCharacterInputToKnownOutput.put("lI",'I');
        twoCharacterInputToKnownOutput.put("m+",'+');
        twoCharacterInputToKnownOutput.put(">ל",'ל');
        twoCharacterInputToKnownOutput.put(">נ",'נ');
        twoCharacterInputToKnownOutput.put("gê",'ê');
        twoCharacterInputToKnownOutput.put("lP",'P');
        twoCharacterInputToKnownOutput.put("lR",'R');
        twoCharacterInputToKnownOutput.put("kq",'q');
        twoCharacterInputToKnownOutput.put("m3",'3');
        twoCharacterInputToKnownOutput.put("i³",'³');
        twoCharacterInputToKnownOutput.put("kv",'v');
        twoCharacterInputToKnownOutput.put("gó",'ó');
        twoCharacterInputToKnownOutput.put(">ת",'ְ');
        twoCharacterInputToKnownOutput.put("fē",'ē');
        twoCharacterInputToKnownOutput.put("m;",';');
        twoCharacterInputToKnownOutput.put("kz",'z');
        twoCharacterInputToKnownOutput.put("h×",'×');
        twoCharacterInputToKnownOutput.put("gö",'ö');
        twoCharacterInputToKnownOutput.put("l]",']');
        twoCharacterInputToKnownOutput.put("m>",'>');
        twoCharacterInputToKnownOutput.put("gù",'ù');
        twoCharacterInputToKnownOutput.put("k}",'}');
        twoCharacterInputToKnownOutput.put("l^",'^');
        twoCharacterInputToKnownOutput.put("gú",'ú');
        twoCharacterInputToKnownOutput.put("l_",'_');
        twoCharacterInputToKnownOutput.put("mA",'s');
        twoCharacterInputToKnownOutput.put("?ה",'e');
        twoCharacterInputToKnownOutput.put("mB",'B');
        twoCharacterInputToKnownOutput.put("?ז",'ז');
        twoCharacterInputToKnownOutput.put("hà",'à');
        twoCharacterInputToKnownOutput.put("mE",'E');
        twoCharacterInputToKnownOutput.put("mF",'F');
        twoCharacterInputToKnownOutput.put("?כ",'כ');
        twoCharacterInputToKnownOutput.put("?ל",'ל');
        twoCharacterInputToKnownOutput.put("lj",'j');
        twoCharacterInputToKnownOutput.put("头(",'(');
        twoCharacterInputToKnownOutput.put("?מ",'מ');
        twoCharacterInputToKnownOutput.put("hê",'ê');
        twoCharacterInputToKnownOutput.put("mP",'P');
        twoCharacterInputToKnownOutput.put("hì",'ì');
        twoCharacterInputToKnownOutput.put("mR",'R');
        twoCharacterInputToKnownOutput.put("n4",'4');
        twoCharacterInputToKnownOutput.put("hò",'ò');
        twoCharacterInputToKnownOutput.put("gē",'ē');
        twoCharacterInputToKnownOutput.put("m[",'[');
        twoCharacterInputToKnownOutput.put("n>",'>');
        twoCharacterInputToKnownOutput.put("m]",']');
        twoCharacterInputToKnownOutput.put("hù",'ù');
        twoCharacterInputToKnownOutput.put("gę",'ę');
        twoCharacterInputToKnownOutput.put("gě",'ě');
        twoCharacterInputToKnownOutput.put("nC",'C');
        twoCharacterInputToKnownOutput.put("dź",'ź');
        twoCharacterInputToKnownOutput.put("ià",'à');
        twoCharacterInputToKnownOutput.put("dż",'ż');
        twoCharacterInputToKnownOutput.put("iá",'á');
        twoCharacterInputToKnownOutput.put("nG",'G');
        twoCharacterInputToKnownOutput.put("nH",'H');
        twoCharacterInputToKnownOutput.put("nI",'I');
        twoCharacterInputToKnownOutput.put("mh",'h');
        twoCharacterInputToKnownOutput.put("o+",'+');
        twoCharacterInputToKnownOutput.put("mj",'j');
        twoCharacterInputToKnownOutput.put("Rα",'α');
        twoCharacterInputToKnownOutput.put("nM",'M');
        twoCharacterInputToKnownOutput.put("nN",'(');
        twoCharacterInputToKnownOutput.put("nO",'O');
        twoCharacterInputToKnownOutput.put("o0",'0');
        twoCharacterInputToKnownOutput.put("nP",'P');
        twoCharacterInputToKnownOutput.put("o2",'2');
        twoCharacterInputToKnownOutput.put("o4",'4');
        twoCharacterInputToKnownOutput.put("nS",'S');
        twoCharacterInputToKnownOutput.put("nT",'T');
        twoCharacterInputToKnownOutput.put("k±",'±');
        twoCharacterInputToKnownOutput.put("Rθ",'θ');
        twoCharacterInputToKnownOutput.put("k²",'²');
        twoCharacterInputToKnownOutput.put("nV",'V');
        twoCharacterInputToKnownOutput.put("mx",'x');
        twoCharacterInputToKnownOutput.put("hē",'ē');
        twoCharacterInputToKnownOutput.put("bǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("iö",'ö');
        twoCharacterInputToKnownOutput.put("iù",'ù');
        twoCharacterInputToKnownOutput.put("n_",'_');
        twoCharacterInputToKnownOutput.put("iú",'ú');
        twoCharacterInputToKnownOutput.put("n`",'`');
        twoCharacterInputToKnownOutput.put("hě",'ě');
        twoCharacterInputToKnownOutput.put("eź",'ź');

    }

    private void initialiseTwoCharacterInputToKnownOutputSecondHalf(){
        twoCharacterInputToKnownOutput.put("音机",'机');
        twoCharacterInputToKnownOutput.put("eż",'ż');
        twoCharacterInputToKnownOutput.put("Rω",'ω');
        twoCharacterInputToKnownOutput.put("oF",'F');
        twoCharacterInputToKnownOutput.put("p+",'+');
        twoCharacterInputToKnownOutput.put("影（",'（');
        twoCharacterInputToKnownOutput.put("ią",'ą');
        twoCharacterInputToKnownOutput.put("oL",'L');
        twoCharacterInputToKnownOutput.put("jé",'é');
        twoCharacterInputToKnownOutput.put("oN",'N');
        twoCharacterInputToKnownOutput.put("oP",'P');
        twoCharacterInputToKnownOutput.put("jì",'ì');
        twoCharacterInputToKnownOutput.put("hī",'ī');
        twoCharacterInputToKnownOutput.put("jí",'í');
        twoCharacterInputToKnownOutput.put("oS",'o');
        twoCharacterInputToKnownOutput.put("p4",'4');
        twoCharacterInputToKnownOutput.put("fū",'ū');
        twoCharacterInputToKnownOutput.put("p5",'5');
        twoCharacterInputToKnownOutput.put("p6",'6');
        twoCharacterInputToKnownOutput.put("l²",'²');
        twoCharacterInputToKnownOutput.put("oV",'V');
        twoCharacterInputToKnownOutput.put("l³",'³');
        twoCharacterInputToKnownOutput.put("oW",'W');
        twoCharacterInputToKnownOutput.put("jó",'ó');
        twoCharacterInputToKnownOutput.put(">و",'s');
        twoCharacterInputToKnownOutput.put("p;",';');
        twoCharacterInputToKnownOutput.put("l·",'·');
        twoCharacterInputToKnownOutput.put("p>",'>');
        twoCharacterInputToKnownOutput.put("n|",'|');
        twoCharacterInputToKnownOutput.put("o^",'^');
        twoCharacterInputToKnownOutput.put("o_",'_');
        twoCharacterInputToKnownOutput.put("节 ",' ');
        twoCharacterInputToKnownOutput.put("iě",'ě');
        twoCharacterInputToKnownOutput.put("kà",'à');
        twoCharacterInputToKnownOutput.put("q\'",'\'');
        twoCharacterInputToKnownOutput.put("q(",'(');
        twoCharacterInputToKnownOutput.put("q+",'+');
        twoCharacterInputToKnownOutput.put("ją",'ą');
        twoCharacterInputToKnownOutput.put("q,",',');
        twoCharacterInputToKnownOutput.put("q-",'-');
        twoCharacterInputToKnownOutput.put("q.",'.');
        twoCharacterInputToKnownOutput.put("kè",'è');
        twoCharacterInputToKnownOutput.put("心电",'电');
        twoCharacterInputToKnownOutput.put("ké",'é');
        twoCharacterInputToKnownOutput.put("pO",'O');
        twoCharacterInputToKnownOutput.put("q1",'1');
        twoCharacterInputToKnownOutput.put("q2",'2');
        twoCharacterInputToKnownOutput.put("pT",'T');
        twoCharacterInputToKnownOutput.put("m²",'²');
        twoCharacterInputToKnownOutput.put("m³",'³');
        twoCharacterInputToKnownOutput.put("kò",'ò');
        twoCharacterInputToKnownOutput.put("kó",'ó');
        twoCharacterInputToKnownOutput.put("dǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("m·",'·');
        twoCharacterInputToKnownOutput.put("q;",';');
        twoCharacterInputToKnownOutput.put("q<",' ');
        twoCharacterInputToKnownOutput.put("p[",'[');
        twoCharacterInputToKnownOutput.put("蚤 ",' ');
        twoCharacterInputToKnownOutput.put("q=",'=');
        twoCharacterInputToKnownOutput.put("p]",']');
        twoCharacterInputToKnownOutput.put("p^",'^');
        twoCharacterInputToKnownOutput.put("q?",'?');
        twoCharacterInputToKnownOutput.put("dǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("p_",'_');
        twoCharacterInputToKnownOutput.put("hś",'ś');
        twoCharacterInputToKnownOutput.put("là",'à');
        twoCharacterInputToKnownOutput.put("r&",'&');
        twoCharacterInputToKnownOutput.put("qE",'E');
        twoCharacterInputToKnownOutput.put("节<",' ');
        twoCharacterInputToKnownOutput.put("lâ",'â');
        twoCharacterInputToKnownOutput.put("r*",'*');
        twoCharacterInputToKnownOutput.put("r+",'+');
        twoCharacterInputToKnownOutput.put("ką",'ą');
        twoCharacterInputToKnownOutput.put("r1",'1');
        twoCharacterInputToKnownOutput.put("lì",'ì');
        twoCharacterInputToKnownOutput.put("jī",'ī');
        twoCharacterInputToKnownOutput.put("r4",'4');
        twoCharacterInputToKnownOutput.put("n°",'°');
        twoCharacterInputToKnownOutput.put("r5",'5');
        twoCharacterInputToKnownOutput.put("n³",'³');
        twoCharacterInputToKnownOutput.put("kē",'ē');
        twoCharacterInputToKnownOutput.put("px",'(');
        twoCharacterInputToKnownOutput.put("p|",'|');
        twoCharacterInputToKnownOutput.put("lù",'ù');
        twoCharacterInputToKnownOutput.put("n½",'½');
        twoCharacterInputToKnownOutput.put("qa",'a');
        twoCharacterInputToKnownOutput.put("rC",'C');
        twoCharacterInputToKnownOutput.put("qb",'b');
        twoCharacterInputToKnownOutput.put("mà",'à');
        twoCharacterInputToKnownOutput.put("rF",'F');
        twoCharacterInputToKnownOutput.put("mâ",'â');
        twoCharacterInputToKnownOutput.put("rI",'I');
        twoCharacterInputToKnownOutput.put("qi",'i');
        twoCharacterInputToKnownOutput.put("lą",'ą');
        twoCharacterInputToKnownOutput.put("qj",'j');
        twoCharacterInputToKnownOutput.put("rL",'L');
        twoCharacterInputToKnownOutput.put("s0",'0');
        twoCharacterInputToKnownOutput.put("rO",'O');
        twoCharacterInputToKnownOutput.put("s1",'1');
        twoCharacterInputToKnownOutput.put("rP",'P');
        twoCharacterInputToKnownOutput.put("rQ",'R');
        twoCharacterInputToKnownOutput.put("rR",'R');
        twoCharacterInputToKnownOutput.put("rS",'S');
        twoCharacterInputToKnownOutput.put("iū",'ū');
        twoCharacterInputToKnownOutput.put("qt",'t');
        twoCharacterInputToKnownOutput.put("s7",'7');
        twoCharacterInputToKnownOutput.put("fǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("n×",'×');
        twoCharacterInputToKnownOutput.put("r\\",'u');
        twoCharacterInputToKnownOutput.put("r]",']');
        twoCharacterInputToKnownOutput.put("s>",'>');
        twoCharacterInputToKnownOutput.put("r^",'^');
        twoCharacterInputToKnownOutput.put("r_",'_');
        twoCharacterInputToKnownOutput.put("lę",'ę');
        twoCharacterInputToKnownOutput.put("r`",'`');
        twoCharacterInputToKnownOutput.put("mû",'û');
        twoCharacterInputToKnownOutput.put("lě",'ě');
        twoCharacterInputToKnownOutput.put("sC",'C');
        twoCharacterInputToKnownOutput.put("jś",'ś');
        twoCharacterInputToKnownOutput.put("nà",'à');
        twoCharacterInputToKnownOutput.put("t&",'&');
        twoCharacterInputToKnownOutput.put("sE",'j');
        twoCharacterInputToKnownOutput.put("ná",'á');
        twoCharacterInputToKnownOutput.put("iż",'ż');
        twoCharacterInputToKnownOutput.put("sF",'F');
        twoCharacterInputToKnownOutput.put("sH",')');
        twoCharacterInputToKnownOutput.put("kł",'ł');
        twoCharacterInputToKnownOutput.put("t+",'+');
        twoCharacterInputToKnownOutput.put("mą",'ą');
        twoCharacterInputToKnownOutput.put("nè",'è');
        twoCharacterInputToKnownOutput.put("sO",'O');
        twoCharacterInputToKnownOutput.put("t1",'1');
        twoCharacterInputToKnownOutput.put("sP",'P');
        twoCharacterInputToKnownOutput.put("t2",'2');
        twoCharacterInputToKnownOutput.put("t3",'3');
        twoCharacterInputToKnownOutput.put("sS",'t');
        twoCharacterInputToKnownOutput.put("sU",'U');
        twoCharacterInputToKnownOutput.put("sV",'p');
        twoCharacterInputToKnownOutput.put("t7",'7');
        twoCharacterInputToKnownOutput.put("sX",'M');
        twoCharacterInputToKnownOutput.put("gǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("p¹",'¹');
        twoCharacterInputToKnownOutput.put("r|",'|');
        twoCharacterInputToKnownOutput.put("nø",'ø');
        twoCharacterInputToKnownOutput.put("nù",'ù');
        twoCharacterInputToKnownOutput.put("r}",'}');
        twoCharacterInputToKnownOutput.put("s_",'_');
        twoCharacterInputToKnownOutput.put("u!",'!');
        twoCharacterInputToKnownOutput.put("u\"",'\"');
        twoCharacterInputToKnownOutput.put("s`",'`');
        twoCharacterInputToKnownOutput.put("gǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("tB",'B');
        twoCharacterInputToKnownOutput.put("tC",'C');
        twoCharacterInputToKnownOutput.put("u(",'(');
        twoCharacterInputToKnownOutput.put("u*",'*');
        twoCharacterInputToKnownOutput.put("u+",'+');
        twoCharacterInputToKnownOutput.put("ną",'ą');
        twoCharacterInputToKnownOutput.put("oè",'è');
        twoCharacterInputToKnownOutput.put("tO",'O');
        twoCharacterInputToKnownOutput.put("u1",'1');
        twoCharacterInputToKnownOutput.put("oì",'o');
        twoCharacterInputToKnownOutput.put("u3",'3');
        twoCharacterInputToKnownOutput.put("mī",'ī');
        twoCharacterInputToKnownOutput.put("tR",'R');
        twoCharacterInputToKnownOutput.put("u4",'4');
        twoCharacterInputToKnownOutput.put("tT",'T');
        twoCharacterInputToKnownOutput.put("oï",'ï');
        twoCharacterInputToKnownOutput.put("q²",'²');
        twoCharacterInputToKnownOutput.put("q³",'³');
        twoCharacterInputToKnownOutput.put("tV",' ');
        twoCharacterInputToKnownOutput.put("tX",'X');
        twoCharacterInputToKnownOutput.put("sx",'x');
        twoCharacterInputToKnownOutput.put("tY",'Y');
        twoCharacterInputToKnownOutput.put("u;",';');
        twoCharacterInputToKnownOutput.put("hǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("q·",'·');
        twoCharacterInputToKnownOutput.put("t[",'[');
        twoCharacterInputToKnownOutput.put("u=",'=');
        twoCharacterInputToKnownOutput.put("s{",'{');
        twoCharacterInputToKnownOutput.put("t^",'^');
        twoCharacterInputToKnownOutput.put("hǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("nę",'ę');
        twoCharacterInputToKnownOutput.put("v!",'!');
        twoCharacterInputToKnownOutput.put("hǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("t`",'`');
        twoCharacterInputToKnownOutput.put("v\"",'\"');
        twoCharacterInputToKnownOutput.put("pà",'à');
        twoCharacterInputToKnownOutput.put("uF",'F');
        twoCharacterInputToKnownOutput.put("v+",'+');
        twoCharacterInputToKnownOutput.put("mł",'ł');
        twoCharacterInputToKnownOutput.put("v-",'-');
        twoCharacterInputToKnownOutput.put("uN",'N');
        twoCharacterInputToKnownOutput.put("v0",'0');
        twoCharacterInputToKnownOutput.put("uO",'O');
        twoCharacterInputToKnownOutput.put("uP",'d');
        twoCharacterInputToKnownOutput.put("v1",'1');
        twoCharacterInputToKnownOutput.put("v2",'2');
        twoCharacterInputToKnownOutput.put("pì",'ì');
        twoCharacterInputToKnownOutput.put("nī",' ');
        twoCharacterInputToKnownOutput.put("tq",'q');
        twoCharacterInputToKnownOutput.put("uS",'S');
        twoCharacterInputToKnownOutput.put("v6",'i');
        twoCharacterInputToKnownOutput.put("r³",'³');
        twoCharacterInputToKnownOutput.put("pò",'ò');
        twoCharacterInputToKnownOutput.put("tx",'x');
        twoCharacterInputToKnownOutput.put("pô",'ô');
        twoCharacterInputToKnownOutput.put("v:",':');
        twoCharacterInputToKnownOutput.put("v;",';');
        twoCharacterInputToKnownOutput.put("iǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("v=",'=');
        twoCharacterInputToKnownOutput.put("u\\",'\\');
        twoCharacterInputToKnownOutput.put("u]",']');
        twoCharacterInputToKnownOutput.put("iǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("vB",'B');
        twoCharacterInputToKnownOutput.put("w(",'(');
        twoCharacterInputToKnownOutput.put("건걸",'걸');
        twoCharacterInputToKnownOutput.put("w+",'+');
        twoCharacterInputToKnownOutput.put("vN",'N');
        twoCharacterInputToKnownOutput.put("qì",'ì');
        twoCharacterInputToKnownOutput.put("w2",'2');
        twoCharacterInputToKnownOutput.put("vU",'U');
        twoCharacterInputToKnownOutput.put("s³",'³');
        twoCharacterInputToKnownOutput.put("w:",':');
        twoCharacterInputToKnownOutput.put("w;",';');
        twoCharacterInputToKnownOutput.put("r×",'×');
        twoCharacterInputToKnownOutput.put("nœ",'œ');
        twoCharacterInputToKnownOutput.put("rØ",'Ø');
        twoCharacterInputToKnownOutput.put("s¹",'¹');
        twoCharacterInputToKnownOutput.put("w=",'=');
        twoCharacterInputToKnownOutput.put("v]",']');
        twoCharacterInputToKnownOutput.put("pę",'ę');
        twoCharacterInputToKnownOutput.put("v_",'_');
        twoCharacterInputToKnownOutput.put("vb",'b');
        twoCharacterInputToKnownOutput.put("x%",'%');
        twoCharacterInputToKnownOutput.put("vd",'d');
        twoCharacterInputToKnownOutput.put("rà",'à');
        twoCharacterInputToKnownOutput.put("x\'",'\'');
        twoCharacterInputToKnownOutput.put("x(",'(');
        twoCharacterInputToKnownOutput.put("râ",'â');
        twoCharacterInputToKnownOutput.put("vg",'g');
        twoCharacterInputToKnownOutput.put("x*",'*');
        twoCharacterInputToKnownOutput.put("vh",'h');
        twoCharacterInputToKnownOutput.put("wI",'I');
        twoCharacterInputToKnownOutput.put("oł",'ł');
        twoCharacterInputToKnownOutput.put("ک<",' ');
        twoCharacterInputToKnownOutput.put("oń",'ń');
        twoCharacterInputToKnownOutput.put("vk",'k');
        twoCharacterInputToKnownOutput.put("vm",'m');
        twoCharacterInputToKnownOutput.put("x0",'0');
        twoCharacterInputToKnownOutput.put("vn",'n');
        twoCharacterInputToKnownOutput.put("x2",'2');
        twoCharacterInputToKnownOutput.put("rì",'ì');
        twoCharacterInputToKnownOutput.put("vp",'p');
        twoCharacterInputToKnownOutput.put("x4",'4');
        twoCharacterInputToKnownOutput.put("x5",'5');
        twoCharacterInputToKnownOutput.put("x6",'6');
        twoCharacterInputToKnownOutput.put("x7",'7');
        twoCharacterInputToKnownOutput.put("vv",'v');
        twoCharacterInputToKnownOutput.put("rò",'ò');
        twoCharacterInputToKnownOutput.put("x8",'8');
        twoCharacterInputToKnownOutput.put("x9",'9');
        twoCharacterInputToKnownOutput.put("vw",'d');
        twoCharacterInputToKnownOutput.put("vx",'x');
        twoCharacterInputToKnownOutput.put("x;",';');
        twoCharacterInputToKnownOutput.put("kǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("s×",'×');
        twoCharacterInputToKnownOutput.put("x>",'>');
        twoCharacterInputToKnownOutput.put("v|",'|');
        twoCharacterInputToKnownOutput.put("rú",'ú');
        twoCharacterInputToKnownOutput.put("xA",'A');
        twoCharacterInputToKnownOutput.put("kǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("rû",'û');
        twoCharacterInputToKnownOutput.put("oś",'ś');
        twoCharacterInputToKnownOutput.put("y&",'m');
        twoCharacterInputToKnownOutput.put("nż",'ż');
        twoCharacterInputToKnownOutput.put("wg",'f');
        twoCharacterInputToKnownOutput.put("sã",'ã');
        twoCharacterInputToKnownOutput.put("pł",'ł');
        twoCharacterInputToKnownOutput.put("y+",'+');
        twoCharacterInputToKnownOutput.put("rą",'ą');
        twoCharacterInputToKnownOutput.put("rć",'ć');
        twoCharacterInputToKnownOutput.put("wm",'m');
        twoCharacterInputToKnownOutput.put("y1",'1');
        twoCharacterInputToKnownOutput.put("wp",'p');
        twoCharacterInputToKnownOutput.put("y2",'2');
        twoCharacterInputToKnownOutput.put("qī",'ī');
        twoCharacterInputToKnownOutput.put("y3",'3');
        twoCharacterInputToKnownOutput.put("xR",'r');
        twoCharacterInputToKnownOutput.put("y4",'4');
        twoCharacterInputToKnownOutput.put("u°",'°');
        twoCharacterInputToKnownOutput.put("u±",'±');
        twoCharacterInputToKnownOutput.put("xT",'T');
        twoCharacterInputToKnownOutput.put("y6",'6');
        twoCharacterInputToKnownOutput.put("xV",'V');
        twoCharacterInputToKnownOutput.put("y7",'7');
        twoCharacterInputToKnownOutput.put("xW",'W');
        twoCharacterInputToKnownOutput.put("ww",'w');
        twoCharacterInputToKnownOutput.put("rē",'ē');
        twoCharacterInputToKnownOutput.put("x[",'[');
        twoCharacterInputToKnownOutput.put("y>",'>');
        twoCharacterInputToKnownOutput.put("x]",']');
        twoCharacterInputToKnownOutput.put("sø",'ø');
        twoCharacterInputToKnownOutput.put("sù",'ù');
        twoCharacterInputToKnownOutput.put("z!",'!');
        twoCharacterInputToKnownOutput.put("rę",'ę');
        twoCharacterInputToKnownOutput.put("x_",'_');
        twoCharacterInputToKnownOutput.put("sú",'ú');
        twoCharacterInputToKnownOutput.put("sû",'û');
        twoCharacterInputToKnownOutput.put("tà",'à');
        twoCharacterInputToKnownOutput.put("xd",'d');
        twoCharacterInputToKnownOutput.put("yE",'h');
        twoCharacterInputToKnownOutput.put("oż",'ż');
        twoCharacterInputToKnownOutput.put("xf",'f');
        twoCharacterInputToKnownOutput.put("są",'ą');
        twoCharacterInputToKnownOutput.put("z0",'0');
        twoCharacterInputToKnownOutput.put("z1",'1');
        twoCharacterInputToKnownOutput.put("z2",'2');
        twoCharacterInputToKnownOutput.put("z3",'3');
        twoCharacterInputToKnownOutput.put("xq",'q');
        twoCharacterInputToKnownOutput.put("yT",' ');
        twoCharacterInputToKnownOutput.put("xs",'s');
        twoCharacterInputToKnownOutput.put("yV",'V');
        twoCharacterInputToKnownOutput.put("xv",'v');
        twoCharacterInputToKnownOutput.put("tò",'ò');
        twoCharacterInputToKnownOutput.put("xw",'m');
        twoCharacterInputToKnownOutput.put("xx",'i');
        twoCharacterInputToKnownOutput.put("z;",';');
        twoCharacterInputToKnownOutput.put("tö",'ö');
        twoCharacterInputToKnownOutput.put("xz",'z');
        twoCharacterInputToKnownOutput.put("v¹",'¹');
        twoCharacterInputToKnownOutput.put("z=",'=');
        twoCharacterInputToKnownOutput.put("y]",']');
        twoCharacterInputToKnownOutput.put("{ ",' ');
        twoCharacterInputToKnownOutput.put("y_",'_');
        twoCharacterInputToKnownOutput.put("sę",'ę');
        twoCharacterInputToKnownOutput.put("y`",'`');
        twoCharacterInputToKnownOutput.put("tû",'û');
        twoCharacterInputToKnownOutput.put("uà",'à');
        twoCharacterInputToKnownOutput.put("yk",'k');
        twoCharacterInputToKnownOutput.put("{.",'t');
        twoCharacterInputToKnownOutput.put("{0",'0');
        twoCharacterInputToKnownOutput.put("uì",'ì');
        twoCharacterInputToKnownOutput.put("{2",'2');
        twoCharacterInputToKnownOutput.put("{3",'m');
        twoCharacterInputToKnownOutput.put("w²",'²');
        twoCharacterInputToKnownOutput.put("zV",'V');
        twoCharacterInputToKnownOutput.put("w³",'³');
        twoCharacterInputToKnownOutput.put("uò",'ò');
        twoCharacterInputToKnownOutput.put("uó",'ó');
        twoCharacterInputToKnownOutput.put("yx",'x');
        twoCharacterInputToKnownOutput.put("nǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("yy",'a');
        twoCharacterInputToKnownOutput.put("w¹",'¹');
        twoCharacterInputToKnownOutput.put("z^",'^');
        twoCharacterInputToKnownOutput.put("tę",'ę');
        twoCharacterInputToKnownOutput.put("rś",'ś');
        twoCharacterInputToKnownOutput.put("zd",'d');
        twoCharacterInputToKnownOutput.put("vá",'á');
        twoCharacterInputToKnownOutput.put("{F",'F');
        twoCharacterInputToKnownOutput.put("zf",'f');
        twoCharacterInputToKnownOutput.put("|(",'(');
        twoCharacterInputToKnownOutput.put("nǚ",'ǚ');
        twoCharacterInputToKnownOutput.put("|)",')');
        twoCharacterInputToKnownOutput.put("zh",'h');
        twoCharacterInputToKnownOutput.put("vä",'ä');
        twoCharacterInputToKnownOutput.put("sł",'ł');
        twoCharacterInputToKnownOutput.put("|+",'+');
        twoCharacterInputToKnownOutput.put("zj",'j');
        twoCharacterInputToKnownOutput.put("|-",'-');
        twoCharacterInputToKnownOutput.put("vè",'è');
        twoCharacterInputToKnownOutput.put("{M",'v');
        twoCharacterInputToKnownOutput.put("uć",'ć');
        twoCharacterInputToKnownOutput.put("|/",'/');
        twoCharacterInputToKnownOutput.put("{O",'s');
        twoCharacterInputToKnownOutput.put("령<",' ');
        twoCharacterInputToKnownOutput.put("|2",'2');
        twoCharacterInputToKnownOutput.put("|3",'3');
        twoCharacterInputToKnownOutput.put("|4",'4');
        twoCharacterInputToKnownOutput.put("zr",'r');
        twoCharacterInputToKnownOutput.put("zs",'s');
        twoCharacterInputToKnownOutput.put("x³",'³');
        twoCharacterInputToKnownOutput.put("zv",'v');
        twoCharacterInputToKnownOutput.put("vó",'v');
        twoCharacterInputToKnownOutput.put("{[",'o');
        twoCharacterInputToKnownOutput.put("|=",'=');
        twoCharacterInputToKnownOutput.put("x¹",'¹');
        twoCharacterInputToKnownOutput.put("|>",'>');
        twoCharacterInputToKnownOutput.put("|A",'A');
        twoCharacterInputToKnownOutput.put("x¾",'¾');
        twoCharacterInputToKnownOutput.put("|B",'B');
        twoCharacterInputToKnownOutput.put("{b",'b');
        twoCharacterInputToKnownOutput.put("{c",'o');
        twoCharacterInputToKnownOutput.put("선거",'거');
        twoCharacterInputToKnownOutput.put("wà",'à');
        twoCharacterInputToKnownOutput.put("wá",'á');
        twoCharacterInputToKnownOutput.put("rż",'ż');
        twoCharacterInputToKnownOutput.put("{g",'g');
        twoCharacterInputToKnownOutput.put("相机",'机');
        twoCharacterInputToKnownOutput.put("{h",'h');
        twoCharacterInputToKnownOutput.put("}+",'+');
        twoCharacterInputToKnownOutput.put("{i",' ');
        twoCharacterInputToKnownOutput.put("|K",'K');
        twoCharacterInputToKnownOutput.put("wè",'è');
        twoCharacterInputToKnownOutput.put("}.",'.');
        twoCharacterInputToKnownOutput.put("}/",'/');
        twoCharacterInputToKnownOutput.put("wé",'é');
        twoCharacterInputToKnownOutput.put("{n",'n');
        twoCharacterInputToKnownOutput.put("{o",' ');
        twoCharacterInputToKnownOutput.put("|Q",'Q');
        twoCharacterInputToKnownOutput.put("uī",'ī');
        twoCharacterInputToKnownOutput.put("y²",'²');
        twoCharacterInputToKnownOutput.put("|V",'V');
        twoCharacterInputToKnownOutput.put("y³",'³');
        twoCharacterInputToKnownOutput.put("{w",'}');
        twoCharacterInputToKnownOutput.put("wó",'ó');
        twoCharacterInputToKnownOutput.put("|X",'X');
        twoCharacterInputToKnownOutput.put("{x",'x');
        twoCharacterInputToKnownOutput.put("|Z",'y');
        twoCharacterInputToKnownOutput.put("y¹",'¹');
        twoCharacterInputToKnownOutput.put("}=",'=');
        twoCharacterInputToKnownOutput.put("|^",'^');
        twoCharacterInputToKnownOutput.put("wù",'ù');
        twoCharacterInputToKnownOutput.put("|_",'_');
        twoCharacterInputToKnownOutput.put("wú",'ú');
        twoCharacterInputToKnownOutput.put("|b",'b');
        twoCharacterInputToKnownOutput.put("xá",'á');
        twoCharacterInputToKnownOutput.put("|e",'e');
        twoCharacterInputToKnownOutput.put("uł",'ł');
        twoCharacterInputToKnownOutput.put("گ<",' ');
        twoCharacterInputToKnownOutput.put("wą",'ą');
        twoCharacterInputToKnownOutput.put("~,",',');
        twoCharacterInputToKnownOutput.put("|k",'k');
        twoCharacterInputToKnownOutput.put("|l",'l');
        twoCharacterInputToKnownOutput.put("~/",'/');
        twoCharacterInputToKnownOutput.put("|n",'n');
        twoCharacterInputToKnownOutput.put("~0",'0');
        twoCharacterInputToKnownOutput.put("aε",'ε');
        twoCharacterInputToKnownOutput.put("xì",'ì');
        twoCharacterInputToKnownOutput.put("|p",'p');
        twoCharacterInputToKnownOutput.put("xí",'í');
        twoCharacterInputToKnownOutput.put("|r",'r');
        twoCharacterInputToKnownOutput.put("~4",'4');
        twoCharacterInputToKnownOutput.put("aθ",'θ');
        twoCharacterInputToKnownOutput.put("~5",'t');
        twoCharacterInputToKnownOutput.put("tū",'ū');
        twoCharacterInputToKnownOutput.put("孕(",'(');
        twoCharacterInputToKnownOutput.put("|v",'v');
        twoCharacterInputToKnownOutput.put("wē",'ē');
        twoCharacterInputToKnownOutput.put("z·",'·');
        twoCharacterInputToKnownOutput.put("~=",'=');
        twoCharacterInputToKnownOutput.put("x÷",'÷');
        twoCharacterInputToKnownOutput.put("||",'|');
        twoCharacterInputToKnownOutput.put("wę",'ę');
        twoCharacterInputToKnownOutput.put("~A",'b');
        twoCharacterInputToKnownOutput.put("~B",'B');
        twoCharacterInputToKnownOutput.put("~C",'C');
        twoCharacterInputToKnownOutput.put("uś",'ś');
        twoCharacterInputToKnownOutput.put("yá",'á');
        twoCharacterInputToKnownOutput.put("yè",'è');
        twoCharacterInputToKnownOutput.put("yì",'ì');
        twoCharacterInputToKnownOutput.put("yí",'í');
        twoCharacterInputToKnownOutput.put("bθ",'θ');
        twoCharacterInputToKnownOutput.put("yò",'ò');
        twoCharacterInputToKnownOutput.put("yó",'ó');
        twoCharacterInputToKnownOutput.put("rǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("年龄",'龄');
        twoCharacterInputToKnownOutput.put("}{",'{');
        twoCharacterInputToKnownOutput.put("yù",'ù');
        twoCharacterInputToKnownOutput.put(" ",' ');
        twoCharacterInputToKnownOutput.put("yú",'ú');
        twoCharacterInputToKnownOutput.put("rǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("zà",'à');
        twoCharacterInputToKnownOutput.put("uż",'ż');
        twoCharacterInputToKnownOutput.put("wł",'ł');
        twoCharacterInputToKnownOutput.put("yć",'ć');
        twoCharacterInputToKnownOutput.put("~p",'p');
        twoCharacterInputToKnownOutput.put("zì",'ì');
        twoCharacterInputToKnownOutput.put("~q",'q');
        twoCharacterInputToKnownOutput.put("xī",'ī');
        twoCharacterInputToKnownOutput.put("cθ",'θ');
        twoCharacterInputToKnownOutput.put("|²",'²');
        twoCharacterInputToKnownOutput.put("裂(",'(');
        twoCharacterInputToKnownOutput.put("e;",';');
        twoCharacterInputToKnownOutput.put("|·",'·');
        twoCharacterInputToKnownOutput.put("胖病",'病');
        twoCharacterInputToKnownOutput.put("yě",'ě');
        twoCharacterInputToKnownOutput.put("zą",'ą');
        twoCharacterInputToKnownOutput.put("字<",' ');
        twoCharacterInputToKnownOutput.put(">行",'行');
        twoCharacterInputToKnownOutput.put("yī",'ī');
        twoCharacterInputToKnownOutput.put("dθ",'θ');
        twoCharacterInputToKnownOutput.put("zě",'ě');
        twoCharacterInputToKnownOutput.put("uǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("uǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("yś",'ś');
        twoCharacterInputToKnownOutput.put("zł",'ł');
        twoCharacterInputToKnownOutput.put("fλ",'λ');
        twoCharacterInputToKnownOutput.put("断(",'(');
        twoCharacterInputToKnownOutput.put("yź",'ź');
        twoCharacterInputToKnownOutput.put("yż",'ż');
        twoCharacterInputToKnownOutput.put("价<",' ');
        twoCharacterInputToKnownOutput.put("gθ",'θ');
        twoCharacterInputToKnownOutput.put("务人",'人');
        twoCharacterInputToKnownOutput.put("wǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("wǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("wǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("sɪ",'ɪ');
        twoCharacterInputToKnownOutput.put("もん",'ん');
        twoCharacterInputToKnownOutput.put("چا",'ا');
        twoCharacterInputToKnownOutput.put("yǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("{ƒ",'ƒ');
        twoCharacterInputToKnownOutput.put("儿科",'科');
        twoCharacterInputToKnownOutput.put("yǒ",'ǒ');
        twoCharacterInputToKnownOutput.put("yǔ",'ǔ');
        twoCharacterInputToKnownOutput.put("知识",'识');
        twoCharacterInputToKnownOutput.put("zǎ",'ǎ');
        twoCharacterInputToKnownOutput.put("肉(",'(');
        twoCharacterInputToKnownOutput.put("ں<",' ');
        twoCharacterInputToKnownOutput.put("→(",'(');
        twoCharacterInputToKnownOutput.put("电影",'影');
        twoCharacterInputToKnownOutput.put("→-",'-');
        twoCharacterInputToKnownOutput.put("△<",' ');
        twoCharacterInputToKnownOutput.put("→H",'H');
        twoCharacterInputToKnownOutput.put("→C",'C');
        twoCharacterInputToKnownOutput.put("nα",'α');
        twoCharacterInputToKnownOutput.put("nβ",'β');
        twoCharacterInputToKnownOutput.put("nθ",'θ');
        twoCharacterInputToKnownOutput.put("nλ",'s');
        twoCharacterInputToKnownOutput.put("妇科",'科');
        twoCharacterInputToKnownOutput.put("→r",'r');
        twoCharacterInputToKnownOutput.put("↓a",'a');
        twoCharacterInputToKnownOutput.put("↓b",'b');
        twoCharacterInputToKnownOutput.put("龄(",'(');
        twoCharacterInputToKnownOutput.put("ھ<",' ');
        twoCharacterInputToKnownOutput.put("→±",'±');
        twoCharacterInputToKnownOutput.put("s;",';');
        twoCharacterInputToKnownOutput.put("肌肉",'肉');
        twoCharacterInputToKnownOutput.put("사법",'법');
        twoCharacterInputToKnownOutput.put("附录",'录');
        twoCharacterInputToKnownOutput.put("rθ",'θ');
        twoCharacterInputToKnownOutput.put("学(",'(');
        twoCharacterInputToKnownOutput.put("x̄",'̄');
        twoCharacterInputToKnownOutput.put("rω",'ω');
        twoCharacterInputToKnownOutput.put("sα",'α');
        twoCharacterInputToKnownOutput.put("sβ",'β');
        twoCharacterInputToKnownOutput.put("sθ",'θ');
        twoCharacterInputToKnownOutput.put("ڑا",'ا');
        twoCharacterInputToKnownOutput.put("tθ",'θ');
        twoCharacterInputToKnownOutput.put("nѲ",'Ѳ');
        twoCharacterInputToKnownOutput.put("孩 ",' ');
        twoCharacterInputToKnownOutput.put("₂∫",'∫');
        twoCharacterInputToKnownOutput.put("气管",'管');
        twoCharacterInputToKnownOutput.put("y;",';');
        twoCharacterInputToKnownOutput.put("湿热",'热');
        twoCharacterInputToKnownOutput.put("ڑی",'ی');
        twoCharacterInputToKnownOutput.put("玩儿",'儿');
        twoCharacterInputToKnownOutput.put("染(",'(');
        twoCharacterInputToKnownOutput.put("ی<",' ');
        twoCharacterInputToKnownOutput.put(">认",'认');
        twoCharacterInputToKnownOutput.put("诊断",'断');
        twoCharacterInputToKnownOutput.put("급<",' ');
        twoCharacterInputToKnownOutput.put("椎骨",'骨');
        twoCharacterInputToKnownOutput.put("季节",'节');
        twoCharacterInputToKnownOutput.put("科医",'医');
        twoCharacterInputToKnownOutput.put("得<",' ');
        twoCharacterInputToKnownOutput.put("법부",'부');
        twoCharacterInputToKnownOutput.put("ے<",' ');
        twoCharacterInputToKnownOutput.put("○ ",' ');
        twoCharacterInputToKnownOutput.put("↪ ",' ');
        twoCharacterInputToKnownOutput.put("¡C",'¡');
        twoCharacterInputToKnownOutput.put(" b",'b');
        twoCharacterInputToKnownOutput.put("¡E",'E');
        twoCharacterInputToKnownOutput.put("○-",'-');
        twoCharacterInputToKnownOutput.put(" s",'s');
        twoCharacterInputToKnownOutput.put("¡T",'T');
        twoCharacterInputToKnownOutput.put("£\"",' ');
        twoCharacterInputToKnownOutput.put("¡a",'a');
        twoCharacterInputToKnownOutput.put("¡b",'b');
        twoCharacterInputToKnownOutput.put("¡c",'c');
        twoCharacterInputToKnownOutput.put("¡d",'d');
        twoCharacterInputToKnownOutput.put("£)",')');
        twoCharacterInputToKnownOutput.put("¡g",'g');
        twoCharacterInputToKnownOutput.put("¡h",'h');
        twoCharacterInputToKnownOutput.put("¡l",'l');
        twoCharacterInputToKnownOutput.put("¡m",'m');
        twoCharacterInputToKnownOutput.put("£0",'0');
        twoCharacterInputToKnownOutput.put("£1",'1');
        twoCharacterInputToKnownOutput.put("¡o",'o');
        twoCharacterInputToKnownOutput.put("£2",'2');
        twoCharacterInputToKnownOutput.put("¡q",'q');
        twoCharacterInputToKnownOutput.put("£4",'4');
        twoCharacterInputToKnownOutput.put("£5",'5');
        twoCharacterInputToKnownOutput.put("¡s",'¡');
        twoCharacterInputToKnownOutput.put("¡t",'t');
        twoCharacterInputToKnownOutput.put("¡v",'v');
        twoCharacterInputToKnownOutput.put("£9",'9');
        twoCharacterInputToKnownOutput.put("¡y",'y');
        twoCharacterInputToKnownOutput.put("○g",'g');
        twoCharacterInputToKnownOutput.put("照顾",'顾');
        twoCharacterInputToKnownOutput.put("医(",'(');
        twoCharacterInputToKnownOutput.put("感冒",'冒');
        twoCharacterInputToKnownOutput.put("££",'£');
        twoCharacterInputToKnownOutput.put("¨ ",' ');
        twoCharacterInputToKnownOutput.put("행료",'료');
        twoCharacterInputToKnownOutput.put("核病",'病');
        twoCharacterInputToKnownOutput.put("§a",'a');
        twoCharacterInputToKnownOutput.put("§c",'c');
        twoCharacterInputToKnownOutput.put("کا",'ا');
        twoCharacterInputToKnownOutput.put("کب",'ب');
        twoCharacterInputToKnownOutput.put("کر",'ر');
        twoCharacterInputToKnownOutput.put("生日",'日');
        twoCharacterInputToKnownOutput.put("§s",'s');
        twoCharacterInputToKnownOutput.put("§t",'t');
        twoCharacterInputToKnownOutput.put("¨e",'e');
        twoCharacterInputToKnownOutput.put("کو",'و');
        twoCharacterInputToKnownOutput.put("肥胖",'胖');
        twoCharacterInputToKnownOutput.put("ה•",'•');
        twoCharacterInputToKnownOutput.put("θ→",'→');
        twoCharacterInputToKnownOutput.put("女 ",' ');
        twoCharacterInputToKnownOutput.put("¬A",'A');
        twoCharacterInputToKnownOutput.put("查[",'[');
        twoCharacterInputToKnownOutput.put("® ",' ');
        twoCharacterInputToKnownOutput.put("کھ",'ھ');
        twoCharacterInputToKnownOutput.put("®)",')');
        twoCharacterInputToKnownOutput.put("کی",'ی');
        twoCharacterInputToKnownOutput.put("¯ ",'u');
        twoCharacterInputToKnownOutput.put("θ−",'−');
        twoCharacterInputToKnownOutput.put("奶(",'(');
        twoCharacterInputToKnownOutput.put("°)",')');
        twoCharacterInputToKnownOutput.put("°+",'+');
        twoCharacterInputToKnownOutput.put("°.",'.');
        twoCharacterInputToKnownOutput.put(">一",'一');
        twoCharacterInputToKnownOutput.put("°4",'4');
        twoCharacterInputToKnownOutput.put("°5",'5');
        twoCharacterInputToKnownOutput.put(">七",'七');
        twoCharacterInputToKnownOutput.put("°6",'6');
        twoCharacterInputToKnownOutput.put("°<",' ');
        twoCharacterInputToKnownOutput.put(">上",'上');
        twoCharacterInputToKnownOutput.put(">下",'下');
        twoCharacterInputToKnownOutput.put("°>",'>');
        twoCharacterInputToKnownOutput.put("°?",'v');
        twoCharacterInputToKnownOutput.put("± ",' ');
        twoCharacterInputToKnownOutput.put("°F",'F');
        twoCharacterInputToKnownOutput.put("±(",'(');
        twoCharacterInputToKnownOutput.put("±.",'.');
        twoCharacterInputToKnownOutput.put("±1",'1');
        twoCharacterInputToKnownOutput.put("±2",'2');
        twoCharacterInputToKnownOutput.put("±3",'3');
        twoCharacterInputToKnownOutput.put(">严",'严');
        twoCharacterInputToKnownOutput.put("°c",'c');
        twoCharacterInputToKnownOutput.put("°f",'f');
        twoCharacterInputToKnownOutput.put("²+",'+');
        twoCharacterInputToKnownOutput.put("°k",'k');
        twoCharacterInputToKnownOutput.put(">为",'为');
        twoCharacterInputToKnownOutput.put("²/",'/');
        twoCharacterInputToKnownOutput.put(">主",'主');
        twoCharacterInputToKnownOutput.put("酒精",'精');
        twoCharacterInputToKnownOutput.put("²2",'2');
        twoCharacterInputToKnownOutput.put("²3",'3');
        twoCharacterInputToKnownOutput.put("²4",'4');
        twoCharacterInputToKnownOutput.put("²5",'5');
        twoCharacterInputToKnownOutput.put("²6",'6');
        twoCharacterInputToKnownOutput.put("²7",'7');
        twoCharacterInputToKnownOutput.put("°v",'v');
        twoCharacterInputToKnownOutput.put("红(",'(');
        twoCharacterInputToKnownOutput.put("±[",'[');
        twoCharacterInputToKnownOutput.put("²=",'=');
        twoCharacterInputToKnownOutput.put("²>",'>');
        twoCharacterInputToKnownOutput.put(">之",'之');
        twoCharacterInputToKnownOutput.put("±b",'b');
        twoCharacterInputToKnownOutput.put("³(",'(');
        twoCharacterInputToKnownOutput.put("³)",')');
        twoCharacterInputToKnownOutput.put("³+",'+');
        twoCharacterInputToKnownOutput.put("±i",'i');
        twoCharacterInputToKnownOutput.put("³-",'-');
        twoCharacterInputToKnownOutput.put("³.",' ');
        twoCharacterInputToKnownOutput.put("³/",'/');
        twoCharacterInputToKnownOutput.put("±p",'r');
        twoCharacterInputToKnownOutput.put("³4",'4');
        twoCharacterInputToKnownOutput.put(">也",'也');
        twoCharacterInputToKnownOutput.put("±r",'r');
        twoCharacterInputToKnownOutput.put("±t",'t');
        twoCharacterInputToKnownOutput.put("³7",'7');
        twoCharacterInputToKnownOutput.put("±v",'v');
        twoCharacterInputToKnownOutput.put("³<",' ');
        twoCharacterInputToKnownOutput.put("±{",'{');
        twoCharacterInputToKnownOutput.put("³?",'?');
        twoCharacterInputToKnownOutput.put("گھ",'ھ');
        twoCharacterInputToKnownOutput.put("²b",'b');
        twoCharacterInputToKnownOutput.put("²c",'c');
        twoCharacterInputToKnownOutput.put("²d",'d');
        twoCharacterInputToKnownOutput.put("²h",'h');
        twoCharacterInputToKnownOutput.put("²s",'s');
        twoCharacterInputToKnownOutput.put("²t",'t');
        twoCharacterInputToKnownOutput.put("²u",'u');
        twoCharacterInputToKnownOutput.put("²x",'x');
        twoCharacterInputToKnownOutput.put("²y",'y');
        twoCharacterInputToKnownOutput.put(">了",'了');
        twoCharacterInputToKnownOutput.put("µ ",' ');
        twoCharacterInputToKnownOutput.put(">事",'事');
        twoCharacterInputToKnownOutput.put(">二",'二');
        twoCharacterInputToKnownOutput.put("³b",'b');
        twoCharacterInputToKnownOutput.put(">于",'于');
        twoCharacterInputToKnownOutput.put("³d",'d');
        twoCharacterInputToKnownOutput.put("µ)",')');
        twoCharacterInputToKnownOutput.put(">五",'五');
        twoCharacterInputToKnownOutput.put("视机",'机');
        twoCharacterInputToKnownOutput.put("µ=",'=');
        twoCharacterInputToKnownOutput.put(">人",'人');
        twoCharacterInputToKnownOutput.put("´s",'s');
        twoCharacterInputToKnownOutput.put("²³",'³');
        twoCharacterInputToKnownOutput.put("명<",' ');
        twoCharacterInputToKnownOutput.put(">什",'什');
        twoCharacterInputToKnownOutput.put("´v",'v');
        twoCharacterInputToKnownOutput.put("²·",'·');
        twoCharacterInputToKnownOutput.put("好 ",' ');
        twoCharacterInputToKnownOutput.put("µ_",'_');
        twoCharacterInputToKnownOutput.put("·(",'(');
        twoCharacterInputToKnownOutput.put("π√",'√');
        twoCharacterInputToKnownOutput.put("·1",'1');
        twoCharacterInputToKnownOutput.put("症医",'医');
        twoCharacterInputToKnownOutput.put("·2",'2');
        twoCharacterInputToKnownOutput.put("·3",'3');
        twoCharacterInputToKnownOutput.put("³°",'°');
        twoCharacterInputToKnownOutput.put("·5",'5');
        twoCharacterInputToKnownOutput.put("³²",'²');
        twoCharacterInputToKnownOutput.put("³·",'·');
        twoCharacterInputToKnownOutput.put("µ|",'|');
        twoCharacterInputToKnownOutput.put("π∫",'∫');
        twoCharacterInputToKnownOutput.put(">们",'们');
        twoCharacterInputToKnownOutput.put("·V",'V');
        twoCharacterInputToKnownOutput.put("¹ ",' ');
        twoCharacterInputToKnownOutput.put(" 动",'动');
        twoCharacterInputToKnownOutput.put("·a",'a');
        twoCharacterInputToKnownOutput.put("·b",'b');
        twoCharacterInputToKnownOutput.put("·c",'c');
        twoCharacterInputToKnownOutput.put("·n",'n');
        twoCharacterInputToKnownOutput.put("·q",'q');
        twoCharacterInputToKnownOutput.put("饿(",'(');
        twoCharacterInputToKnownOutput.put("·r",'r');
        twoCharacterInputToKnownOutput.put("·s",'s');
        twoCharacterInputToKnownOutput.put("ˈd",'d');
        twoCharacterInputToKnownOutput.put(">会",'会');
        twoCharacterInputToKnownOutput.put("¹5",'5');
        twoCharacterInputToKnownOutput.put("¹7",'7');
        twoCharacterInputToKnownOutput.put("·x",'x');
        twoCharacterInputToKnownOutput.put("肺(",'(');
        twoCharacterInputToKnownOutput.put("¹<",' ');
        twoCharacterInputToKnownOutput.put("¹=",'=');
        twoCharacterInputToKnownOutput.put("³÷",'÷');
        twoCharacterInputToKnownOutput.put("·|",'|');
        twoCharacterInputToKnownOutput.put("气<",' ');
        twoCharacterInputToKnownOutput.put("¹?",'?');
        twoCharacterInputToKnownOutput.put("국회",'회');
        twoCharacterInputToKnownOutput.put("懂<",' ');
        twoCharacterInputToKnownOutput.put("儿<",' ');
        twoCharacterInputToKnownOutput.put(">体",'体');
        twoCharacterInputToKnownOutput.put("-內",'內');
        twoCharacterInputToKnownOutput.put(">作",'作');
        twoCharacterInputToKnownOutput.put("¼(",' ');
        twoCharacterInputToKnownOutput.put("破裂",'裂');
        twoCharacterInputToKnownOutput.put("½(",'(');
        twoCharacterInputToKnownOutput.put("½)",')');
        twoCharacterInputToKnownOutput.put("¹°",'°');
        twoCharacterInputToKnownOutput.put("湿疹",'疹');
        twoCharacterInputToKnownOutput.put("¹²",'²');
        twoCharacterInputToKnownOutput.put("¹³",'³');
        twoCharacterInputToKnownOutput.put("½<",' ');
        twoCharacterInputToKnownOutput.put("¹¹",'¹');
        twoCharacterInputToKnownOutput.put("图书",'书');
        twoCharacterInputToKnownOutput.put("½A",'A');
        twoCharacterInputToKnownOutput.put("检查",'查');
        twoCharacterInputToKnownOutput.put("ھا",'ا');
        twoCharacterInputToKnownOutput.put("¾(",'(');
        twoCharacterInputToKnownOutput.put("ھر",'ر');
        twoCharacterInputToKnownOutput.put("½P",'P');
        twoCharacterInputToKnownOutput.put("¾=",'=');
        twoCharacterInputToKnownOutput.put("纸（",'（');
        twoCharacterInputToKnownOutput.put("½a",'a');
        twoCharacterInputToKnownOutput.put("½b",'b');
        twoCharacterInputToKnownOutput.put("肿(",'(');
        twoCharacterInputToKnownOutput.put(">还",'还');
        twoCharacterInputToKnownOutput.put("血型",'型');
        twoCharacterInputToKnownOutput.put(">这",'这');
        twoCharacterInputToKnownOutput.put("½x",'x');
        twoCharacterInputToKnownOutput.put("À ",' ');
        twoCharacterInputToKnownOutput.put("馆<",' ');
        twoCharacterInputToKnownOutput.put("胀(",'(');
        twoCharacterInputToKnownOutput.put("¿P",'P');
        twoCharacterInputToKnownOutput.put("À<",' ');
        twoCharacterInputToKnownOutput.put("早<",' ');
        twoCharacterInputToKnownOutput.put("什么",'么');
        twoCharacterInputToKnownOutput.put("¿a",'a');
        twoCharacterInputToKnownOutput.put("¿c",'c');
        twoCharacterInputToKnownOutput.put("¿d",'d');
        twoCharacterInputToKnownOutput.put("¿h",'h');
        twoCharacterInputToKnownOutput.put("¿l",'l');
        twoCharacterInputToKnownOutput.put("¿o",'o');
        twoCharacterInputToKnownOutput.put("¿t",'t');
        twoCharacterInputToKnownOutput.put("¿v",'v');
        twoCharacterInputToKnownOutput.put("¿y",'y');
        twoCharacterInputToKnownOutput.put("咳嗽",'嗽');
        twoCharacterInputToKnownOutput.put("[貧",'貧');
        twoCharacterInputToKnownOutput.put("½×",'×');
        twoCharacterInputToKnownOutput.put("胃(",'(');
        twoCharacterInputToKnownOutput.put("书馆",'馆');
        twoCharacterInputToKnownOutput.put("育节",'节');
        twoCharacterInputToKnownOutput.put("Äg",'g');
        twoCharacterInputToKnownOutput.put("Äh",'h');
        twoCharacterInputToKnownOutput.put(">那",'那');
        twoCharacterInputToKnownOutput.put("Är",'r');
        twoCharacterInputToKnownOutput.put("Ät",'t');
        twoCharacterInputToKnownOutput.put("Äu",'u');
        twoCharacterInputToKnownOutput.put("氣-",'-');
        twoCharacterInputToKnownOutput.put("˚C",'C');
        twoCharacterInputToKnownOutput.put("Èr",'r');
        twoCharacterInputToKnownOutput.put("ÉS",'g');
        twoCharacterInputToKnownOutput.put("粪(",'(');
        twoCharacterInputToKnownOutput.put("Ér",'r');
        twoCharacterInputToKnownOutput.put("Év",'v');
        twoCharacterInputToKnownOutput.put("背 ",' ');
        twoCharacterInputToKnownOutput.put("یا",'ا');
        twoCharacterInputToKnownOutput.put("牙(",'(');
        twoCharacterInputToKnownOutput.put(">六",'六');
        twoCharacterInputToKnownOutput.put("یل",'ل');
        twoCharacterInputToKnownOutput.put("一月",'月');
        twoCharacterInputToKnownOutput.put("±β",'β');
        twoCharacterInputToKnownOutput.put("乳头",'头');
        twoCharacterInputToKnownOutput.put(">冷",'冷');
        twoCharacterInputToKnownOutput.put("²θ",'θ');
        twoCharacterInputToKnownOutput.put("线(",'(');
        twoCharacterInputToKnownOutput.put("²φ",'φ');
        twoCharacterInputToKnownOutput.put("یک",'ک');
        twoCharacterInputToKnownOutput.put("یں",'ں');
        twoCharacterInputToKnownOutput.put("收音",'音');
        twoCharacterInputToKnownOutput.put(">出",'出');
        twoCharacterInputToKnownOutput.put("哪儿",'儿');
        twoCharacterInputToKnownOutput.put("固醇",'醇');
        twoCharacterInputToKnownOutput.put("장관",'관');
        twoCharacterInputToKnownOutput.put("型(",'(');
        twoCharacterInputToKnownOutput.put("苦(",'(');
        twoCharacterInputToKnownOutput.put("哪里",'里');
        twoCharacterInputToKnownOutput.put("×(",'(');
        twoCharacterInputToKnownOutput.put("的<",' ');
        twoCharacterInputToKnownOutput.put("×1",'1');
        twoCharacterInputToKnownOutput.put("×3",'3');
        twoCharacterInputToKnownOutput.put("×4",'4');
        twoCharacterInputToKnownOutput.put("×B",'B');
        twoCharacterInputToKnownOutput.put("Ök",'k');
        twoCharacterInputToKnownOutput.put("×[",'[');
        twoCharacterInputToKnownOutput.put("×b",'b');
        twoCharacterInputToKnownOutput.put("×c",'c');
        twoCharacterInputToKnownOutput.put("×g",'g');
        twoCharacterInputToKnownOutput.put("×h",'h');
        twoCharacterInputToKnownOutput.put("×s",'s');
        twoCharacterInputToKnownOutput.put("Øn",'n');
        twoCharacterInputToKnownOutput.put("低<",' ');
        twoCharacterInputToKnownOutput.put("門<",' ');
        twoCharacterInputToKnownOutput.put("腹泻",'泻');
        twoCharacterInputToKnownOutput.put("Úl",'l');
        twoCharacterInputToKnownOutput.put("Út",'ú');
        twoCharacterInputToKnownOutput.put("喂<",' ');
        twoCharacterInputToKnownOutput.put("精(",'(');
        twoCharacterInputToKnownOutput.put(">去",'去');
        twoCharacterInputToKnownOutput.put("à ",' ');
        twoCharacterInputToKnownOutput.put("à)",')');
        twoCharacterInputToKnownOutput.put("à-",'-');
        twoCharacterInputToKnownOutput.put("ßf",'f');
        twoCharacterInputToKnownOutput.put("á)",')');
        twoCharacterInputToKnownOutput.put("ßt",'t');
        twoCharacterInputToKnownOutput.put("ßw",'w');
        twoCharacterInputToKnownOutput.put("á?",' ');
        twoCharacterInputToKnownOutput.put("àh",'h');
        twoCharacterInputToKnownOutput.put("ài",'i');
        twoCharacterInputToKnownOutput.put("àm",'m');
        twoCharacterInputToKnownOutput.put("àn",'n');
        twoCharacterInputToKnownOutput.put("ào",'o');
        twoCharacterInputToKnownOutput.put("ád",'d');
        twoCharacterInputToKnownOutput.put("ái",'i');
        twoCharacterInputToKnownOutput.put("內-",'-');
        twoCharacterInputToKnownOutput.put("体育",'育');
        twoCharacterInputToKnownOutput.put("áy",'y');
        twoCharacterInputToKnownOutput.put("áz",'z');
        twoCharacterInputToKnownOutput.put("ä)",')');
        twoCharacterInputToKnownOutput.put("âl",'l');
        twoCharacterInputToKnownOutput.put("âm",'m');
        twoCharacterInputToKnownOutput.put("ân",'n');
        twoCharacterInputToKnownOutput.put("âo",' ');
        twoCharacterInputToKnownOutput.put("全<",' ');
        twoCharacterInputToKnownOutput.put(">呢",'呢');
        twoCharacterInputToKnownOutput.put("ão",'o');
        twoCharacterInputToKnownOutput.put("äb",'b');
        twoCharacterInputToKnownOutput.put("äe",'e');
        twoCharacterInputToKnownOutput.put("äi",'i');
        twoCharacterInputToKnownOutput.put("äm",'m');
        twoCharacterInputToKnownOutput.put("äp",'p');
        twoCharacterInputToKnownOutput.put(">和",'和');
        twoCharacterInputToKnownOutput.put(" ?",'?');
        twoCharacterInputToKnownOutput.put("è ",' ');
        twoCharacterInputToKnownOutput.put("è!",'!');
        twoCharacterInputToKnownOutput.put("è.",' ');
        twoCharacterInputToKnownOutput.put("è<",' ');
        twoCharacterInputToKnownOutput.put("é\"",'\"');
        twoCharacterInputToKnownOutput.put("é,",',');
        twoCharacterInputToKnownOutput.put("é-",'-');
        twoCharacterInputToKnownOutput.put("给 ",' ');
        twoCharacterInputToKnownOutput.put(">哪",'哪');
        twoCharacterInputToKnownOutput.put("é;",';');
        twoCharacterInputToKnownOutput.put("èb",'b');
        twoCharacterInputToKnownOutput.put("èd",'d');
        twoCharacterInputToKnownOutput.put("èh",'h');
        twoCharacterInputToKnownOutput.put("èi",'i');
        twoCharacterInputToKnownOutput.put("易<",' ');
        twoCharacterInputToKnownOutput.put("给<",' ');
        twoCharacterInputToKnownOutput.put("èx",'x');
        twoCharacterInputToKnownOutput.put("èy",'y');
        twoCharacterInputToKnownOutput.put("ë ",' ');
        twoCharacterInputToKnownOutput.put("ë-",'-');
        twoCharacterInputToKnownOutput.put("ì)",')');
        twoCharacterInputToKnownOutput.put("ên",'n');
        twoCharacterInputToKnownOutput.put("ês",'s');
        twoCharacterInputToKnownOutput.put("ì<",' ');
        twoCharacterInputToKnownOutput.put("í\"",'\"');
        twoCharacterInputToKnownOutput.put("人员",'员');
        twoCharacterInputToKnownOutput.put("í)",')');
        twoCharacterInputToKnownOutput.put("í,",',');
        twoCharacterInputToKnownOutput.put("ìc",'c');
        twoCharacterInputToKnownOutput.put("ìg",'g');
        twoCharacterInputToKnownOutput.put("ìh",'h');
        twoCharacterInputToKnownOutput.put("ìj",'j');
        twoCharacterInputToKnownOutput.put("ìk",'k');
        twoCharacterInputToKnownOutput.put("ìn",'n');
        twoCharacterInputToKnownOutput.put("ìt",'ì');
        twoCharacterInputToKnownOutput.put("ìw",'w');
        twoCharacterInputToKnownOutput.put("ìy",'y');
        twoCharacterInputToKnownOutput.put("íd",'d');
        twoCharacterInputToKnownOutput.put("íh",'h');
        twoCharacterInputToKnownOutput.put("éç",'é');
        twoCharacterInputToKnownOutput.put("ír",'r');
        twoCharacterInputToKnownOutput.put("ív",'v');
        twoCharacterInputToKnownOutput.put("íx",'x');
        twoCharacterInputToKnownOutput.put("íy",'y');
        twoCharacterInputToKnownOutput.put("îc",'c');
        twoCharacterInputToKnownOutput.put("통령",'령');
        twoCharacterInputToKnownOutput.put("ïc",'c');
        twoCharacterInputToKnownOutput.put("ïd",'d');
        twoCharacterInputToKnownOutput.put("ïr",'r');
        twoCharacterInputToKnownOutput.put("ïs",'s');
        twoCharacterInputToKnownOutput.put("ïv",' ');
        twoCharacterInputToKnownOutput.put("ò ",' ');
        twoCharacterInputToKnownOutput.put("ò)",')');
        twoCharacterInputToKnownOutput.put("ò<",' ');
        twoCharacterInputToKnownOutput.put("íè",'è');
        twoCharacterInputToKnownOutput.put("뽑다",'다');
        twoCharacterInputToKnownOutput.put("ó<",' ');
        twoCharacterInputToKnownOutput.put("赤红",'红');
        twoCharacterInputToKnownOutput.put("厉(",'(');
        twoCharacterInputToKnownOutput.put("̄<",' ');
        twoCharacterInputToKnownOutput.put("快<",' ');
        twoCharacterInputToKnownOutput.put("òl",'l');
        twoCharacterInputToKnownOutput.put("òn",'n');
        twoCharacterInputToKnownOutput.put("òu",'u');
        twoCharacterInputToKnownOutput.put("ô<",' ');
        twoCharacterInputToKnownOutput.put("喘[",'[');
        twoCharacterInputToKnownOutput.put("ób",'b');
        twoCharacterInputToKnownOutput.put("óc",'c');
        twoCharacterInputToKnownOutput.put("óg",'g');
        twoCharacterInputToKnownOutput.put("ój",'j');
        twoCharacterInputToKnownOutput.put("ók",'k');
        twoCharacterInputToKnownOutput.put("óu",'u');
        twoCharacterInputToKnownOutput.put("óv",'v');
        twoCharacterInputToKnownOutput.put("ów",'w');
        twoCharacterInputToKnownOutput.put("ôn",'n');
        twoCharacterInputToKnownOutput.put("÷(",'(');
        twoCharacterInputToKnownOutput.put("÷2",'2');
        twoCharacterInputToKnownOutput.put("÷3",'3');
        twoCharacterInputToKnownOutput.put("÷4",'4');
        twoCharacterInputToKnownOutput.put("ñó",'ñ');
        twoCharacterInputToKnownOutput.put("öc",'c');
        twoCharacterInputToKnownOutput.put("÷H",'H');
        twoCharacterInputToKnownOutput.put("ök",'k');
        twoCharacterInputToKnownOutput.put("÷O",'O');
        twoCharacterInputToKnownOutput.put("öw",'w');
        twoCharacterInputToKnownOutput.put("转<",' ');
        twoCharacterInputToKnownOutput.put("ø<",' ');
        twoCharacterInputToKnownOutput.put("ù ",' ');
        twoCharacterInputToKnownOutput.put("ù)",')');
        twoCharacterInputToKnownOutput.put("÷n",'n');
        twoCharacterInputToKnownOutput.put("÷s",'s');
        twoCharacterInputToKnownOutput.put(">四",'四');
        twoCharacterInputToKnownOutput.put("÷y",'y');
        twoCharacterInputToKnownOutput.put("ú ",' ');
        twoCharacterInputToKnownOutput.put("ød",'d');
        twoCharacterInputToKnownOutput.put("ú)",')');
        twoCharacterInputToKnownOutput.put(">零",'零');
        twoCharacterInputToKnownOutput.put(">国",'国');
        twoCharacterInputToKnownOutput.put("ú<",' ');
        twoCharacterInputToKnownOutput.put("û ",' ');
        twoCharacterInputToKnownOutput.put("ú?",' ');
        twoCharacterInputToKnownOutput.put("ùb",'b');
        twoCharacterInputToKnownOutput.put("ùc",'c');
        twoCharacterInputToKnownOutput.put("ùk",'k');
        twoCharacterInputToKnownOutput.put("ùl",'l');
        twoCharacterInputToKnownOutput.put("ùn",'n');
        twoCharacterInputToKnownOutput.put("ùr",'r');
        twoCharacterInputToKnownOutput.put("语法",'法');
        twoCharacterInputToKnownOutput.put("胰腺",'腺');
        twoCharacterInputToKnownOutput.put("ùt",'t');
        twoCharacterInputToKnownOutput.put("ùx",'x');
        twoCharacterInputToKnownOutput.put("ùy",'y');
        twoCharacterInputToKnownOutput.put(">在",'在');
        twoCharacterInputToKnownOutput.put("ü)",')');
        twoCharacterInputToKnownOutput.put("ół",'ł');
        twoCharacterInputToKnownOutput.put("úl",'l');
        twoCharacterInputToKnownOutput.put(">地",'地');
        twoCharacterInputToKnownOutput.put("úp",'p');
        twoCharacterInputToKnownOutput.put("ü<",' ');
        twoCharacterInputToKnownOutput.put("ûl",'l');
        twoCharacterInputToKnownOutput.put("∅<",' ');
        twoCharacterInputToKnownOutput.put("茎(",'(');
        twoCharacterInputToKnownOutput.put("óź",'ź');
        twoCharacterInputToKnownOutput.put("óż",'ż');
        twoCharacterInputToKnownOutput.put("üe",'e');
        twoCharacterInputToKnownOutput.put("üi",'i');
        twoCharacterInputToKnownOutput.put("üp",'p');
        twoCharacterInputToKnownOutput.put("∆A",'A');
        twoCharacterInputToKnownOutput.put("거부",'부');
        twoCharacterInputToKnownOutput.put("∆H",'H');
        twoCharacterInputToKnownOutput.put("∆T",'T');
        twoCharacterInputToKnownOutput.put("∆U",'U');
        twoCharacterInputToKnownOutput.put("赢<",' ');
        twoCharacterInputToKnownOutput.put("∆X",'X');
        twoCharacterInputToKnownOutput.put("∈ ",' ');
        twoCharacterInputToKnownOutput.put("∆m",'m');
        twoCharacterInputToKnownOutput.put("∈(",'(');
        twoCharacterInputToKnownOutput.put("∆s",'s');
        twoCharacterInputToKnownOutput.put("∆t",'t');
        twoCharacterInputToKnownOutput.put("皮(",'(');
        twoCharacterInputToKnownOutput.put("∆v",'v');
        twoCharacterInputToKnownOutput.put(" 孩",'孩');
        twoCharacterInputToKnownOutput.put("关节",'节');
        twoCharacterInputToKnownOutput.put("醇(",'(');
        twoCharacterInputToKnownOutput.put("皮肤",'肤');
        twoCharacterInputToKnownOutput.put("ą ",'w');
        twoCharacterInputToKnownOutput.put("ą<",' ');
        twoCharacterInputToKnownOutput.put("是 ",' ');
        twoCharacterInputToKnownOutput.put("是<",' ');
        twoCharacterInputToKnownOutput.put("ąb",'b');
        twoCharacterInputToKnownOutput.put("ąc",'c');
        twoCharacterInputToKnownOutput.put("ąg",'g');
        twoCharacterInputToKnownOutput.put("ąk",'k');
        twoCharacterInputToKnownOutput.put("脑（",'（');
        twoCharacterInputToKnownOutput.put("ąp",'p');
        twoCharacterInputToKnownOutput.put("ąs",'s');
        twoCharacterInputToKnownOutput.put("ąt",'t');
        twoCharacterInputToKnownOutput.put("ć<",' ');
        twoCharacterInputToKnownOutput.put("ąz",'z');
        twoCharacterInputToKnownOutput.put("ć?",' ');
        twoCharacterInputToKnownOutput.put("걸부",'부');
        twoCharacterInputToKnownOutput.put("∑ ",' ');
        twoCharacterInputToKnownOutput.put("轻<",' ');
        twoCharacterInputToKnownOutput.put("ćd",'d');
        twoCharacterInputToKnownOutput.put("∑1",'1');
        twoCharacterInputToKnownOutput.put("ćs",'s');
        twoCharacterInputToKnownOutput.put("시장",'장');
        twoCharacterInputToKnownOutput.put("∑F",'∆');
        twoCharacterInputToKnownOutput.put("∑A",'A');
        twoCharacterInputToKnownOutput.put("−1",'1');
        twoCharacterInputToKnownOutput.put("−8",'8');
        twoCharacterInputToKnownOutput.put("−2",'2');
        twoCharacterInputToKnownOutput.put("贫血",'血');
        twoCharacterInputToKnownOutput.put("−3",'3');
        twoCharacterInputToKnownOutput.put("−4",'4');
        twoCharacterInputToKnownOutput.put("∓ ",' ');
        twoCharacterInputToKnownOutput.put("∓(",'(');
        twoCharacterInputToKnownOutput.put("∑x",'x');
        twoCharacterInputToKnownOutput.put("−a",'a');
        twoCharacterInputToKnownOutput.put("∑|",'|');
        twoCharacterInputToKnownOutput.put("−f",'f');
        twoCharacterInputToKnownOutput.put("−b",'b');
        twoCharacterInputToKnownOutput.put("−c",'c');
        twoCharacterInputToKnownOutput.put("−d",'d');
        twoCharacterInputToKnownOutput.put("−l",'l');
        twoCharacterInputToKnownOutput.put("ąć",'ć');
        twoCharacterInputToKnownOutput.put("−x",'x');
        twoCharacterInputToKnownOutput.put("−s",'s');
        twoCharacterInputToKnownOutput.put("−t",'t');
        twoCharacterInputToKnownOutput.put(">大",'大');
        twoCharacterInputToKnownOutput.put(">太",'太');
        twoCharacterInputToKnownOutput.put(">头",'头');
        twoCharacterInputToKnownOutput.put("초청",'청');
        twoCharacterInputToKnownOutput.put("冒<",' ');
        twoCharacterInputToKnownOutput.put("−³",'³');
        twoCharacterInputToKnownOutput.put("료<",' ');
        twoCharacterInputToKnownOutput.put(">饥",'饥');
        twoCharacterInputToKnownOutput.put("∗ ",' ');
        twoCharacterInputToKnownOutput.put(">女",'女');
        twoCharacterInputToKnownOutput.put("ąś",'ś');
        twoCharacterInputToKnownOutput.put(">如",'如');
        twoCharacterInputToKnownOutput.put("ąż",'ż');
        twoCharacterInputToKnownOutput.put("∗d",'d');
        twoCharacterInputToKnownOutput.put("∙(",'(');
        twoCharacterInputToKnownOutput.put("∙5",'5');
        twoCharacterInputToKnownOutput.put("∗s",'s');
        twoCharacterInputToKnownOutput.put("∙7",'7');
        twoCharacterInputToKnownOutput.put("∙8",'8');
        twoCharacterInputToKnownOutput.put("∙2",'2');
        twoCharacterInputToKnownOutput.put("√ ",' ');
        twoCharacterInputToKnownOutput.put("∙9",'9');
        twoCharacterInputToKnownOutput.put("√0",'0');
        twoCharacterInputToKnownOutput.put("√1",'1');
        twoCharacterInputToKnownOutput.put("炎(",'(');
        twoCharacterInputToKnownOutput.put("√-",'-');
        twoCharacterInputToKnownOutput.put("√6",'6');
        twoCharacterInputToKnownOutput.put("√7",'7');
        twoCharacterInputToKnownOutput.put("√8",'8');
        twoCharacterInputToKnownOutput.put("√9",'9');
        twoCharacterInputToKnownOutput.put("√2",'2');
        twoCharacterInputToKnownOutput.put("√4",'4');
        twoCharacterInputToKnownOutput.put("√5",'5');
        twoCharacterInputToKnownOutput.put("√<",' ');
        twoCharacterInputToKnownOutput.put("∙f",'f');
        twoCharacterInputToKnownOutput.put("ē ",' ');
        twoCharacterInputToKnownOutput.put("尿病",'病');
        twoCharacterInputToKnownOutput.put("∙c",'c');
        twoCharacterInputToKnownOutput.put("冖<",' ');
        twoCharacterInputToKnownOutput.put("√L",'L');
        twoCharacterInputToKnownOutput.put("ē)",')');
        twoCharacterInputToKnownOutput.put("-射",'射');
        twoCharacterInputToKnownOutput.put("∙y",'y');
        twoCharacterInputToKnownOutput.put(" m",'r');
        twoCharacterInputToKnownOutput.put("M?",'?');
        twoCharacterInputToKnownOutput.put("√r",'r');
        twoCharacterInputToKnownOutput.put("√s",'s');
        twoCharacterInputToKnownOutput.put("√u",'u');
        twoCharacterInputToKnownOutput.put("√{",'c');
        twoCharacterInputToKnownOutput.put("∙°",'°');
        twoCharacterInputToKnownOutput.put("ēi",'i');
        twoCharacterInputToKnownOutput.put("ēn",'n');
        twoCharacterInputToKnownOutput.put("∞ ",' ');
        twoCharacterInputToKnownOutput.put("ēy",'y');
        twoCharacterInputToKnownOutput.put("写<",' ');
        twoCharacterInputToKnownOutput.put("∞(",'(');
        twoCharacterInputToKnownOutput.put("거<",' ');
        twoCharacterInputToKnownOutput.put("∞<",' ');
        twoCharacterInputToKnownOutput.put("ん ",' ');
        twoCharacterInputToKnownOutput.put("∞F",'F');
        twoCharacterInputToKnownOutput.put("溃(",'(');
        twoCharacterInputToKnownOutput.put("∠/",'/');
        twoCharacterInputToKnownOutput.put("∞i",'i');
        twoCharacterInputToKnownOutput.put("脓肿",'肿');
        twoCharacterInputToKnownOutput.put("乳房",'房');
        twoCharacterInputToKnownOutput.put("ę!",'!');
        twoCharacterInputToKnownOutput.put("ę,",',');
        twoCharacterInputToKnownOutput.put("（f",'f');
        twoCharacterInputToKnownOutput.put("脚(",'(');
        twoCharacterInputToKnownOutput.put("（d",'d');
        twoCharacterInputToKnownOutput.put("ę;",';');
        twoCharacterInputToKnownOutput.put("ę<",' ');
        twoCharacterInputToKnownOutput.put("（b",'b');
        twoCharacterInputToKnownOutput.put("）<",' ');
        twoCharacterInputToKnownOutput.put("∠s",'s');
        twoCharacterInputToKnownOutput.put("ě ",' ');
        twoCharacterInputToKnownOutput.put("ęb",'b');
        twoCharacterInputToKnownOutput.put("ęd",'d');
        twoCharacterInputToKnownOutput.put("（z",'z');
        twoCharacterInputToKnownOutput.put("ęg",'g');
        twoCharacterInputToKnownOutput.put("（x",'x');
        twoCharacterInputToKnownOutput.put("出生",'生');
        twoCharacterInputToKnownOutput.put("ęk",'k');
        twoCharacterInputToKnownOutput.put("（t",'t');
        twoCharacterInputToKnownOutput.put("ęl",'o');
        twoCharacterInputToKnownOutput.put("（s",'s');
        twoCharacterInputToKnownOutput.put("∆θ",'θ');
        twoCharacterInputToKnownOutput.put("–(",'2');
        twoCharacterInputToKnownOutput.put("热病",'病');
        twoCharacterInputToKnownOutput.put("ęp",'p');
        twoCharacterInputToKnownOutput.put("‑e",'e');
        twoCharacterInputToKnownOutput.put("ęs",'s');
        twoCharacterInputToKnownOutput.put("ęt",'t');
        twoCharacterInputToKnownOutput.put("‑i",'i');
        twoCharacterInputToKnownOutput.put("ęz",'z');
        twoCharacterInputToKnownOutput.put("ě<",' ');
        twoCharacterInputToKnownOutput.put("–8",'8');
        twoCharacterInputToKnownOutput.put("— ",' ');
        twoCharacterInputToKnownOutput.put("—<",' ');
        twoCharacterInputToKnownOutput.put("–b",'a');
        twoCharacterInputToKnownOutput.put("ěi",'i');
        twoCharacterInputToKnownOutput.put("ěn",'n');
        twoCharacterInputToKnownOutput.put("ěr",'r');
        twoCharacterInputToKnownOutput.put("–r",'s');
        twoCharacterInputToKnownOutput.put("—W",'W');
        twoCharacterInputToKnownOutput.put("–u",'u');
        twoCharacterInputToKnownOutput.put("‖ ",' ');
        twoCharacterInputToKnownOutput.put("—c",'u');
        twoCharacterInputToKnownOutput.put("—a",'a');
        twoCharacterInputToKnownOutput.put("—f",'f');
        twoCharacterInputToKnownOutput.put("—e",'e');
        twoCharacterInputToKnownOutput.put("—n",'n');
        twoCharacterInputToKnownOutput.put("—p",'p');
        twoCharacterInputToKnownOutput.put("—t",'t');
        twoCharacterInputToKnownOutput.put("—y",' ');
        twoCharacterInputToKnownOutput.put(">学",'学');
        twoCharacterInputToKnownOutput.put("∧1",'1');
        twoCharacterInputToKnownOutput.put("∧2",'2');
        twoCharacterInputToKnownOutput.put("∧<",' ');
        twoCharacterInputToKnownOutput.put("ęć",'ć');
        twoCharacterInputToKnownOutput.put("输<",' ');
        twoCharacterInputToKnownOutput.put("‖v",'v');
        twoCharacterInputToKnownOutput.put("‘C",'C');
        twoCharacterInputToKnownOutput.put("师(",'(');
        twoCharacterInputToKnownOutput.put("’(",'(');
        twoCharacterInputToKnownOutput.put("‘E",'E');
        twoCharacterInputToKnownOutput.put("’,",',');
        twoCharacterInputToKnownOutput.put("射线",'线');
        twoCharacterInputToKnownOutput.put("∧x",'x');
        twoCharacterInputToKnownOutput.put("∩<",' ');
        twoCharacterInputToKnownOutput.put("∪(",'(');
        twoCharacterInputToKnownOutput.put("‘P",'P');
        twoCharacterInputToKnownOutput.put("∩B",'B');
        twoCharacterInputToKnownOutput.put("∩C",'C');
        twoCharacterInputToKnownOutput.put("‘c",'c');
        twoCharacterInputToKnownOutput.put("’D",'D');
        twoCharacterInputToKnownOutput.put("‘g",'h');
        twoCharacterInputToKnownOutput.put("‘f",'f');
        twoCharacterInputToKnownOutput.put("‘d",'n');
        twoCharacterInputToKnownOutput.put("’I",'I');
        twoCharacterInputToKnownOutput.put("‘n",'n');
        twoCharacterInputToKnownOutput.put("∪<",' ');
        twoCharacterInputToKnownOutput.put("‘l",'l');
        twoCharacterInputToKnownOutput.put("∫(",'(');
        twoCharacterInputToKnownOutput.put("‘r",'r');
        twoCharacterInputToKnownOutput.put("∪B",'B');
        twoCharacterInputToKnownOutput.put("‘t",'x');
        twoCharacterInputToKnownOutput.put("∫1",'1');
        twoCharacterInputToKnownOutput.put("∫-",'-');
        twoCharacterInputToKnownOutput.put("对<",' ');
        twoCharacterInputToKnownOutput.put("’b",'n');
        twoCharacterInputToKnownOutput.put("’f",'h');
        twoCharacterInputToKnownOutput.put("’l",'y');
        twoCharacterInputToKnownOutput.put("’i",'i');
        twoCharacterInputToKnownOutput.put("’m",'m');
        twoCharacterInputToKnownOutput.put(">对",'对');
        twoCharacterInputToKnownOutput.put("’w",'w');
        twoCharacterInputToKnownOutput.put("∫a",'a');
        twoCharacterInputToKnownOutput.put("腹痛",'痛');
        twoCharacterInputToKnownOutput.put("∫[",'[');
        twoCharacterInputToKnownOutput.put("임명",'명');
        twoCharacterInputToKnownOutput.put("∫c",'c');
        twoCharacterInputToKnownOutput.put("∫d",'d');
        twoCharacterInputToKnownOutput.put("∫e",'e');
        twoCharacterInputToKnownOutput.put("∫r",'r');
        twoCharacterInputToKnownOutput.put("∫k",'k');
        twoCharacterInputToKnownOutput.put("∫l",'l');
        twoCharacterInputToKnownOutput.put("∫s",'s');
        twoCharacterInputToKnownOutput.put("女人",'人');
        twoCharacterInputToKnownOutput.put("∫t",'t');
        twoCharacterInputToKnownOutput.put("∫u",'u');
        twoCharacterInputToKnownOutput.put("∫v",'v');
        twoCharacterInputToKnownOutput.put(">就",'就');
        twoCharacterInputToKnownOutput.put("茶<",' ');
        twoCharacterInputToKnownOutput.put("甲状",'状');
        twoCharacterInputToKnownOutput.put("안<",' ');
        twoCharacterInputToKnownOutput.put("’à",'’');
        twoCharacterInputToKnownOutput.put("∫¹",'¹');
        twoCharacterInputToKnownOutput.put("−π",'π');
        twoCharacterInputToKnownOutput.put(" —",'—');
        twoCharacterInputToKnownOutput.put("冫<",' ');
        twoCharacterInputToKnownOutput.put(" ′",'′');
        twoCharacterInputToKnownOutput.put("\"—",'—');
        twoCharacterInputToKnownOutput.put("状(",'(');
        twoCharacterInputToKnownOutput.put("耳鸣",'鸣');
        twoCharacterInputToKnownOutput.put("\"…",'…');
        twoCharacterInputToKnownOutput.put("：(",'(');
        twoCharacterInputToKnownOutput.put("d?",'?');
        twoCharacterInputToKnownOutput.put("： ",' ');
        twoCharacterInputToKnownOutput.put("•<",' ');
        twoCharacterInputToKnownOutput.put("ī)",')');
        twoCharacterInputToKnownOutput.put("•E",'E');
        twoCharacterInputToKnownOutput.put("•T",'T');
        twoCharacterInputToKnownOutput.put("ī<",' ');
        twoCharacterInputToKnownOutput.put("•R",'R');
        twoCharacterInputToKnownOutput.put("•W",'a');
        twoCharacterInputToKnownOutput.put("e?",'?');
        twoCharacterInputToKnownOutput.put("•V",'l');
        twoCharacterInputToKnownOutput.put("•e",'•');
        twoCharacterInputToKnownOutput.put("•b",'b');
        twoCharacterInputToKnownOutput.put("：s",'s');
        twoCharacterInputToKnownOutput.put("•f",'i');
        twoCharacterInputToKnownOutput.put(" €",'e');
        twoCharacterInputToKnownOutput.put("•n",'s');
        twoCharacterInputToKnownOutput.put("：h",'h');
        twoCharacterInputToKnownOutput.put("짜다",'다');
        twoCharacterInputToKnownOutput.put("•w",'n');
        twoCharacterInputToKnownOutput.put("īg",'g');
        twoCharacterInputToKnownOutput.put("∙Δ",'Δ');
        twoCharacterInputToKnownOutput.put("īl",'l');
        twoCharacterInputToKnownOutput.put("īm",'m');
        twoCharacterInputToKnownOutput.put("īq",'q');
        twoCharacterInputToKnownOutput.put("īr",'r');
        twoCharacterInputToKnownOutput.put("īs",'s');
        twoCharacterInputToKnownOutput.put("；p",'p');
        twoCharacterInputToKnownOutput.put("īw",'w');
        twoCharacterInputToKnownOutput.put("īy",'y');
        twoCharacterInputToKnownOutput.put("īz",'z');
        twoCharacterInputToKnownOutput.put("g?",'?');
        twoCharacterInputToKnownOutput.put("…)",')');
        twoCharacterInputToKnownOutput.put(" 惩",'惩');
        twoCharacterInputToKnownOutput.put("…E",'E');
        twoCharacterInputToKnownOutput.put("…D",'D');
        twoCharacterInputToKnownOutput.put("\'…",'…');
        twoCharacterInputToKnownOutput.put("性(",'(');
        twoCharacterInputToKnownOutput.put("…U",'U');
        twoCharacterInputToKnownOutput.put("…T",'T');
        twoCharacterInputToKnownOutput.put("…a",'a');
        twoCharacterInputToKnownOutput.put("…d",'d');
        twoCharacterInputToKnownOutput.put("(…",'…');
        twoCharacterInputToKnownOutput.put("…c",'c');
        twoCharacterInputToKnownOutput.put("…i",'i');
        twoCharacterInputToKnownOutput.put(" ™",'™');
        twoCharacterInputToKnownOutput.put("…f",'f');
        twoCharacterInputToKnownOutput.put("肾上",'上');
        twoCharacterInputToKnownOutput.put("…m",'r');
        twoCharacterInputToKnownOutput.put("…l",'l');
        twoCharacterInputToKnownOutput.put("…j",'j');
        twoCharacterInputToKnownOutput.put(")‖",'‖');
        twoCharacterInputToKnownOutput.put("‧b",'b');
        twoCharacterInputToKnownOutput.put(" C",'n');
        twoCharacterInputToKnownOutput.put(" B",'e');
        twoCharacterInputToKnownOutput.put("īè",'è');
        twoCharacterInputToKnownOutput.put(")性",'性');
        twoCharacterInputToKnownOutput.put("‧i",'i');
        twoCharacterInputToKnownOutput.put("‧n",'n');
        twoCharacterInputToKnownOutput.put("晚<",' ');
        twoCharacterInputToKnownOutput.put("冷(",'(');
        twoCharacterInputToKnownOutput.put("m?",'?');
        twoCharacterInputToKnownOutput.put(" ↔",'l');
        twoCharacterInputToKnownOutput.put(",…",'…');
        twoCharacterInputToKnownOutput.put("√Ѡ",'Ѡ');
        twoCharacterInputToKnownOutput.put("状腺",'腺');
        twoCharacterInputToKnownOutput.put("n?",'?');
        twoCharacterInputToKnownOutput.put("-…",'…');
        twoCharacterInputToKnownOutput.put("입법",'법');
        twoCharacterInputToKnownOutput.put(".…",'…');
        twoCharacterInputToKnownOutput.put(". ",'B');
        twoCharacterInputToKnownOutput.put("房(",'(');
        twoCharacterInputToKnownOutput.put("/‖",'‖');
        twoCharacterInputToKnownOutput.put("/’",'r');
        twoCharacterInputToKnownOutput.put("目（",'（');
        twoCharacterInputToKnownOutput.put(" ∆",'∆');
        twoCharacterInputToKnownOutput.put(" ∈",'∈');
        twoCharacterInputToKnownOutput.put(" ∓",'∓');
        twoCharacterInputToKnownOutput.put("0…",'…');
        twoCharacterInputToKnownOutput.put(">年",'年');
        twoCharacterInputToKnownOutput.put(" ∗",'∗');
        twoCharacterInputToKnownOutput.put("1 ",'u');
        twoCharacterInputToKnownOutput.put(" ∠",'∠');
        twoCharacterInputToKnownOutput.put("r?",'e');
        twoCharacterInputToKnownOutput.put("空儿",'儿');
        twoCharacterInputToKnownOutput.put("1…",'…');
        twoCharacterInputToKnownOutput.put(" ≈",'≈');
        twoCharacterInputToKnownOutput.put("s?",'?');
        twoCharacterInputToKnownOutput.put("′,",',');
        twoCharacterInputToKnownOutput.put(" ≤",'≤');
        twoCharacterInputToKnownOutput.put(" ≥",'≥');
        twoCharacterInputToKnownOutput.put("t?",'?');
        twoCharacterInputToKnownOutput.put(" ⊆",'⊆');
        twoCharacterInputToKnownOutput.put("鸣(",'(');
        twoCharacterInputToKnownOutput.put("气候",'候');
        twoCharacterInputToKnownOutput.put(")→",'→');
        twoCharacterInputToKnownOutput.put("6–",'–');
        twoCharacterInputToKnownOutput.put(" ⋅",'⋅');
        twoCharacterInputToKnownOutput.put("유지",'지');
        twoCharacterInputToKnownOutput.put(">鼻",' ');
        twoCharacterInputToKnownOutput.put("医务",'务');
        twoCharacterInputToKnownOutput.put("7…",'…');
        twoCharacterInputToKnownOutput.put("사퇴",'퇴');
        twoCharacterInputToKnownOutput.put("≈ ",' ');
        twoCharacterInputToKnownOutput.put("(∆",'∆');
        twoCharacterInputToKnownOutput.put("≈4",'4');
        twoCharacterInputToKnownOutput.put("(−",'−');
        twoCharacterInputToKnownOutput.put("∫π",'π');
        twoCharacterInputToKnownOutput.put("(√",'√');
        twoCharacterInputToKnownOutput.put(" ⌒",'⌒');
        twoCharacterInputToKnownOutput.put("(∞",'∞');
        twoCharacterInputToKnownOutput.put("(∠",'∠');
        twoCharacterInputToKnownOutput.put("眼皮",'皮');
        twoCharacterInputToKnownOutput.put("素(",'(');
        twoCharacterInputToKnownOutput.put(")−",'−');
        twoCharacterInputToKnownOutput.put("9…",'…');
        twoCharacterInputToKnownOutput.put(")∙",'∙');
        twoCharacterInputToKnownOutput.put(">得",'得');
        twoCharacterInputToKnownOutput.put(")∧",'∧');
        twoCharacterInputToKnownOutput.put(")∩",'∩');
        twoCharacterInputToKnownOutput.put(")∪",'∪');
        twoCharacterInputToKnownOutput.put(">微",'微');
        twoCharacterInputToKnownOutput.put("*√",'√');
        twoCharacterInputToKnownOutput.put("ł;",';');
        twoCharacterInputToKnownOutput.put("ł<",' ');
        twoCharacterInputToKnownOutput.put("+∅",'∅');
        twoCharacterInputToKnownOutput.put("화당",'당');
        twoCharacterInputToKnownOutput.put("*∫",'∫');
        twoCharacterInputToKnownOutput.put("客人",'人');
        twoCharacterInputToKnownOutput.put(")≠",'≠');
        twoCharacterInputToKnownOutput.put(")≤",'≤');
        twoCharacterInputToKnownOutput.put("ń ",' ');
        twoCharacterInputToKnownOutput.put("ła",'a');
        twoCharacterInputToKnownOutput.put("łc",'c');
        twoCharacterInputToKnownOutput.put("łd",'d');
        twoCharacterInputToKnownOutput.put("łn",'n');
        twoCharacterInputToKnownOutput.put("łp",'p');
        twoCharacterInputToKnownOutput.put("łs",'s');
        twoCharacterInputToKnownOutput.put(",∞",'∞');
        twoCharacterInputToKnownOutput.put("łt",'t');
        twoCharacterInputToKnownOutput.put("ń;",';');
        twoCharacterInputToKnownOutput.put(">怀",'怀');
        twoCharacterInputToKnownOutput.put("-√",'√');
        twoCharacterInputToKnownOutput.put(">怎",'怎');
        twoCharacterInputToKnownOutput.put("-∞",'∞');
        twoCharacterInputToKnownOutput.put("정관",'관');
        twoCharacterInputToKnownOutput.put(">‖",'‖');
        twoCharacterInputToKnownOutput.put(">‘",'‘');
        twoCharacterInputToKnownOutput.put("-∫",'∫');
        twoCharacterInputToKnownOutput.put("ńc",'c');
        twoCharacterInputToKnownOutput.put("ńk",'k');
        twoCharacterInputToKnownOutput.put("ńs",'s');
        twoCharacterInputToKnownOutput.put("/√",'√');
        twoCharacterInputToKnownOutput.put("0√",'√');
        twoCharacterInputToKnownOutput.put("łó",'ó');
        twoCharacterInputToKnownOutput.put("0∫",'∫');
        twoCharacterInputToKnownOutput.put("头骨",'骨');
        twoCharacterInputToKnownOutput.put("1−",'−');
        twoCharacterInputToKnownOutput.put("1∓",'∓');
        twoCharacterInputToKnownOutput.put("łą",'ą');
        twoCharacterInputToKnownOutput.put("A…",'…');
        twoCharacterInputToKnownOutput.put("łę",'ę');
        twoCharacterInputToKnownOutput.put("B…",'…');
        twoCharacterInputToKnownOutput.put("2∙",'∙');
        twoCharacterInputToKnownOutput.put("2√",'√');
        twoCharacterInputToKnownOutput.put("3−",'−');
        twoCharacterInputToKnownOutput.put("3√",'√');
        twoCharacterInputToKnownOutput.put("便<",' ');
        twoCharacterInputToKnownOutput.put("D’",'’');
        twoCharacterInputToKnownOutput.put("粪便",'便');
        twoCharacterInputToKnownOutput.put("整形",'形');
        twoCharacterInputToKnownOutput.put("4√",'√');
        twoCharacterInputToKnownOutput.put(">想",'想');
        twoCharacterInputToKnownOutput.put("łż",'ż');
        twoCharacterInputToKnownOutput.put("5−",'−');
        twoCharacterInputToKnownOutput.put("5∙",'∙');
        twoCharacterInputToKnownOutput.put("5√",'√');
        twoCharacterInputToKnownOutput.put("B₋",'₋');
        twoCharacterInputToKnownOutput.put("3≤",'≤');
        twoCharacterInputToKnownOutput.put("3≥",'≥');
        twoCharacterInputToKnownOutput.put(":→",'→');
        twoCharacterInputToKnownOutput.put("F…",'…');
        twoCharacterInputToKnownOutput.put("6∙",'∙');
        twoCharacterInputToKnownOutput.put("6√",'√');
        twoCharacterInputToKnownOutput.put("C₋",'₋');
        twoCharacterInputToKnownOutput.put("7∙",'∙');
        twoCharacterInputToKnownOutput.put("H–",'H');
        twoCharacterInputToKnownOutput.put("H’",'i');
        twoCharacterInputToKnownOutput.put(">⅓",'⅓');
        twoCharacterInputToKnownOutput.put("무부",'부');
        twoCharacterInputToKnownOutput.put("E₀",'₀');
        twoCharacterInputToKnownOutput.put("H…",'…');
        twoCharacterInputToKnownOutput.put("8∙",'∙');
        twoCharacterInputToKnownOutput.put(">慢",'慢');
        twoCharacterInputToKnownOutput.put("’ס",'ס');
        twoCharacterInputToKnownOutput.put("时候",'候');
        twoCharacterInputToKnownOutput.put("I’",'’');
        twoCharacterInputToKnownOutput.put("I…",'…');
        twoCharacterInputToKnownOutput.put("管炎",'炎');
        twoCharacterInputToKnownOutput.put(":√",'√');
        twoCharacterInputToKnownOutput.put("H₂",'₂');
        twoCharacterInputToKnownOutput.put("H₋",'₋');
        twoCharacterInputToKnownOutput.put("L…",'…');
        twoCharacterInputToKnownOutput.put("<∞",'∞');
        twoCharacterInputToKnownOutput.put("=∑",'e');
        twoCharacterInputToKnownOutput.put("œi",'i');
        twoCharacterInputToKnownOutput.put("=√",'√');
        twoCharacterInputToKnownOutput.put("=∫",'∫');
        twoCharacterInputToKnownOutput.put(">我",'我');
        twoCharacterInputToKnownOutput.put(">−",'−');
        twoCharacterInputToKnownOutput.put("N•",'•');
        twoCharacterInputToKnownOutput.put("N…",'…');
        twoCharacterInputToKnownOutput.put(">√",'√');
        twoCharacterInputToKnownOutput.put(">∞",'∞');
        twoCharacterInputToKnownOutput.put(" ○",'○');
        twoCharacterInputToKnownOutput.put("L₀",'₀');
        twoCharacterInputToKnownOutput.put("嗽(",'(');
        twoCharacterInputToKnownOutput.put(">所",'所');
        twoCharacterInputToKnownOutput.put("檢-",'-');
        twoCharacterInputToKnownOutput.put("P’",'’');
        twoCharacterInputToKnownOutput.put(">≈",'≈');
        twoCharacterInputToKnownOutput.put("다<",' ');
        twoCharacterInputToKnownOutput.put(">手",'手');
        twoCharacterInputToKnownOutput.put("类固",'固');
        twoCharacterInputToKnownOutput.put("P•",'•');
        twoCharacterInputToKnownOutput.put("≠0",'0');
        twoCharacterInputToKnownOutput.put("≠<",' ');
        twoCharacterInputToKnownOutput.put(">≥",'≥');
        twoCharacterInputToKnownOutput.put("二月",'月');
        twoCharacterInputToKnownOutput.put("≠f",'f');
        twoCharacterInputToKnownOutput.put("A∩",'∩');
        twoCharacterInputToKnownOutput.put("瓶<",' ');
        twoCharacterInputToKnownOutput.put("A∪",'∪');
        twoCharacterInputToKnownOutput.put("O₂",'₂');
        twoCharacterInputToKnownOutput.put("R…",'…');
        twoCharacterInputToKnownOutput.put("표단",'단');
        twoCharacterInputToKnownOutput.put("眼科",'科');
        twoCharacterInputToKnownOutput.put("≠y",'y');
        twoCharacterInputToKnownOutput.put("B∩",'∩');
        twoCharacterInputToKnownOutput.put("P₀",'₀');
        twoCharacterInputToKnownOutput.put("≤ ",' ');
        twoCharacterInputToKnownOutput.put("ś<",' ');
        twoCharacterInputToKnownOutput.put("단<",' ');
        twoCharacterInputToKnownOutput.put("ś?",' ');
        twoCharacterInputToKnownOutput.put("≤1",'1');
        twoCharacterInputToKnownOutput.put("Śc",'c');
        twoCharacterInputToKnownOutput.put("≤2",'2');
        twoCharacterInputToKnownOutput.put("≤,",',');
        twoCharacterInputToKnownOutput.put("≤-",'-');
        twoCharacterInputToKnownOutput.put("T…",'…');
        twoCharacterInputToKnownOutput.put("Śl",'l');
        twoCharacterInputToKnownOutput.put("Śm",'m');
        twoCharacterInputToKnownOutput.put("Śn",'n');
        twoCharacterInputToKnownOutput.put("Śp",'p');
        twoCharacterInputToKnownOutput.put("Śr",'r');
        twoCharacterInputToKnownOutput.put("≤<",' ');
        twoCharacterInputToKnownOutput.put("Św",'w');
        twoCharacterInputToKnownOutput.put("≥ ",' ');
        twoCharacterInputToKnownOutput.put("≥,",',');
        twoCharacterInputToKnownOutput.put("śc",'c');
        twoCharacterInputToKnownOutput.put("≥1",'1');
        twoCharacterInputToKnownOutput.put("≥3",'3');
        twoCharacterInputToKnownOutput.put("≥-",'-');
        twoCharacterInputToKnownOutput.put("śl",'l');
        twoCharacterInputToKnownOutput.put("śn",'n');
        twoCharacterInputToKnownOutput.put("≥<",' ');
        twoCharacterInputToKnownOutput.put("…ל",'ל');
        twoCharacterInputToKnownOutput.put("śp",'p');
        twoCharacterInputToKnownOutput.put("śr",'r');
        twoCharacterInputToKnownOutput.put("św",'w');
        twoCharacterInputToKnownOutput.put("大麻",'麻');
        twoCharacterInputToKnownOutput.put("≤h",'h');
        twoCharacterInputToKnownOutput.put("…ש",'ש');
        twoCharacterInputToKnownOutput.put("B⊆",'⊆');
        twoCharacterInputToKnownOutput.put("≤g",'g');
        twoCharacterInputToKnownOutput.put("nᴾ",'ᴾ');
        twoCharacterInputToKnownOutput.put("≤x",'x');
        twoCharacterInputToKnownOutput.put("≥b",'b');
        twoCharacterInputToKnownOutput.put("白内",'内');
        twoCharacterInputToKnownOutput.put("丘疹",'疹');
        twoCharacterInputToKnownOutput.put("W…",'…');
        twoCharacterInputToKnownOutput.put("Pℓ",'ℓ');
        twoCharacterInputToKnownOutput.put("U₀",'₀');
        twoCharacterInputToKnownOutput.put("气味",'味');
        twoCharacterInputToKnownOutput.put("五月",'月');
        twoCharacterInputToKnownOutput.put("ść",'ć');
        twoCharacterInputToKnownOutput.put(">排",'排');
        twoCharacterInputToKnownOutput.put("F⊥",'⊥');
        twoCharacterInputToKnownOutput.put("-○",'○');
        twoCharacterInputToKnownOutput.put("日咳",'咳');
        twoCharacterInputToKnownOutput.put(" ➡",'x');
        twoCharacterInputToKnownOutput.put("四月",'月');
        twoCharacterInputToKnownOutput.put("尿(",'(');
        twoCharacterInputToKnownOutput.put("进<",' ');
        twoCharacterInputToKnownOutput.put("a’",'c');
        twoCharacterInputToKnownOutput.put("담<",' ');
        twoCharacterInputToKnownOutput.put("ִשׁ",'שׁ');
        twoCharacterInputToKnownOutput.put("b…",'…');
        twoCharacterInputToKnownOutput.put("气喘",'喘');
        twoCharacterInputToKnownOutput.put("牙医",'医');
        twoCharacterInputToKnownOutput.put("ū ",' ');
        twoCharacterInputToKnownOutput.put("c’",'’');
        twoCharacterInputToKnownOutput.put("ū<",' ');
        twoCharacterInputToKnownOutput.put("d‘",'‘');
        twoCharacterInputToKnownOutput.put("a₀",'₀');
        twoCharacterInputToKnownOutput.put("ͼ<",' ');
        twoCharacterInputToKnownOutput.put("d‧",'‧');
        twoCharacterInputToKnownOutput.put("e–",'t');
        twoCharacterInputToKnownOutput.put("e—",'—');
        twoCharacterInputToKnownOutput.put("R≥",' ');
        twoCharacterInputToKnownOutput.put("; ",' ');
        twoCharacterInputToKnownOutput.put("ūs",'s');
        twoCharacterInputToKnownOutput.put("ūz",'z');
        twoCharacterInputToKnownOutput.put("ָשׁ",'שׁ');
        twoCharacterInputToKnownOutput.put("f’",'e');
        twoCharacterInputToKnownOutput.put("당<",' ');
        twoCharacterInputToKnownOutput.put("f•",'•');
        twoCharacterInputToKnownOutput.put("f…",'…');
        twoCharacterInputToKnownOutput.put("g’",'’');
        twoCharacterInputToKnownOutput.put("ֹשׂ",'שׂ');
        twoCharacterInputToKnownOutput.put("g…",'…');
        twoCharacterInputToKnownOutput.put("饥饿",'饿');
        twoCharacterInputToKnownOutput.put("[↪",'↪');
        twoCharacterInputToKnownOutput.put("h’",'’');
        twoCharacterInputToKnownOutput.put(">收",'收');
        twoCharacterInputToKnownOutput.put("관리",'리');
        twoCharacterInputToKnownOutput.put("h…",'…');
        twoCharacterInputToKnownOutput.put("支气",'气');
        twoCharacterInputToKnownOutput.put("퇴<",' ');
        twoCharacterInputToKnownOutput.put("热(",'(');
        twoCharacterInputToKnownOutput.put("f₀",'₀');
        twoCharacterInputToKnownOutput.put("i…",'…');
        twoCharacterInputToKnownOutput.put("U⊥",'⊥');
        twoCharacterInputToKnownOutput.put("真<",' ');
        twoCharacterInputToKnownOutput.put("眠(",'(');
        twoCharacterInputToKnownOutput.put(">文",'文');
        twoCharacterInputToKnownOutput.put("k’",'’');
        twoCharacterInputToKnownOutput.put("k…",'…');
        twoCharacterInputToKnownOutput.put("[√",'√');
        twoCharacterInputToKnownOutput.put("识<",' ');
        twoCharacterInputToKnownOutput.put("l–",'–');
        twoCharacterInputToKnownOutput.put("l’",'’');
        twoCharacterInputToKnownOutput.put("장<",' ');
        twoCharacterInputToKnownOutput.put("l…",'…');
        twoCharacterInputToKnownOutput.put("m—",'—');
        twoCharacterInputToKnownOutput.put("m…",'…');
        twoCharacterInputToKnownOutput.put("血液",'液');
        twoCharacterInputToKnownOutput.put(">无",'无');
        twoCharacterInputToKnownOutput.put("≠π",'π');
        twoCharacterInputToKnownOutput.put("n–",'o');
        twoCharacterInputToKnownOutput.put("n—",'—');
        twoCharacterInputToKnownOutput.put("耳朵",'朵');
        twoCharacterInputToKnownOutput.put("n…",'…');
        twoCharacterInputToKnownOutput.put(">时",'时');
        twoCharacterInputToKnownOutput.put("o‑",'‑');
        twoCharacterInputToKnownOutput.put("o…",'…');
        twoCharacterInputToKnownOutput.put("o‧",'‧');
        twoCharacterInputToKnownOutput.put("a−",'−');
        twoCharacterInputToKnownOutput.put("n₂",'₂');
        twoCharacterInputToKnownOutput.put("a√",'√');
        twoCharacterInputToKnownOutput.put("腺(",'(');
        twoCharacterInputToKnownOutput.put("r—",'—');
        twoCharacterInputToKnownOutput.put("ź ",' ');
        twoCharacterInputToKnownOutput.put("a∧",'∧');
        twoCharacterInputToKnownOutput.put("b√",'√');
        twoCharacterInputToKnownOutput.put("屑(",'(');
        twoCharacterInputToKnownOutput.put("s–",'a');
        twoCharacterInputToKnownOutput.put("s—",'—');
        twoCharacterInputToKnownOutput.put("ź<",' ');
        twoCharacterInputToKnownOutput.put("c∆",'∆');
        twoCharacterInputToKnownOutput.put("c∈",'∈');
        twoCharacterInputToKnownOutput.put("s‘",'e');
        twoCharacterInputToKnownOutput.put("法<",' ');
        twoCharacterInputToKnownOutput.put("g↓",'↓');
        twoCharacterInputToKnownOutput.put("p₀",'₀');
        twoCharacterInputToKnownOutput.put("c∙",'∙');
        twoCharacterInputToKnownOutput.put("等<",' ');
        twoCharacterInputToKnownOutput.put("a≥",'≥');
        twoCharacterInputToKnownOutput.put("ż ",' ');
        twoCharacterInputToKnownOutput.put("źd",'d');
        twoCharacterInputToKnownOutput.put("h→",'→');
        twoCharacterInputToKnownOutput.put("跟<",' ');
        twoCharacterInputToKnownOutput.put("źg",'g');
        twoCharacterInputToKnownOutput.put("źm",'m');
        twoCharacterInputToKnownOutput.put("źn",'n');
        twoCharacterInputToKnownOutput.put("źr",'r');
        twoCharacterInputToKnownOutput.put("u–",'–');
        twoCharacterInputToKnownOutput.put("ż<",' ');
        twoCharacterInputToKnownOutput.put("i→",'→');
        twoCharacterInputToKnownOutput.put("麻疹",'疹');
        twoCharacterInputToKnownOutput.put("u•",'•');
        twoCharacterInputToKnownOutput.put("u…",'…');
        twoCharacterInputToKnownOutput.put("⊆ ",' ');
        twoCharacterInputToKnownOutput.put("e∧",'∧');
        twoCharacterInputToKnownOutput.put("ża",'a');
        twoCharacterInputToKnownOutput.put("żb",'b');
        twoCharacterInputToKnownOutput.put("żd",'d');
        twoCharacterInputToKnownOutput.put("że",'e');
        twoCharacterInputToKnownOutput.put("żi",'i');
        twoCharacterInputToKnownOutput.put("s₂",'₂');
        twoCharacterInputToKnownOutput.put("żk",'k');
        twoCharacterInputToKnownOutput.put("v…",'…');
        twoCharacterInputToKnownOutput.put("żl",'l');
        twoCharacterInputToKnownOutput.put("żn",'n');
        twoCharacterInputToKnownOutput.put("żo",'o');
        twoCharacterInputToKnownOutput.put("żs",'s');
        twoCharacterInputToKnownOutput.put("지 ",' ');
        twoCharacterInputToKnownOutput.put("⊆C",'C');
        twoCharacterInputToKnownOutput.put("żu",'u');
        twoCharacterInputToKnownOutput.put("w‑",'‑');
        twoCharacterInputToKnownOutput.put("w–",' ');
        twoCharacterInputToKnownOutput.put(">月",'月');
        twoCharacterInputToKnownOutput.put(">有",'有');
        twoCharacterInputToKnownOutput.put("w…",'…');
        twoCharacterInputToKnownOutput.put("w‧",'‧');
        twoCharacterInputToKnownOutput.put("g∙",'∙');
        twoCharacterInputToKnownOutput.put(">✖",'i');
        twoCharacterInputToKnownOutput.put("l→",'→');
        twoCharacterInputToKnownOutput.put(">木",'木');
        twoCharacterInputToKnownOutput.put(">本",'本');
        twoCharacterInputToKnownOutput.put("y—",'—');
        twoCharacterInputToKnownOutput.put("m→",'→');
        twoCharacterInputToKnownOutput.put("胆囊",'囊');
        twoCharacterInputToKnownOutput.put("y…",'…');
        twoCharacterInputToKnownOutput.put("źć",'ć');
        twoCharacterInputToKnownOutput.put("진<",' ');
        twoCharacterInputToKnownOutput.put("rℓ",'ℓ');
        twoCharacterInputToKnownOutput.put("n→",'→');
        twoCharacterInputToKnownOutput.put("生(",'(');
        twoCharacterInputToKnownOutput.put("z…",'…');
        twoCharacterInputToKnownOutput.put("生 ",' ');
        twoCharacterInputToKnownOutput.put("Γ(",'(');
        twoCharacterInputToKnownOutput.put("试<",' ');
        twoCharacterInputToKnownOutput.put("l∆",'∆');
        twoCharacterInputToKnownOutput.put("żę",'ę');
        twoCharacterInputToKnownOutput.put("k∫",'∫');
        twoCharacterInputToKnownOutput.put("视<",' ');
        twoCharacterInputToKnownOutput.put("Γm",'m');
        twoCharacterInputToKnownOutput.put("ΔU",'U');
        twoCharacterInputToKnownOutput.put("ΔV",'V');
        twoCharacterInputToKnownOutput.put("m∙",'∙');
        twoCharacterInputToKnownOutput.put("肤学",'学');
        twoCharacterInputToKnownOutput.put("Δh",' ');
        twoCharacterInputToKnownOutput.put("k≠",'≠');
        twoCharacterInputToKnownOutput.put("Δp",'t');
        twoCharacterInputToKnownOutput.put("Δs",'s');
        twoCharacterInputToKnownOutput.put("Δv",'v');
        twoCharacterInputToKnownOutput.put("风湿",'湿');
        twoCharacterInputToKnownOutput.put("黄疸",'疸');
        twoCharacterInputToKnownOutput.put("Η ",' ');
        twoCharacterInputToKnownOutput.put("Η/",'/');
        twoCharacterInputToKnownOutput.put("Θ ",' ');
        twoCharacterInputToKnownOutput.put("Θ)",')');
        twoCharacterInputToKnownOutput.put("Θ1",'1');
        twoCharacterInputToKnownOutput.put("Θ2",'2');
        twoCharacterInputToKnownOutput.put("₀+",'+');
        twoCharacterInputToKnownOutput.put("₀)",')');
        twoCharacterInputToKnownOutput.put("₀(",'(');
        twoCharacterInputToKnownOutput.put("₀/",'/');
        twoCharacterInputToKnownOutput.put("₀?",'e');
        twoCharacterInputToKnownOutput.put("₀<",' ');
        twoCharacterInputToKnownOutput.put("שָׁ",'ָ');
        twoCharacterInputToKnownOutput.put("שֶׁ",'ֶ');
        twoCharacterInputToKnownOutput.put("שַׁ",'ַ');
        twoCharacterInputToKnownOutput.put("שְׁ",'ְ');
        twoCharacterInputToKnownOutput.put("r−",'−');
        twoCharacterInputToKnownOutput.put("r√",'√');
        twoCharacterInputToKnownOutput.put("₂.",'.');
        twoCharacterInputToKnownOutput.put("怎么",'么');
        twoCharacterInputToKnownOutput.put("שָׂ",'ָ');
        twoCharacterInputToKnownOutput.put("שֶׂ",'ֶ');
        twoCharacterInputToKnownOutput.put("r∧",'∧');
        twoCharacterInputToKnownOutput.put("用 ",' ');
        twoCharacterInputToKnownOutput.put("שִׂ",'ִ');
        twoCharacterInputToKnownOutput.put("שׁב",'ב');
        twoCharacterInputToKnownOutput.put("s−",'−');
        twoCharacterInputToKnownOutput.put("₂O",'O');
        twoCharacterInputToKnownOutput.put("r≈",'≈');
        twoCharacterInputToKnownOutput.put("שׂה",'ה');
        twoCharacterInputToKnownOutput.put("s∫",'∫');
        twoCharacterInputToKnownOutput.put("₂r",'r');
        twoCharacterInputToKnownOutput.put("y→",'→');
        twoCharacterInputToKnownOutput.put("u∗",'∗');
        twoCharacterInputToKnownOutput.put("냉전",'전');
        twoCharacterInputToKnownOutput.put("֮<",' ');
        twoCharacterInputToKnownOutput.put("t≥",'≥');
        twoCharacterInputToKnownOutput.put("r⊥",'⊥');
        twoCharacterInputToKnownOutput.put("ְ<",' ');
        twoCharacterInputToKnownOutput.put("猩红",'红');
        twoCharacterInputToKnownOutput.put("有的",'的');
        twoCharacterInputToKnownOutput.put("x−",'−');
        twoCharacterInputToKnownOutput.put("x√",'√');
        twoCharacterInputToKnownOutput.put("折<",' ');
        twoCharacterInputToKnownOutput.put("x∧",'∧');
        twoCharacterInputToKnownOutput.put("报纸",'纸');
        twoCharacterInputToKnownOutput.put("y∙",'∙');
        twoCharacterInputToKnownOutput.put("ƒ ",' ');
        twoCharacterInputToKnownOutput.put("Πr",'r');
        twoCharacterInputToKnownOutput.put("ƒ\'",'\'');
        twoCharacterInputToKnownOutput.put(" 관",'관');
        twoCharacterInputToKnownOutput.put("x≠",'≠');
        twoCharacterInputToKnownOutput.put("ƒ=",'=');
        twoCharacterInputToKnownOutput.put("x≤",'≤');
        twoCharacterInputToKnownOutput.put("x≥",'≥');
        twoCharacterInputToKnownOutput.put("z∧",'∧');
        twoCharacterInputToKnownOutput.put("ִ<",' ');
        twoCharacterInputToKnownOutput.put("y≥",'≥');
        twoCharacterInputToKnownOutput.put("₋B",'B');
        twoCharacterInputToKnownOutput.put("|√",'√');
        twoCharacterInputToKnownOutput.put("₋P",'P');
        twoCharacterInputToKnownOutput.put("₋V",'V');
        twoCharacterInputToKnownOutput.put("么的",'的');
        twoCharacterInputToKnownOutput.put("Φ ",'t');
        twoCharacterInputToKnownOutput.put("₋c",'c');
        twoCharacterInputToKnownOutput.put("₋k",'k');
        twoCharacterInputToKnownOutput.put("ַ ",' ');
        twoCharacterInputToKnownOutput.put("₋s",'s');
        twoCharacterInputToKnownOutput.put("ַ.",'.');
        twoCharacterInputToKnownOutput.put("|≤",'≤');
        twoCharacterInputToKnownOutput.put("ָ<",' ');
        twoCharacterInputToKnownOutput.put("Ω ",' ');
        twoCharacterInputToKnownOutput.put("ֹ<",' ');
        twoCharacterInputToKnownOutput.put("男 ",' ');
        twoCharacterInputToKnownOutput.put("כִּ",'ִ');
        twoCharacterInputToKnownOutput.put("Ωf",'f');
        twoCharacterInputToKnownOutput.put("־ ",' ');
        twoCharacterInputToKnownOutput.put("f○",'○');
        twoCharacterInputToKnownOutput.put("医师",'师');
        twoCharacterInputToKnownOutput.put("⊥=",'=');
        twoCharacterInputToKnownOutput.put("־<",' ');
        twoCharacterInputToKnownOutput.put("֑ה",'ה');
        twoCharacterInputToKnownOutput.put("⊥r",'r');
        twoCharacterInputToKnownOutput.put("电脑",'脑');
        twoCharacterInputToKnownOutput.put("牛奶",'奶');
        twoCharacterInputToKnownOutput.put("照相",'相');
        twoCharacterInputToKnownOutput.put("泻(",'(');
        twoCharacterInputToKnownOutput.put("ΔΤ",'Τ');
        twoCharacterInputToKnownOutput.put("α(",'(');
        twoCharacterInputToKnownOutput.put("α+",'+');
        twoCharacterInputToKnownOutput.put("α,",',');
        twoCharacterInputToKnownOutput.put("α-",'-');
        twoCharacterInputToKnownOutput.put("α.",' ');
        twoCharacterInputToKnownOutput.put("α/",'/');
        twoCharacterInputToKnownOutput.put("Δθ",'θ');
        twoCharacterInputToKnownOutput.put("부<",' ');
        twoCharacterInputToKnownOutput.put("α<",' ');
        twoCharacterInputToKnownOutput.put("α=",'=');
        twoCharacterInputToKnownOutput.put("β ",' ');
        twoCharacterInputToKnownOutput.put("β+",'+');
        twoCharacterInputToKnownOutput.put("ׂ<",' ');
        twoCharacterInputToKnownOutput.put("β,",',');
        twoCharacterInputToKnownOutput.put("β-",'-');
        twoCharacterInputToKnownOutput.put("부(",'(');
        twoCharacterInputToKnownOutput.put("֔ו",'ו');
        twoCharacterInputToKnownOutput.put("γ ",' ');
        twoCharacterInputToKnownOutput.put("αc",'c');
        twoCharacterInputToKnownOutput.put("γ,",',');
        twoCharacterInputToKnownOutput.put("γ-",'-');
        twoCharacterInputToKnownOutput.put("αs",'s');
        twoCharacterInputToKnownOutput.put("αt",'t');
        twoCharacterInputToKnownOutput.put("γ<",' ');
        twoCharacterInputToKnownOutput.put("βi",'i');
        twoCharacterInputToKnownOutput.put("δ,",'(');
        twoCharacterInputToKnownOutput.put("֖ו",'ו');
        twoCharacterInputToKnownOutput.put("βy",'y');
        twoCharacterInputToKnownOutput.put("δ<",'<');
        twoCharacterInputToKnownOutput.put("δ>",'h');
        twoCharacterInputToKnownOutput.put("ε)",')');
        twoCharacterInputToKnownOutput.put("γm",'m');
        twoCharacterInputToKnownOutput.put("ε0",'0');
        twoCharacterInputToKnownOutput.put("δT",'T');
        twoCharacterInputToKnownOutput.put("α±",'±');
        twoCharacterInputToKnownOutput.put("관<",' ');
        twoCharacterInputToKnownOutput.put("ε>",' ');
        twoCharacterInputToKnownOutput.put("δh",' ');
        twoCharacterInputToKnownOutput.put("δp",'s');
        twoCharacterInputToKnownOutput.put("관)",')');
        twoCharacterInputToKnownOutput.put("δt",'t');
        twoCharacterInputToKnownOutput.put("阴茎",'茎');
        twoCharacterInputToKnownOutput.put("候<",' ');
        twoCharacterInputToKnownOutput.put("εr",'r');
        twoCharacterInputToKnownOutput.put("θ(",'(');
        twoCharacterInputToKnownOutput.put("θ+",'+');
        twoCharacterInputToKnownOutput.put("θ,",',');
        twoCharacterInputToKnownOutput.put("θ-",'-');
        twoCharacterInputToKnownOutput.put("₂θ",'θ');
        twoCharacterInputToKnownOutput.put("θ/",'/');
        twoCharacterInputToKnownOutput.put("θ1",'2');
        twoCharacterInputToKnownOutput.put("θ<",' ');
        twoCharacterInputToKnownOutput.put("θ=",'=');
        twoCharacterInputToKnownOutput.put("θ>",'>');
        twoCharacterInputToKnownOutput.put("θ?",'r');
        twoCharacterInputToKnownOutput.put("֛י",'י');
        twoCharacterInputToKnownOutput.put("θ]",']');
        twoCharacterInputToKnownOutput.put("θ_",'_');
        twoCharacterInputToKnownOutput.put("θc",'c');
        twoCharacterInputToKnownOutput.put("θd",'d');
        twoCharacterInputToKnownOutput.put("θi",'i');
        twoCharacterInputToKnownOutput.put("θo",'o');
        twoCharacterInputToKnownOutput.put("λ ",' ');
        twoCharacterInputToKnownOutput.put("λ<",' ');
        twoCharacterInputToKnownOutput.put("λ=",'=');
        twoCharacterInputToKnownOutput.put("与<",' ');
        twoCharacterInputToKnownOutput.put("课<",' ');
        twoCharacterInputToKnownOutput.put("岛素",'素');
        twoCharacterInputToKnownOutput.put("λN",'s');
        twoCharacterInputToKnownOutput.put("到<",' ');
        twoCharacterInputToKnownOutput.put("形术",'术');
        twoCharacterInputToKnownOutput.put("膨胀",'胀');
        twoCharacterInputToKnownOutput.put("연방",'방');
        twoCharacterInputToKnownOutput.put(">没",'没');
        twoCharacterInputToKnownOutput.put("θ÷",'÷');
        twoCharacterInputToKnownOutput.put("π)",')');
        twoCharacterInputToKnownOutput.put("π,",'1');
        twoCharacterInputToKnownOutput.put("π.",'.');
        twoCharacterInputToKnownOutput.put("ב(",'(');
        twoCharacterInputToKnownOutput.put("ב,",',');
        twoCharacterInputToKnownOutput.put("π<",' ');
        twoCharacterInputToKnownOutput.put("ב-",'-');
        twoCharacterInputToKnownOutput.put("π=",'=');
        twoCharacterInputToKnownOutput.put("ב.",'.');
        twoCharacterInputToKnownOutput.put("ב/",'/');
        twoCharacterInputToKnownOutput.put("πN",'N');
        twoCharacterInputToKnownOutput.put("ג ",' ');
        twoCharacterInputToKnownOutput.put("֣ו",'ו');
        twoCharacterInputToKnownOutput.put("ג\'",'\'');
        twoCharacterInputToKnownOutput.put("ג(",'(');
        twoCharacterInputToKnownOutput.put("π]",']');
        twoCharacterInputToKnownOutput.put("֣ר",'ר');
        twoCharacterInputToKnownOutput.put("πf",'f');
        twoCharacterInputToKnownOutput.put("πk",'k');
        twoCharacterInputToKnownOutput.put("ד ",' ');
        twoCharacterInputToKnownOutput.put("֤ה",'ה');
        twoCharacterInputToKnownOutput.put("πr",'r');
        twoCharacterInputToKnownOutput.put("认识",'识');
        twoCharacterInputToKnownOutput.put("ד)",')');
        twoCharacterInputToKnownOutput.put("上腺",'腺');
        twoCharacterInputToKnownOutput.put("ד/",'/');
        twoCharacterInputToKnownOutput.put("σ ",' ');
        twoCharacterInputToKnownOutput.put("喉头",'头');
        twoCharacterInputToKnownOutput.put("σ<",' ');
        twoCharacterInputToKnownOutput.put("ה-",'-');
        twoCharacterInputToKnownOutput.put("ה.",' ');
        twoCharacterInputToKnownOutput.put("σ=",'=');
        twoCharacterInputToKnownOutput.put("ה/",'/');
        twoCharacterInputToKnownOutput.put("֥ר",'ר');
        twoCharacterInputToKnownOutput.put("τ(",'(');
        twoCharacterInputToKnownOutput.put("ה?",' ');
        twoCharacterInputToKnownOutput.put("€ ",' ');
        twoCharacterInputToKnownOutput.put("τ=",'=');
        twoCharacterInputToKnownOutput.put("€)",')');
        twoCharacterInputToKnownOutput.put("€3",' ');
        twoCharacterInputToKnownOutput.put("€1",' ');
        twoCharacterInputToKnownOutput.put("ז ",' ');
        twoCharacterInputToKnownOutput.put("ז\'",'\'');
        twoCharacterInputToKnownOutput.put("ז/",'/');
        twoCharacterInputToKnownOutput.put("φ/",'/');
        twoCharacterInputToKnownOutput.put("ח ",' ');
        twoCharacterInputToKnownOutput.put("ח)",')');
        twoCharacterInputToKnownOutput.put("ח/",'/');
        twoCharacterInputToKnownOutput.put("微弱",'弱');
        twoCharacterInputToKnownOutput.put("ט)",')');
        twoCharacterInputToKnownOutput.put("ט/",'/');
        twoCharacterInputToKnownOutput.put("י ",' ');
        twoCharacterInputToKnownOutput.put("י)",')');
        twoCharacterInputToKnownOutput.put("י,",',');
        twoCharacterInputToKnownOutput.put("ψ=",'=');
        twoCharacterInputToKnownOutput.put("ω)",')');
        twoCharacterInputToKnownOutput.put("֪ת",'ת');
        twoCharacterInputToKnownOutput.put("י<",' ');
        twoCharacterInputToKnownOutput.put("ω,",',');
        twoCharacterInputToKnownOutput.put("ך ",' ');
        twoCharacterInputToKnownOutput.put("ך,",',');
        twoCharacterInputToKnownOutput.put("ω<",' ');
        twoCharacterInputToKnownOutput.put("ω=",'=');
        twoCharacterInputToKnownOutput.put("ω?",'n');
        twoCharacterInputToKnownOutput.put("ך?",' ');
        twoCharacterInputToKnownOutput.put("[檢",'檢');
        twoCharacterInputToKnownOutput.put("כ(",'(');
        twoCharacterInputToKnownOutput.put("ω^",'^');
        twoCharacterInputToKnownOutput.put("ωf",'f');
        twoCharacterInputToKnownOutput.put("内障",'障');
        twoCharacterInputToKnownOutput.put("ωi",'i');
        twoCharacterInputToKnownOutput.put("症状",'状');
        twoCharacterInputToKnownOutput.put("כ<",' ');
        twoCharacterInputToKnownOutput.put("ωt",'t');
        twoCharacterInputToKnownOutput.put("ל(",'(');
        twoCharacterInputToKnownOutput.put("ל)",')');
        twoCharacterInputToKnownOutput.put("ל,",',');
        twoCharacterInputToKnownOutput.put("ל-",'-');
        twoCharacterInputToKnownOutput.put("ל/",'/');
        twoCharacterInputToKnownOutput.put("ְ֮",'֮');
        twoCharacterInputToKnownOutput.put("⋅ ",' ');
        twoCharacterInputToKnownOutput.put("ְַ",'ַ');
        twoCharacterInputToKnownOutput.put("ω²",'²');
        twoCharacterInputToKnownOutput.put("ְּ",'ּ');
        twoCharacterInputToKnownOutput.put("你好",'好');
        twoCharacterInputToKnownOutput.put("ְב",'ב');
        twoCharacterInputToKnownOutput.put("ְג",'ג');
        twoCharacterInputToKnownOutput.put("ְד",'ד');
        twoCharacterInputToKnownOutput.put("ְה",'ה');
        twoCharacterInputToKnownOutput.put("ְו",'ו');
        twoCharacterInputToKnownOutput.put("ְז",'ז');
        twoCharacterInputToKnownOutput.put("αθ",'θ');
        twoCharacterInputToKnownOutput.put("ְח",'ח');
        twoCharacterInputToKnownOutput.put("ְי",'י');
        twoCharacterInputToKnownOutput.put("ְכ",'כ');
        twoCharacterInputToKnownOutput.put("ְל",'ל');
        twoCharacterInputToKnownOutput.put("ְמ",'מ');
        twoCharacterInputToKnownOutput.put("ן.",' ');
        twoCharacterInputToKnownOutput.put("ן/",'/');
        twoCharacterInputToKnownOutput.put("ְס",'ס');
        twoCharacterInputToKnownOutput.put("고위",'위');
        twoCharacterInputToKnownOutput.put("ְע",'ע');
        twoCharacterInputToKnownOutput.put("ְצ",'צ');
        twoCharacterInputToKnownOutput.put("ְק",'ק');
        twoCharacterInputToKnownOutput.put("ְר",'ר');
        twoCharacterInputToKnownOutput.put("ְת",'ת');
        twoCharacterInputToKnownOutput.put("γΔ",'Δ');
        twoCharacterInputToKnownOutput.put("נ(",'(');
        twoCharacterInputToKnownOutput.put("ֱי",'י');
        twoCharacterInputToKnownOutput.put("נ/",'/');
        twoCharacterInputToKnownOutput.put("丢<",' ');
        twoCharacterInputToKnownOutput.put("נ<",' ');
        twoCharacterInputToKnownOutput.put("ֲב",'ב');
        twoCharacterInputToKnownOutput.put("ֲג",'ג');
        twoCharacterInputToKnownOutput.put("ִ֛",'֛');
        twoCharacterInputToKnownOutput.put("ֲנ",'נ');
        twoCharacterInputToKnownOutput.put("ס/",'/');
        twoCharacterInputToKnownOutput.put("ֲס",'ס');
        twoCharacterInputToKnownOutput.put("방국",'국');
        twoCharacterInputToKnownOutput.put("ֲצ",'צ');
        twoCharacterInputToKnownOutput.put("ֲר",'ר');
        twoCharacterInputToKnownOutput.put("ֲש",'ש');
        twoCharacterInputToKnownOutput.put("ע ",' ');
        twoCharacterInputToKnownOutput.put("δθ",'θ');
        twoCharacterInputToKnownOutput.put("臂 ",' ');
        twoCharacterInputToKnownOutput.put("严 ",' ');
        twoCharacterInputToKnownOutput.put("ִב",'ב');
        twoCharacterInputToKnownOutput.put("ף ",' ');
        twoCharacterInputToKnownOutput.put("ִג",'ג');
        twoCharacterInputToKnownOutput.put("ִד",'ד');
        twoCharacterInputToKnownOutput.put("ִה",'ה');
        twoCharacterInputToKnownOutput.put("ִו",'ו');
        twoCharacterInputToKnownOutput.put("ִז",'ז');
        twoCharacterInputToKnownOutput.put("ִט",'ט');
        twoCharacterInputToKnownOutput.put("ִכ",'כ');
        twoCharacterInputToKnownOutput.put("ֵּ",'ּ');
        twoCharacterInputToKnownOutput.put("ִל",'ל');
        twoCharacterInputToKnownOutput.put("ִן",'ן');
        twoCharacterInputToKnownOutput.put("ִנ",'נ');
        twoCharacterInputToKnownOutput.put("ֶ֣",'֣');
        twoCharacterInputToKnownOutput.put("ִפ",'ִ');
        twoCharacterInputToKnownOutput.put("ִצ",'צ');
        twoCharacterInputToKnownOutput.put("ִק",'ק');
        twoCharacterInputToKnownOutput.put("ִר",'ר');
        twoCharacterInputToKnownOutput.put("ִש",'ש');
        twoCharacterInputToKnownOutput.put("ִת",'ת');
        twoCharacterInputToKnownOutput.put("ֵב",'ב');
        twoCharacterInputToKnownOutput.put("ֵג",'ג');
        twoCharacterInputToKnownOutput.put("ֵד",'ד');
        twoCharacterInputToKnownOutput.put("ֵה",'ה');
        twoCharacterInputToKnownOutput.put("ֵח",'ח');
        twoCharacterInputToKnownOutput.put("ֵט",'ט');
        twoCharacterInputToKnownOutput.put("ֵי",'י');
        twoCharacterInputToKnownOutput.put("ֵך",'ך');
        twoCharacterInputToKnownOutput.put("ֵמ",'מ');
        twoCharacterInputToKnownOutput.put("ֶֿ",'ֿ');
        twoCharacterInputToKnownOutput.put("ֵנ",'נ');
        twoCharacterInputToKnownOutput.put("ֵס",'ס');
        twoCharacterInputToKnownOutput.put("ֵע",'ע');
        twoCharacterInputToKnownOutput.put("ַ֥",'֥');
        twoCharacterInputToKnownOutput.put("ֵף",'ף');
        twoCharacterInputToKnownOutput.put("ֵפ",'פ');
        twoCharacterInputToKnownOutput.put("ֵץ",'ץ');
        twoCharacterInputToKnownOutput.put("ֵצ",'צ');
        twoCharacterInputToKnownOutput.put("ֵק",'ק');
        twoCharacterInputToKnownOutput.put("ֵר",'ר');
        twoCharacterInputToKnownOutput.put("ַ֪",'֪');
        twoCharacterInputToKnownOutput.put("ֵת",'ת');
        twoCharacterInputToKnownOutput.put("ָ֑",'֑');
        twoCharacterInputToKnownOutput.put("ְַ",'ְ');
        twoCharacterInputToKnownOutput.put("员(",'(');
        twoCharacterInputToKnownOutput.put("ץ ",' ');
        twoCharacterInputToKnownOutput.put("ֶג",'ג');
        twoCharacterInputToKnownOutput.put("ֶד",'ד');
        twoCharacterInputToKnownOutput.put("ֶה",'ה');
        twoCharacterInputToKnownOutput.put("ֶו",'ו');
        twoCharacterInputToKnownOutput.put("ֶז",'ז');
        twoCharacterInputToKnownOutput.put("ֶח",'ח');
        twoCharacterInputToKnownOutput.put("ֶט",'ט');
        twoCharacterInputToKnownOutput.put("ֶך",'ך');
        twoCharacterInputToKnownOutput.put("ֶכ",'כ');
        twoCharacterInputToKnownOutput.put("ַּ",'ּ');
        twoCharacterInputToKnownOutput.put("ֶל",'ל');
        twoCharacterInputToKnownOutput.put("ֶמ",'מ');
        twoCharacterInputToKnownOutput.put("ץ/",'/');
        twoCharacterInputToKnownOutput.put("ֶנ",'נ');
        twoCharacterInputToKnownOutput.put("ַׂ",'ׂ');
        twoCharacterInputToKnownOutput.put("ֶס",'ס');
        twoCharacterInputToKnownOutput.put("ֶע",'ע');
        twoCharacterInputToKnownOutput.put("ֶף",'ף');
        twoCharacterInputToKnownOutput.put("ֶק",'ק');
        twoCharacterInputToKnownOutput.put("ֶת",'ת');
        twoCharacterInputToKnownOutput.put("ַב",'ב');
        twoCharacterInputToKnownOutput.put("ַג",'ג');
        twoCharacterInputToKnownOutput.put("ַד",'ד');
        twoCharacterInputToKnownOutput.put("ַה",'ה');
        twoCharacterInputToKnownOutput.put("ַז",'ז');
        twoCharacterInputToKnownOutput.put("ַח",'ח');
        twoCharacterInputToKnownOutput.put("跳蚤",'蚤');
        twoCharacterInputToKnownOutput.put("ַט",'ט');
        twoCharacterInputToKnownOutput.put("ַך",'ך');
        twoCharacterInputToKnownOutput.put("ָּ",'ּ');
        twoCharacterInputToKnownOutput.put("ַכ",'כ');
        twoCharacterInputToKnownOutput.put("ַל",'ל');
        twoCharacterInputToKnownOutput.put("ַמ",'מ');
        twoCharacterInputToKnownOutput.put("ַן",'ן');
        twoCharacterInputToKnownOutput.put("ַנ",'נ');
        twoCharacterInputToKnownOutput.put("ַע",'ע');
        twoCharacterInputToKnownOutput.put("ַף",'ף');
        twoCharacterInputToKnownOutput.put("ַפ",'פ');
        twoCharacterInputToKnownOutput.put("ַצ",'צ');
        twoCharacterInputToKnownOutput.put("ַק",'ק');
        twoCharacterInputToKnownOutput.put("ַר",'ר');
        twoCharacterInputToKnownOutput.put("ַש",'ש');
        twoCharacterInputToKnownOutput.put("ַת",'ת');
        twoCharacterInputToKnownOutput.put("צ<",' ');
        twoCharacterInputToKnownOutput.put("ְֹ",'ְ');
        twoCharacterInputToKnownOutput.put("ָב",'ב');
        twoCharacterInputToKnownOutput.put("ק ",' ');
        twoCharacterInputToKnownOutput.put("ָג",'ג');
        twoCharacterInputToKnownOutput.put("ָד",'ד');
        twoCharacterInputToKnownOutput.put("ִֹ",'ִ');
        twoCharacterInputToKnownOutput.put("ָה",'ה');
        twoCharacterInputToKnownOutput.put("ַ״",'״');
        twoCharacterInputToKnownOutput.put("ָו",'ו');
        twoCharacterInputToKnownOutput.put("ָז",'ז');
        twoCharacterInputToKnownOutput.put("ָֹ",'ָ');
        twoCharacterInputToKnownOutput.put("ָט",'ט');
        twoCharacterInputToKnownOutput.put("ָי",'י');
        twoCharacterInputToKnownOutput.put("ָך",'ך');
        twoCharacterInputToKnownOutput.put("ָכ",'כ');
        twoCharacterInputToKnownOutput.put("ֹּ",'ּ');
        twoCharacterInputToKnownOutput.put("ָל",'ל');
        twoCharacterInputToKnownOutput.put("ק,",',');
        twoCharacterInputToKnownOutput.put("ָמ",'מ');
        twoCharacterInputToKnownOutput.put("ָן",'ן');
        twoCharacterInputToKnownOutput.put("ָנ",'נ');
        twoCharacterInputToKnownOutput.put("[氣",'氣');
        twoCharacterInputToKnownOutput.put("ק/",'/');
        twoCharacterInputToKnownOutput.put("ָס",'ס');
        twoCharacterInputToKnownOutput.put("ָע",'ע');
        twoCharacterInputToKnownOutput.put("ָפ",'פ');
        twoCharacterInputToKnownOutput.put("ָצ",'צ');
        twoCharacterInputToKnownOutput.put("ָק",'ק');
        twoCharacterInputToKnownOutput.put("ָש",'ש');
        twoCharacterInputToKnownOutput.put("ָת",'ת');
        twoCharacterInputToKnownOutput.put("ר ",' ');
        twoCharacterInputToKnownOutput.put("예방",'방');
        twoCharacterInputToKnownOutput.put("ֹד",'ד');
        twoCharacterInputToKnownOutput.put("ֹה",'ה');
        twoCharacterInputToKnownOutput.put("ֹו",'ו');
        twoCharacterInputToKnownOutput.put("ֹח",'ח');
        twoCharacterInputToKnownOutput.put("ֹך",'ך');
        twoCharacterInputToKnownOutput.put("ֹכ",'כ');
        twoCharacterInputToKnownOutput.put("ֹל",'ל');
        twoCharacterInputToKnownOutput.put("ר,",',');
        twoCharacterInputToKnownOutput.put("ֹמ",'מ');
        twoCharacterInputToKnownOutput.put("ֹן",'ן');
        twoCharacterInputToKnownOutput.put("ר.",' ');
        twoCharacterInputToKnownOutput.put("ר/",'/');
        twoCharacterInputToKnownOutput.put("ֹנ",'נ');
        twoCharacterInputToKnownOutput.put("ֹס",'ס');
        twoCharacterInputToKnownOutput.put("ֹע",'ע');
        twoCharacterInputToKnownOutput.put("ֹף",'ף');
        twoCharacterInputToKnownOutput.put("ֹפ",'פ');
        twoCharacterInputToKnownOutput.put("ֹץ",'ץ');
        twoCharacterInputToKnownOutput.put("ֹצ",'צ');
        twoCharacterInputToKnownOutput.put("ֹר",'ר');
        twoCharacterInputToKnownOutput.put("ֹש",'ש');
        twoCharacterInputToKnownOutput.put("ש ",' ');
        twoCharacterInputToKnownOutput.put("ּ֔",'֔');
        twoCharacterInputToKnownOutput.put("ּ֖",'֖');
        twoCharacterInputToKnownOutput.put("个<",' ');
        twoCharacterInputToKnownOutput.put("ש(",'(');
        twoCharacterInputToKnownOutput.put("ּ֤",'֤');
        twoCharacterInputToKnownOutput.put("顾<",' ');
        twoCharacterInputToKnownOutput.put("ְּ",'ְ');
        twoCharacterInputToKnownOutput.put("ִּ",'ִ');
        twoCharacterInputToKnownOutput.put("ֶּ",'ֶ');
        twoCharacterInputToKnownOutput.put("ַּ",'ַ');
        twoCharacterInputToKnownOutput.put("ֹּ",'ֹ');
        twoCharacterInputToKnownOutput.put("ֻי",'י');
        twoCharacterInputToKnownOutput.put("ּּ",'ּ');
        twoCharacterInputToKnownOutput.put("ת-",'-');
        twoCharacterInputToKnownOutput.put("ּֿ",'ֿ');
        twoCharacterInputToKnownOutput.put("ת/",'/');
        twoCharacterInputToKnownOutput.put("±∞",'∞');
        twoCharacterInputToKnownOutput.put("ּב",'ב');
        twoCharacterInputToKnownOutput.put("ּג",'ג');
        twoCharacterInputToKnownOutput.put("ּד",'ד');
        twoCharacterInputToKnownOutput.put("ּה",'ה');
        twoCharacterInputToKnownOutput.put("ּז",'ז');
        twoCharacterInputToKnownOutput.put("ּח",'ח');
        twoCharacterInputToKnownOutput.put("ּי",'י');
        twoCharacterInputToKnownOutput.put("ּך",'ך');
        twoCharacterInputToKnownOutput.put("ּכ",'כ');
        twoCharacterInputToKnownOutput.put("²−",'−');
        twoCharacterInputToKnownOutput.put("ּל",'ל');
        twoCharacterInputToKnownOutput.put("ּן",'ן');
        twoCharacterInputToKnownOutput.put("ּנ",'נ');
        twoCharacterInputToKnownOutput.put("ּס",'ס');
        twoCharacterInputToKnownOutput.put("ּע",'ע');
        twoCharacterInputToKnownOutput.put("ּפ",'פ');
        twoCharacterInputToKnownOutput.put("²√",'√');
        twoCharacterInputToKnownOutput.put("ּץ",'ץ');
        twoCharacterInputToKnownOutput.put("ּק",'ק');
        twoCharacterInputToKnownOutput.put("ּר",'ר');
        twoCharacterInputToKnownOutput.put("ּת",'ת');
        twoCharacterInputToKnownOutput.put("³√",'√');
        twoCharacterInputToKnownOutput.put("疾病",'病');
        twoCharacterInputToKnownOutput.put("־ת",'ת');
        twoCharacterInputToKnownOutput.put(")당",'당');
        twoCharacterInputToKnownOutput.put("ֿב",'ב');
        twoCharacterInputToKnownOutput.put("ֿע",'ע');
        twoCharacterInputToKnownOutput.put(">も",'も');
        twoCharacterInputToKnownOutput.put("丰<",' ');
        twoCharacterInputToKnownOutput.put("ǎ ",' ');
        twoCharacterInputToKnownOutput.put("정부",'부');
        twoCharacterInputToKnownOutput.put("ǎ\'",'\'');
        twoCharacterInputToKnownOutput.put("汉字",'字');
        twoCharacterInputToKnownOutput.put("ְׂ",'ְ');
        twoCharacterInputToKnownOutput.put("ִׂ",'ִ');
        twoCharacterInputToKnownOutput.put("ֵׂ",'ֵ');
        twoCharacterInputToKnownOutput.put("ֶׂ",'ֶ');
        twoCharacterInputToKnownOutput.put("ַׂ",'ַ');
        twoCharacterInputToKnownOutput.put("ָׂ",'ָ');
        twoCharacterInputToKnownOutput.put("ׂו",'ו');
        twoCharacterInputToKnownOutput.put("ǎi",'i');
        twoCharacterInputToKnownOutput.put("ׂמ",'מ');
        twoCharacterInputToKnownOutput.put("ǎl",'l');
        twoCharacterInputToKnownOutput.put("ǎn",'n');
        twoCharacterInputToKnownOutput.put("ǎo",'o');
        twoCharacterInputToKnownOutput.put("ׂר",'ר');
        twoCharacterInputToKnownOutput.put("ǎz",'z');
        twoCharacterInputToKnownOutput.put("ǒ)",')');
        twoCharacterInputToKnownOutput.put("전<",' ');
        twoCharacterInputToKnownOutput.put("管(",'(');
        twoCharacterInputToKnownOutput.put("ǒ<",' ');
        twoCharacterInputToKnownOutput.put(">然",'然');
        twoCharacterInputToKnownOutput.put("ǔ ",' ');
        twoCharacterInputToKnownOutput.put("ǔ)",')');
        twoCharacterInputToKnownOutput.put("ǒn",'n');
        twoCharacterInputToKnownOutput.put("麻(",'(');
        twoCharacterInputToKnownOutput.put("ǒu",'u');
        twoCharacterInputToKnownOutput.put("ǔ<",' ');
        twoCharacterInputToKnownOutput.put(">照",'照');
        twoCharacterInputToKnownOutput.put("颌(",'(');
        twoCharacterInputToKnownOutput.put("ǔf",'f');
        twoCharacterInputToKnownOutput.put("ǔj",'j');
        twoCharacterInputToKnownOutput.put("ǔn",'n');
        twoCharacterInputToKnownOutput.put("ǔt",'t');
        twoCharacterInputToKnownOutput.put("主 ",' ');
        twoCharacterInputToKnownOutput.put("ǚ ",' ');
        twoCharacterInputToKnownOutput.put("讲价",'价');
        twoCharacterInputToKnownOutput.put("这么",'么');
        twoCharacterInputToKnownOutput.put("胰岛",'岛');
        twoCharacterInputToKnownOutput.put("举<",' ');
        twoCharacterInputToKnownOutput.put("丿<",' ');
        twoCharacterInputToKnownOutput.put("בְ",'ְ');
        twoCharacterInputToKnownOutput.put("בִ",'ִ');
        twoCharacterInputToKnownOutput.put("בֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("בֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("בַ",'ַ');
        twoCharacterInputToKnownOutput.put("בָ",'ָ');
        twoCharacterInputToKnownOutput.put("리비",'비');
        twoCharacterInputToKnownOutput.put("גְ",'ְ');
        twoCharacterInputToKnownOutput.put("味(",'(');
        twoCharacterInputToKnownOutput.put("בג",'ג');
        twoCharacterInputToKnownOutput.put("גִ",'ִ');
        twoCharacterInputToKnownOutput.put("בד",'ד');
        twoCharacterInputToKnownOutput.put("גֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("גַ",'ַ');
        twoCharacterInputToKnownOutput.put("בז",'ז');
        twoCharacterInputToKnownOutput.put("גָ",'ָ');
        twoCharacterInputToKnownOutput.put("糖尿",'尿');
        twoCharacterInputToKnownOutput.put("בכ",'כ');
        twoCharacterInputToKnownOutput.put("גּ",'ּ');
        twoCharacterInputToKnownOutput.put("בל",'ל');
        twoCharacterInputToKnownOutput.put("במ",'מ');
        twoCharacterInputToKnownOutput.put("בס",'ס');
        twoCharacterInputToKnownOutput.put("בפ",'פ');
        twoCharacterInputToKnownOutput.put("有 ",' ');
        twoCharacterInputToKnownOutput.put("דְ",'ְ');
        twoCharacterInputToKnownOutput.put("גג",'ג');
        twoCharacterInputToKnownOutput.put("גד",'ד');
        twoCharacterInputToKnownOutput.put("דִ",'ִ');
        twoCharacterInputToKnownOutput.put("דֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("דֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("דַ",'ַ');
        twoCharacterInputToKnownOutput.put("גז",'ז');
        twoCharacterInputToKnownOutput.put("דָ",'ָ');
        twoCharacterInputToKnownOutput.put("גט",'ט');
        twoCharacterInputToKnownOutput.put("דּ",'ּ');
        twoCharacterInputToKnownOutput.put("גל",'ל');
        twoCharacterInputToKnownOutput.put("גמ",'מ');
        twoCharacterInputToKnownOutput.put("גן",'ן');
        twoCharacterInputToKnownOutput.put("גע",'ע');
        twoCharacterInputToKnownOutput.put("גף",'ף');
        twoCharacterInputToKnownOutput.put("גש",'ש');
        twoCharacterInputToKnownOutput.put("הְ",'ְ');
        twoCharacterInputToKnownOutput.put("הֲ",'ֲ');
        twoCharacterInputToKnownOutput.put("הִ",'ִ');
        twoCharacterInputToKnownOutput.put("הֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("הֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("הָ",'ָ');
        twoCharacterInputToKnownOutput.put("די",'י');
        twoCharacterInputToKnownOutput.put("דל",'ל');
        twoCharacterInputToKnownOutput.put("骨 ",' ');
        twoCharacterInputToKnownOutput.put("דן",'ן');
        twoCharacterInputToKnownOutput.put("דס",'ס');
        twoCharacterInputToKnownOutput.put("통행",'행');
        twoCharacterInputToKnownOutput.put("דע",'ע');
        twoCharacterInputToKnownOutput.put("דף",'ף');
        twoCharacterInputToKnownOutput.put("דק",'ק');
        twoCharacterInputToKnownOutput.put("דש",'ש');
        twoCharacterInputToKnownOutput.put("דת",'ת');
        twoCharacterInputToKnownOutput.put("וְ",'ְ');
        twoCharacterInputToKnownOutput.put("הב",'ב');
        twoCharacterInputToKnownOutput.put("הג",'ג');
        twoCharacterInputToKnownOutput.put("וִ",'ִ');
        twoCharacterInputToKnownOutput.put("הד",'ד');
        twoCharacterInputToKnownOutput.put("וֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("ד״",'״');
        twoCharacterInputToKnownOutput.put("וַ",'ַ');
        twoCharacterInputToKnownOutput.put("הז",'ז');
        twoCharacterInputToKnownOutput.put("הח",'ח');
        twoCharacterInputToKnownOutput.put("וָ",'ָ');
        twoCharacterInputToKnownOutput.put("הי",'י');
        twoCharacterInputToKnownOutput.put("וּ",'ּ');
        twoCharacterInputToKnownOutput.put("הכ",'כ');
        twoCharacterInputToKnownOutput.put("הל",'ל');
        twoCharacterInputToKnownOutput.put("המ",'מ');
        twoCharacterInputToKnownOutput.put("הן",'ן');
        twoCharacterInputToKnownOutput.put("הנ",'נ');
        twoCharacterInputToKnownOutput.put("הס",'ס');
        twoCharacterInputToKnownOutput.put("הע",'ע');
        twoCharacterInputToKnownOutput.put("הפ",'פ');
        twoCharacterInputToKnownOutput.put("הצ",'צ');
        twoCharacterInputToKnownOutput.put("骨(",'(');
        twoCharacterInputToKnownOutput.put("הק",'ק');
        twoCharacterInputToKnownOutput.put("הת",'ת');
        twoCharacterInputToKnownOutput.put(")疡",'疡');
        twoCharacterInputToKnownOutput.put("זְ",'ְ');
        twoCharacterInputToKnownOutput.put("זִ",'ִ');
        twoCharacterInputToKnownOutput.put("וו",'ו');
        twoCharacterInputToKnownOutput.put("זַ",'ַ');
        twoCharacterInputToKnownOutput.put("זָ",'ָ');
        twoCharacterInputToKnownOutput.put("וט",'ט');
        twoCharacterInputToKnownOutput.put("וי",'י');
        twoCharacterInputToKnownOutput.put("וך",'ך');
        twoCharacterInputToKnownOutput.put("זּ",'ּ');
        twoCharacterInputToKnownOutput.put("וס",'ס');
        twoCharacterInputToKnownOutput.put("정)",')');
        twoCharacterInputToKnownOutput.put("וע",'ע');
        twoCharacterInputToKnownOutput.put("וץ",'ץ');
        twoCharacterInputToKnownOutput.put("וצ",'צ');
        twoCharacterInputToKnownOutput.put("חְ",'ְ');
        twoCharacterInputToKnownOutput.put("חֲ",'ֲ');
        twoCharacterInputToKnownOutput.put("זב",'ב');
        twoCharacterInputToKnownOutput.put("זג",'ג');
        twoCharacterInputToKnownOutput.put("חִ",'ִ');
        twoCharacterInputToKnownOutput.put("חֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("חֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("זז",'ז');
        twoCharacterInputToKnownOutput.put("חַ",'ַ');
        twoCharacterInputToKnownOutput.put("חָ",'ָ');
        twoCharacterInputToKnownOutput.put("חֹ",'ֹ');
        twoCharacterInputToKnownOutput.put("זי",'י');
        twoCharacterInputToKnownOutput.put("זכ",'כ');
        twoCharacterInputToKnownOutput.put("זל",'ל');
        twoCharacterInputToKnownOutput.put("זן",'ן');
        twoCharacterInputToKnownOutput.put("ϵ ",' ');
        twoCharacterInputToKnownOutput.put("זע",'ע');
        twoCharacterInputToKnownOutput.put("זר",'ר');
        twoCharacterInputToKnownOutput.put("טְ",'ְ');
        twoCharacterInputToKnownOutput.put("חג",'ג');
        twoCharacterInputToKnownOutput.put("טֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("טֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("정<",' ');
        twoCharacterInputToKnownOutput.put("טָ",'ָ');
        twoCharacterInputToKnownOutput.put("חט",'ט');
        twoCharacterInputToKnownOutput.put("חי",'י');
        twoCharacterInputToKnownOutput.put("חכ",'כ');
        twoCharacterInputToKnownOutput.put("חמ",'מ');
        twoCharacterInputToKnownOutput.put("חן",'ן');
        twoCharacterInputToKnownOutput.put("חנ",'נ');
        twoCharacterInputToKnownOutput.put("חפ",'פ');
        twoCharacterInputToKnownOutput.put("חץ",'ץ');
        twoCharacterInputToKnownOutput.put("חצ",'צ');
        twoCharacterInputToKnownOutput.put("חק",'ק');
        twoCharacterInputToKnownOutput.put("חש",'ש');
        twoCharacterInputToKnownOutput.put("חת",'ת');
        twoCharacterInputToKnownOutput.put("יְ",'ְ');
        twoCharacterInputToKnownOutput.put("יִ",'ִ');
        twoCharacterInputToKnownOutput.put("טה",'ה');
        twoCharacterInputToKnownOutput.put("יֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("么<",' ');
        twoCharacterInputToKnownOutput.put("יֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("יַ",'ַ');
        twoCharacterInputToKnownOutput.put("יָ",'ָ');
        twoCharacterInputToKnownOutput.put("טח",'ח');
        twoCharacterInputToKnownOutput.put("יֹ",'ֹ');
        twoCharacterInputToKnownOutput.put("טי",'י');
        twoCharacterInputToKnownOutput.put("טל",'ל');
        twoCharacterInputToKnownOutput.put("טמ",'מ');
        twoCharacterInputToKnownOutput.put("טנ",'נ');
        twoCharacterInputToKnownOutput.put("טע",'ע');
        twoCharacterInputToKnownOutput.put("טפ",'פ');
        twoCharacterInputToKnownOutput.put("טת",'ת');
        twoCharacterInputToKnownOutput.put("ךְ",'ְ');
        twoCharacterInputToKnownOutput.put("יג",'ג');
        twoCharacterInputToKnownOutput.put("יז",'ז');
        twoCharacterInputToKnownOutput.put("יי",'י');
        twoCharacterInputToKnownOutput.put("יך",'ך');
        twoCharacterInputToKnownOutput.put("יכ",'כ');
        twoCharacterInputToKnownOutput.put("ימ",'מ');
        twoCharacterInputToKnownOutput.put("יע",'ע');
        twoCharacterInputToKnownOutput.put("회<",' ');
        twoCharacterInputToKnownOutput.put("יש",'ש');
        twoCharacterInputToKnownOutput.put("כְ",'ְ');
        twoCharacterInputToKnownOutput.put("כִ",'ִ');
        twoCharacterInputToKnownOutput.put("כֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("כֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("כַ",'ַ');
        twoCharacterInputToKnownOutput.put("כָ",'ָ');
        twoCharacterInputToKnownOutput.put("כֹ",'ֹ');
        twoCharacterInputToKnownOutput.put("电视",'视');
        twoCharacterInputToKnownOutput.put("כּ",'ּ');
        twoCharacterInputToKnownOutput.put("à…",'…');
        twoCharacterInputToKnownOutput.put("כד",'ד');
        twoCharacterInputToKnownOutput.put("לֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("לֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("לַ",'ַ');
        twoCharacterInputToKnownOutput.put("לָ",'ָ');
        twoCharacterInputToKnownOutput.put("כח",'ח');
        twoCharacterInputToKnownOutput.put("怀孕",'孕');
        twoCharacterInputToKnownOutput.put("כך",'ך');
        twoCharacterInputToKnownOutput.put("ככ",'כ');
        twoCharacterInputToKnownOutput.put("ל־",'־');
        twoCharacterInputToKnownOutput.put("כמ",'מ');
        twoCharacterInputToKnownOutput.put("כנ",'נ');
        twoCharacterInputToKnownOutput.put("כס",'ס');
        twoCharacterInputToKnownOutput.put("כף",'ף');
        twoCharacterInputToKnownOutput.put("כפ",'פ');
        twoCharacterInputToKnownOutput.put("皮屑",'屑');
        twoCharacterInputToKnownOutput.put("כש",'ש');
        twoCharacterInputToKnownOutput.put("국무",'무');
        twoCharacterInputToKnownOutput.put("לג",'ג');
        twoCharacterInputToKnownOutput.put("לז",'ז');
        twoCharacterInputToKnownOutput.put("לט",'ט');
        twoCharacterInputToKnownOutput.put("לכ",'כ');
        twoCharacterInputToKnownOutput.put("לל",'ל');
        twoCharacterInputToKnownOutput.put("למ",'מ');
        twoCharacterInputToKnownOutput.put("לנ",'נ');
        twoCharacterInputToKnownOutput.put("לס",'ס');
        twoCharacterInputToKnownOutput.put("לע",'ע');
        twoCharacterInputToKnownOutput.put("לפ",'פ');
        twoCharacterInputToKnownOutput.put("לק",'ק');
        twoCharacterInputToKnownOutput.put("לר",'ר');
        twoCharacterInputToKnownOutput.put("לת",'ת');
        twoCharacterInputToKnownOutput.put("מְ",'ְ');
        twoCharacterInputToKnownOutput.put("מֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("מֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("מַ",'ַ');
        twoCharacterInputToKnownOutput.put("מָ",'ָ');
        twoCharacterInputToKnownOutput.put("מּ",'ּ');
        twoCharacterInputToKnownOutput.put("乎<",' ');
        twoCharacterInputToKnownOutput.put("מב",'ב');
        twoCharacterInputToKnownOutput.put("מג",'ג');
        twoCharacterInputToKnownOutput.put("מז",'ז');
        twoCharacterInputToKnownOutput.put("מח",'ח');
        twoCharacterInputToKnownOutput.put("מך",'ך');
        twoCharacterInputToKnownOutput.put("✔M",' ');
        twoCharacterInputToKnownOutput.put("ממ",'מ');
        twoCharacterInputToKnownOutput.put("מנ",'נ');
        twoCharacterInputToKnownOutput.put("מע",'ע');
        twoCharacterInputToKnownOutput.put("✔T",' ');
        twoCharacterInputToKnownOutput.put("מפ",'פ');
        twoCharacterInputToKnownOutput.put("מצ",'צ');
        twoCharacterInputToKnownOutput.put("מק",'ק');
        twoCharacterInputToKnownOutput.put("מת",'ת');
        twoCharacterInputToKnownOutput.put("נְ",'ְ');
        twoCharacterInputToKnownOutput.put("נִ",'ִ');
        twoCharacterInputToKnownOutput.put("נֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("נֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("נַ",'ַ');
        twoCharacterInputToKnownOutput.put("נָ",'ָ');
        twoCharacterInputToKnownOutput.put("נֹ",'ֹ');
        twoCharacterInputToKnownOutput.put("נֻ",'ֻ');
        twoCharacterInputToKnownOutput.put("נב",'ב');
        twoCharacterInputToKnownOutput.put("✖L",'L');
        twoCharacterInputToKnownOutput.put("נג",'ג');
        twoCharacterInputToKnownOutput.put("סִ",'ִ');
        twoCharacterInputToKnownOutput.put("נד",'ד');
        twoCharacterInputToKnownOutput.put("סֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("סֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("סַ",'ַ');
        twoCharacterInputToKnownOutput.put("סָ",'ָ');
        twoCharacterInputToKnownOutput.put("נח",'ח');
        twoCharacterInputToKnownOutput.put("✖U",'U');
        twoCharacterInputToKnownOutput.put("נכ",'כ');
        twoCharacterInputToKnownOutput.put("סּ",'ּ');
        twoCharacterInputToKnownOutput.put("✖N",'s');
        twoCharacterInputToKnownOutput.put("נמ",'מ');
        twoCharacterInputToKnownOutput.put("נן",'ן');
        twoCharacterInputToKnownOutput.put("ננ",'נ');
        twoCharacterInputToKnownOutput.put("נס",'ס');
        twoCharacterInputToKnownOutput.put("נפ",'פ');
        twoCharacterInputToKnownOutput.put("נצ",'צ');
        twoCharacterInputToKnownOutput.put("耳痛",'痛');
        twoCharacterInputToKnownOutput.put("נר",'ר');
        twoCharacterInputToKnownOutput.put("נש",'ש');
        twoCharacterInputToKnownOutput.put("עְ",'ְ');
        twoCharacterInputToKnownOutput.put("עֲ",'ֲ');
        twoCharacterInputToKnownOutput.put("סב",'ב');
        twoCharacterInputToKnownOutput.put("עִ",'ִ');
        twoCharacterInputToKnownOutput.put("סד",'ד');
        twoCharacterInputToKnownOutput.put("עֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("עַ",'ַ');
        twoCharacterInputToKnownOutput.put("עָ",'ָ');
        twoCharacterInputToKnownOutput.put("סכ",'כ');
        twoCharacterInputToKnownOutput.put("סל",'ל');
        twoCharacterInputToKnownOutput.put("סמ",'מ');
        twoCharacterInputToKnownOutput.put("סנ",'נ');
        twoCharacterInputToKnownOutput.put("סף",'ף');
        twoCharacterInputToKnownOutput.put("סר",'ר');
        twoCharacterInputToKnownOutput.put("סת",'ת');
        twoCharacterInputToKnownOutput.put("עב",'ב');
        twoCharacterInputToKnownOutput.put("唱歌",'歌');
        twoCharacterInputToKnownOutput.put("עז",'ז');
        twoCharacterInputToKnownOutput.put("עט",'ט');
        twoCharacterInputToKnownOutput.put("עמ",'מ');
        twoCharacterInputToKnownOutput.put("ען",'ן');
        twoCharacterInputToKnownOutput.put("ענ",'נ');
        twoCharacterInputToKnownOutput.put("עס",'ס');
        twoCharacterInputToKnownOutput.put("עפ",'פ');
        twoCharacterInputToKnownOutput.put("עץ",'ץ');
        twoCharacterInputToKnownOutput.put("עצ",'צ');
        twoCharacterInputToKnownOutput.put("עש",'ש');
        twoCharacterInputToKnownOutput.put("עת",'ת');
        twoCharacterInputToKnownOutput.put("פְ",'פ');
        twoCharacterInputToKnownOutput.put("פִ",'ִ');
        twoCharacterInputToKnownOutput.put("פֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("פֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("פַ",'ַ');
        twoCharacterInputToKnownOutput.put("פָ",'ָ');
        twoCharacterInputToKnownOutput.put("פג",'ג');
        twoCharacterInputToKnownOutput.put("פז",'ז');
        twoCharacterInputToKnownOutput.put("פט",'ט');
        twoCharacterInputToKnownOutput.put("פל",'ל');
        twoCharacterInputToKnownOutput.put("惩<",' ');
        twoCharacterInputToKnownOutput.put("확정",'정');
        twoCharacterInputToKnownOutput.put("פנ",'נ');
        twoCharacterInputToKnownOutput.put("פס",'ס');
        twoCharacterInputToKnownOutput.put("פפ",'פ');
        twoCharacterInputToKnownOutput.put("פק",'ק');
        twoCharacterInputToKnownOutput.put("פש",'ש');
        twoCharacterInputToKnownOutput.put("פת",'ת');
        twoCharacterInputToKnownOutput.put("צְ",'ְ');
        twoCharacterInputToKnownOutput.put("צִ",'ִ');
        twoCharacterInputToKnownOutput.put("צֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("צֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("צַ",'ַ');
        twoCharacterInputToKnownOutput.put("צָ",'ָ');
        twoCharacterInputToKnownOutput.put(">生",'生');
        twoCharacterInputToKnownOutput.put("קְ",'ְ');
        twoCharacterInputToKnownOutput.put("צב",'ב');
        twoCharacterInputToKnownOutput.put("קִ",'ִ');
        twoCharacterInputToKnownOutput.put("צד",'ד');
        twoCharacterInputToKnownOutput.put("קֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("צו",'ו');
        twoCharacterInputToKnownOutput.put("קַ",'ַ');
        twoCharacterInputToKnownOutput.put("צח",'ח');
        twoCharacterInputToKnownOutput.put("צט",'ט');
        twoCharacterInputToKnownOutput.put("צי",'י');
        twoCharacterInputToKnownOutput.put(">电",'电');
        twoCharacterInputToKnownOutput.put("צמ",'מ');
        twoCharacterInputToKnownOutput.put(">男",'男');
        twoCharacterInputToKnownOutput.put("传染",'染');
        twoCharacterInputToKnownOutput.put("צפ",'פ');
        twoCharacterInputToKnownOutput.put("צר",'ר');
        twoCharacterInputToKnownOutput.put("צת",'ת');
        twoCharacterInputToKnownOutput.put("רְ",'ְ');
        twoCharacterInputToKnownOutput.put("רִ",'ִ');
        twoCharacterInputToKnownOutput.put("רֵ",'ֵ');
        twoCharacterInputToKnownOutput.put("קה",'ה');
        twoCharacterInputToKnownOutput.put("רַ",'ַ');
        twoCharacterInputToKnownOutput.put("קט",'ט');
        twoCharacterInputToKnownOutput.put("קי",'י');
        twoCharacterInputToKnownOutput.put("קל",'ל');
        twoCharacterInputToKnownOutput.put("ר־",'־');
        twoCharacterInputToKnownOutput.put("קן",'ן');
        twoCharacterInputToKnownOutput.put("קנ",'נ');
        twoCharacterInputToKnownOutput.put("קפ",'פ');
        twoCharacterInputToKnownOutput.put("קצ",'צ');
        twoCharacterInputToKnownOutput.put("קש",'ש');
        twoCharacterInputToKnownOutput.put("קת",'ת');
        twoCharacterInputToKnownOutput.put("רג",'ג');
        twoCharacterInputToKnownOutput.put("רד",'ד');
        twoCharacterInputToKnownOutput.put("רז",'ז');
        twoCharacterInputToKnownOutput.put("שַ",'ַ');
        twoCharacterInputToKnownOutput.put("שָ",'ָ');
        twoCharacterInputToKnownOutput.put("רט",'ט');
        twoCharacterInputToKnownOutput.put("שֹ",'ֹ');
        twoCharacterInputToKnownOutput.put("רכ",'כ');
        twoCharacterInputToKnownOutput.put("רל",'ל');
        twoCharacterInputToKnownOutput.put("רמ",'מ');
        twoCharacterInputToKnownOutput.put("רנ",'נ');
        twoCharacterInputToKnownOutput.put("שׂ",'ׂ');
        twoCharacterInputToKnownOutput.put("ת֣",'֣');
        twoCharacterInputToKnownOutput.put("רס",'ס');
        twoCharacterInputToKnownOutput.put("רף",'ף');
        twoCharacterInputToKnownOutput.put("רפ",'פ');
        twoCharacterInputToKnownOutput.put("רץ",'ץ');
        twoCharacterInputToKnownOutput.put("רצ",'צ');
        twoCharacterInputToKnownOutput.put("רר",'ר');
        twoCharacterInputToKnownOutput.put("רש",'ש');
        twoCharacterInputToKnownOutput.put("רת",'ת');
        twoCharacterInputToKnownOutput.put("תְ",'ְ');
        twoCharacterInputToKnownOutput.put("תֱ",'ֱ');
        twoCharacterInputToKnownOutput.put("תִ",'ִ');
        twoCharacterInputToKnownOutput.put("תֶ",'ֶ');
        twoCharacterInputToKnownOutput.put("תַ",'ַ');
        twoCharacterInputToKnownOutput.put("תָ",'ָ');
        twoCharacterInputToKnownOutput.put("תֹ",'ֹ');
        twoCharacterInputToKnownOutput.put("שט",'ט');
        twoCharacterInputToKnownOutput.put("שך",'ך');
        twoCharacterInputToKnownOutput.put("תּ",'ּ');
        twoCharacterInputToKnownOutput.put("שכ",'כ');
        twoCharacterInputToKnownOutput.put("של",'ל');
        twoCharacterInputToKnownOutput.put("שן",'ן');
        twoCharacterInputToKnownOutput.put("שנ",'נ');
        twoCharacterInputToKnownOutput.put("שק",'ק');
        twoCharacterInputToKnownOutput.put("שר",'ר');
        twoCharacterInputToKnownOutput.put("שש",'ש');
        twoCharacterInputToKnownOutput.put("שת",'ת');
        twoCharacterInputToKnownOutput.put("乚<",' ');
        twoCharacterInputToKnownOutput.put("תח",'ח');
        twoCharacterInputToKnownOutput.put("障[",'[');
        twoCharacterInputToKnownOutput.put("תכ",'כ');
        twoCharacterInputToKnownOutput.put("תל",'ל');
        twoCharacterInputToKnownOutput.put("תן",'ן');
        twoCharacterInputToKnownOutput.put("תע",'ע');
        twoCharacterInputToKnownOutput.put("תף",'ף');
        twoCharacterInputToKnownOutput.put("תק",'ק');
        twoCharacterInputToKnownOutput.put("תר",'ר');
        twoCharacterInputToKnownOutput.put("תש",'ש');
        twoCharacterInputToKnownOutput.put("תת",'ת');
        twoCharacterInputToKnownOutput.put("书（",'（');
        twoCharacterInputToKnownOutput.put("习<",' ');
        twoCharacterInputToKnownOutput.put(">的",'的');
        twoCharacterInputToKnownOutput.put("آ<",' ');
        twoCharacterInputToKnownOutput.put("״ך",'ך');
        twoCharacterInputToKnownOutput.put("״ל",'ל');
        twoCharacterInputToKnownOutput.put("국빈",'빈');
        twoCharacterInputToKnownOutput.put("״ר",'ר');
        twoCharacterInputToKnownOutput.put("歌<",' ');
        twoCharacterInputToKnownOutput.put(">看",'看');
        twoCharacterInputToKnownOutput.put("腹部",'部');
        twoCharacterInputToKnownOutput.put("대통",'통');
        twoCharacterInputToKnownOutput.put("疡(",'(');
        twoCharacterInputToKnownOutput.put("秃 ",' ');
        twoCharacterInputToKnownOutput.put("术(",'(');
        twoCharacterInputToKnownOutput.put("疣(",'(');
        twoCharacterInputToKnownOutput.put("ا<",' ');
        twoCharacterInputToKnownOutput.put("ب ",' ');
        twoCharacterInputToKnownOutput.put("机（",'（');
        twoCharacterInputToKnownOutput.put("ب<",' ');
        twoCharacterInputToKnownOutput.put("∅₀",'₀');
        twoCharacterInputToKnownOutput.put("百日",'日');
        twoCharacterInputToKnownOutput.put("ت<",' ');
        twoCharacterInputToKnownOutput.put("ث<",' ');
        twoCharacterInputToKnownOutput.put("年轻",'轻');
        twoCharacterInputToKnownOutput.put("ج<",' ');
        twoCharacterInputToKnownOutput.put("朵(",'(');
        twoCharacterInputToKnownOutput.put("但是",'是');
        twoCharacterInputToKnownOutput.put("خ<",' ');
        twoCharacterInputToKnownOutput.put("漂亮",'亮');
        twoCharacterInputToKnownOutput.put("د<",' ');
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart1(){
        twoCharacterInputWithUnknownOutput.put(" \"", new ProportionalProbability( new double[]{0.9891467065868264, 0.9895209580838323, 0.9898952095808383, 0.9902694610778443, 0.9906437125748503, 0.9910179640718563, 0.9913922155688623, 0.9917664670658682, 0.9921407185628742, 0.9925149700598802, 0.9928892215568862, 0.9932634730538922, 0.9936377245508982, 0.9940119760479041, 0.9943862275449101, 0.9947604790419161, 0.9951347305389221, 0.9955089820359281, 0.9958832335329341, 0.99625748502994, 0.996631736526946, 0.997005988023952, 0.997380239520958, 0.997754491017964, 0.99812874251497, 0.998502994011976, 0.9988772455089819, 0.9992514970059879, 0.9996257485029939, 0.9999999999999999}, new char[]{'\"', 'n', 'e', 'a', 's', 'k', ' ', 'i', 'h', 'u', 'r', 'g', 't', 'z', 'q', 'N', 'o', 'O', 'c', 'D', 'd', 'l', 'm', 'b', 'w', 'f', 'R', 'y', 'W', 'v'}) );
        twoCharacterInputWithUnknownOutput.put(" #", new ProportionalProbability( new double[]{0.9576271186440678, 0.9661016949152542, 0.9745762711864406, 0.983050847457627, 0.9915254237288135, 0.9999999999999999}, new char[]{'#', 'v', 'l', 'p', 'o', 'P'}) );
        twoCharacterInputWithUnknownOutput.put(" $", new ProportionalProbability( new double[]{0.9621212121212122, 0.9696969696969697, 0.9772727272727273, 0.9848484848484849, 0.9924242424242424, 1.0}, new char[]{'$', ' ', '(', 's', 'l', '-'}) );
        twoCharacterInputWithUnknownOutput.put(" %", new ProportionalProbability( new double[]{0.9384615384615385, 0.9538461538461538, 0.9692307692307691, 0.9846153846153844, 0.9999999999999998}, new char[]{'e', '%', ' ', 'a', '$'}) );
        twoCharacterInputWithUnknownOutput.put(" &", new ProportionalProbability( new double[]{0.9770514603616134, 0.9777468706536857, 0.978442280945758, 0.9791376912378303, 0.9798331015299027, 0.980528511821975, 0.9812239221140473, 0.9819193324061196, 0.9826147426981919, 0.9833101529902643, 0.9840055632823366, 0.9847009735744089, 0.9853963838664812, 0.9860917941585535, 0.9867872044506258, 0.9874826147426982, 0.9881780250347705, 0.9888734353268428, 0.9895688456189151, 0.9902642559109874, 0.9909596662030598, 0.9916550764951321, 0.9923504867872044, 0.9930458970792767, 0.993741307371349, 0.9944367176634213, 0.9951321279554937, 0.995827538247566, 0.9965229485396383, 0.9972183588317106, 0.9979137691237829, 0.9986091794158553, 0.9993045897079276, 0.9999999999999999}, new char[]{'a', '&', 'k', 'r', ' ', 'c', 'e', 'g', 'i', 'd', 'o', '-', 'S', 'y', 'L', 'l', 'n', 'm', 'C', 's', '.', 't', 'u', 'G', 'h', 'p', 'b', 'v', '\'', '6', 'U', 'f', 'K', '?'}) );
        twoCharacterInputWithUnknownOutput.put(" \'", new ProportionalProbability( new double[]{0.9762989972652689, 0.9772105742935278, 0.9781221513217866, 0.9790337283500454, 0.9799453053783043, 0.9808568824065631, 0.9817684594348219, 0.9826800364630808, 0.9835916134913396, 0.9845031905195984, 0.9854147675478573, 0.9863263445761161, 0.987237921604375, 0.9881494986326338, 0.9890610756608926, 0.9899726526891515, 0.9908842297174103, 0.9917958067456691, 0.992707383773928, 0.9936189608021868, 0.9945305378304456, 0.9954421148587045, 0.9963536918869633, 0.9972652689152222, 0.998176845943481, 0.9990884229717398, 0.9999999999999987}, new char[]{'d', '\'', 'f', ' ', 'y', 'b', 'i', 'a', 'e', 'p', 'n', 'o', 'h', 'r', 's', 'w', '.', 't', 'v', 'g', 'l', 'T', '(', 'c', 'u', 'j', 'B'}) );
        twoCharacterInputWithUnknownOutput.put(" (", new ProportionalProbability( new double[]{0.9981983919976337, 0.9982252816693108, 0.9982521713409879, 0.998279061012665, 0.998305950684342, 0.9983328403560191, 0.9983597300276962, 0.9983866196993733, 0.9984135093710503, 0.9984403990427274, 0.9984672887144045, 0.9984941783860816, 0.9985210680577586, 0.9985479577294357, 0.9985748474011128, 0.9986017370727899, 0.998628626744467, 0.998655516416144, 0.9986824060878211, 0.9987092957594982, 0.9987361854311753, 0.9987630751028523, 0.9987899647745294, 0.9988168544462065, 0.9988437441178836, 0.9988706337895606, 0.9988975234612377, 0.9989244131329148, 0.9989513028045919, 0.998978192476269, 0.999005082147946, 0.9990319718196231, 0.9990588614913002, 0.9990857511629773, 0.9991126408346543, 0.9991395305063314, 0.9991664201780085, 0.9991933098496856, 0.9992201995213627, 0.9992470891930397, 0.9992739788647168, 0.9993008685363939, 0.999327758208071, 0.999354647879748, 0.9993815375514251, 0.9994084272231022, 0.9994353168947793, 0.9994622065664563, 0.9994890962381334, 0.9995159859098105, 0.9995428755814876, 0.9995697652531647, 0.9995966549248417, 0.9996235445965188, 0.9996504342681959, 0.999677323939873, 0.99970421361155, 0.9997311032832271, 0.9997579929549042, 0.9997848826265813, 0.9998117722982583, 0.9998386619699354, 0.9998655516416125, 0.9998924413132896, 0.9999193309849667, 0.9999462206566437, 0.9999731103283208, 0.9999999999999979}, new char[]{'e', '\"', '(', ' ', 'a', 'G', '.', 'r', 'f', 'i', 'm', 'n', 'o', '1', 'l', 't', ',', 'p', 'g', 'y', 's', 'b', 'L', 'U', 'u', '-', ':', 'd', ')', 'h', 'w', 'v', ';', 'k', 'c', 'x', 'T', 'R', '/', 'A', 'S', '∞', 'K', 'W', '2', 'J', 'C', 'B', '>', '0', 'P', '&', 'M', '5', '+', 'D', 'H', '_', '6', '²', 'q', 'V', 'z', 'O', '4', '^', 'N', 'Q'}) );
        twoCharacterInputWithUnknownOutput.put(" )", new ProportionalProbability( new double[]{0.9203539823008849, 0.9292035398230089, 0.9380530973451328, 0.9469026548672567, 0.9557522123893806, 0.9646017699115045, 0.9734513274336284, 0.9823008849557523, 0.9911504424778762, 1.0}, new char[]{')', 's', 'n', ' ', 't', 'N', 'a', '(', 'e', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(" *", new ProportionalProbability( new double[]{0.9453125, 0.9479166666666666, 0.9505208333333333, 0.9531249999999999, 0.9557291666666665, 0.9583333333333331, 0.9609374999999998, 0.9635416666666664, 0.966145833333333, 0.9687499999999997, 0.9713541666666663, 0.9739583333333329, 0.9765624999999996, 0.9791666666666662, 0.9817708333333328, 0.9843749999999994, 0.9869791666666661, 0.9895833333333327, 0.9921874999999993, 0.994791666666666, 0.9973958333333326, 0.9999999999999992}, new char[]{'*', 'a', 'C', '^', 'f', 'r', 'θ', 'p', ' ', 'i', 'l', '.', 'v', 'n', 'e', 's', 't', 'd', 'c', 'o', '/', ','}) );
        twoCharacterInputWithUnknownOutput.put(" +", new ProportionalProbability( new double[]{0.9721362229102167, 0.9727554179566563, 0.9733746130030959, 0.9739938080495355, 0.9746130030959751, 0.9752321981424147, 0.9758513931888543, 0.9764705882352939, 0.9770897832817335, 0.977708978328173, 0.9783281733746126, 0.9789473684210522, 0.9795665634674918, 0.9801857585139314, 0.980804953560371, 0.9814241486068106, 0.9820433436532502, 0.9826625386996898, 0.9832817337461294, 0.983900928792569, 0.9845201238390086, 0.9851393188854481, 0.9857585139318877, 0.9863777089783273, 0.9869969040247669, 0.9876160990712065, 0.9882352941176461, 0.9888544891640857, 0.9894736842105253, 0.9900928792569649, 0.9907120743034045, 0.9913312693498441, 0.9919504643962836, 0.9925696594427232, 0.9931888544891628, 0.9938080495356024, 0.994427244582042, 0.9950464396284816, 0.9956656346749212, 0.9962848297213608, 0.9969040247678004, 0.99752321981424, 0.9981424148606796, 0.9987616099071192, 0.9993808049535587, 0.9999999999999983}, new char[]{'+', ' ', 'a', '2', 'r', 'O', 'y', 'x', 'e', '/', '(', 'b', 'i', 'l', 's', 'o', 'E', '?', 'd', '0', 'c', '.', 'm', 't', '^', 'w', ';', 'F', 'n', 'h', '-', '1', 'g', '¯', 'C', 'v', 'α', '≠', 'A', 'S', 'β', 'θ', 'I', ')', 'T', 'q'}) );
        twoCharacterInputWithUnknownOutput.put(" ,", new ProportionalProbability( new double[]{0.9538461538461539, 0.9576923076923077, 0.9615384615384616, 0.9653846153846154, 0.9692307692307692, 0.9730769230769231, 0.9769230769230769, 0.9807692307692307, 0.9846153846153846, 0.9884615384615384, 0.9923076923076922, 0.9961538461538461, 0.9999999999999999}, new char[]{' ', ',', 'r', 'm', ')', 'n', 'd', 'o', '1', '/', 'u', 'a', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(" -", new ProportionalProbability( new double[]{0.9946305060065526, 0.9947215143793229, 0.9948125227520932, 0.9949035311248635, 0.9949945394976338, 0.9950855478704042, 0.9951765562431745, 0.9952675646159448, 0.9953585729887151, 0.9954495813614854, 0.9955405897342557, 0.9956315981070261, 0.9957226064797964, 0.9958136148525667, 0.995904623225337, 0.9959956315981073, 0.9960866399708777, 0.996177648343648, 0.9962686567164183, 0.9963596650891886, 0.9964506734619589, 0.9965416818347292, 0.9966326902074996, 0.9967236985802699, 0.9968147069530402, 0.9969057153258105, 0.9969967236985808, 0.9970877320713512, 0.9971787404441215, 0.9972697488168918, 0.9973607571896621, 0.9974517655624324, 0.9975427739352027, 0.9976337823079731, 0.9977247906807434, 0.9978157990535137, 0.997906807426284, 0.9979978157990543, 0.9980888241718247, 0.998179832544595, 0.9982708409173653, 0.9983618492901356, 0.9984528576629059, 0.9985438660356762, 0.9986348744084466, 0.9987258827812169, 0.9988168911539872, 0.9989078995267575, 0.9989989078995278, 0.9990899162722982, 0.9991809246450685, 0.9992719330178388, 0.9993629413906091, 0.9994539497633794, 0.9995449581361497, 0.9996359665089201, 0.9997269748816904, 0.9998179832544607, 0.999908991627231, 1.0000000000000013}, new char[]{'-', 'm', 'b', 'o', 'a', ' ', 'e', ',', 'f', 'c', 'u', 'p', 'r', 'd', 't', 'n', 'y', 'i', 's', 'g', ')', 'w', 'l', 'h', 'M', '0', 'H', '.', 'C', '%', '(', 'G', '/', 'v', 'j', '5', 'x', 'k', '9', 'A', 'L', 'S', 'R', 'J', 'B', 'P', '2', 'I', ':', 'E', '=', 'D', 'W', 'O', '\'', 'T', 'V', '3', '&', '+'}) );
        twoCharacterInputWithUnknownOutput.put(" .", new ProportionalProbability( new double[]{0.9864797195793691, 0.9869804707060591, 0.9874812218327491, 0.9879819729594391, 0.9884827240861291, 0.9889834752128192, 0.9894842263395092, 0.9899849774661992, 0.9904857285928892, 0.9909864797195792, 0.9914872308462692, 0.9919879819729592, 0.9924887330996492, 0.9929894842263393, 0.9934902353530293, 0.9939909864797193, 0.9944917376064093, 0.9949924887330993, 0.9954932398597893, 0.9959939909864793, 0.9964947421131694, 0.9969954932398594, 0.9974962443665494, 0.9979969954932394, 0.9984977466199294, 0.9989984977466194, 0.9994992488733094, 0.9999999999999994}, new char[]{' ', '.', 'n', 'i', 'o', 'l', 'w', 'y', 'a', 'x', '=', 'e', 's', 'u', 'h', 'm', 'b', 'v', 't', 'r', 'ç', 'g', 'd', ' ', 'p', ',', '{', 'c'}) );
        twoCharacterInputWithUnknownOutput.put(" /", new ProportionalProbability( new double[]{0.9800142755174875, 0.980728051391863, 0.9814418272662385, 0.982155603140614, 0.9828693790149895, 0.983583154889365, 0.9842969307637405, 0.985010706638116, 0.9857244825124915, 0.9864382583868669, 0.9871520342612424, 0.9878658101356179, 0.9885795860099934, 0.9892933618843689, 0.9900071377587444, 0.9907209136331199, 0.9914346895074954, 0.9921484653818708, 0.9928622412562463, 0.9935760171306218, 0.9942897930049973, 0.9950035688793728, 0.9957173447537483, 0.9964311206281238, 0.9971448965024993, 0.9978586723768748, 0.9985724482512502, 0.9992862241256257, 1.000000000000001}, new char[]{'/', 'h', 'x', 's', 'k', 'n', 'i', 'g', 'o', 'e', 'l', 'f', 'r', '.', ' ', '-', 't', 'd', 'b', ',', 'u', 'θ', 'a', 'q', 'v', 'c', 'p', '+', '1'}) );
        twoCharacterInputWithUnknownOutput.put(" 0", new ProportionalProbability( new double[]{0.9685610640870617, 0.9697702539298669, 0.9709794437726722, 0.9721886336154775, 0.9733978234582827, 0.974607013301088, 0.9758162031438933, 0.9770253929866985, 0.9782345828295038, 0.9794437726723091, 0.9806529625151144, 0.9818621523579196, 0.9830713422007249, 0.9842805320435302, 0.9854897218863354, 0.9866989117291407, 0.987908101571946, 0.9891172914147512, 0.9903264812575565, 0.9915356711003618, 0.992744860943167, 0.9939540507859723, 0.9951632406287776, 0.9963724304715829, 0.9975816203143881, 0.9987908101571934, 0.9999999999999987}, new char[]{'0', ' ', '1', '.', 'n', 'a', 'e', 'm', 'b', 'd', 'h', 'l', 'o', '<', 'r', 'I', '=', 'i', '^', 't', '∞', 'u', 'g', '2', 'v', 's', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(" 1", new ProportionalProbability( new double[]{0.992921063176172, 0.9930546280219046, 0.9931881928676372, 0.9933217577133697, 0.9934553225591023, 0.9935888874048349, 0.9937224522505674, 0.9938560170963, 0.9939895819420326, 0.9941231467877651, 0.9942567116334977, 0.9943902764792303, 0.9945238413249629, 0.9946574061706954, 0.994790971016428, 0.9949245358621606, 0.9950581007078931, 0.9951916655536257, 0.9953252303993583, 0.9954587952450908, 0.9955923600908234, 0.995725924936556, 0.9958594897822886, 0.9959930546280211, 0.9961266194737537, 0.9962601843194863, 0.9963937491652188, 0.9965273140109514, 0.996660878856684, 0.9967944437024165, 0.9969280085481491, 0.9970615733938817, 0.9971951382396143, 0.9973287030853468, 0.9974622679310794, 0.997595832776812, 0.9977293976225445, 0.9978629624682771, 0.9979965273140097, 0.9981300921597422, 0.9982636570054748, 0.9983972218512074, 0.99853078669694, 0.9986643515426725, 0.9987979163884051, 0.9989314812341377, 0.9990650460798702, 0.9991986109256028, 0.9993321757713354, 0.9994657406170679, 0.9995993054628005, 0.9997328703085331, 0.9998664351542657, 0.9999999999999982}, new char[]{'1', 's', 'a', 'l', ' ', 'A', 'o', 'g', 'f', 'e', '.', '9', 'h', 'G', 't', ')', 'r', 'i', 'b', ']', 'm', 'd', 'n', 'c', '6', 'k', 'T', 'v', 'u', 'y', 'J', '4', ',', 'p', 'P', 'w', '%', '0', 'C', 'q', 'x', '?', 'N', '2', 'B', '-', '5', '(', 'S', ':', '3', '°', '=', 'H'}) );
        twoCharacterInputWithUnknownOutput.put(" 2", new ProportionalProbability( new double[]{0.9881878421204264, 0.9884759435321233, 0.9887640449438202, 0.9890521463555171, 0.989340247767214, 0.9896283491789108, 0.9899164505906077, 0.9902045520023046, 0.9904926534140015, 0.9907807548256984, 0.9910688562373953, 0.9913569576490922, 0.991645059060789, 0.9919331604724859, 0.9922212618841828, 0.9925093632958797, 0.9927974647075766, 0.9930855661192735, 0.9933736675309703, 0.9936617689426672, 0.9939498703543641, 0.994237971766061, 0.9945260731777579, 0.9948141745894548, 0.9951022760011516, 0.9953903774128485, 0.9956784788245454, 0.9959665802362423, 0.9962546816479392, 0.9965427830596361, 0.996830884471333, 0.9971189858830298, 0.9974070872947267, 0.9976951887064236, 0.9979832901181205, 0.9982713915298174, 0.9985594929415142, 0.9988475943532111, 0.999135695764908, 0.9994237971766049, 0.9997118985883018, 0.9999999999999987}, new char[]{'r', 'e', 'g', '2', ' ', '(', 't', 'h', 'n', '4', 'w', 'p', 's', 'i', '3', 'f', ':', 'a', 'o', 'x', '.', 'l', 'v', 'm', 'S', '-', 'd', 'c', ',', '0', '1', '%', 'u', 'b', 'D', 'R', ')', 'y', 'A', 'P', 'M', 'H'}) );
        twoCharacterInputWithUnknownOutput.put(" 3", new ProportionalProbability( new double[]{0.9851632047477745, 0.9855871131835524, 0.9860110216193303, 0.9864349300551082, 0.9868588384908861, 0.987282746926664, 0.9877066553624418, 0.9881305637982197, 0.9885544722339976, 0.9889783806697755, 0.9894022891055534, 0.9898261975413313, 0.9902501059771092, 0.990674014412887, 0.9910979228486649, 0.9915218312844428, 0.9919457397202207, 0.9923696481559986, 0.9927935565917765, 0.9932174650275544, 0.9936413734633323, 0.9940652818991101, 0.994489190334888, 0.9949130987706659, 0.9953370072064438, 0.9957609156422217, 0.9961848240779996, 0.9966087325137775, 0.9970326409495553, 0.9974565493853332, 0.9978804578211111, 0.998304366256889, 0.9987282746926669, 0.9991521831284448, 0.9995760915642227, 1.0000000000000004}, new char[]{'o', 'r', '3', 'a', 'g', ' ', 'e', 's', 'm', 'i', 't', 'l', '&', 'u', 'p', 'c', 'n', 'd', '(', 'y', 'b', 'f', 'V', ':', '.', '4', '6', 'h', 'v', '>', 'N', 'w', '?', 'z', '-', 'S'}) );
        twoCharacterInputWithUnknownOutput.put(" 4", new ProportionalProbability( new double[]{0.9785714285714285, 0.9792857142857142, 0.9799999999999999, 0.9807142857142855, 0.9814285714285712, 0.9821428571428569, 0.9828571428571425, 0.9835714285714282, 0.9842857142857139, 0.9849999999999995, 0.9857142857142852, 0.9864285714285709, 0.9871428571428565, 0.9878571428571422, 0.9885714285714279, 0.9892857142857135, 0.9899999999999992, 0.9907142857142849, 0.9914285714285705, 0.9921428571428562, 0.9928571428571419, 0.9935714285714276, 0.9942857142857132, 0.9949999999999989, 0.9957142857142846, 0.9964285714285702, 0.9971428571428559, 0.9978571428571416, 0.9985714285714272, 0.9992857142857129, 0.9999999999999986}, new char[]{'i', ' ', 'w', 'g', '4', 'f', 'e', 'r', 'h', 'a', 'm', 'p', 'o', 'n', '{', 'v', 'c', 't', 'd', 's', 'y', 'C', 'u', '*', 'P', '0', 'l', '5', 'z', 'j', '.'}) );
        twoCharacterInputWithUnknownOutput.put(" 5", new ProportionalProbability( new double[]{0.9735216240070609, 0.9744042365401588, 0.9752868490732568, 0.9761694616063548, 0.9770520741394527, 0.9779346866725507, 0.9788172992056486, 0.9796999117387466, 0.9805825242718446, 0.9814651368049425, 0.9823477493380405, 0.9832303618711384, 0.9841129744042364, 0.9849955869373344, 0.9858781994704323, 0.9867608120035303, 0.9876434245366282, 0.9885260370697262, 0.9894086496028242, 0.9902912621359221, 0.9911738746690201, 0.992056487202118, 0.992939099735216, 0.993821712268314, 0.9947043248014119, 0.9955869373345099, 0.9964695498676078, 0.9973521624007058, 0.9982347749338037, 0.9991173874669017, 0.9999999999999997}, new char[]{'o', '5', ' ', 'l', 'a', '4', ')', '(', 'G', 't', 'f', '.', 'n', 'c', 'r', 'm', '0', '-', 'i', 'g', 'H', 'p', 'e', 's', 'b', 'v', 'd', '2', ',', 'h', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(" 6", new ProportionalProbability( new double[]{0.9758745476477684, 0.9770808202653799, 0.9782870928829914, 0.979493365500603, 0.9806996381182145, 0.981905910735826, 0.9831121833534375, 0.9843184559710491, 0.9855247285886606, 0.9867310012062721, 0.9879372738238836, 0.9891435464414952, 0.9903498190591067, 0.9915560916767182, 0.9927623642943297, 0.9939686369119413, 0.9951749095295528, 0.9963811821471643, 0.9975874547647758, 0.9987937273823874, 0.9999999999999989}, new char[]{'6', 't', ' ', 'd', 'a', 'i', 'n', 'o', 'e', 'p', '.', 'f', 'C', 'l', 'x', 'r', 'h', 'I', 's', 'q', '7'}) );
        twoCharacterInputWithUnknownOutput.put(" 7", new ProportionalProbability( new double[]{0.9666011787819253, 0.968565815324165, 0.9705304518664046, 0.9724950884086443, 0.974459724950884, 0.9764243614931236, 0.9783889980353633, 0.9803536345776029, 0.9823182711198426, 0.9842829076620823, 0.9862475442043219, 0.9882121807465616, 0.9901768172888012, 0.9921414538310409, 0.9941060903732806, 0.9960707269155202, 0.9980353634577599, 0.9999999999999996}, new char[]{'7', ' ', 'n', 's', 'a', 'i', 'e', 'g', '?', 'l', 'c', 'r', 'h', 'p', 'w', 'y', 'm', 'k'}) );
        twoCharacterInputWithUnknownOutput.put(" 8", new ProportionalProbability( new double[]{0.9497354497354498, 0.9523809523809524, 0.9550264550264551, 0.9576719576719578, 0.9603174603174605, 0.9629629629629631, 0.9656084656084658, 0.9682539682539685, 0.9708994708994712, 0.9735449735449738, 0.9761904761904765, 0.9788359788359792, 0.9814814814814818, 0.9841269841269845, 0.9867724867724872, 0.9894179894179899, 0.9920634920634925, 0.9947089947089952, 0.9973544973544979, 1.0000000000000004}, new char[]{'8', 'c', 'y', ' ', 'w', 'o', 'r', 'x', 's', 'n', 't', 'T', 'P', 'm', 'h', 'A', 'e', 'i', 'l', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(" 9", new ProportionalProbability( new double[]{0.9696356275303644, 0.97165991902834, 0.9736842105263157, 0.9757085020242914, 0.977732793522267, 0.9797570850202427, 0.9817813765182184, 0.9838056680161941, 0.9858299595141697, 0.9878542510121454, 0.9898785425101211, 0.9919028340080968, 0.9939271255060724, 0.9959514170040481, 0.9979757085020238, 0.9999999999999994}, new char[]{'9', 'm', 'o', ' ', '.', 'y', 'd', 'n', 's', 't', 'f', 'r', 'l', 'c', 'i', 'A'}) );
        twoCharacterInputWithUnknownOutput.put(" :", new ProportionalProbability( new double[]{0.9489795918367347, 0.9591836734693878, 0.9693877551020409, 0.979591836734694, 0.989795918367347, 1.0}, new char[]{':', 'y', 'i', 'r', 's', '('}) );
        twoCharacterInputWithUnknownOutput.put(" ;", new ProportionalProbability( new double[]{0.9289099526066351, 0.9336492890995262, 0.9383886255924172, 0.9431279620853082, 0.9478672985781993, 0.9526066350710903, 0.9573459715639814, 0.9620853080568724, 0.9668246445497635, 0.9715639810426545, 0.9763033175355456, 0.9810426540284366, 0.9857819905213276, 0.9905213270142187, 0.9952606635071097, 1.0000000000000007}, new char[]{';', 'n', 'c', ' ', 's', 'k', 'a', 'm', 'w', '.', 'i', 'o', 'h', '?', 'd', '\"'}) );
        twoCharacterInputWithUnknownOutput.put(" <", new ProportionalProbability( new double[]{0.9716312056737588, 0.9787234042553191, 0.9858156028368794, 0.9929078014184397, 1.0}, new char[]{'a', '<', 'i', 'r', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(" =", new ProportionalProbability( new double[]{0.9819508448540707, 0.9823348694316436, 0.9827188940092165, 0.9831029185867894, 0.9834869431643624, 0.9838709677419353, 0.9842549923195082, 0.9846390168970811, 0.985023041474654, 0.9854070660522269, 0.9857910906297999, 0.9861751152073728, 0.9865591397849457, 0.9869431643625186, 0.9873271889400915, 0.9877112135176644, 0.9880952380952374, 0.9884792626728103, 0.9888632872503832, 0.9892473118279561, 0.989631336405529, 0.9900153609831019, 0.9903993855606749, 0.9907834101382478, 0.9911674347158207, 0.9915514592933936, 0.9919354838709665, 0.9923195084485394, 0.9927035330261124, 0.9930875576036853, 0.9934715821812582, 0.9938556067588311, 0.994239631336404, 0.994623655913977, 0.9950076804915499, 0.9953917050691228, 0.9957757296466957, 0.9961597542242686, 0.9965437788018415, 0.9969278033794144, 0.9973118279569874, 0.9976958525345603, 0.9980798771121332, 0.9984639016897061, 0.998847926267279, 0.999231950844852, 0.9996159754224249, 0.9999999999999978}, new char[]{'=', 'A', 'k', 'r', 's', ' ', ',', 'l', 'f', 'e', 'T', 'N', 'n', '+', 'h', 'i', 'g', 'o', '2', 'u', 't', 'v', 'W', 'a', 'c', 'p', '1', '(', 'x', ')', '^', 'Δ', 'm', '.', 'y', 'j', '{', 'C', 'K', 'S', 'H', '²', '[', '-', 'w', '/', 'O', '0'}) );
        twoCharacterInputWithUnknownOutput.put(" >", new ProportionalProbability( new double[]{0.9615384615384616, 0.9658119658119658, 0.9700854700854701, 0.9743589743589743, 0.9786324786324786, 0.9829059829059829, 0.9871794871794871, 0.9914529914529914, 0.9957264957264956, 0.9999999999999999}, new char[]{'>', 'r', ' ', 'e', 'u', 'S', 'c', 'a', 'l', 'A'}) );
        twoCharacterInputWithUnknownOutput.put(" ?", new ProportionalProbability( new double[]{0.9667149059334298, 0.9681620839363242, 0.9696092619392186, 0.971056439942113, 0.9725036179450074, 0.9739507959479018, 0.9753979739507962, 0.9768451519536906, 0.978292329956585, 0.9797395079594794, 0.9811866859623738, 0.9826338639652682, 0.9840810419681626, 0.985528219971057, 0.9869753979739514, 0.9884225759768458, 0.9898697539797402, 0.9913169319826346, 0.992764109985529, 0.9942112879884234, 0.9956584659913178, 0.9971056439942122, 0.9985528219971066, 1.0000000000000009}, new char[]{'?', 'o', 'a', ' ', 'd', 'L', 'i', 'e', 'E', '0', 'c', 'l', 'n', 's', 'r', 'W', 't', '/', 'S', '.', 'p', 'g', 'w', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("! ", new ProportionalProbability( new double[]{0.946236559139785, 0.9516129032258065, 0.956989247311828, 0.9623655913978495, 0.967741935483871, 0.9731182795698925, 0.978494623655914, 0.9838709677419355, 0.989247311827957, 0.9946236559139785, 1.0}, new char[]{' ', 'o', '(', 'a', 'n', 'i', 't', 'H', 'r', 'w', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("!!", new ProportionalProbability( new double[]{0.963855421686747, 0.9759036144578314, 0.9879518072289157, 1.0}, new char[]{'!', ' ', 'h', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(" A", new ProportionalProbability( new double[]{0.9953296920763081, 0.9954088498377266, 0.9954880075991451, 0.9955671653605637, 0.9956463231219822, 0.9957254808834007, 0.9958046386448193, 0.9958837964062378, 0.9959629541676563, 0.9960421119290749, 0.9961212696904934, 0.996200427451912, 0.9962795852133305, 0.996358742974749, 0.9964379007361676, 0.9965170584975861, 0.9965962162590046, 0.9966753740204232, 0.9967545317818417, 0.9968336895432602, 0.9969128473046788, 0.9969920050660973, 0.9970711628275158, 0.9971503205889344, 0.9972294783503529, 0.9973086361117715, 0.99738779387319, 0.9974669516346085, 0.9975461093960271, 0.9976252671574456, 0.9977044249188641, 0.9977835826802827, 0.9978627404417012, 0.9979418982031197, 0.9980210559645383, 0.9981002137259568, 0.9981793714873753, 0.9982585292487939, 0.9983376870102124, 0.998416844771631, 0.9984960025330495, 0.998575160294468, 0.9986543180558866, 0.9987334758173051, 0.9988126335787236, 0.9988917913401422, 0.9989709491015607, 0.9990501068629792, 0.9991292646243978, 0.9992084223858163, 0.9992875801472348, 0.9993667379086534, 0.9994458956700719, 0.9995250534314905, 0.999604211192909, 0.9996833689543275, 0.9997625267157461, 0.9998416844771646, 0.9999208422385831, 1.0000000000000016}, new char[]{'A', 's', ' ', 'c', 'a', 't', 'b', 'w', 'e', 'o', 'l', 'i', 'f', 'g', 'M', 'E', 'p', 'r', 'S', 'm', 'F', 'n', ')', 'y', 'x', '9', 'C', '2', 'P', '1', 'k', 'u', 'd', 'h', 'I', '\'', 'B', '.', 'G', 'T', 'W', 'j', 'R', 'v', '5', 'H', '7', ',', '(', 'Z', 'D', 'q', '-', '8', 'U', '}', 'z', '0', 'N', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("!\"", new ProportionalProbability( new double[]{0.7272727272727273, 0.8181818181818182, 0.9090909090909092, 1.0}, new char[]{' ', '\"', 'r', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(" B", new ProportionalProbability( new double[]{0.9940338983050847, 0.9941694915254237, 0.9943050847457626, 0.9944406779661016, 0.9945762711864405, 0.9947118644067795, 0.9948474576271185, 0.9949830508474574, 0.9951186440677964, 0.9952542372881353, 0.9953898305084743, 0.9955254237288133, 0.9956610169491522, 0.9957966101694912, 0.9959322033898301, 0.9960677966101691, 0.996203389830508, 0.996338983050847, 0.996474576271186, 0.9966101694915249, 0.9967457627118639, 0.9968813559322028, 0.9970169491525418, 0.9971525423728808, 0.9972881355932197, 0.9974237288135587, 0.9975593220338976, 0.9976949152542366, 0.9978305084745756, 0.9979661016949145, 0.9981016949152535, 0.9982372881355924, 0.9983728813559314, 0.9985084745762703, 0.9986440677966093, 0.9987796610169483, 0.9989152542372872, 0.9990508474576262, 0.9991864406779651, 0.9993220338983041, 0.999457627118643, 0.999593220338982, 0.999728813559321, 0.9998644067796599, 0.9999999999999989}, new char[]{' ', 'B', 'i', 'a', 'u', 'k', 'r', 'e', 't', 'l', 'o', 'm', 's', 'V', 'g', 'f', 'n', 'b', 'x', '&', 'v', 'd', 'P', '(', 'c', 'T', 'p', 'F', 'M', 'h', ',', '_', 'H', 'w', '-', 'y', 'R', 'N', 'E', '=', '0', 'S', 'L', '.', ':'}) );
        twoCharacterInputWithUnknownOutput.put(" C", new ProportionalProbability( new double[]{0.9951487195800859, 0.9952282487672975, 0.9953077779545092, 0.9953873071417209, 0.9954668363289325, 0.9955463655161442, 0.9956258947033558, 0.9957054238905675, 0.9957849530777791, 0.9958644822649908, 0.9959440114522025, 0.9960235406394141, 0.9961030698266258, 0.9961825990138374, 0.9962621282010491, 0.9963416573882607, 0.9964211865754724, 0.9965007157626841, 0.9965802449498957, 0.9966597741371074, 0.996739303324319, 0.9968188325115307, 0.9968983616987424, 0.996977890885954, 0.9970574200731657, 0.9971369492603773, 0.997216478447589, 0.9972960076348006, 0.9973755368220123, 0.997455066009224, 0.9975345951964356, 0.9976141243836473, 0.9976936535708589, 0.9977731827580706, 0.9978527119452822, 0.9979322411324939, 0.9980117703197056, 0.9980912995069172, 0.9981708286941289, 0.9982503578813405, 0.9983298870685522, 0.9984094162557638, 0.9984889454429755, 0.9985684746301872, 0.9986480038173988, 0.9987275330046105, 0.9988070621918221, 0.9988865913790338, 0.9989661205662455, 0.9990456497534571, 0.9991251789406688, 0.9992047081278804, 0.9992842373150921, 0.9993637665023037, 0.9994432956895154, 0.9995228248767271, 0.9996023540639387, 0.9996818832511504, 0.999761412438362, 0.9998409416255737, 0.9999204708127853, 0.999999999999997}, new char[]{'C', 'd', 'r', 's', 't', 'N', ' ', 'c', 'i', ':', 'a', 'o', 'l', 'e', 'n', 'm', 'u', 'h', 'f', 'b', 'v', 'G', 'L', 'p', 'M', 'y', 'g', 'W', 'D', ')', 'U', 'I', '.', '-', ',', 'V', 'P', 'x', 'S', 'k', 'w', '(', '^', '2', 'z', '\'', '7', '0', 'A', '9', 'F', 'R', '>', 'H', '=', '?', 'q', '3', 'T', 'B', '1', '&'}) );
        twoCharacterInputWithUnknownOutput.put(" D", new ProportionalProbability( new double[]{0.992688318313212, 0.9928583574222071, 0.9930283965312021, 0.9931984356401972, 0.9933684747491922, 0.9935385138581873, 0.9937085529671823, 0.9938785920761773, 0.9940486311851724, 0.9942186702941674, 0.9943887094031625, 0.9945587485121575, 0.9947287876211526, 0.9948988267301476, 0.9950688658391427, 0.9952389049481377, 0.9954089440571328, 0.9955789831661278, 0.9957490222751229, 0.9959190613841179, 0.9960891004931129, 0.996259139602108, 0.996429178711103, 0.9965992178200981, 0.9967692569290931, 0.9969392960380882, 0.9971093351470832, 0.9972793742560783, 0.9974494133650733, 0.9976194524740684, 0.9977894915830634, 0.9979595306920584, 0.9981295698010535, 0.9982996089100485, 0.9984696480190436, 0.9986396871280386, 0.9988097262370337, 0.9989797653460287, 0.9991498044550238, 0.9993198435640188, 0.9994898826730139, 0.9996599217820089, 0.999829960891004, 0.999999999999999}, new char[]{'D', 'a', 'r', ' ', 'h', 's', 'm', '.', 'e', 'n', 'o', ',', 'd', 'i', 'A', 'x', 't', 'u', 'c', '>', 'B', 'g', 'l', 'p', 'k', 'y', 'f', 'b', 'C', 'R', 'E', 'O', '2', 'v', '1', 'T', 'I', '\"', 'M', ':', 'F', 'W', 'q', 'K'}) );
        twoCharacterInputWithUnknownOutput.put(" E", new ProportionalProbability( new double[]{0.9937484371092773, 0.9938734683670918, 0.9939984996249063, 0.9941235308827208, 0.9942485621405353, 0.9943735933983497, 0.9944986246561642, 0.9946236559139787, 0.9947486871717932, 0.9948737184296077, 0.9949987496874222, 0.9951237809452367, 0.9952488122030512, 0.9953738434608657, 0.9954988747186801, 0.9956239059764946, 0.9957489372343091, 0.9958739684921236, 0.9959989997499381, 0.9961240310077526, 0.9962490622655671, 0.9963740935233816, 0.9964991247811961, 0.9966241560390106, 0.996749187296825, 0.9968742185546395, 0.996999249812454, 0.9971242810702685, 0.997249312328083, 0.9973743435858975, 0.997499374843712, 0.9976244061015265, 0.997749437359341, 0.9978744686171555, 0.9979994998749699, 0.9981245311327844, 0.9982495623905989, 0.9983745936484134, 0.9984996249062279, 0.9986246561640424, 0.9987496874218569, 0.9988747186796714, 0.9989997499374859, 0.9991247811953003, 0.9992498124531148, 0.9993748437109293, 0.9994998749687438, 0.9996249062265583, 0.9997499374843728, 0.9998749687421873, 1.0000000000000018}, new char[]{'E', 'r', 'P', 'R', 'n', ' ', 'l', 'e', 'w', 's', 'T', '.', 'o', 'a', 'i', 'b', 'u', 'h', '2', 'L', 'M', 'c', 'O', ':', 't', 'f', 'y', '\'', 'm', '-', 'd', 'A', 'v', '?', 'g', 'p', 'S', 'W', 'k', 'z', 'I', '+', '(', 'B', 'N', '_', 'x', 'H', 'F', '&', '*'}) );
        twoCharacterInputWithUnknownOutput.put(" F", new ProportionalProbability( new double[]{0.9924984690753215, 0.992651561543172, 0.9928046540110226, 0.9929577464788731, 0.9931108389467237, 0.9932639314145743, 0.9934170238824248, 0.9935701163502754, 0.9937232088181259, 0.9938763012859765, 0.994029393753827, 0.9941824862216776, 0.9943355786895282, 0.9944886711573787, 0.9946417636252293, 0.9947948560930798, 0.9949479485609304, 0.9951010410287809, 0.9952541334966315, 0.9954072259644821, 0.9955603184323326, 0.9957134109001832, 0.9958665033680337, 0.9960195958358843, 0.9961726883037348, 0.9963257807715854, 0.996478873239436, 0.9966319657072865, 0.9967850581751371, 0.9969381506429876, 0.9970912431108382, 0.9972443355786887, 0.9973974280465393, 0.9975505205143899, 0.9977036129822404, 0.997856705450091, 0.9980097979179415, 0.9981628903857921, 0.9983159828536426, 0.9984690753214932, 0.9986221677893438, 0.9987752602571943, 0.9989283527250449, 0.9990814451928954, 0.999234537660746, 0.9993876301285965, 0.9995407225964471, 0.9996938150642977, 0.9998469075321482, 0.9999999999999988}, new char[]{' ', 'F', '-', 't', '1', 'c', 'h', 'l', 'd', 's', 'a', 'o', 'e', 'n', 'r', 'w', 'I', 'u', 'm', 'S', 'H', 'i', 'p', 'v', '\'', 'g', 'O', 'b', 'y', 'k', 'T', '2', ',', 'f', 'W', 'P', 'C', '>', 'N', 'M', 'q', '(', '.', 'R', 'K', 'A', ')', 'E', 'B', 'L'}) );
        twoCharacterInputWithUnknownOutput.put(" G", new ProportionalProbability( new double[]{0.9933571793561574, 0.993527508090615, 0.9936978368250725, 0.9938681655595301, 0.9940384942939876, 0.9942088230284452, 0.9943791517629027, 0.9945494804973602, 0.9947198092318178, 0.9948901379662753, 0.9950604667007329, 0.9952307954351904, 0.995401124169648, 0.9955714529041055, 0.9957417816385631, 0.9959121103730206, 0.9960824391074782, 0.9962527678419357, 0.9964230965763933, 0.9965934253108508, 0.9967637540453084, 0.9969340827797659, 0.9971044115142235, 0.997274740248681, 0.9974450689831386, 0.9976153977175961, 0.9977857264520537, 0.9979560551865112, 0.9981263839209688, 0.9982967126554263, 0.9984670413898838, 0.9986373701243414, 0.9988076988587989, 0.9989780275932565, 0.999148356327714, 0.9993186850621716, 0.9994890137966291, 0.9996593425310867, 0.9998296712655442, 1.0000000000000018}, new char[]{'G', 'e', 's', ' ', 'o', 't', 'a', 'i', 'L', 'r', 'q', 'l', 'p', 'c', 'U', 'h', 'm', 'd', '.', 'u', 'b', 'F', 'n', 'w', 'y', 'v', '\'', 'g', 'A', 'P', 'O', 'N', '-', 'D', 'f', 'C', 'S', 'x', ',', '&'}) );
        twoCharacterInputWithUnknownOutput.put("!(", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'(', ')'}) );
        twoCharacterInputWithUnknownOutput.put(" H", new ProportionalProbability( new double[]{0.9914940828402367, 0.9916789940828402, 0.9918639053254438, 0.9920488165680473, 0.9922337278106509, 0.9924186390532544, 0.992603550295858, 0.9927884615384616, 0.9929733727810651, 0.9931582840236687, 0.9933431952662722, 0.9935281065088758, 0.9937130177514794, 0.9938979289940829, 0.9940828402366865, 0.99426775147929, 0.9944526627218936, 0.9946375739644971, 0.9948224852071007, 0.9950073964497043, 0.9951923076923078, 0.9953772189349114, 0.9955621301775149, 0.9957470414201185, 0.995931952662722, 0.9961168639053256, 0.9963017751479292, 0.9964866863905327, 0.9966715976331363, 0.9968565088757398, 0.9970414201183434, 0.997226331360947, 0.9974112426035505, 0.9975961538461541, 0.9977810650887576, 0.9979659763313612, 0.9981508875739648, 0.9983357988165683, 0.9985207100591719, 0.9987056213017754, 0.998890532544379, 0.9990754437869825, 0.9992603550295861, 0.9994452662721897, 0.9996301775147932, 0.9998150887573968, 1.0000000000000002}, new char[]{'-', ' ', 'H', 'u', 'o', '(', 'a', 'd', 'n', 'S', 'B', 'c', 't', 'e', 'i', 'l', 'm', 's', 'r', 'j', 'k', 'w', 'p', 'h', 'b', 'v', 'F', '+', ':', 'y', 'M', 'L', 'f', 'N', '.', 'g', 'A', '1', ',', '=', '2', 'â', '9', 'C', 'P', 'D', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("!)", new ProportionalProbability( new double[]{0.961038961038961, 0.974025974025974, 0.987012987012987, 1.0}, new char[]{')', ' ', 't', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(" I", new ProportionalProbability( new double[]{0.9939556749496307, 0.9940899932840833, 0.994224311618536, 0.9943586299529886, 0.9944929482874413, 0.9946272666218939, 0.9947615849563466, 0.9948959032907992, 0.9950302216252519, 0.9951645399597046, 0.9952988582941572, 0.9954331766286099, 0.9955674949630625, 0.9957018132975152, 0.9958361316319678, 0.9959704499664205, 0.9961047683008731, 0.9962390866353258, 0.9963734049697784, 0.9965077233042311, 0.9966420416386838, 0.9967763599731364, 0.9969106783075891, 0.9970449966420417, 0.9971793149764944, 0.997313633310947, 0.9974479516453997, 0.9975822699798523, 0.997716588314305, 0.9978509066487576, 0.9979852249832103, 0.998119543317663, 0.9982538616521156, 0.9983881799865683, 0.9985224983210209, 0.9986568166554736, 0.9987911349899262, 0.9989254533243789, 0.9990597716588315, 0.9991940899932842, 0.9993284083277368, 0.9994627266621895, 0.9995970449966421, 0.9997313633310948, 0.9998656816655475, 1.0}, new char[]{'I', 'i', 't', ' ', '\'', 'r', 'b', 'a', 'n', 'e', 'l', 'o', 'u', '.', 'c', 'h', 's', 'M', ',', 'x', 'O', 'v', 'm', 'f', 'A', 'y', '1', 'g', 'C', 'p', ')', 'w', 'E', '-', 'd', 'P', '2', 'T', 'F', 'V', 'k', '(', 'J', '?', '‘', 'G'}) );
        twoCharacterInputWithUnknownOutput.put(" J", new ProportionalProbability( new double[]{0.9881370826010545, 0.9885764499121266, 0.9890158172231986, 0.9894551845342707, 0.9898945518453428, 0.9903339191564149, 0.990773286467487, 0.991212653778559, 0.9916520210896311, 0.9920913884007032, 0.9925307557117753, 0.9929701230228474, 0.9934094903339195, 0.9938488576449915, 0.9942882249560636, 0.9947275922671357, 0.9951669595782078, 0.9956063268892799, 0.9960456942003519, 0.996485061511424, 0.9969244288224961, 0.9973637961335682, 0.9978031634446403, 0.9982425307557123, 0.9986818980667844, 0.9991212653778565, 0.9995606326889286, 1.0000000000000007}, new char[]{'w', 'e', 'J', 'h', ' ', 'n', 'o', 'l', 't', 's', 'u', 'i', 'd', 'p', '7', 'a', 'M', ',', '\'', 'y', 'j', 'c', 'Y', '1', 'T', 'v', 'r', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("!+", new ProportionalProbability( new double[]{0.96875, 1.0}, new char[]{'+', '['}) );
        twoCharacterInputWithUnknownOutput.put(" K", new ProportionalProbability( new double[]{0.9911050290797127, 0.9914471433458776, 0.9917892576120425, 0.9921313718782074, 0.9924734861443724, 0.9928156004105373, 0.9931577146767022, 0.9934998289428671, 0.9938419432090321, 0.994184057475197, 0.9945261717413619, 0.9948682860075269, 0.9952104002736918, 0.9955525145398567, 0.9958946288060216, 0.9962367430721866, 0.9965788573383515, 0.9969209716045164, 0.9972630858706814, 0.9976052001368463, 0.9979473144030112, 0.9982894286691761, 0.9986315429353411, 0.998973657201506, 0.9993157714676709, 0.9996578857338358, 1.0000000000000007}, new char[]{'y', 'k', 'a', 'K', ' ', 'e', 'r', 'm', 'p', 'U', ')', 'd', 'N', 'b', 's', 'o', 'T', 'h', 'i', 'q', 'n', 'M', 't', 'W', 'c', 'V', '\"'}) );
        twoCharacterInputWithUnknownOutput.put(" L", new ProportionalProbability( new double[]{0.9916972388491987, 0.9918903263178219, 0.9920834137864452, 0.9922765012550684, 0.9924695887236916, 0.9926626761923149, 0.9928557636609381, 0.9930488511295613, 0.9932419385981845, 0.9934350260668078, 0.993628113535431, 0.9938212010040542, 0.9940142884726775, 0.9942073759413007, 0.9944004634099239, 0.9945935508785472, 0.9947866383471704, 0.9949797258157936, 0.9951728132844169, 0.9953659007530401, 0.9955589882216633, 0.9957520756902866, 0.9959451631589098, 0.996138250627533, 0.9963313380961563, 0.9965244255647795, 0.9967175130334027, 0.996910600502026, 0.9971036879706492, 0.9972967754392724, 0.9974898629078957, 0.9976829503765189, 0.9978760378451421, 0.9980691253137653, 0.9982622127823886, 0.9984553002510118, 0.998648387719635, 0.9988414751882583, 0.9990345626568815, 0.9992276501255047, 0.999420737594128, 0.9996138250627512, 0.9998069125313744, 0.9999999999999977}, new char[]{'L', 'T', 'K', ' ', 'e', 't', 'C', 's', 'a', 'n', 'l', 'd', 'm', 'i', 'P', 'g', 'o', 'p', 'y', 'u', 'c', 'v', 'h', 'w', 'G', 'r', '.', '(', 'B', ',', '-', ':', 'F', 'E', 'S', 'f', 'k', '1', '3', 'b', '\'', '&', 'A', '5'}) );
        twoCharacterInputWithUnknownOutput.put(" M", new ProportionalProbability( new double[]{0.9935459848578876, 0.9936701005336974, 0.9937942162095073, 0.9939183318853171, 0.9940424475611269, 0.9941665632369368, 0.9942906789127466, 0.9944147945885564, 0.9945389102643662, 0.9946630259401761, 0.9947871416159859, 0.9949112572917957, 0.9950353729676056, 0.9951594886434154, 0.9952836043192252, 0.9954077199950351, 0.9955318356708449, 0.9956559513466547, 0.9957800670224646, 0.9959041826982744, 0.9960282983740842, 0.9961524140498941, 0.9962765297257039, 0.9964006454015137, 0.9965247610773236, 0.9966488767531334, 0.9967729924289432, 0.9968971081047531, 0.9970212237805629, 0.9971453394563727, 0.9972694551321826, 0.9973935708079924, 0.9975176864838022, 0.9976418021596121, 0.9977659178354219, 0.9978900335112317, 0.9980141491870416, 0.9981382648628514, 0.9982623805386612, 0.9983864962144711, 0.9985106118902809, 0.9986347275660907, 0.9987588432419006, 0.9988829589177104, 0.9990070745935202, 0.9991311902693301, 0.9992553059451399, 0.9993794216209497, 0.9995035372967596, 0.9996276529725694, 0.9997517686483792, 0.9998758843241891, 0.9999999999999989}, new char[]{'M', ' ', 'n', 'e', 'r', 'i', 'd', 'a', 'P', 'R', 's', 'l', 'f', 'B', 'w', 't', 'h', 'm', 'c', 'g', '.', 'L', 'u', 'o', 'O', 'F', 'G', '-', 'T', '0', 'y', 'A', 'E', ',', 'S', 'b', 'k', 'x', 'z', 'v', '(', '…', 'D', 'p', '6', 'W', ')', '4', 'H', 'j', '=', 'I', ':'}) );
        twoCharacterInputWithUnknownOutput.put(" N", new ProportionalProbability( new double[]{0.9901364113326337, 0.9903462749213011, 0.9905561385099685, 0.9907660020986359, 0.9909758656873032, 0.9911857292759706, 0.991395592864638, 0.9916054564533053, 0.9918153200419727, 0.9920251836306401, 0.9922350472193074, 0.9924449108079748, 0.9926547743966422, 0.9928646379853096, 0.9930745015739769, 0.9932843651626443, 0.9934942287513117, 0.993704092339979, 0.9939139559286464, 0.9941238195173138, 0.9943336831059811, 0.9945435466946485, 0.9947534102833159, 0.9949632738719832, 0.9951731374606506, 0.995383001049318, 0.9955928646379854, 0.9958027282266527, 0.9960125918153201, 0.9962224554039875, 0.9964323189926548, 0.9966421825813222, 0.9968520461699896, 0.9970619097586569, 0.9972717733473243, 0.9974816369359917, 0.997691500524659, 0.9979013641133264, 0.9981112277019938, 0.9983210912906612, 0.9985309548793285, 0.9987408184679959, 0.9989506820566633, 0.9991605456453306, 0.999370409233998, 0.9995802728226654, 0.9997901364113327, 1.0}, new char[]{' ', 'z', 'N', 'i', 'o', 'p', 'l', 'b', 'e', 'r', 'a', 'h', 'n', 's', 'y', '`', 't', 'm', 'u', 'G', '-', 'P', '%', 'd', 'c', 'g', 'T', 'w', '2', 'F', 'A', 'M', 'I', 'R', 'v', 'f', 'C', '1', 'H', 'L', '*', 'q', 'k', ':', ',', '\'', 'ī', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(" O", new ProportionalProbability( new double[]{0.9875862068965517, 0.9879310344827587, 0.9882758620689656, 0.9886206896551725, 0.9889655172413794, 0.9893103448275863, 0.9896551724137932, 0.9900000000000001, 0.990344827586207, 0.9906896551724139, 0.9910344827586208, 0.9913793103448277, 0.9917241379310346, 0.9920689655172416, 0.9924137931034485, 0.9927586206896554, 0.9931034482758623, 0.9934482758620692, 0.9937931034482761, 0.994137931034483, 0.9944827586206899, 0.9948275862068968, 0.9951724137931037, 0.9955172413793106, 0.9958620689655175, 0.9962068965517245, 0.9965517241379314, 0.9968965517241383, 0.9972413793103452, 0.9975862068965521, 0.997931034482759, 0.9982758620689659, 0.9986206896551728, 0.9989655172413797, 0.9993103448275866, 0.9996551724137935, 1.0000000000000004}, new char[]{'a', ' ', 'l', 'd', 'O', 'o', 't', 'u', 'p', 's', 'e', 'S', 'c', 'n', 'r', '-', 'w', '.', 'i', '{', '0', 'g', 'f', 'h', 'E', 'm', '9', 'b', 'y', 'V', 'R', '>', 'k', ',', 'q', 'P', '%'}) );
        twoCharacterInputWithUnknownOutput.put(" P", new ProportionalProbability( new double[]{0.9944278989336152, 0.9945239696416562, 0.9946200403496973, 0.9947161110577384, 0.9948121817657795, 0.9949082524738205, 0.9950043231818616, 0.9951003938899027, 0.9951964645979438, 0.9952925353059848, 0.9953886060140259, 0.995484676722067, 0.995580747430108, 0.9956768181381491, 0.9957728888461902, 0.9958689595542313, 0.9959650302622723, 0.9960611009703134, 0.9961571716783545, 0.9962532423863956, 0.9963493130944366, 0.9964453838024777, 0.9965414545105188, 0.9966375252185599, 0.9967335959266009, 0.996829666634642, 0.9969257373426831, 0.9970218080507242, 0.9971178787587652, 0.9972139494668063, 0.9973100201748474, 0.9974060908828885, 0.9975021615909295, 0.9975982322989706, 0.9976943030070117, 0.9977903737150527, 0.9978864444230938, 0.9979825151311349, 0.998078585839176, 0.998174656547217, 0.9982707272552581, 0.9983667979632992, 0.9984628686713403, 0.9985589393793813, 0.9986550100874224, 0.9987510807954635, 0.9988471515035046, 0.9989432222115456, 0.9990392929195867, 0.9991353636276278, 0.9992314343356689, 0.9993275050437099, 0.999423575751751, 0.9995196464597921, 0.9996157171678332, 0.9997117878758742, 0.9998078585839153, 0.9999039292919564, 0.9999999999999974}, new char[]{'l', 'w', 'i', '1', 'P', 'a', 'e', ' ', 'o', 'r', 'm', 'd', 't', 'n', 'p', '-', 's', 'j', 'u', 'f', 'S', 'c', 'y', 'O', '.', 'g', '(', 'k', '&', 'h', 'v', 'b', 'Q', ':', 'Y', '\'', 'E', 'N', 'M', 'L', 'A', 'V', 'I', 'D', 'U', '5', 'G', 'R', 'x', 'W', 'K', '9', ',', 'B', 'F', '7', 'C', ')', '6'}) );
        twoCharacterInputWithUnknownOutput.put(" Q", new ProportionalProbability( new double[]{0.9725190839694656, 0.9740458015267175, 0.9755725190839694, 0.9770992366412212, 0.9786259541984731, 0.980152671755725, 0.9816793893129768, 0.9832061068702287, 0.9847328244274806, 0.9862595419847324, 0.9877862595419843, 0.9893129770992362, 0.990839694656488, 0.9923664122137399, 0.9938931297709918, 0.9954198473282436, 0.9969465648854955, 0.9984732824427474, 0.9999999999999992}, new char[]{'Q', 'b', ' ', 'n', 'h', 't', 'a', 'p', 'i', 'o', 'C', 'u', 'v', 's', 'e', 'c', 'm', 'r', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(" R", new ProportionalProbability( new double[]{0.9939624622653892, 0.9940937130857068, 0.9942249639060244, 0.9943562147263421, 0.9944874655466597, 0.9946187163669773, 0.9947499671872949, 0.9948812180076125, 0.9950124688279302, 0.9951437196482478, 0.9952749704685654, 0.995406221288883, 0.9955374721092006, 0.9956687229295182, 0.9957999737498359, 0.9959312245701535, 0.9960624753904711, 0.9961937262107887, 0.9963249770311063, 0.996456227851424, 0.9965874786717416, 0.9967187294920592, 0.9968499803123768, 0.9969812311326944, 0.997112481953012, 0.9972437327733297, 0.9973749835936473, 0.9975062344139649, 0.9976374852342825, 0.9977687360546001, 0.9978999868749178, 0.9980312376952354, 0.998162488515553, 0.9982937393358706, 0.9984249901561882, 0.9985562409765059, 0.9986874917968235, 0.9988187426171411, 0.9989499934374587, 0.9990812442577763, 0.999212495078094, 0.9993437458984116, 0.9994749967187292, 0.9996062475390468, 0.9997374983593644, 0.999868749179682, 0.9999999999999997}, new char[]{' ', 'l', 'c', 'e', 'R', 't', 'a', 'd', 'i', 'f', 'o', 'u', 'h', 'y', 'r', '=', 'g', 'm', 'n', 's', 'A', 'w', 'C', 'L', '1', 'p', 'I', '-', '_', 'T', '2', '\'', 'v', '.', 'b', 'W', '6', '8', 'S', '(', 'k', '/', '+', ',', 'P', 'z', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(" S", new ProportionalProbability( new double[]{0.9963574030426399, 0.9964288265123921, 0.9965002499821443, 0.9965716734518965, 0.9966430969216487, 0.9967145203914008, 0.996785943861153, 0.9968573673309052, 0.9969287908006574, 0.9970002142704096, 0.9970716377401618, 0.997143061209914, 0.9972144846796662, 0.9972859081494184, 0.9973573316191706, 0.9974287550889228, 0.997500178558675, 0.9975716020284272, 0.9976430254981794, 0.9977144489679316, 0.9977858724376838, 0.997857295907436, 0.9979287193771882, 0.9980001428469404, 0.9980715663166926, 0.9981429897864448, 0.998214413256197, 0.9982858367259492, 0.9983572601957014, 0.9984286836654536, 0.9985001071352058, 0.998571530604958, 0.9986429540747102, 0.9987143775444624, 0.9987858010142145, 0.9988572244839667, 0.9989286479537189, 0.9990000714234711, 0.9990714948932233, 0.9991429183629755, 0.9992143418327277, 0.9992857653024799, 0.9993571887722321, 0.9994286122419843, 0.9995000357117365, 0.9995714591814887, 0.9996428826512409, 0.9997143061209931, 0.9997857295907453, 0.9998571530604975, 0.9999285765302497, 1.0000000000000018}, new char[]{'S', 'o', 'p', ' ', 'd', 'c', 'a', 't', 'l', 'e', 's', 'y', 'h', 'i', 'M', 'f', 'n', 'k', 'C', '2', 'T', 'r', '?', 'b', 'u', ':', '-', 'I', 'm', 'B', 'g', 'v', '.', 'A', 'N', '&', 'W', 'w', '1', 'P', 'L', '(', ',', 'E', 'U', 'V', '\"', '4', 'G', 'x', '=', 'z'}) );
        twoCharacterInputWithUnknownOutput.put(" T", new ProportionalProbability( new double[]{0.9948965642941766, 0.9949876970746377, 0.9950788298550989, 0.99516996263556, 0.9952610954160211, 0.9953522281964823, 0.9954433609769434, 0.9955344937574045, 0.9956256265378657, 0.9957167593183268, 0.995807892098788, 0.9958990248792491, 0.9959901576597102, 0.9960812904401714, 0.9961724232206325, 0.9962635560010936, 0.9963546887815548, 0.9964458215620159, 0.996536954342477, 0.9966280871229382, 0.9967192199033993, 0.9968103526838604, 0.9969014854643216, 0.9969926182447827, 0.9970837510252438, 0.997174883805705, 0.9972660165861661, 0.9973571493666272, 0.9974482821470884, 0.9975394149275495, 0.9976305477080106, 0.9977216804884718, 0.9978128132689329, 0.997903946049394, 0.9979950788298552, 0.9980862116103163, 0.9981773443907774, 0.9982684771712386, 0.9983596099516997, 0.9984507427321608, 0.998541875512622, 0.9986330082930831, 0.9987241410735442, 0.9988152738540054, 0.9989064066344665, 0.9989975394149276, 0.9990886721953888, 0.9991798049758499, 0.999270937756311, 0.9993620705367722, 0.9994532033172333, 0.9995443360976944, 0.9996354688781556, 0.9997266016586167, 0.9998177344390778, 0.999908867219539, 1.0}, new char[]{',', 'i', 'T', 'r', 'o', 'l', 't', ' ', 'u', 'n', 'a', '\'', 'k', 'f', 'e', 's', 'x', 'c', 'm', 'g', '-', 'w', 'p', 'd', 'M', 'h', ':', 'b', 'I', '•', '.', 'y', 'z', 'v', 'C', 'S', 'R', '0', '2', 'P', '3', 'F', 'ה', ')', 'A', 'B', 'j', 'L', 'q', 'G', 'H', 'E', 'O', 'V', 'W', 'D', '1'}) );
        twoCharacterInputWithUnknownOutput.put(" U", new ProportionalProbability( new double[]{0.9910196987253765, 0.9913093858632677, 0.9915990730011588, 0.9918887601390499, 0.992178447276941, 0.9924681344148322, 0.9927578215527233, 0.9930475086906144, 0.9933371958285055, 0.9936268829663967, 0.9939165701042878, 0.9942062572421789, 0.99449594438007, 0.9947856315179612, 0.9950753186558523, 0.9953650057937434, 0.9956546929316346, 0.9959443800695257, 0.9962340672074168, 0.9965237543453079, 0.9968134414831991, 0.9971031286210902, 0.9973928157589813, 0.9976825028968724, 0.9979721900347636, 0.9982618771726547, 0.9985515643105458, 0.9988412514484369, 0.9991309385863281, 0.9994206257242192, 0.9997103128621103, 1.0000000000000013}, new char[]{'U', 'd', 'g', 'a', 'e', 's', 'r', ' ', 't', 'm', 'l', 'h', 'c', 'f', 'i', 'o', 'w', 'n', '2', '.', 'p', 'M', 'S', 'b', ',', 'k', 'u', '&', 'I', 'y', 'L', 'T'}) );
        twoCharacterInputWithUnknownOutput.put(" V", new ProportionalProbability( new double[]{0.9898070622497269, 0.9901710957408081, 0.9905351292318892, 0.9908991627229704, 0.9912631962140516, 0.9916272297051327, 0.9919912631962139, 0.992355296687295, 0.9927193301783762, 0.9930833636694574, 0.9934473971605385, 0.9938114306516197, 0.9941754641427009, 0.994539497633782, 0.9949035311248632, 0.9952675646159443, 0.9956315981070255, 0.9959956315981067, 0.9963596650891878, 0.996723698580269, 0.9970877320713502, 0.9974517655624313, 0.9978157990535125, 0.9981798325445936, 0.9985438660356748, 0.998907899526756, 0.9992719330178371, 0.9996359665089183, 0.9999999999999994}, new char[]{'e', 's', 'i', ' ', 'g', '?', 'V', 'm', 'a', 'l', 'w', 'W', 'c', 'u', 'n', 'o', 'h', 'r', 'f', 't', 'E', 'v', 'd', '2', 'p', 'A', '/', 'C', 'y'}) );
        twoCharacterInputWithUnknownOutput.put(" W", new ProportionalProbability( new double[]{0.9915030211480362, 0.9916918429003021, 0.991880664652568, 0.9920694864048338, 0.9922583081570997, 0.9924471299093656, 0.9926359516616314, 0.9928247734138973, 0.9930135951661632, 0.993202416918429, 0.9933912386706949, 0.9935800604229608, 0.9937688821752266, 0.9939577039274925, 0.9941465256797584, 0.9943353474320242, 0.9945241691842901, 0.994712990936556, 0.9949018126888218, 0.9950906344410877, 0.9952794561933536, 0.9954682779456194, 0.9956570996978853, 0.9958459214501512, 0.996034743202417, 0.9962235649546829, 0.9964123867069488, 0.9966012084592146, 0.9967900302114805, 0.9969788519637464, 0.9971676737160122, 0.9973564954682781, 0.997545317220544, 0.9977341389728098, 0.9979229607250757, 0.9981117824773416, 0.9983006042296074, 0.9984894259818733, 0.9986782477341392, 0.998867069486405, 0.9990558912386709, 0.9992447129909368, 0.9994335347432026, 0.9996223564954685, 0.9998111782477344, 1.0000000000000002}, new char[]{'W', 'I', 'u', 'a', 'r', ' ', 'e', 't', 'n', 'm', 'w', 's', 'b', 'o', 'y', '2', 'h', 'i', 'T', 'Q', 'd', 'f', 'F', 'c', 'C', '1', 'p', '.', 'S', 'l', 'N', 'P', 'D', 'G', 'x', '-', 'U', 'v', '(', 'k', 'g', 'L', '>', 'A', '9', 'R'}) );
        twoCharacterInputWithUnknownOutput.put(" X", new ProportionalProbability( new double[]{0.9622641509433962, 0.9649595687331537, 0.9676549865229112, 0.9703504043126686, 0.9730458221024261, 0.9757412398921835, 0.978436657681941, 0.9811320754716985, 0.9838274932614559, 0.9865229110512134, 0.9892183288409708, 0.9919137466307283, 0.9946091644204857, 0.9973045822102432, 1.0000000000000007}, new char[]{'X', 'f', 'l', 'r', 'i', 'u', ')', ' ', '3', 'p', 't', 'e', 'm', 's', '\"'}) );
        twoCharacterInputWithUnknownOutput.put(" Y", new ProportionalProbability( new double[]{0.9715994020926756, 0.9730941704035874, 0.9745889387144991, 0.9760837070254109, 0.9775784753363227, 0.9790732436472345, 0.9805680119581462, 0.982062780269058, 0.9835575485799698, 0.9850523168908816, 0.9865470852017934, 0.9880418535127051, 0.9895366218236169, 0.9910313901345287, 0.9925261584454405, 0.9940209267563522, 0.995515695067264, 0.9970104633781758, 0.9985052316890876, 0.9999999999999993}, new char[]{'Y', 'e', 'p', 'l', '.', ' ', 'i', 'h', 't', 'u', 'k', 'M', 'f', 'b', 'n', 'S', 'C', 'r', 'v', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(" Z", new ProportionalProbability( new double[]{0.9816176470588235, 0.9828431372549019, 0.9840686274509803, 0.9852941176470588, 0.9865196078431372, 0.9877450980392156, 0.988970588235294, 0.9901960784313725, 0.9914215686274509, 0.9926470588235293, 0.9938725490196078, 0.9950980392156862, 0.9963235294117646, 0.997549019607843, 0.9987745098039215, 0.9999999999999999}, new char[]{'Z', ' ', 'o', 't', 'h', 'd', ',', 's', 'a', 'e', 'n', 'i', 'E', 'f', '7', 'r'}) );
        twoCharacterInputWithUnknownOutput.put(" [", new ProportionalProbability( new double[]{0.9695740365111561, 0.971602434077079, 0.9736308316430019, 0.9756592292089248, 0.9776876267748477, 0.9797160243407705, 0.9817444219066934, 0.9837728194726163, 0.9858012170385392, 0.9878296146044621, 0.9898580121703849, 0.9918864097363078, 0.9939148073022307, 0.9959432048681536, 0.9979716024340765, 0.9999999999999993}, new char[]{' ', 't', '[', 'c', 'e', 'n', 'y', 'a', '4', 'r', 'm', 'q', 'A', '-', 'o', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("!<", new ProportionalProbability( new double[]{0.9935483870967742, 0.9946236559139785, 0.9956989247311828, 0.9967741935483871, 0.9978494623655915, 0.9989247311827958, 1.0}, new char[]{'!', ' ', 't', 'n', 'o', '1', ')'}) );
        twoCharacterInputWithUnknownOutput.put(" ^", new ProportionalProbability( new double[]{0.975, 1.0}, new char[]{'^', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\" ", new ProportionalProbability( new double[]{0.9808917197452229, 0.9815994338287332, 0.9823071479122434, 0.9830148619957536, 0.9837225760792638, 0.9844302901627741, 0.9851380042462843, 0.9858457183297945, 0.9865534324133047, 0.987261146496815, 0.9879688605803252, 0.9886765746638354, 0.9893842887473456, 0.9900920028308559, 0.9907997169143661, 0.9915074309978763, 0.9922151450813865, 0.9929228591648968, 0.993630573248407, 0.9943382873319172, 0.9950460014154274, 0.9957537154989377, 0.9964614295824479, 0.9971691436659581, 0.9978768577494683, 0.9985845718329786, 0.9992922859164888, 0.999999999999999}, new char[]{'-', 'l', ' ', 'e', 'p', 'r', 'm', 't', 'v', 'o', 'u', 'K', 'f', 'A', 'I', 'n', 'i', 'a', 'c', '.', '\'', 's', 'w', 'h', ',', 'k', 'd', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(" _", new ProportionalProbability( new double[]{0.9916798732171157, 0.9920760697305864, 0.992472266244057, 0.9928684627575277, 0.9932646592709984, 0.993660855784469, 0.9940570522979397, 0.9944532488114104, 0.9948494453248811, 0.9952456418383517, 0.9956418383518224, 0.9960380348652931, 0.9964342313787637, 0.9968304278922344, 0.9972266244057051, 0.9976228209191758, 0.9980190174326464, 0.9984152139461171, 0.9988114104595878, 0.9992076069730584, 0.9996038034865291, 0.9999999999999998}, new char[]{'_', 't', 'r', 'k', 'i', 'm', 'e', ' ', 'h', 'a', 'g', 'l', 's', 'p', 'o', 'f', 'n', 'b', 'v', 'c', 'u', 'y'}) );
        twoCharacterInputWithUnknownOutput.put(" a", new ProportionalProbability( new double[]{0.9995819547185587, 0.999587052831747, 0.9995921509449353, 0.9995972490581235, 0.9996023471713118, 0.9996074452845001, 0.9996125433976883, 0.9996176415108766, 0.9996227396240649, 0.9996278377372532, 0.9996329358504414, 0.9996380339636297, 0.999643132076818, 0.9996482301900063, 0.9996533283031945, 0.9996584264163828, 0.9996635245295711, 0.9996686226427594, 0.9996737207559476, 0.9996788188691359, 0.9996839169823242, 0.9996890150955124, 0.9996941132087007, 0.999699211321889, 0.9997043094350773, 0.9997094075482655, 0.9997145056614538, 0.9997196037746421, 0.9997247018878304, 0.9997298000010186, 0.9997348981142069, 0.9997399962273952, 0.9997450943405835, 0.9997501924537717, 0.99975529056696, 0.9997603886801483, 0.9997654867933365, 0.9997705849065248, 0.9997756830197131, 0.9997807811329014, 0.9997858792460896, 0.9997909773592779, 0.9997960754724662, 0.9998011735856545, 0.9998062716988427, 0.999811369812031, 0.9998164679252193, 0.9998215660384075, 0.9998266641515958, 0.9998317622647841, 0.9998368603779724, 0.9998419584911606, 0.9998470566043489, 0.9998521547175372, 0.9998572528307255, 0.9998623509439137, 0.999867449057102, 0.9998725471702903, 0.9998776452834786, 0.9998827433966668, 0.9998878415098551, 0.9998929396230434, 0.9998980377362316, 0.9999031358494199, 0.9999082339626082, 0.9999133320757965, 0.9999184301889847, 0.999923528302173, 0.9999286264153613, 0.9999337245285496, 0.9999388226417378, 0.9999439207549261, 0.9999490188681144, 0.9999541169813027, 0.9999592150944909, 0.9999643132076792, 0.9999694113208675, 0.9999745094340557, 0.999979607547244, 0.9999847056604323, 0.9999898037736206, 0.9999949018868088, 0.9999999999999971}, new char[]{'a', 'r', 'l', ' ', 'n', 'u', 'y', 'b', 'h', 'e', 'x', 'm', 'i', 'o', 'f', '.', ')', 't', 's', 'd', 'p', 'E', ',', '4', 'c', 'v', 'g', '(', '\"', '/', '2', 'k', '-', 'w', 'J', ':', 'C', 'B', 'q', 'M', '9', 'R', '6', 'z', 'T', 'F', 'A', 'L', 'W', 'N', '?', 'j', 'U', 'I', '\'', '=', 'H', 'D', '!', '0', '%', '1', 'G', 'K', '+', '…', 'S', '^', '3', '5', 'P', '–', 'V', '>', 'O', '7', '‘', '*', 'ו', '∞', ';', '°', '∑'}) );
        twoCharacterInputWithUnknownOutput.put(" b", new ProportionalProbability( new double[]{0.9989882638607851, 0.9990027172342024, 0.9990171706076197, 0.9990316239810371, 0.9990460773544544, 0.9990605307278717, 0.999074984101289, 0.9990894374747064, 0.9991038908481237, 0.999118344221541, 0.9991327975949583, 0.9991472509683756, 0.999161704341793, 0.9991761577152103, 0.9991906110886276, 0.9992050644620449, 0.9992195178354623, 0.9992339712088796, 0.9992484245822969, 0.9992628779557142, 0.9992773313291315, 0.9992917847025489, 0.9993062380759662, 0.9993206914493835, 0.9993351448228008, 0.9993495981962182, 0.9993640515696355, 0.9993785049430528, 0.9993929583164701, 0.9994074116898874, 0.9994218650633048, 0.9994363184367221, 0.9994507718101394, 0.9994652251835567, 0.9994796785569741, 0.9994941319303914, 0.9995085853038087, 0.999523038677226, 0.9995374920506434, 0.9995519454240607, 0.999566398797478, 0.9995808521708953, 0.9995953055443126, 0.99960975891773, 0.9996242122911473, 0.9996386656645646, 0.9996531190379819, 0.9996675724113993, 0.9996820257848166, 0.9996964791582339, 0.9997109325316512, 0.9997253859050685, 0.9997398392784859, 0.9997542926519032, 0.9997687460253205, 0.9997831993987378, 0.9997976527721552, 0.9998121061455725, 0.9998265595189898, 0.9998410128924071, 0.9998554662658244, 0.9998699196392418, 0.9998843730126591, 0.9998988263860764, 0.9999132797594937, 0.9999277331329111, 0.9999421865063284, 0.9999566398797457, 0.999971093253163, 0.9999855466265803, 0.9999999999999977}, new char[]{' ', 'r', 'a', 'b', 'd', '.', 's', ')', 'm', 'i', 'u', 'h', 't', 'k', 'c', 'o', 'e', 'z', 'p', 'n', 'w', 'R', '\'', 'f', 'P', 'U', 'A', 'l', 'g', 'v', 'y', ']', ',', '1', ':', 'L', '2', 'x', 'F', 'q', '=', 'D', 'S', 'W', '0', '-', '(', 'N', 'M', 'K', 'C', 'T', ';', 'j', '\"', 'B', '6', 'ł', 'I', 'O', 'E', '•', '7', '&', '/', 'ę', '3', 'Y', 'H', 'ö', '…'}) );
        twoCharacterInputWithUnknownOutput.put(" c", new ProportionalProbability( new double[]{0.9992364111323219, 0.999246458354265, 0.999256505576208, 0.9992665527981511, 0.9992766000200942, 0.9992866472420373, 0.9992966944639804, 0.9993067416859235, 0.9993167889078666, 0.9993268361298097, 0.9993368833517527, 0.9993469305736958, 0.9993569777956389, 0.999367025017582, 0.9993770722395251, 0.9993871194614682, 0.9993971666834113, 0.9994072139053544, 0.9994172611272975, 0.9994273083492405, 0.9994373555711836, 0.9994474027931267, 0.9994574500150698, 0.9994674972370129, 0.999477544458956, 0.9994875916808991, 0.9994976389028422, 0.9995076861247852, 0.9995177333467283, 0.9995277805686714, 0.9995378277906145, 0.9995478750125576, 0.9995579222345007, 0.9995679694564438, 0.9995780166783869, 0.99958806390033, 0.999598111122273, 0.9996081583442161, 0.9996182055661592, 0.9996282527881023, 0.9996383000100454, 0.9996483472319885, 0.9996583944539316, 0.9996684416758747, 0.9996784888978177, 0.9996885361197608, 0.9996985833417039, 0.999708630563647, 0.9997186777855901, 0.9997287250075332, 0.9997387722294763, 0.9997488194514194, 0.9997588666733624, 0.9997689138953055, 0.9997789611172486, 0.9997890083391917, 0.9997990555611348, 0.9998091027830779, 0.999819150005021, 0.9998291972269641, 0.9998392444489071, 0.9998492916708502, 0.9998593388927933, 0.9998693861147364, 0.9998794333366795, 0.9998894805586226, 0.9998995277805657, 0.9999095750025088, 0.9999196222244519, 0.9999296694463949, 0.999939716668338, 0.9999497638902811, 0.9999598111122242, 0.9999698583341673, 0.9999799055561104, 0.9999899527780535, 0.9999999999999966}, new char[]{'c', 'e', 'o', 'r', 's', 'i', 'l', ' ', 'a', 't', 'n', 'm', 'h', 'F', 'N', 'b', 'p', 'd', 'w', 'g', ']', '-', ',', 'y', 'q', 'k', 'u', 'v', 'f', 'A', '.', '+', 'x', '\'', ')', 'E', 'C', 'M', 'L', '?', '\"', '1', ':', 'R', '[', '_', 'j', '(', 'z', 'W', 'H', 'B', '2', 'D', '4', 'O', 'U', 'Y', 'T', 'É', '!', '&', 'G', 'P', '=', 'S', '*', 'V', '/', '5', '3', '%', 'I', '…', ';', 'J', '9'}) );
        twoCharacterInputWithUnknownOutput.put(" d", new ProportionalProbability( new double[]{0.9989516756281492, 0.9989685840857597, 0.9989854925433702, 0.9990024010009807, 0.9990193094585912, 0.9990362179162017, 0.9990531263738122, 0.9990700348314226, 0.9990869432890331, 0.9991038517466436, 0.9991207602042541, 0.9991376686618646, 0.9991545771194751, 0.9991714855770856, 0.9991883940346961, 0.9992053024923065, 0.999222210949917, 0.9992391194075275, 0.999256027865138, 0.9992729363227485, 0.999289844780359, 0.9993067532379695, 0.99932366169558, 0.9993405701531904, 0.9993574786108009, 0.9993743870684114, 0.9993912955260219, 0.9994082039836324, 0.9994251124412429, 0.9994420208988534, 0.9994589293564639, 0.9994758378140743, 0.9994927462716848, 0.9995096547292953, 0.9995265631869058, 0.9995434716445163, 0.9995603801021268, 0.9995772885597373, 0.9995941970173478, 0.9996111054749582, 0.9996280139325687, 0.9996449223901792, 0.9996618308477897, 0.9996787393054002, 0.9996956477630107, 0.9997125562206212, 0.9997294646782316, 0.9997463731358421, 0.9997632815934526, 0.9997801900510631, 0.9997970985086736, 0.9998140069662841, 0.9998309154238946, 0.9998478238815051, 0.9998647323391155, 0.999881640796726, 0.9998985492543365, 0.999915457711947, 0.9999323661695575, 0.999949274627168, 0.9999661830847785, 0.999983091542389, 0.9999999999999994}, new char[]{'d', ' ', 'i', 'b', 'y', 'l', 'r', 'n', 'h', 'c', 'q', 't', 'o', 's', 'g', 'a', 'e', 'u', 'v', 'm', '.', '&', 'f', 'E', 'p', 'U', 'w', 'I', '–', '(', ',', 'k', 'A', '\'', 'N', 'P', ':', 'M', 'B', 'W', 'x', '-', '3', '1', 'C', 'R', 'T', 'D', '6', '0', '4', 'j', '/', 'S', '2', 'F', 'z', '8', 'G', '7', 'V', 'J', 'L'}) );
        twoCharacterInputWithUnknownOutput.put(" e", new ProportionalProbability( new double[]{0.9988119932113898, 0.9988308504620027, 0.9988497077126156, 0.9988685649632285, 0.9988874222138414, 0.9989062794644543, 0.9989251367150672, 0.9989439939656801, 0.998962851216293, 0.9989817084669059, 0.9990005657175188, 0.9990194229681317, 0.9990382802187446, 0.9990571374693575, 0.9990759947199704, 0.9990948519705833, 0.9991137092211962, 0.9991325664718091, 0.999151423722422, 0.999170280973035, 0.9991891382236479, 0.9992079954742608, 0.9992268527248737, 0.9992457099754866, 0.9992645672260995, 0.9992834244767124, 0.9993022817273253, 0.9993211389779382, 0.9993399962285511, 0.999358853479164, 0.9993777107297769, 0.9993965679803898, 0.9994154252310027, 0.9994342824816156, 0.9994531397322285, 0.9994719969828414, 0.9994908542334543, 0.9995097114840672, 0.9995285687346801, 0.999547425985293, 0.9995662832359059, 0.9995851404865188, 0.9996039977371317, 0.9996228549877446, 0.9996417122383575, 0.9996605694889704, 0.9996794267395833, 0.9996982839901962, 0.9997171412408091, 0.999735998491422, 0.9997548557420349, 0.9997737129926478, 0.9997925702432607, 0.9998114274938736, 0.9998302847444865, 0.9998491419950994, 0.9998679992457123, 0.9998868564963252, 0.9999057137469382, 0.999924570997551, 0.999943428248164, 0.9999622854987769, 0.9999811427493898, 1.0000000000000027}, new char[]{'d', 'u', 'e', ' ', 'l', 'i', 'H', 'n', 'r', 'B', 'o', '.', 's', 'g', 'b', 'c', 't', 'S', 'a', 'f', 'h', 'm', 'y', 'p', 'w', 'q', ')', 'v', '2', 'E', 'I', 'k', '&', '1', 'N', '-', 'T', '9', 'V', ',', '(', 'z', 'j', 'x', 'M', ':', '*', '\'', 'P', '=', '0', 'C', '4', '6', '8', 'R', 'J', 'F', 'A', '/', '\"', 'W', '+', '3'}) );
        twoCharacterInputWithUnknownOutput.put(" f", new ProportionalProbability( new double[]{0.9989830058808791, 0.9989977449260837, 0.9990124839712884, 0.999027223016493, 0.9990419620616977, 0.9990567011069024, 0.999071440152107, 0.9990861791973117, 0.9991009182425163, 0.999115657287721, 0.9991303963329257, 0.9991451353781303, 0.999159874423335, 0.9991746134685396, 0.9991893525137443, 0.999204091558949, 0.9992188306041536, 0.9992335696493583, 0.9992483086945629, 0.9992630477397676, 0.9992777867849723, 0.9992925258301769, 0.9993072648753816, 0.9993220039205862, 0.9993367429657909, 0.9993514820109956, 0.9993662210562002, 0.9993809601014049, 0.9993956991466095, 0.9994104381918142, 0.9994251772370188, 0.9994399162822235, 0.9994546553274282, 0.9994693943726328, 0.9994841334178375, 0.9994988724630421, 0.9995136115082468, 0.9995283505534515, 0.9995430895986561, 0.9995578286438608, 0.9995725676890654, 0.9995873067342701, 0.9996020457794748, 0.9996167848246794, 0.9996315238698841, 0.9996462629150887, 0.9996610019602934, 0.999675741005498, 0.9996904800507027, 0.9997052190959074, 0.999719958141112, 0.9997346971863167, 0.9997494362315213, 0.999764175276726, 0.9997789143219307, 0.9997936533671353, 0.99980839241234, 0.9998231314575446, 0.9998378705027493, 0.999852609547954, 0.9998673485931586, 0.9998820876383633, 0.9998968266835679, 0.9999115657287726, 0.9999263047739773, 0.9999410438191819, 0.9999557828643866, 0.9999705219095912, 0.9999852609547959, 1.0000000000000004}, new char[]{'f', 'u', 'b', 't', ' ', 'e', 'v', 'c', 'a', 'o', 'm', 'n', 'r', 's', 'd', 'h', '\'', 'i', 'k', 'y', 'q', 'l', 'g', 'p', 'w', '.', 'F', 'z', '-', '2', 'B', ',', ':', '(', '=', 'P', 'C', 'T', 'x', '9', 'H', 'A', 'O', 'R', 'D', '3', 'S', 'N', '^', ')', '&', 'Z', '*', '0', 'E', '?', '1', '’', 'Y', 'I', '_', '5', '/', 'ֵ', '…', 'U', 'J', '+', 'L', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("\"(", new ProportionalProbability( new double[]{0.8333333333333334, 0.875, 0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'(', 'r', 'e', 's', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(" g", new ProportionalProbability( new double[]{0.9984133949971306, 0.9984471525503831, 0.9984809101036356, 0.9985146676568881, 0.9985484252101406, 0.9985821827633932, 0.9986159403166457, 0.9986496978698982, 0.9986834554231507, 0.9987172129764033, 0.9987509705296558, 0.9987847280829083, 0.9988184856361608, 0.9988522431894133, 0.9988860007426659, 0.9989197582959184, 0.9989535158491709, 0.9989872734024234, 0.999021030955676, 0.9990547885089285, 0.999088546062181, 0.9991223036154335, 0.999156061168686, 0.9991898187219386, 0.9992235762751911, 0.9992573338284436, 0.9992910913816961, 0.9993248489349487, 0.9993586064882012, 0.9993923640414537, 0.9994261215947062, 0.9994598791479588, 0.9994936367012113, 0.9995273942544638, 0.9995611518077163, 0.9995949093609688, 0.9996286669142214, 0.9996624244674739, 0.9996961820207264, 0.9997299395739789, 0.9997636971272315, 0.999797454680484, 0.9998312122337365, 0.999864969786989, 0.9998987273402415, 0.9999324848934941, 0.9999662424467466, 0.9999999999999991}, new char[]{'g', 'd', 'c', 'i', 's', 'r', 'a', 'l', ' ', 'u', 'e', 'm', 't', 'o', 'n', 'v', 'h', 'T', '.', 'f', 'j', 'P', 'b', ',', ')', 'V', 'G', '2', '3', 'A', 'k', '-', 'p', 'x', 'C', 'M', 'y', '(', ':', 'q', 'S', 'w', '7', '\"', '5', '0', '>', '\''}) );
        twoCharacterInputWithUnknownOutput.put(" h", new ProportionalProbability( new double[]{0.9983428743597469, 0.9983730039168424, 0.9984031334739378, 0.9984332630310333, 0.9984633925881288, 0.9984935221452242, 0.9985236517023197, 0.9985537812594152, 0.9985839108165107, 0.9986140403736061, 0.9986441699307016, 0.9986742994877971, 0.9987044290448925, 0.998734558601988, 0.9987646881590835, 0.998794817716179, 0.9988249472732744, 0.9988550768303699, 0.9988852063874654, 0.9989153359445608, 0.9989454655016563, 0.9989755950587518, 0.9990057246158472, 0.9990358541729427, 0.9990659837300382, 0.9990961132871337, 0.9991262428442291, 0.9991563724013246, 0.9991865019584201, 0.9992166315155155, 0.999246761072611, 0.9992768906297065, 0.999307020186802, 0.9993371497438974, 0.9993672793009929, 0.9993974088580884, 0.9994275384151838, 0.9994576679722793, 0.9994877975293748, 0.9995179270864702, 0.9995480566435657, 0.9995781862006612, 0.9996083157577567, 0.9996384453148521, 0.9996685748719476, 0.9996987044290431, 0.9997288339861385, 0.999758963543234, 0.9997890931003295, 0.999819222657425, 0.9998493522145204, 0.9998794817716159, 0.9999096113287114, 0.9999397408858068, 0.9999698704429023, 0.9999999999999978}, new char[]{'h', 'b', 'l', 'r', ' ', 'e', 'c', 's', 'k', 'a', 'm', 't', 'n', 'p', 'd', 'o', '.', 'g', 'v', 'i', '/', 'w', ',', 'y', 'u', '\"', 'j', 'f', 'C', 'E', ':', 'B', 'F', '7', '0', 'H', '5', 'I', ')', 'z', '2', 'L', 'T', 'q', '=', '…', 'x', 'W', 'O', 'U', 'K', 'R', 'M', 'P', 'S', '’'}) );
        twoCharacterInputWithUnknownOutput.put(" i", new ProportionalProbability( new double[]{0.9993151916179454, 0.999323751722721, 0.9993323118274967, 0.9993408719322724, 0.9993494320370481, 0.9993579921418237, 0.9993665522465994, 0.9993751123513751, 0.9993836724561508, 0.9993922325609265, 0.9994007926657021, 0.9994093527704778, 0.9994179128752535, 0.9994264729800292, 0.9994350330848049, 0.9994435931895805, 0.9994521532943562, 0.9994607133991319, 0.9994692735039076, 0.9994778336086833, 0.9994863937134589, 0.9994949538182346, 0.9995035139230103, 0.999512074027786, 0.9995206341325616, 0.9995291942373373, 0.999537754342113, 0.9995463144468887, 0.9995548745516644, 0.99956343465644, 0.9995719947612157, 0.9995805548659914, 0.9995891149707671, 0.9995976750755428, 0.9996062351803184, 0.9996147952850941, 0.9996233553898698, 0.9996319154946455, 0.9996404755994212, 0.9996490357041968, 0.9996575958089725, 0.9996661559137482, 0.9996747160185239, 0.9996832761232995, 0.9996918362280752, 0.9997003963328509, 0.9997089564376266, 0.9997175165424023, 0.9997260766471779, 0.9997346367519536, 0.9997431968567293, 0.999751756961505, 0.9997603170662807, 0.9997688771710563, 0.999777437275832, 0.9997859973806077, 0.9997945574853834, 0.999803117590159, 0.9998116776949347, 0.9998202377997104, 0.9998287979044861, 0.9998373580092618, 0.9998459181140374, 0.9998544782188131, 0.9998630383235888, 0.9998715984283645, 0.9998801585331402, 0.9998887186379158, 0.9998972787426915, 0.9999058388474672, 0.9999143989522429, 0.9999229590570186, 0.9999315191617942, 0.9999400792665699, 0.9999486393713456, 0.9999571994761213, 0.999965759580897, 0.9999743196856726, 0.9999828797904483, 0.999991439895224, 0.9999999999999997}, new char[]{' ', 'i', 'n', 'u', ',', 'e', 'c', 't', 'd', 'o', 'g', 'p', 'h', 's', 'a', 'r', 'l', 'm', 'f', 'y', 'w', 'q', 'b', 'E', 'v', '-', '.', 'B', 'z', 'O', 'G', '1', '7', 'k', 'P', ':', 'A', 'H', 'R', 'x', '0', 'M', 'C', '(', 'j', '4', '–', 'I', 'F', '\'', '}', 'T', '3', '2', 'S', ')', '5', 'Q', '’', 'D', '[', 'N', 'ע', 'ש', '=', 'W', 'L', '^', '9', ';', '?', '6', '+', '&', 'ß', 'U', '*', 'V', 'K', '8', '/'}) );
        twoCharacterInputWithUnknownOutput.put(" j", new ProportionalProbability( new double[]{0.992841163310962, 0.9930648769574943, 0.9932885906040267, 0.9935123042505591, 0.9937360178970915, 0.9939597315436239, 0.9941834451901563, 0.9944071588366887, 0.9946308724832211, 0.9948545861297535, 0.9950782997762859, 0.9953020134228183, 0.9955257270693507, 0.9957494407158831, 0.9959731543624155, 0.9961968680089479, 0.9964205816554803, 0.9966442953020127, 0.9968680089485451, 0.9970917225950775, 0.9973154362416099, 0.9975391498881423, 0.9977628635346747, 0.9979865771812071, 0.9982102908277395, 0.9984340044742719, 0.9986577181208043, 0.9988814317673367, 0.9991051454138691, 0.9993288590604015, 0.9995525727069339, 0.9997762863534663, 0.9999999999999987}, new char[]{'r', 'm', 'j', 'e', 'a', 'o', 's', ' ', 'f', 'h', 'n', 't', 'p', '(', 'i', 'g', 'c', 'l', '-', 'A', 'L', 'w', 'b', 'W', 'd', 'u', 'P', ',', 'x', 'v', 'J', 'y', '.'}) );
        twoCharacterInputWithUnknownOutput.put("\",", new ProportionalProbability( new double[]{0.9659090909090909, 0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{',', 't', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put(" k", new ProportionalProbability( new double[]{0.9931467732724157, 0.9933371406815154, 0.993527508090615, 0.9937178754997146, 0.9939082429088142, 0.9940986103179138, 0.9942889777270134, 0.994479345136113, 0.9946697125452126, 0.9948600799543122, 0.9950504473634119, 0.9952408147725115, 0.9954311821816111, 0.9956215495907107, 0.9958119169998103, 0.9960022844089099, 0.9961926518180095, 0.9963830192271091, 0.9965733866362088, 0.9967637540453084, 0.996954121454408, 0.9971444888635076, 0.9973348562726072, 0.9975252236817068, 0.9977155910908064, 0.997905958499906, 0.9980963259090057, 0.9982866933181053, 0.9984770607272049, 0.9986674281363045, 0.9988577955454041, 0.9990481629545037, 0.9992385303636033, 0.9994288977727029, 0.9996192651818026, 0.9998096325909022, 1.0000000000000018}, new char[]{'y', 'm', 't', 'k', 'u', ' ', 'r', 'i', 's', 'v', 'o', '…', 'e', 'b', 'a', 'h', 'g', 'l', 'd', 'p', 'T', 'c', 'G', '.', 'n', 'M', 'f', 'w', 'I', '3', 'K', ')', ',', '(', 'A', '\'', '1'}) );
        twoCharacterInputWithUnknownOutput.put(" l", new ProportionalProbability( new double[]{0.9985025239716929, 0.9985266768108592, 0.9985508296500254, 0.9985749824891916, 0.9985991353283579, 0.9986232881675241, 0.9986474410066903, 0.9986715938458566, 0.9986957466850228, 0.998719899524189, 0.9987440523633553, 0.9987682052025215, 0.9987923580416878, 0.998816510880854, 0.9988406637200202, 0.9988648165591865, 0.9988889693983527, 0.9989131222375189, 0.9989372750766852, 0.9989614279158514, 0.9989855807550176, 0.9990097335941839, 0.9990338864333501, 0.9990580392725164, 0.9990821921116826, 0.9991063449508488, 0.9991304977900151, 0.9991546506291813, 0.9991788034683475, 0.9992029563075138, 0.99922710914668, 0.9992512619858462, 0.9992754148250125, 0.9992995676641787, 0.999323720503345, 0.9993478733425112, 0.9993720261816774, 0.9993961790208437, 0.9994203318600099, 0.9994444846991761, 0.9994686375383424, 0.9994927903775086, 0.9995169432166748, 0.9995410960558411, 0.9995652488950073, 0.9995894017341735, 0.9996135545733398, 0.999637707412506, 0.9996618602516723, 0.9996860130908385, 0.9997101659300047, 0.999734318769171, 0.9997584716083372, 0.9997826244475034, 0.9998067772866697, 0.9998309301258359, 0.9998550829650021, 0.9998792358041684, 0.9999033886433346, 0.9999275414825008, 0.9999516943216671, 0.9999758471608333, 0.9999999999999996}, new char[]{'l', 'u', ' ', 'r', 'e', 't', ',', 'c', 'a', 'o', 'v', 'i', 'n', 'd', 'h', 'm', '.', 's', 'p', 'k', 'y', 'S', 'g', 'w', ':', 'f', 'q', '\"', '(', 'P', '-', 'T', 'b', 'C', '9', '0', 'j', '7', 'x', 'G', ' ', '1', 'U', 'W', ')', '[', 'Y', '?', '%', ';', 'A', 'M', 'I', '=', '6', 'J', 'D', '3', '5', 'H', '/', '\'', '!'}) );
        twoCharacterInputWithUnknownOutput.put("\".", new ProportionalProbability( new double[]{0.9180327868852459, 0.921311475409836, 0.9245901639344262, 0.9278688524590163, 0.9311475409836064, 0.9344262295081965, 0.9377049180327867, 0.9409836065573768, 0.9442622950819669, 0.947540983606557, 0.9508196721311472, 0.9540983606557373, 0.9573770491803274, 0.9606557377049175, 0.9639344262295076, 0.9672131147540978, 0.9704918032786879, 0.973770491803278, 0.9770491803278681, 0.9803278688524583, 0.9836065573770484, 0.9868852459016385, 0.9901639344262286, 0.9934426229508188, 0.9967213114754089, 0.999999999999999}, new char[]{'.', 'i', 't', ' ', 'y', 'a', 'r', 'f', 'l', 'n', 'u', 'A', 'P', 'o', 'd', 's', 'h', 'e', 'p', ',', 'g', 'v', '\"', 'b', 'R', '\''}) );
        twoCharacterInputWithUnknownOutput.put(" m", new ProportionalProbability( new double[]{0.9989127827963866, 0.998928771284675, 0.9989447597729635, 0.9989607482612519, 0.9989767367495404, 0.9989927252378288, 0.9990087137261172, 0.9990247022144056, 0.9990406907026941, 0.9990566791909825, 0.9990726676792709, 0.9990886561675594, 0.9991046446558478, 0.9991206331441362, 0.9991366216324247, 0.9991526101207131, 0.9991685986090015, 0.99918458709729, 0.9992005755855784, 0.9992165640738668, 0.9992325525621553, 0.9992485410504437, 0.9992645295387321, 0.9992805180270206, 0.999296506515309, 0.9993124950035974, 0.9993284834918859, 0.9993444719801743, 0.9993604604684627, 0.9993764489567512, 0.9993924374450396, 0.999408425933328, 0.9994244144216164, 0.9994404029099049, 0.9994563913981933, 0.9994723798864817, 0.9994883683747702, 0.9995043568630586, 0.999520345351347, 0.9995363338396355, 0.9995523223279239, 0.9995683108162123, 0.9995842993045008, 0.9996002877927892, 0.9996162762810776, 0.9996322647693661, 0.9996482532576545, 0.9996642417459429, 0.9996802302342314, 0.9996962187225198, 0.9997122072108082, 0.9997281956990967, 0.9997441841873851, 0.9997601726756735, 0.999776161163962, 0.9997921496522504, 0.9998081381405388, 0.9998241266288272, 0.9998401151171157, 0.9998561036054041, 0.9998720920936925, 0.999888080581981, 0.9999040690702694, 0.9999200575585578, 0.9999360460468463, 0.9999520345351347, 0.9999680230234231, 0.9999840115117116, 1.0}, new char[]{'m', 'n', 'i', ' ', 'e', 'a', 'l', 'u', 'o', 'f', 's', 'k', 'c', 'r', 'g', 'h', 'N', 't', '.', '?', 'b', 'd', 'q', '3', 'p', 'v', 'y', ',', 'w', '5', '-', '(', 'M', '0', '+', '1', 'x', 'S', 'R', 'I', 'C', 'j', '\'', ')', '%', '_', 'Q', '=', 'L', ':', 'z', 'F', 'P', '2', 'W', '6', '4', 'Z', 'T', 'U', 'D', '&', '/', '\"', 'A', 'ń', 'K', 'V', '*'}) );
        twoCharacterInputWithUnknownOutput.put(" n", new ProportionalProbability( new double[]{0.998385212670927, 0.9984195698481413, 0.9984539270253556, 0.99848828420257, 0.9985226413797843, 0.9985569985569986, 0.998591355734213, 0.9986257129114273, 0.9986600700886417, 0.998694427265856, 0.9987287844430703, 0.9987631416202847, 0.998797498797499, 0.9988318559747134, 0.9988662131519277, 0.998900570329142, 0.9989349275063564, 0.9989692846835707, 0.999003641860785, 0.9990379990379994, 0.9990723562152137, 0.9991067133924281, 0.9991410705696424, 0.9991754277468567, 0.9992097849240711, 0.9992441421012854, 0.9992784992784998, 0.9993128564557141, 0.9993472136329284, 0.9993815708101428, 0.9994159279873571, 0.9994502851645715, 0.9994846423417858, 0.9995189995190001, 0.9995533566962145, 0.9995877138734288, 0.9996220710506432, 0.9996564282278575, 0.9996907854050718, 0.9997251425822862, 0.9997594997595005, 0.9997938569367149, 0.9998282141139292, 0.9998625712911435, 0.9998969284683579, 0.9999312856455722, 0.9999656428227865, 1.0000000000000009}, new char[]{' ', 'n', 'e', 'r', 'i', 's', 'q', 'm', 'p', 'f', 'a', 'l', 'd', 'g', 'u', 'o', 't', 'c', '.', ',', 'v', 'b', 'h', 'y', ')', 'j', 'N', 'k', 'O', '3', 'w', 'R', 'I', '\"', '0', '-', '^', 'P', '(', 'H', '6', 'V', ':', 'A', 'D', 'F', 'G', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(" o", new ProportionalProbability( new double[]{0.999454863397263, 0.9994619430934024, 0.9994690227895419, 0.9994761024856813, 0.9994831821818208, 0.9994902618779602, 0.9994973415740996, 0.9995044212702391, 0.9995115009663785, 0.999518580662518, 0.9995256603586574, 0.9995327400547969, 0.9995398197509363, 0.9995468994470758, 0.9995539791432152, 0.9995610588393546, 0.9995681385354941, 0.9995752182316335, 0.999582297927773, 0.9995893776239124, 0.9995964573200519, 0.9996035370161913, 0.9996106167123308, 0.9996176964084702, 0.9996247761046096, 0.9996318558007491, 0.9996389354968885, 0.999646015193028, 0.9996530948891674, 0.9996601745853069, 0.9996672542814463, 0.9996743339775858, 0.9996814136737252, 0.9996884933698647, 0.9996955730660041, 0.9997026527621435, 0.999709732458283, 0.9997168121544224, 0.9997238918505619, 0.9997309715467013, 0.9997380512428408, 0.9997451309389802, 0.9997522106351197, 0.9997592903312591, 0.9997663700273985, 0.999773449723538, 0.9997805294196774, 0.9997876091158169, 0.9997946888119563, 0.9998017685080958, 0.9998088482042352, 0.9998159279003747, 0.9998230075965141, 0.9998300872926535, 0.999837166988793, 0.9998442466849324, 0.9998513263810719, 0.9998584060772113, 0.9998654857733508, 0.9998725654694902, 0.9998796451656297, 0.9998867248617691, 0.9998938045579085, 0.999900884254048, 0.9999079639501874, 0.9999150436463269, 0.9999221233424663, 0.9999292030386058, 0.9999362827347452, 0.9999433624308847, 0.9999504421270241, 0.9999575218231636, 0.999964601519303, 0.9999716812154424, 0.9999787609115819, 0.9999858406077213, 0.9999929203038608, 1.0000000000000002}, new char[]{'o', 'w', 'e', 'c', 't', '1', 's', 'm', '–', 'b', 'r', 'n', 'a', 'l', ' ', 'i', 'P', ',', '\'', 'd', 'g', 'f', 'k', 'h', '.', '2', 'U', 'D', 'Z', 'C', 'j', '(', 'T', 'R', 'p', 'u', 'y', '9', 'v', 'x', 'z', 'B', 'q', '7', 'S', 'E', '?', '-', 'ê', '\"', '/', 'A', 'M', ':', ')', '=', '3', 'W', 'F', 'H', 'J', 'Q', '5', 'V', 'L', '&', '8', 'O', 'I', '0', '6', '’', '_', '{', '+', 'N', '²', 'Y'}) );
        twoCharacterInputWithUnknownOutput.put(" p", new ProportionalProbability( new double[]{0.9992535920880762, 0.9992645686750162, 0.9992755452619563, 0.9992865218488963, 0.9992974984358364, 0.9993084750227764, 0.9993194516097165, 0.9993304281966565, 0.9993414047835966, 0.9993523813705366, 0.9993633579574767, 0.9993743345444167, 0.9993853111313568, 0.9993962877182968, 0.9994072643052369, 0.9994182408921769, 0.999429217479117, 0.999440194066057, 0.999451170652997, 0.9994621472399371, 0.9994731238268771, 0.9994841004138172, 0.9994950770007572, 0.9995060535876973, 0.9995170301746373, 0.9995280067615774, 0.9995389833485174, 0.9995499599354575, 0.9995609365223975, 0.9995719131093376, 0.9995828896962776, 0.9995938662832177, 0.9996048428701577, 0.9996158194570978, 0.9996267960440378, 0.9996377726309779, 0.9996487492179179, 0.999659725804858, 0.999670702391798, 0.999681678978738, 0.9996926555656781, 0.9997036321526181, 0.9997146087395582, 0.9997255853264982, 0.9997365619134383, 0.9997475385003783, 0.9997585150873184, 0.9997694916742584, 0.9997804682611985, 0.9997914448481385, 0.9998024214350786, 0.9998133980220186, 0.9998243746089587, 0.9998353511958987, 0.9998463277828388, 0.9998573043697788, 0.9998682809567189, 0.9998792575436589, 0.999890234130599, 0.999901210717539, 0.9999121873044791, 0.9999231638914191, 0.9999341404783592, 0.9999451170652992, 0.9999560936522393, 0.9999670702391793, 0.9999780468261193, 0.9999890234130594, 0.9999999999999994}, new char[]{'p', 'c', 'n', 'e', 'r', ' ', 'd', 't', ',', 'g', 'a', 'o', 'h', 'f', 'w', '.', 'R', 's', 'u', '-', 'm', 'y', 'b', 'i', 'l', 'L', 'v', '(', '\'', 'P', 'D', ':', 'x', '/', 'T', 'k', '3', 'S', 'z', 'E', '*', '_', '–', '2', '°', 'O', 'C', 'q', ')', '=', '1', 'I', 'H', 'N', 'J', '4', 'Y', '0', '?', 'B', 'j', 'A', '!', 'M', '7', 'F', '8', '+', '…'}) );
        twoCharacterInputWithUnknownOutput.put(" q", new ProportionalProbability( new double[]{0.9925945517058979, 0.9928590320021159, 0.9931235122983338, 0.9933879925945518, 0.9936524728907697, 0.9939169531869877, 0.9941814334832056, 0.9944459137794236, 0.9947103940756415, 0.9949748743718595, 0.9952393546680774, 0.9955038349642954, 0.9957683152605133, 0.9960327955567313, 0.9962972758529492, 0.9965617561491672, 0.9968262364453851, 0.9970907167416031, 0.997355197037821, 0.997619677334039, 0.997884157630257, 0.9981486379264749, 0.9984131182226929, 0.9986775985189108, 0.9989420788151288, 0.9992065591113467, 0.9994710394075647, 0.9997355197037826, 1.0000000000000004}, new char[]{'q', 'u', 's', 'd', 'v', 'o', ' ', 'e', 't', 'i', 'p', 'n', 'y', 'm', 'l', 'f', 'a', '(', 'r', 'h', 'g', ',', 'k', 'w', 'c', 'x', 'S', '.', '+'}) );
        twoCharacterInputWithUnknownOutput.put(" r", new ProportionalProbability( new double[]{0.9987716844929891, 0.9987905816546354, 0.9988094788162817, 0.998828375977928, 0.9988472731395742, 0.9988661703012205, 0.9988850674628668, 0.998903964624513, 0.9989228617861593, 0.9989417589478056, 0.9989606561094518, 0.9989795532710981, 0.9989984504327444, 0.9990173475943906, 0.9990362447560369, 0.9990551419176832, 0.9990740390793295, 0.9990929362409757, 0.999111833402622, 0.9991307305642683, 0.9991496277259145, 0.9991685248875608, 0.9991874220492071, 0.9992063192108533, 0.9992252163724996, 0.9992441135341459, 0.9992630106957922, 0.9992819078574384, 0.9993008050190847, 0.999319702180731, 0.9993385993423772, 0.9993574965040235, 0.9993763936656698, 0.999395290827316, 0.9994141879889623, 0.9994330851506086, 0.9994519823122548, 0.9994708794739011, 0.9994897766355474, 0.9995086737971937, 0.9995275709588399, 0.9995464681204862, 0.9995653652821325, 0.9995842624437787, 0.999603159605425, 0.9996220567670713, 0.9996409539287175, 0.9996598510903638, 0.9996787482520101, 0.9996976454136564, 0.9997165425753026, 0.9997354397369489, 0.9997543368985952, 0.9997732340602414, 0.9997921312218877, 0.999811028383534, 0.9998299255451802, 0.9998488227068265, 0.9998677198684728, 0.999886617030119, 0.9999055141917653, 0.9999244113534116, 0.9999433085150579, 0.9999622056767041, 0.9999811028383504, 0.9999999999999967}, new char[]{' ', 'r', 'f', 't', 'a', 'i', 'o', 'h', 'w', 'l', 'n', 'v', 's', 'd', ';', 'e', 'V', 'm', 'g', 'b', 'u', '\"', 'y', 'p', 'c', 'x', 'k', 'θ', '.', 'L', 'S', ':', 'D', 'z', '5', ',', 'C', '}', '-', 'P', 'ω', ')', '?', '1', 'q', '3', 'A', 'T', 'I', 'F', '0', '>', 'j', '(', '2', 'R', '9', '/', '4', '\'', '6', 'E', 'O', '&', 'W', 'B'}) );
        twoCharacterInputWithUnknownOutput.put(" s", new ProportionalProbability( new double[]{0.9992949896630241, 0.99930451682974, 0.9993140439964558, 0.9993235711631717, 0.9993330983298876, 0.9993426254966035, 0.9993521526633193, 0.9993616798300352, 0.9993712069967511, 0.999380734163467, 0.9993902613301828, 0.9993997884968987, 0.9994093156636146, 0.9994188428303304, 0.9994283699970463, 0.9994378971637622, 0.9994474243304781, 0.9994569514971939, 0.9994664786639098, 0.9994760058306257, 0.9994855329973416, 0.9994950601640574, 0.9995045873307733, 0.9995141144974892, 0.999523641664205, 0.9995331688309209, 0.9995426959976368, 0.9995522231643527, 0.9995617503310685, 0.9995712774977844, 0.9995808046645003, 0.9995903318312162, 0.999599858997932, 0.9996093861646479, 0.9996189133313638, 0.9996284404980796, 0.9996379676647955, 0.9996474948315114, 0.9996570219982273, 0.9996665491649431, 0.999676076331659, 0.9996856034983749, 0.9996951306650907, 0.9997046578318066, 0.9997141849985225, 0.9997237121652384, 0.9997332393319542, 0.9997427664986701, 0.999752293665386, 0.9997618208321019, 0.9997713479988177, 0.9997808751655336, 0.9997904023322495, 0.9997999294989653, 0.9998094566656812, 0.9998189838323971, 0.999828510999113, 0.9998380381658288, 0.9998475653325447, 0.9998570924992606, 0.9998666196659765, 0.9998761468326923, 0.9998856739994082, 0.9998952011661241, 0.9999047283328399, 0.9999142554995558, 0.9999237826662717, 0.9999333098329876, 0.9999428369997034, 0.9999523641664193, 0.9999618913331352, 0.999971418499851, 0.9999809456665669, 0.9999904728332828, 0.9999999999999987}, new char[]{'s', ' ', 'o', '(', 'r', 'h', 'd', 'c', ',', 'e', 'A', 'i', 'k', 't', 'u', 'b', 'a', 'y', 'p', 'f', 'v', 'm', 'l', '=', 'g', '4', 'n', 'z', 'I', 'w', ')', ':', '\'', 'P', 'x', '.', '/', '-', 'R', 'j', 'E', '?', '8', 'T', 'C', '°', '0', '1', 'q', 'V', ';', '+', '2', '[', 'G', 'S', 'L', 'K', 'U', '5', 'W', 'H', '•', 'N', 'M', '3', 'O', '&', 'F', '\"', 'J', '9', '_', 'D', 'B'}) );
        twoCharacterInputWithUnknownOutput.put(" t", new ProportionalProbability( new double[]{0.999610507638378, 0.9996148353312849, 0.9996191630241918, 0.9996234907170988, 0.9996278184100057, 0.9996321461029126, 0.9996364737958195, 0.9996408014887265, 0.9996451291816334, 0.9996494568745403, 0.9996537845674472, 0.9996581122603542, 0.9996624399532611, 0.999666767646168, 0.9996710953390749, 0.9996754230319819, 0.9996797507248888, 0.9996840784177957, 0.9996884061107026, 0.9996927338036096, 0.9996970614965165, 0.9997013891894234, 0.9997057168823303, 0.9997100445752373, 0.9997143722681442, 0.9997186999610511, 0.999723027653958, 0.999727355346865, 0.9997316830397719, 0.9997360107326788, 0.9997403384255857, 0.9997446661184927, 0.9997489938113996, 0.9997533215043065, 0.9997576491972134, 0.9997619768901204, 0.9997663045830273, 0.9997706322759342, 0.9997749599688411, 0.9997792876617481, 0.999783615354655, 0.9997879430475619, 0.9997922707404688, 0.9997965984333758, 0.9998009261262827, 0.9998052538191896, 0.9998095815120965, 0.9998139092050035, 0.9998182368979104, 0.9998225645908173, 0.9998268922837242, 0.9998312199766312, 0.9998355476695381, 0.999839875362445, 0.9998442030553519, 0.9998485307482589, 0.9998528584411658, 0.9998571861340727, 0.9998615138269796, 0.9998658415198866, 0.9998701692127935, 0.9998744969057004, 0.9998788245986073, 0.9998831522915143, 0.9998874799844212, 0.9998918076773281, 0.999896135370235, 0.999900463063142, 0.9999047907560489, 0.9999091184489558, 0.9999134461418627, 0.9999177738347697, 0.9999221015276766, 0.9999264292205835, 0.9999307569134904, 0.9999350846063974, 0.9999394122993043, 0.9999437399922112, 0.9999480676851181, 0.999952395378025, 0.999956723070932, 0.9999610507638389, 0.9999653784567458, 0.9999697061496527, 0.9999740338425597, 0.9999783615354666, 0.9999826892283735, 0.9999870169212804, 0.9999913446141874, 0.9999956723070943, 1.000000000000001}, new char[]{'t', 'i', 's', 'h', 'r', 'u', ' ', 'a', 'd', 'n', 'v', 'o', 'l', 'g', '.', 'c', 'p', 'e', 'b', 'f', 'y', 'm', 'G', '5', 'w', ',', 'T', 'x', 'q', '(', 'S', 'k', '1', 'V', 'M', '8', 'A', '-', 'P', 'B', '\'', 'E', '6', 'D', 'F', ':', ')', 'C', 'L', 'R', '4', 'I', '}', 'W', 'O', '’', 'z', 'H', '…', '0', '!', 'j', 'U', 'Y', '9', '*', 'ע', 'ו', '/', '2', 'N', '?', 'ó', '#', '=', '>', '+', '3', '&', 'α', '\"', 'μ', 'ֵ', ';', ']', 'K', '_', 'ą', 'è', 'J', '7'}) );
        twoCharacterInputWithUnknownOutput.put(" u", new ProportionalProbability( new double[]{0.9976055213859806, 0.9976524719470398, 0.997699422508099, 0.9977463730691581, 0.9977933236302173, 0.9978402741912765, 0.9978872247523357, 0.9979341753133949, 0.9979811258744541, 0.9980280764355133, 0.9980750269965725, 0.9981219775576317, 0.9981689281186908, 0.99821587867975, 0.9982628292408092, 0.9983097798018684, 0.9983567303629276, 0.9984036809239868, 0.998450631485046, 0.9984975820461052, 0.9985445326071644, 0.9985914831682235, 0.9986384337292827, 0.9986853842903419, 0.9987323348514011, 0.9987792854124603, 0.9988262359735195, 0.9988731865345787, 0.9989201370956379, 0.9989670876566971, 0.9990140382177563, 0.9990609887788154, 0.9991079393398746, 0.9991548899009338, 0.999201840461993, 0.9992487910230522, 0.9992957415841114, 0.9993426921451706, 0.9993896427062298, 0.999436593267289, 0.9994835438283481, 0.9995304943894073, 0.9995774449504665, 0.9996243955115257, 0.9996713460725849, 0.9997182966336441, 0.9997652471947033, 0.9998121977557625, 0.9998591483168217, 0.9999060988778808, 0.99995304943894, 0.9999999999999992}, new char[]{':', 'o', 'u', 'w', 'i', 'n', 'r', ' ', 'd', 's', 'e', 'c', 't', 'l', 'b', 'h', 'a', 'p', 'g', 'm', 'f', '4', 'v', 'y', 'R', 'A', 'k', '.', '…', 'T', 'S', 'C', 'D', '\'', 'x', 'F', '5', ')', '-', ',', 'B', 'q', '1', 'E', 'P', 'z', 'M', '%', 'L', '[', 'G', '?'}) );
        twoCharacterInputWithUnknownOutput.put(" v", new ProportionalProbability( new double[]{0.9971333014811276, 0.9971930243669374, 0.9972527472527472, 0.997312470138557, 0.9973721930243667, 0.9974319159101765, 0.9974916387959863, 0.9975513616817961, 0.9976110845676059, 0.9976708074534157, 0.9977305303392255, 0.9977902532250353, 0.9978499761108451, 0.9979096989966549, 0.9979694218824647, 0.9980291447682745, 0.9980888676540843, 0.9981485905398941, 0.9982083134257039, 0.9982680363115137, 0.9983277591973235, 0.9983874820831333, 0.9984472049689431, 0.9985069278547529, 0.9985666507405627, 0.9986263736263725, 0.9986860965121823, 0.9987458193979921, 0.9988055422838019, 0.9988652651696117, 0.9989249880554215, 0.9989847109412313, 0.9990444338270411, 0.9991041567128509, 0.9991638795986607, 0.9992236024844705, 0.9992833253702803, 0.9993430482560901, 0.9994027711418999, 0.9994624940277097, 0.9995222169135195, 0.9995819397993293, 0.9996416626851391, 0.9997013855709489, 0.9997611084567587, 0.9998208313425685, 0.9998805542283783, 0.9999402771141881, 0.9999999999999979}, new char[]{'v', 'i', 'g', ' ', 'l', 't', ')', '.', 'T', 'a', 'r', 'E', 'o', 'e', 'k', 'c', 'n', 's', 'u', 'h', 'f', 'm', '=', 'd', 'y', 'p', 'Y', 'A', 'W', ',', 'S', 'O', 'b', 'w', 'I', 'V', 'x', '-', 'C', 'K', '/', 'j', 'q', '(', '7', '\'', 'z', 'M', '%'}) );
        twoCharacterInputWithUnknownOutput.put(" w", new ProportionalProbability( new double[]{0.9990259693753313, 0.9990402933551058, 0.9990546173348803, 0.9990689413146548, 0.9990832652944294, 0.9990975892742039, 0.9991119132539784, 0.9991262372337529, 0.9991405612135275, 0.999154885193302, 0.9991692091730765, 0.999183533152851, 0.9991978571326255, 0.9992121811124001, 0.9992265050921746, 0.9992408290719491, 0.9992551530517236, 0.9992694770314982, 0.9992838010112727, 0.9992981249910472, 0.9993124489708217, 0.9993267729505962, 0.9993410969303708, 0.9993554209101453, 0.9993697448899198, 0.9993840688696943, 0.9993983928494689, 0.9994127168292434, 0.9994270408090179, 0.9994413647887924, 0.9994556887685669, 0.9994700127483415, 0.999484336728116, 0.9994986607078905, 0.999512984687665, 0.9995273086674396, 0.9995416326472141, 0.9995559566269886, 0.9995702806067631, 0.9995846045865376, 0.9995989285663122, 0.9996132525460867, 0.9996275765258612, 0.9996419005056357, 0.9996562244854102, 0.9996705484651848, 0.9996848724449593, 0.9996991964247338, 0.9997135204045083, 0.9997278443842829, 0.9997421683640574, 0.9997564923438319, 0.9997708163236064, 0.999785140303381, 0.9997994642831555, 0.99981378826293, 0.9998281122427045, 0.999842436222479, 0.9998567602022536, 0.9998710841820281, 0.9998854081618026, 0.9998997321415771, 0.9999140561213516, 0.9999283801011262, 0.9999427040809007, 0.9999570280606752, 0.9999713520404497, 0.9999856760202243, 0.9999999999999988}, new char[]{'w', 'd', ' ', '.', 'i', '4', 'l', 'e', 'c', 't', 'o', 'p', 'n', 'a', 'k', 'b', 'f', 'm', 'v', 's', 'r', 'g', 'u', 'y', '-', 'h', 'D', 'A', 'R', 'S', '&', 'F', 'Y', 'C', ',', 'B', ')', '\'', 'M', ';', 'L', '/', 'j', '5', 'E', 'N', '0', 'H', ':', '(', '1', 'J', '=', 'P', 'G', 'V', 'x', 'T', '3', '2', 'q', 'O', '\"', '*', 'z', 'I', 'U', '7', '…'}) );
        twoCharacterInputWithUnknownOutput.put(" x", new ProportionalProbability( new double[]{0.9854391733208079, 0.9859088774072334, 0.986378581493659, 0.9868482855800845, 0.9873179896665101, 0.9877876937529356, 0.9882573978393612, 0.9887271019257867, 0.9891968060122123, 0.9896665100986378, 0.9901362141850634, 0.9906059182714889, 0.9910756223579145, 0.99154532644434, 0.9920150305307656, 0.9924847346171911, 0.9929544387036167, 0.9934241427900422, 0.9938938468764678, 0.9943635509628933, 0.9948332550493189, 0.9953029591357444, 0.99577266322217, 0.9962423673085955, 0.996712071395021, 0.9971817754814466, 0.9976514795678721, 0.9981211836542977, 0.9985908877407232, 0.9990605918271488, 0.9995302959135743, 0.9999999999999999}, new char[]{'x', 'b', 's', 'h', ' ', 'e', '+', 'n', 'a', 'i', 'y', '2', 'o', 'r', '5', 'm', 'd', 't', 'l', 'E', '=', 'A', 'u', 'v', '4', 'k', '^', ')', '√', 'c', '3', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("\":", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'n', ':'}) );
        twoCharacterInputWithUnknownOutput.put(" y", new ProportionalProbability( new double[]{0.9948885976408912, 0.9950196592398427, 0.9951507208387942, 0.9952817824377457, 0.9954128440366972, 0.9955439056356487, 0.9956749672346001, 0.9958060288335516, 0.9959370904325031, 0.9960681520314546, 0.9961992136304061, 0.9963302752293576, 0.9964613368283091, 0.9965923984272606, 0.996723460026212, 0.9968545216251635, 0.996985583224115, 0.9971166448230665, 0.997247706422018, 0.9973787680209695, 0.997509829619921, 0.9976408912188724, 0.9977719528178239, 0.9979030144167754, 0.9980340760157269, 0.9981651376146784, 0.9982961992136299, 0.9984272608125814, 0.9985583224115329, 0.9986893840104843, 0.9988204456094358, 0.9989515072083873, 0.9990825688073388, 0.9992136304062903, 0.9993446920052418, 0.9994757536041933, 0.9996068152031448, 0.9997378768020962, 0.9998689384010477, 0.9999999999999992}, new char[]{'y', 'n', 'o', ' ', 'a', 'k', 's', 'l', 'v', 'e', 't', 'h', 'r', '-', 'w', 'u', 'c', 'd', 'b', 'A', 'f', 'p', 'i', 'I', '.', 'm', 'E', 'g', ':', 'L', '^', 'j', '2', '(', ')', 'q', '?', '₀', ',', '\"'}) );
        twoCharacterInputWithUnknownOutput.put(" z", new ProportionalProbability( new double[]{0.9807877041306436, 0.9817483189241115, 0.9827089337175794, 0.9836695485110473, 0.9846301633045151, 0.985590778097983, 0.9865513928914509, 0.9875120076849188, 0.9884726224783866, 0.9894332372718545, 0.9903938520653224, 0.9913544668587903, 0.9923150816522581, 0.993275696445726, 0.9942363112391939, 0.9951969260326617, 0.9961575408261296, 0.9971181556195975, 0.9980787704130654, 0.9990393852065332, 1.000000000000001}, new char[]{'z', 'l', ' ', 'e', 'u', 'c', 'n', 't', 'a', 'T', '.', 'h', 'i', 'r', 'm', 's', 'w', 'p', '/', 'o', '-'}) );
        twoCharacterInputWithUnknownOutput.put("\"<", new ProportionalProbability( new double[]{0.9485714285714286, 0.9542857142857143, 0.96, 0.9657142857142856, 0.9714285714285713, 0.977142857142857, 0.9828571428571427, 0.9885714285714283, 0.994285714285714, 0.9999999999999997}, new char[]{'.', ' ', 'c', 'w', 'a', 'n', 'e', 'o', 'u', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(" {", new ProportionalProbability( new double[]{0.9019607843137255, 0.9117647058823529, 0.9215686274509803, 0.9313725490196078, 0.9411764705882352, 0.9509803921568626, 0.96078431372549, 0.9705882352941174, 0.9803921568627448, 0.9901960784313723, 0.9999999999999997}, new char[]{'{', 'a', 'o', 'r', 'i', 'e', ' ', 's', 'n', 'd', ','}) );
        twoCharacterInputWithUnknownOutput.put(" |", new ProportionalProbability( new double[]{0.9509803921568627, 0.9607843137254901, 0.9705882352941175, 0.980392156862745, 0.9901960784313724, 0.9999999999999998}, new char[]{'|', ' ', 'b', 'u', '+', 't'}) );
        twoCharacterInputWithUnknownOutput.put("# ", new ProportionalProbability( new double[]{0.956140350877193, 0.9649122807017544, 0.9736842105263158, 0.9824561403508772, 0.9912280701754387, 1.0}, new char[]{' ', 'D', 'b', 'c', 's', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\"?", new ProportionalProbability( new double[]{0.8777777777777778, 0.8888888888888888, 0.8999999999999999, 0.911111111111111, 0.922222222222222, 0.9333333333333331, 0.9444444444444442, 0.9555555555555553, 0.9666666666666663, 0.9777777777777774, 0.9888888888888885, 0.9999999999999996}, new char[]{'c', '?', 'n', 'W', 'r', ' ', 'h', 't', 'e', 'i', 'a', 'm'}) );
        twoCharacterInputWithUnknownOutput.put(" ~", new ProportionalProbability( new double[]{0.9361702127659575, 0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{'~', 'n', ' ', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("\"A", new ProportionalProbability( new double[]{0.9736842105263158, 0.986842105263158, 1.0}, new char[]{'A', '\'', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\"B", new ProportionalProbability( new double[]{0.96875, 0.984375, 1.0}, new char[]{'B', ' ', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("\"C", new ProportionalProbability( new double[]{0.9736842105263158, 1.0}, new char[]{'m', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("\"D", new ProportionalProbability( new double[]{0.95, 0.975, 1.0}, new char[]{'D', 'f', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("\"F", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{'F', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\"G", new ProportionalProbability( new double[]{0.96875, 1.0}, new char[]{'G', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("\"I", new ProportionalProbability( new double[]{0.970873786407767, 0.9805825242718447, 0.9902912621359223, 1.0}, new char[]{'I', 'o', 'p', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\"L", new ProportionalProbability( new double[]{0.972972972972973, 1.0}, new char[]{'L', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\"M", new ProportionalProbability( new double[]{0.9795918367346939, 1.0}, new char[]{'M', '2'}) );
        twoCharacterInputWithUnknownOutput.put("\"O", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'\"', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("\"P", new ProportionalProbability( new double[]{0.96, 0.98, 1.0}, new char[]{'P', '\'', 't'}) );
        twoCharacterInputWithUnknownOutput.put("#2", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{'2', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("\"R", new ProportionalProbability( new double[]{0.8947368421052632, 0.9473684210526316, 1.0}, new char[]{'n', 'R', 't'}) );
        twoCharacterInputWithUnknownOutput.put("#3", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'3', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("\"S", new ProportionalProbability( new double[]{0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{'S', 'd', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("\"T", new ProportionalProbability( new double[]{0.9652173913043478, 0.9739130434782608, 0.9826086956521738, 0.9913043478260868, 0.9999999999999998}, new char[]{'T', 'l', 'r', 'D', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("\"W", new ProportionalProbability( new double[]{0.9642857142857143, 1.0}, new char[]{'W', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("\"Y", new ProportionalProbability( new double[]{0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{'Y', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("$ ", new ProportionalProbability( new double[]{0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{' ', 'B', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\"a", new ProportionalProbability( new double[]{0.9622641509433962, 0.9685534591194969, 0.9748427672955975, 0.9811320754716981, 0.9874213836477987, 0.9937106918238994, 1.0}, new char[]{'a', 'f', 'e', 'm', 'r', 'p', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("\"b", new ProportionalProbability( new double[]{0.981651376146789, 0.9908256880733946, 1.0}, new char[]{'b', 's', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("\"c", new ProportionalProbability( new double[]{0.9791666666666666, 0.986111111111111, 0.9930555555555555, 0.9999999999999999}, new char[]{'c', 'e', 'i', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("\"d", new ProportionalProbability( new double[]{0.9736842105263158, 0.986842105263158, 1.0}, new char[]{'n', '\"', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("\"e", new ProportionalProbability( new double[]{0.9964539007092199, 0.99822695035461, 1.0}, new char[]{'e', 'o', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("\"f", new ProportionalProbability( new double[]{0.9791666666666666, 0.9895833333333333, 0.9999999999999999}, new char[]{'f', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("\"g", new ProportionalProbability( new double[]{0.9705882352941176, 0.9852941176470588, 0.9999999999999999}, new char[]{'g', 'o', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("\"h", new ProportionalProbability( new double[]{0.9459459459459459, 0.9594594594594594, 0.9729729729729729, 0.9864864864864864, 0.9999999999999999}, new char[]{'h', 'l', 'e', 'i', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\"i", new ProportionalProbability( new double[]{0.95, 0.96, 0.97, 0.98, 0.99, 1.0}, new char[]{'i', 's', 'o', ' ', 'l', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("\"m", new ProportionalProbability( new double[]{0.95, 0.9666666666666667, 0.9833333333333334, 1.0}, new char[]{'m', 'u', 'd', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\"n", new ProportionalProbability( new double[]{0.9855072463768116, 1.0}, new char[]{'n', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("\"o", new ProportionalProbability( new double[]{0.9696969696969697, 0.9848484848484849, 1.0}, new char[]{'n', 'o', 't'}) );
        twoCharacterInputWithUnknownOutput.put("$1", new ProportionalProbability( new double[]{0.9714285714285714, 1.0}, new char[]{'1', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\"p", new ProportionalProbability( new double[]{0.9578947368421052, 0.968421052631579, 0.9789473684210527, 0.9894736842105264, 1.0}, new char[]{' ', 'p', 'i', 'e', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("$2", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'2', 't'}) );
        twoCharacterInputWithUnknownOutput.put("#R", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'R', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(" °", new ProportionalProbability( new double[]{0.9565217391304348, 1.0}, new char[]{'°', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("\"r", new ProportionalProbability( new double[]{0.9142857142857143, 0.9285714285714285, 0.9428571428571427, 0.957142857142857, 0.9714285714285712, 0.9857142857142854, 0.9999999999999997}, new char[]{'l', 'f', 'r', 'o', 'c', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\"s", new ProportionalProbability( new double[]{0.9814814814814815, 0.9907407407407408, 1.0}, new char[]{'s', 'a', '\"'}) );
        twoCharacterInputWithUnknownOutput.put(" ±", new ProportionalProbability( new double[]{0.9555555555555556, 0.9777777777777779, 1.0}, new char[]{'±', ')', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("\"t", new ProportionalProbability( new double[]{0.9880239520958084, 0.9940119760479043, 1.0}, new char[]{'t', 'w', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\"u", new ProportionalProbability( new double[]{0.9482758620689655, 0.9655172413793104, 0.9827586206896552, 1.0}, new char[]{'u', 'l', 'E', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\"w", new ProportionalProbability( new double[]{0.9655172413793104, 0.9770114942528736, 0.9885057471264368, 1.0}, new char[]{'w', ' ', 'm', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(" ·", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{'·', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("\"y", new ProportionalProbability( new double[]{0.9714285714285714, 1.0}, new char[]{'y', 'u'}) );
        twoCharacterInputWithUnknownOutput.put(" ¹", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'¹', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("% ", new ProportionalProbability( new double[]{0.9707520891364902, 0.9721448467966574, 0.9735376044568245, 0.9749303621169916, 0.9763231197771587, 0.9777158774373258, 0.9791086350974929, 0.98050139275766, 0.9818941504178271, 0.9832869080779942, 0.9846796657381613, 0.9860724233983285, 0.9874651810584956, 0.9888579387186627, 0.9902506963788298, 0.9916434540389969, 0.993036211699164, 0.9944289693593311, 0.9958217270194982, 0.9972144846796653, 0.9986072423398324, 0.9999999999999996}, new char[]{' ', 'c', 'a', 'e', 'r', 'h', '0', 't', 'C', '7', 'l', 'v', 's', 'p', 'w', 'o', '%', 'f', 'i', 'd', ',', '('}) );
        twoCharacterInputWithUnknownOutput.put("%+", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'t', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("%,", new ProportionalProbability( new double[]{0.7916666666666666, 0.8333333333333333, 0.8749999999999999, 0.9166666666666665, 0.9583333333333331, 0.9999999999999998}, new char[]{'t', 'i', 'o', ',', 'c', '%'}) );
        twoCharacterInputWithUnknownOutput.put("%-", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'s', ' '}) );
        twoCharacterInputWithUnknownOutput.put("%.", new ProportionalProbability( new double[]{0.9375, 0.96875, 1.0}, new char[]{'.', 's', 'W'}) );
        twoCharacterInputWithUnknownOutput.put(" Ö", new ProportionalProbability( new double[]{0.96875, 1.0}, new char[]{'Ö', ' '}) );
        twoCharacterInputWithUnknownOutput.put(" ×", new ProportionalProbability( new double[]{0.9393939393939394, 0.9696969696969697, 1.0}, new char[]{'×', 'a', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("& ", new ProportionalProbability( new double[]{0.9732142857142857, 0.9739010989010989, 0.9745879120879121, 0.9752747252747253, 0.9759615384615384, 0.9766483516483516, 0.9773351648351648, 0.978021978021978, 0.9787087912087912, 0.9793956043956044, 0.9800824175824175, 0.9807692307692307, 0.9814560439560439, 0.9821428571428571, 0.9828296703296703, 0.9835164835164835, 0.9842032967032966, 0.9848901098901098, 0.985576923076923, 0.9862637362637362, 0.9869505494505494, 0.9876373626373626, 0.9883241758241758, 0.9890109890109889, 0.9896978021978021, 0.9903846153846153, 0.9910714285714285, 0.9917582417582417, 0.9924450549450549, 0.993131868131868, 0.9938186813186812, 0.9945054945054944, 0.9951923076923076, 0.9958791208791208, 0.996565934065934, 0.9972527472527472, 0.9979395604395603, 0.9986263736263735, 0.9993131868131867, 0.9999999999999999}, new char[]{'s', ' ', 'i', 'n', 'b', 'o', 'w', 'h', 'T', 'y', 't', 'r', 'e', 'm', ':', ';', '-', 'a', 'p', 'E', 'l', 'R', '.', 'c', 'd', 'f', 'u', 'S', ')', 'g', 'B', 'M', 'D', 'U', ',', 'P', '0', 'Z', '(', 'k'}) );
        twoCharacterInputWithUnknownOutput.put(" Ü", new ProportionalProbability( new double[]{0.9868421052631579, 1.0}, new char[]{'Ü', ' '}) );
        twoCharacterInputWithUnknownOutput.put(" à", new ProportionalProbability( new double[]{0.996551724137931, 1.0}, new char[]{'à', ' '}) );
        twoCharacterInputWithUnknownOutput.put(" á", new ProportionalProbability( new double[]{0.96875, 1.0}, new char[]{'á', ' '}) );
        twoCharacterInputWithUnknownOutput.put(" ç", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'ç', ' '}) );
        twoCharacterInputWithUnknownOutput.put(" è", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'e', 'è', ' '}) );
        twoCharacterInputWithUnknownOutput.put(" é", new ProportionalProbability( new double[]{0.9894736842105263, 0.9947368421052631, 1.0}, new char[]{'é', 'e', ' '}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart2(){
        twoCharacterInputWithUnknownOutput.put(" ÷", new ProportionalProbability( new double[]{0.9568965517241379, 0.9655172413793103, 0.9741379310344827, 0.982758620689655, 0.9913793103448274, 0.9999999999999998}, new char[]{'÷', '6', 'n', ' ', 'm', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("\' ", new ProportionalProbability( new double[]{0.976594027441485, 0.9774011299435028, 0.9782082324455206, 0.9790153349475383, 0.9798224374495561, 0.9806295399515739, 0.9814366424535916, 0.9822437449556094, 0.9830508474576272, 0.9838579499596449, 0.9846650524616627, 0.9854721549636805, 0.9862792574656982, 0.987086359967716, 0.9878934624697338, 0.9887005649717515, 0.9895076674737693, 0.990314769975787, 0.9911218724778048, 0.9919289749798226, 0.9927360774818403, 0.9935431799838581, 0.9943502824858759, 0.9951573849878936, 0.9959644874899114, 0.9967715899919292, 0.9975786924939469, 0.9983857949959647, 0.9991928974979825, 1.0000000000000002}, new char[]{' ', 'o', 'N', 'm', 'i', 's', 'y', 'u', 'n', 't', 'c', 'e', 'a', 'r', 'h', 'Q', 'J', '?', 'I', 'f', 'g', 'd', '\'', 'p', '²', 'l', ')', '(', 'b', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("&D", new ProportionalProbability( new double[]{0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'t', 'D', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("\'\'", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{'\'', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("\'(", new ProportionalProbability( new double[]{0.9592760180995475, 0.9638009049773756, 0.9683257918552036, 0.9728506787330317, 0.9773755656108597, 0.9819004524886877, 0.9864253393665158, 0.9909502262443438, 0.9954751131221719, 0.9999999999999999}, new char[]{'(', 'g', ' ', 's', 'r', 'e', 'd', '/', '\'', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("\')", new ProportionalProbability( new double[]{0.9655172413793104, 1.0}, new char[]{')', '2'}) );
        twoCharacterInputWithUnknownOutput.put("\',", new ProportionalProbability( new double[]{0.9516129032258065, 0.967741935483871, 0.9838709677419355, 1.0}, new char[]{',', 'o', 'n', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("\'.", new ProportionalProbability( new double[]{0.95, 0.96, 0.97, 0.98, 0.99, 1.0}, new char[]{' ', '.', 'g', 'C', 'r', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("\'/", new ProportionalProbability( new double[]{0.9428571428571428, 0.9714285714285714, 1.0}, new char[]{'/', ' ', 's'}) );
        twoCharacterInputWithUnknownOutput.put("\'1", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'c', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("\'5", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'h', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\'<", new ProportionalProbability( new double[]{0.9454545454545454, 0.9515151515151515, 0.9575757575757576, 0.9636363636363637, 0.9696969696969698, 0.9757575757575759, 0.981818181818182, 0.9878787878787881, 0.9939393939393942, 1.0000000000000002}, new char[]{' ', 'u', 'i', 'o', 's', 'r', 'n', 'y', 'e', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("( ", new ProportionalProbability( new double[]{0.9285714285714286, 0.9340659340659341, 0.9395604395604396, 0.945054945054945, 0.9505494505494505, 0.956043956043956, 0.9615384615384615, 0.9670329670329669, 0.9725274725274724, 0.9780219780219779, 0.9835164835164834, 0.9890109890109888, 0.9945054945054943, 0.9999999999999998}, new char[]{' ', 'a', 'n', 'r', 'u', 'R', 't', 'h', 'o', 'y', 'p', 'm', 'i', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("\'?", new ProportionalProbability( new double[]{0.78125, 0.8125, 0.84375, 0.875, 0.90625, 0.9375, 0.96875, 1.0}, new char[]{'a', '?', 'o', 'i', 'w', 'm', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\'A", new ProportionalProbability( new double[]{0.9342105263157895, 0.9473684210526316, 0.9605263157894738, 0.9736842105263159, 0.9868421052631581, 1.0000000000000002}, new char[]{'\'', ' ', 'A', 'C', 'n', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("(#", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'i', '#', 's'}) );
        twoCharacterInputWithUnknownOutput.put("\'C", new ProportionalProbability( new double[]{0.7777777777777778, 0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'i', 'C', 'o', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\'D", new ProportionalProbability( new double[]{0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'D', ' ', 'd', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("\'E", new ProportionalProbability( new double[]{0.9459459459459459, 0.972972972972973, 1.0}, new char[]{'E', 't', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("((", new ProportionalProbability( new double[]{0.9861111111111112, 1.0}, new char[]{'(', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("\'H", new ProportionalProbability( new double[]{0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'H', ' ', 'a', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\'I", new ProportionalProbability( new double[]{0.9183673469387755, 0.9387755102040817, 0.9591836734693878, 0.979591836734694, 1.0}, new char[]{'I', ' ', '\'', 'i', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("(+", new ProportionalProbability( new double[]{0.9306930693069307, 0.9405940594059407, 0.9504950495049506, 0.9603960396039605, 0.9702970297029704, 0.9801980198019803, 0.9900990099009902, 1.0}, new char[]{'(', 'w', 'o', '+', 'b', 'a', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("\'J", new ProportionalProbability( new double[]{0.6666666666666666, 0.8333333333333333, 0.9999999999999999}, new char[]{'t', ' ', '('}) );
        twoCharacterInputWithUnknownOutput.put("(-", new ProportionalProbability( new double[]{0.9790874524714829, 0.9809885931558935, 0.9828897338403041, 0.9847908745247147, 0.9866920152091253, 0.9885931558935359, 0.9904942965779465, 0.9923954372623571, 0.9942965779467677, 0.9961977186311783, 0.998098859315589, 0.9999999999999996}, new char[]{'-', ' ', ')', 'x', 'l', '/', '(', 'b', 'u', 'o', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\'L", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'L', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("\'M", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'M', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("\'N", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{' ', 't', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("(0", new ProportionalProbability( new double[]{0.9259259259259259, 0.9351851851851852, 0.9444444444444445, 0.9537037037037038, 0.9629629629629631, 0.9722222222222224, 0.9814814814814817, 0.990740740740741, 1.0000000000000002}, new char[]{'0', '(', 'ƒ', 'e', 'y', ':', ')', 'm', ' '}) );
        twoCharacterInputWithUnknownOutput.put("(1", new ProportionalProbability( new double[]{0.982201713909031, 0.982860909690178, 0.9835201054713251, 0.9841793012524721, 0.9848384970336191, 0.9854976928147662, 0.9861568885959132, 0.9868160843770603, 0.9874752801582073, 0.9881344759393543, 0.9887936717205014, 0.9894528675016484, 0.9901120632827954, 0.9907712590639425, 0.9914304548450895, 0.9920896506262366, 0.9927488464073836, 0.9934080421885306, 0.9940672379696777, 0.9947264337508247, 0.9953856295319717, 0.9960448253131188, 0.9967040210942658, 0.9973632168754129, 0.9980224126565599, 0.9986816084377069, 0.999340804218854, 1.0000000000000009}, new char[]{'1', 'g', 'e', '2', 's', 'd', '=', ')', 'm', ' ', 'c', 'y', 'i', '(', 'n', 'r', '-', 'l', '.', 'o', 't', ',', '\'', 'a', 'h', ':', 'f', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("(2", new ProportionalProbability( new double[]{0.9709443099273608, 0.9721549636803875, 0.9733656174334141, 0.9745762711864407, 0.9757869249394674, 0.976997578692494, 0.9782082324455207, 0.9794188861985473, 0.980629539951574, 0.9818401937046006, 0.9830508474576273, 0.9842615012106539, 0.9854721549636806, 0.9866828087167072, 0.9878934624697339, 0.9891041162227605, 0.9903147699757872, 0.9915254237288138, 0.9927360774818405, 0.9939467312348671, 0.9951573849878937, 0.9963680387409204, 0.997578692493947, 0.9987893462469737, 1.0000000000000002}, new char[]{'2', 'i', 'e', 't', ' ', 'p', 'D', 'a', 'v', 'd', 'y', 'm', 'o', 'n', '-', 'h', '/', 'C', 'r', 's', 'l', 'w', 'c', '1', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("(3", new ProportionalProbability( new double[]{0.9471947194719472, 0.9504950495049506, 0.9537953795379539, 0.9570957095709572, 0.9603960396039606, 0.9636963696369639, 0.9669966996699673, 0.9702970297029706, 0.9735973597359739, 0.9768976897689773, 0.9801980198019806, 0.983498349834984, 0.9867986798679873, 0.9900990099009906, 0.993399339933994, 0.9966996699669973, 1.0000000000000007}, new char[]{'3', 's', ' ', 'e', 'f', 'i', 'd', 'm', 'a', 'o', ')', 'g', 'l', 'π', 't', 'n', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("(4", new ProportionalProbability( new double[]{0.9254658385093167, 0.9316770186335404, 0.937888198757764, 0.9440993788819876, 0.9503105590062112, 0.9565217391304348, 0.9627329192546584, 0.968944099378882, 0.9751552795031057, 0.9813664596273293, 0.9875776397515529, 0.9937888198757765, 1.0}, new char[]{'4', ' ', 'e', 'r', 'a', 'g', ')', 'l', 't', 'd', 's', 'u', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("\'S", new ProportionalProbability( new double[]{0.8571428571428571, 0.9047619047619047, 0.9523809523809523, 1.0}, new char[]{'\'', 'd', 'l', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("(5", new ProportionalProbability( new double[]{0.891566265060241, 0.9036144578313253, 0.9156626506024097, 0.9277108433734941, 0.9397590361445785, 0.9518072289156628, 0.9638554216867472, 0.9759036144578316, 0.987951807228916, 1.0000000000000002}, new char[]{'r', 't', '5', 'm', 'a', 'e', '1', ' ', ':', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("\'T", new ProportionalProbability( new double[]{0.9117647058823529, 0.9411764705882353, 0.9705882352941176, 1.0}, new char[]{'T', 'h', 'o', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("(6", new ProportionalProbability( new double[]{0.918918918918919, 0.927927927927928, 0.936936936936937, 0.945945945945946, 0.9549549549549551, 0.9639639639639641, 0.9729729729729731, 0.9819819819819822, 0.9909909909909912, 1.0000000000000002}, new char[]{'6', 't', 'a', 'e', 's', 'n', 'R', ' ', '5', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("(7", new ProportionalProbability( new double[]{0.925, 0.9500000000000001, 0.9750000000000001, 1.0}, new char[]{'7', 'e', 'H', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\'V", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'a', '\''}) );
        twoCharacterInputWithUnknownOutput.put("(8", new ProportionalProbability( new double[]{0.9130434782608695, 0.9347826086956521, 0.9565217391304347, 0.9782608695652173, 0.9999999999999999}, new char[]{'8', 'i', ' ', 'e', '5'}) );
        twoCharacterInputWithUnknownOutput.put("\'W", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'s', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("(9", new ProportionalProbability( new double[]{0.96, 0.98, 1.0}, new char[]{'9', ' ', '('}) );
        twoCharacterInputWithUnknownOutput.put("(<", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{' ', '<'}) );
        twoCharacterInputWithUnknownOutput.put("(=", new ProportionalProbability( new double[]{0.926829268292683, 0.951219512195122, 0.9756097560975611, 1.0}, new char[]{'=', 'e', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(") ", new ProportionalProbability( new double[]{0.9937874166949057, 0.9939003727549983, 0.994013328815091, 0.9941262848751836, 0.9942392409352763, 0.9943521969953689, 0.9944651530554616, 0.9945781091155542, 0.9946910651756469, 0.9948040212357395, 0.9949169772958322, 0.9950299333559248, 0.9951428894160175, 0.9952558454761101, 0.9953688015362028, 0.9954817575962954, 0.9955947136563881, 0.9957076697164807, 0.9958206257765734, 0.995933581836666, 0.9960465378967587, 0.9961594939568513, 0.996272450016944, 0.9963854060770366, 0.9964983621371293, 0.9966113181972219, 0.9967242742573146, 0.9968372303174072, 0.9969501863774999, 0.9970631424375925, 0.9971760984976852, 0.9972890545577778, 0.9974020106178705, 0.9975149666779631, 0.9976279227380558, 0.9977408787981484, 0.9978538348582411, 0.9979667909183337, 0.9980797469784264, 0.998192703038519, 0.9983056590986117, 0.9984186151587043, 0.998531571218797, 0.9986445272788896, 0.9987574833389823, 0.9988704393990749, 0.9989833954591676, 0.9990963515192602, 0.9992093075793529, 0.9993222636394455, 0.9994352196995382, 0.9995481757596308, 0.9996611318197235, 0.9997740878798161, 0.9998870439399088, 1.0000000000000013}, new char[]{'(', 't', ' ', 'B', 's', 'e', 'm', 'l', 'o', 'r', 'u', 'i', 'W', 'y', '1', 'j', 'v', 'a', ')', 'f', 'w', ',', '=', '4', 'c', 'n', 'C', 'E', '\'', 'p', 'h', '&', 'L', 'P', 'd', '6', 'S', 'g', 'b', ':', '∫', 'F', 'k', '.', 'x', '7', '+', '-', '<', '2', '%', 'A', 'q', '8', '/', '^'}) );
        twoCharacterInputWithUnknownOutput.put(")!", new ProportionalProbability( new double[]{0.9272727272727272, 0.9454545454545454, 0.9636363636363636, 0.9818181818181818, 1.0}, new char[]{'!', ')', 'v', '+', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("(A", new ProportionalProbability( new double[]{0.9597989949748744, 0.9623115577889447, 0.964824120603015, 0.9673366834170853, 0.9698492462311556, 0.972361809045226, 0.9748743718592963, 0.9773869346733666, 0.9798994974874369, 0.9824120603015072, 0.9849246231155775, 0.9874371859296478, 0.9899497487437181, 0.9924623115577884, 0.9949748743718587, 0.997487437185929, 0.9999999999999993}, new char[]{'A', ' ', ')', 'r', 'l', 'f', 'n', 'o', 'i', 'e', 'g', 'm', 'a', 't', 'd', 'u', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("\'a", new ProportionalProbability( new double[]{0.9914163090128756, 0.9924892703862661, 0.9935622317596566, 0.9946351931330472, 0.9957081545064377, 0.9967811158798282, 0.9978540772532187, 0.9989270386266093, 0.9999999999999998}, new char[]{'a', '\'', 'u', 's', 'v', 'i', 'n', 'r', ' '}) );
        twoCharacterInputWithUnknownOutput.put("(B", new ProportionalProbability( new double[]{0.9197530864197531, 0.9259259259259259, 0.9320987654320988, 0.9382716049382717, 0.9444444444444445, 0.9506172839506174, 0.9567901234567903, 0.9629629629629631, 0.969135802469136, 0.9753086419753089, 0.9814814814814817, 0.9876543209876546, 0.9938271604938275, 1.0000000000000002}, new char[]{'m', 'B', 'd', ' ', 's', 'c', 'e', 'l', '-', 'a', 'g', 'r', 'i', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("(C", new ProportionalProbability( new double[]{0.9650205761316872, 0.9670781893004116, 0.9691358024691359, 0.9711934156378602, 0.9732510288065845, 0.9753086419753089, 0.9773662551440332, 0.9794238683127575, 0.9814814814814818, 0.9835390946502062, 0.9855967078189305, 0.9876543209876548, 0.9897119341563791, 0.9917695473251035, 0.9938271604938278, 0.9958847736625521, 0.9979423868312765, 1.0000000000000007}, new char[]{'C', 'r', ' ', 'e', 'n', 'l', 'o', 'f', 'y', 'd', 's', 'a', ',', 'm', 't', 'u', 'i', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("\'b", new ProportionalProbability( new double[]{0.8484848484848485, 0.8787878787878788, 0.9090909090909091, 0.9393939393939393, 0.9696969696969696, 0.9999999999999999}, new char[]{'c', 'e', 'r', 't', 'b', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("\'c", new ProportionalProbability( new double[]{0.9558823529411765, 0.9705882352941176, 0.9852941176470588, 0.9999999999999999}, new char[]{'e', 'c', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put("(D", new ProportionalProbability( new double[]{0.9127906976744186, 0.9186046511627907, 0.9244186046511628, 0.9302325581395349, 0.936046511627907, 0.9418604651162791, 0.9476744186046512, 0.9534883720930233, 0.9593023255813954, 0.9651162790697675, 0.9709302325581396, 0.9767441860465117, 0.9825581395348838, 0.9883720930232559, 0.994186046511628, 1.0}, new char[]{'D', ' ', 'p', 'S', 't', 's', 'o', 'i', 'h', 'e', 'r', 'l', 'U', '(', 'n', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("(E", new ProportionalProbability( new double[]{0.9413919413919414, 0.945054945054945, 0.9487179487179487, 0.9523809523809523, 0.956043956043956, 0.9597069597069596, 0.9633699633699633, 0.9670329670329669, 0.9706959706959706, 0.9743589743589742, 0.9780219780219779, 0.9816849816849815, 0.9853479853479852, 0.9890109890109888, 0.9926739926739925, 0.9963369963369961, 0.9999999999999998}, new char[]{'E', 'U', 'b', 'y', ' ', 'w', 't', 'c', 'g', ':', 'r', 's', 'n', ')', 'p', 'e', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("\'d", new ProportionalProbability( new double[]{0.9019607843137255, 0.9215686274509804, 0.9411764705882354, 0.9607843137254903, 0.9803921568627453, 1.0000000000000002}, new char[]{'d', 'l', 'h', 'c', 'e', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("\'e", new ProportionalProbability( new double[]{0.9865319865319865, 0.9882154882154882, 0.98989898989899, 0.9915824915824917, 0.9932659932659934, 0.9949494949494951, 0.9966329966329969, 0.9983164983164986, 1.0000000000000002}, new char[]{'\'', 'e', 's', 'a', 'o', 'i', 'm', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("(F", new ProportionalProbability( new double[]{0.9523809523809523, 0.9591836734693877, 0.9659863945578231, 0.9727891156462585, 0.9795918367346939, 0.9863945578231292, 0.9931972789115646, 1.0}, new char[]{'F', ' ', 'd', 'e', 'o', 't', 'c', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(")\'", new ProportionalProbability( new double[]{0.9555555555555556, 0.9777777777777779, 1.0}, new char[]{'\'', 'f', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(")(", new ProportionalProbability( new double[]{0.979381443298969, 0.9828178694158075, 0.986254295532646, 0.9896907216494845, 0.9931271477663229, 0.9965635738831614, 0.9999999999999999}, new char[]{'(', 'o', 'n', 'x', 'c', 'a', ')'}) );
        twoCharacterInputWithUnknownOutput.put("(G", new ProportionalProbability( new double[]{0.9337748344370861, 0.9403973509933775, 0.9470198675496689, 0.9536423841059604, 0.9602649006622518, 0.9668874172185432, 0.9735099337748346, 0.9801324503311261, 0.9867549668874175, 0.9933774834437089, 1.0000000000000002}, new char[]{'v', 'G', 'r', 's', 'a', ' ', 'i', 'h', 'e', 'o', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\'f", new ProportionalProbability( new double[]{0.9, 0.9500000000000001, 1.0}, new char[]{'a', 'f', '\''}) );
        twoCharacterInputWithUnknownOutput.put("))", new ProportionalProbability( new double[]{0.9830985915492958, 0.9859154929577465, 0.9887323943661972, 0.9915492957746479, 0.9943661971830986, 0.9971830985915493, 1.0}, new char[]{')', 'u', '2', ' ', 'd', 'f', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\'g", new ProportionalProbability( new double[]{0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'\'', 'g', 's', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("(H", new ProportionalProbability( new double[]{0.9348837209302325, 0.9395348837209302, 0.9441860465116279, 0.9488372093023255, 0.9534883720930232, 0.9581395348837208, 0.9627906976744185, 0.9674418604651162, 0.9720930232558138, 0.9767441860465115, 0.9813953488372091, 0.9860465116279068, 0.9906976744186045, 0.9953488372093021, 0.9999999999999998}, new char[]{'H', ' ', 'e', ',', 'h', 'c', 'w', 'd', '-', 'a', 'i', 'o', 'g', 'l', '('}) );
        twoCharacterInputWithUnknownOutput.put(")*", new ProportionalProbability( new double[]{0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{'*', 'u', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\'h", new ProportionalProbability( new double[]{0.9798994974874372, 0.9849246231155779, 0.9899497487437187, 0.9949748743718594, 1.0}, new char[]{'h', '\'', 'o', '.', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("(I", new ProportionalProbability( new double[]{0.9635258358662614, 0.9665653495440729, 0.9696048632218844, 0.972644376899696, 0.9756838905775075, 0.978723404255319, 0.9817629179331305, 0.984802431610942, 0.9878419452887536, 0.9908814589665651, 0.9939209726443766, 0.9969604863221881, 0.9999999999999997}, new char[]{'I', '(', 'u', 'l', 't', 'P', 'r', 'd', 's', 'e', 'm', 'h', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("\'i", new ProportionalProbability( new double[]{0.9879518072289156, 0.9909638554216867, 0.9939759036144579, 0.996987951807229, 1.0}, new char[]{'i', '\'', 'a', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put(")+", new ProportionalProbability( new double[]{0.9955947136563876, 1.0}, new char[]{'+', 's'}) );
        twoCharacterInputWithUnknownOutput.put("(J", new ProportionalProbability( new double[]{0.898876404494382, 0.9101123595505618, 0.9213483146067416, 0.9325842696629214, 0.9438202247191012, 0.955056179775281, 0.9662921348314608, 0.9775280898876406, 0.9887640449438204, 1.0000000000000002}, new char[]{'J', 'k', 'p', 'n', 'e', 'i', 'u', 'o', 'a', 's'}) );
        twoCharacterInputWithUnknownOutput.put("),", new ProportionalProbability( new double[]{0.9752720079129574, 0.9762611275964391, 0.9772502472799208, 0.9782393669634025, 0.9792284866468842, 0.9802176063303659, 0.9812067260138476, 0.9821958456973293, 0.983184965380811, 0.9841740850642927, 0.9851632047477744, 0.9861523244312561, 0.9871414441147378, 0.9881305637982195, 0.9891196834817012, 0.9901088031651829, 0.9910979228486646, 0.9920870425321463, 0.993076162215628, 0.9940652818991097, 0.9950544015825914, 0.9960435212660731, 0.9970326409495548, 0.9980217606330365, 0.9990108803165182, 0.9999999999999999}, new char[]{'e', ',', ' ', 's', 'v', 't', 'm', 'n', 'a', 'y', 'c', 'r', 'f', 'C', 'q', 'o', 'l', 'p', 'd', '5', 'V', 'u', 'π', '/', 'i', ')'}) );
        twoCharacterInputWithUnknownOutput.put("(K", new ProportionalProbability( new double[]{0.9516129032258065, 0.967741935483871, 0.9838709677419355, 1.0}, new char[]{'v', 'K', 'm', ' '}) );
        twoCharacterInputWithUnknownOutput.put("(L", new ProportionalProbability( new double[]{0.9193548387096774, 0.9274193548387096, 0.9354838709677419, 0.9435483870967741, 0.9516129032258064, 0.9596774193548386, 0.9677419354838709, 0.9758064516129031, 0.9838709677419354, 0.9919354838709676, 0.9999999999999999}, new char[]{'L', ' ', 't', 'r', 'd', '&', 'l', 'f', 'a', 's', 'p'}) );
        twoCharacterInputWithUnknownOutput.put(")-", new ProportionalProbability( new double[]{0.9715909090909091, 0.9772727272727273, 0.9829545454545455, 0.9886363636363638, 0.994318181818182, 1.0000000000000002}, new char[]{'-', 'r', 'R', 's', 'x', 'B'}) );
        twoCharacterInputWithUnknownOutput.put(").", new ProportionalProbability( new double[]{0.9808429118773946, 0.9818007662835249, 0.9827586206896551, 0.9837164750957854, 0.9846743295019157, 0.985632183908046, 0.9865900383141762, 0.9875478927203065, 0.9885057471264368, 0.9894636015325671, 0.9904214559386973, 0.9913793103448276, 0.9923371647509579, 0.9932950191570882, 0.9942528735632185, 0.9952107279693487, 0.996168582375479, 0.9971264367816093, 0.9980842911877396, 0.9990421455938698, 1.0}, new char[]{'.', 'c', 'T', '\'', ' ', 'r', 'u', 'h', 'e', 'l', 'o', 'i', 't', 'a', 'y', 'p', 'n', 'S', 's', 'g', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("(M", new ProportionalProbability( new double[]{0.9414634146341463, 0.9463414634146341, 0.9512195121951219, 0.9560975609756097, 0.9609756097560975, 0.9658536585365853, 0.9707317073170731, 0.975609756097561, 0.9804878048780488, 0.9853658536585366, 0.9902439024390244, 0.9951219512195122, 1.0}, new char[]{'a', 'r', 'M', ' ', 'i', 'd', 'B', 'e', 'u', 'h', '/', 'v', 's'}) );
        twoCharacterInputWithUnknownOutput.put("\'l", new ProportionalProbability( new double[]{0.9673202614379085, 0.9738562091503268, 0.9803921568627451, 0.9869281045751633, 0.9934640522875816, 0.9999999999999999}, new char[]{'l', 'i', '(', 'n', 'o', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("(N", new ProportionalProbability( new double[]{0.9692982456140351, 0.9736842105263158, 0.9780701754385965, 0.9824561403508772, 0.986842105263158, 0.9912280701754387, 0.9956140350877194, 1.0}, new char[]{'N', 'E', 'i', ' ', 'b', 't', 'l', 's'}) );
        twoCharacterInputWithUnknownOutput.put(")/", new ProportionalProbability( new double[]{0.9844413012729845, 0.9858557284299859, 0.9872701555869874, 0.9886845827439888, 0.9900990099009903, 0.9915134370579918, 0.9929278642149932, 0.9943422913719947, 0.9957567185289962, 0.9971711456859976, 0.9985855728429991, 1.0000000000000004}, new char[]{')', '/', 'b', 't', 'a', 'o', 'm', 'r', '=', '(', ' ', 's'}) );
        twoCharacterInputWithUnknownOutput.put("\'m", new ProportionalProbability( new double[]{0.9448275862068966, 0.9517241379310345, 0.9586206896551724, 0.9655172413793104, 0.9724137931034483, 0.9793103448275863, 0.9862068965517242, 0.9931034482758622, 1.0}, new char[]{'m', 't', 'u', '\"', 'd', 'l', ' ', 'e', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("(O", new ProportionalProbability( new double[]{0.9420289855072463, 0.9492753623188406, 0.9565217391304348, 0.963768115942029, 0.9710144927536233, 0.9782608695652175, 0.9855072463768118, 0.992753623188406, 1.0000000000000002}, new char[]{'O', 'e', 'c', 'u', '.', ' ', 'g', 'm', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("\'n", new ProportionalProbability( new double[]{0.8947368421052632, 0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'n', ' ', 'v', 'r', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("\'o", new ProportionalProbability( new double[]{0.9845559845559846, 0.9884169884169884, 0.9922779922779923, 0.9961389961389961, 1.0}, new char[]{'o', '\'', 's', 'n', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("(P", new ProportionalProbability( new double[]{0.9565217391304348, 0.959866220735786, 0.9632107023411371, 0.9665551839464883, 0.9698996655518395, 0.9732441471571907, 0.9765886287625418, 0.979933110367893, 0.9832775919732442, 0.9866220735785953, 0.9899665551839465, 0.9933110367892977, 0.9966555183946488, 1.0}, new char[]{'a', 'P', 'r', 'e', ')', ' ', 't', 'm', 'y', 's', 'l', 'M', 'i', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("(Q", new ProportionalProbability( new double[]{0.9423076923076923, 0.9615384615384616, 0.9807692307692308, 1.0}, new char[]{'Q', 'm', 'a', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("\'p", new ProportionalProbability( new double[]{0.8653846153846154, 0.8846153846153847, 0.903846153846154, 0.9230769230769232, 0.9423076923076925, 0.9615384615384618, 0.9807692307692311, 1.0000000000000002}, new char[]{'p', 't', 'e', 'v', 'f', 'o', ' ', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("(R", new ProportionalProbability( new double[]{0.922077922077922, 0.9285714285714285, 0.9350649350649349, 0.9415584415584414, 0.9480519480519478, 0.9545454545454543, 0.9610389610389607, 0.9675324675324671, 0.9740259740259736, 0.98051948051948, 0.9870129870129865, 0.9935064935064929, 0.9999999999999993}, new char[]{' ', 'R', 'o', 'r', 'y', '.', 'l', 'd', 'a', 'E', 'e', 'n', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("(S", new ProportionalProbability( new double[]{0.9421221864951769, 0.9453376205787781, 0.9485530546623794, 0.9517684887459806, 0.9549839228295819, 0.9581993569131831, 0.9614147909967844, 0.9646302250803857, 0.9678456591639869, 0.9710610932475882, 0.9742765273311894, 0.9774919614147907, 0.9807073954983919, 0.9839228295819932, 0.9871382636655944, 0.9903536977491957, 0.9935691318327969, 0.9967845659163982, 0.9999999999999994}, new char[]{'S', 's', 'r', 'o', 't', 'k', 'h', 'e', 'a', 'g', ')', '-', 'd', 'i', '.', 'G', 'b', 'l', ' '}) );
        twoCharacterInputWithUnknownOutput.put("\'r", new ProportionalProbability( new double[]{0.956953642384106, 0.9602649006622517, 0.9635761589403974, 0.9668874172185431, 0.9701986754966888, 0.9735099337748345, 0.9768211920529802, 0.980132450331126, 0.9834437086092717, 0.9867549668874174, 0.9900662251655631, 0.9933774834437088, 0.9966887417218545, 1.0000000000000002}, new char[]{'t', 'r', 'c', ' ', 'l', 'g', '.', 's', 'e', 'a', '\"', 'y', 'o', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(")4", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'4', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\'s", new ProportionalProbability( new double[]{0.9942420996250669, 0.9943760042849491, 0.9945099089448313, 0.9946438136047134, 0.9947777182645956, 0.9949116229244778, 0.9950455275843599, 0.9951794322442421, 0.9953133369041243, 0.9954472415640064, 0.9955811462238886, 0.9957150508837708, 0.9958489555436529, 0.9959828602035351, 0.9961167648634173, 0.9962506695232994, 0.9963845741831816, 0.9965184788430638, 0.9966523835029459, 0.9967862881628281, 0.9969201928227103, 0.9970540974825924, 0.9971880021424746, 0.9973219068023568, 0.9974558114622389, 0.9975897161221211, 0.9977236207820033, 0.9978575254418854, 0.9979914301017676, 0.9981253347616498, 0.9982592394215319, 0.9983931440814141, 0.9985270487412963, 0.9986609534011784, 0.9987948580610606, 0.9989287627209428, 0.9990626673808249, 0.9991965720407071, 0.9993304767005893, 0.9994643813604714, 0.9995982860203536, 0.9997321906802358, 0.9998660953401179, 1.0}, new char[]{'s', 'i', 't', 'l', 'u', 'e', ' ', 'w', '%', 'a', 'o', 'r', '?', 'm', '-', 'g', 'n', '/', 'k', 'd', 'f', 'c', 'p', 'B', 'b', ',', 'F', 'y', '(', 'x', 'v', 'h', 'S', '0', '\'', '1', '.', 'T', 'I', 'P', 'L', 'H', 'C', ':'}) );
        twoCharacterInputWithUnknownOutput.put("(T", new ProportionalProbability( new double[]{0.9403508771929825, 0.9438596491228071, 0.9473684210526316, 0.9508771929824562, 0.9543859649122808, 0.9578947368421054, 0.9614035087719299, 0.9649122807017545, 0.9684210526315791, 0.9719298245614036, 0.9754385964912282, 0.9789473684210528, 0.9824561403508774, 0.9859649122807019, 0.9894736842105265, 0.9929824561403511, 0.9964912280701756, 1.0000000000000002}, new char[]{'e', 'T', 'o', ' ', 'b', '0', ')', 'r', 'P', 'l', 't', 'g', 'm', 'a', 'i', 'f', 'n', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("\'t", new ProportionalProbability( new double[]{0.9799139167862266, 0.9806312769010043, 0.9813486370157819, 0.9820659971305595, 0.9827833572453372, 0.9835007173601148, 0.9842180774748924, 0.9849354375896701, 0.9856527977044477, 0.9863701578192253, 0.987087517934003, 0.9878048780487806, 0.9885222381635582, 0.9892395982783359, 0.9899569583931135, 0.9906743185078911, 0.9913916786226687, 0.9921090387374464, 0.992826398852224, 0.9935437589670016, 0.9942611190817793, 0.9949784791965569, 0.9956958393113345, 0.9964131994261122, 0.9971305595408898, 0.9978479196556674, 0.9985652797704451, 0.9992826398852227, 1.0000000000000002}, new char[]{' ', 't', 'a', 'm', 'o', 'e', 'n', 'h', 'l', 'r', 'b', 'c', 'f', 'k', 'd', 'w', 's', 'D', 'i', 'v', '.', 'u', 'q', 'g', 'p', '\'', ';', 'y', '('}) );
        twoCharacterInputWithUnknownOutput.put("(U", new ProportionalProbability( new double[]{0.9627906976744186, 0.9674418604651163, 0.9720930232558139, 0.9767441860465116, 0.9813953488372092, 0.9860465116279069, 0.9906976744186046, 0.9953488372093022, 0.9999999999999999}, new char[]{' ', 'U', 'd', 'a', 's', 'i', 't', ')', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("(V", new ProportionalProbability( new double[]{0.9635036496350365, 0.9708029197080292, 0.9781021897810219, 0.9854014598540146, 0.9927007299270073, 1.0}, new char[]{'e', 'V', 'n', ' ', 'a', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("\'u", new ProportionalProbability( new double[]{0.9743589743589743, 0.9871794871794871, 0.9999999999999999}, new char[]{'\'', 'u', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("\'v", new ProportionalProbability( new double[]{0.8974358974358975, 0.9230769230769231, 0.9487179487179488, 0.9743589743589745, 1.0}, new char[]{'e', 'v', 's', 'm', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("(W", new ProportionalProbability( new double[]{0.9191919191919192, 0.9292929292929293, 0.9393939393939393, 0.9494949494949494, 0.9595959595959594, 0.9696969696969695, 0.9797979797979796, 0.9898989898989896, 0.9999999999999997}, new char[]{'W', ' ', 'n', 'e', ')', 'T', '3', 'y', 't'}) );
        twoCharacterInputWithUnknownOutput.put("\'w", new ProportionalProbability( new double[]{0.9166666666666666, 0.9375, 0.9583333333333334, 0.9791666666666667, 1.0}, new char[]{'w', 'n', 'u', 'H', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("(X", new ProportionalProbability( new double[]{0.9722222222222222, 1.0}, new char[]{'X', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("):", new ProportionalProbability( new double[]{0.9253731343283582, 0.9402985074626866, 0.955223880597015, 0.9701492537313434, 0.9850746268656718, 1.0000000000000002}, new char[]{'a', ':', 'e', 'h', 'r', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("(Y", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'Y', 't'}) );
        twoCharacterInputWithUnknownOutput.put(");", new ProportionalProbability( new double[]{0.9882903981264637, 0.990632318501171, 0.9929742388758782, 0.9953161592505855, 0.9976580796252927, 1.0}, new char[]{';', 't', 'a', 'r', ',', 's'}) );
        twoCharacterInputWithUnknownOutput.put("(Z", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{')', 'Z', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("\'y", new ProportionalProbability( new double[]{0.7, 0.7999999999999999, 0.8999999999999999, 0.9999999999999999}, new char[]{' ', 't', 'y', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(")<", new ProportionalProbability( new double[]{0.997687066324936, 0.9977495780458836, 0.9978120897668312, 0.9978746014877788, 0.9979371132087265, 0.9979996249296741, 0.9980621366506217, 0.9981246483715693, 0.998187160092517, 0.9982496718134646, 0.9983121835344122, 0.9983746952553598, 0.9984372069763074, 0.9984997186972551, 0.9985622304182027, 0.9986247421391503, 0.9986872538600979, 0.9987497655810456, 0.9988122773019932, 0.9988747890229408, 0.9989373007438884, 0.998999812464836, 0.9990623241857837, 0.9991248359067313, 0.9991873476276789, 0.9992498593486265, 0.9993123710695742, 0.9993748827905218, 0.9994373945114694, 0.999499906232417, 0.9995624179533646, 0.9996249296743123, 0.9996874413952599, 0.9997499531162075, 0.9998124648371551, 0.9998749765581028, 0.9999374882790504, 0.999999999999998}, new char[]{'t', 's', ' ', 'a', ')', '-', 'n', 'i', 'g', 'c', 'E', 'h', 'b', 'p', '\"', 'l', 'e', 'd', 'u', 'F', 'C', 'o', 'δ', 'A', 'L', 'r', '<', '√', 'f', 'w', 'x', ',', 'U', 'v', 'q', 'm', 'T', 'B'}) );
        twoCharacterInputWithUnknownOutput.put(")=", new ProportionalProbability( new double[]{0.9803149606299213, 0.9822834645669292, 0.984251968503937, 0.9862204724409449, 0.9881889763779528, 0.9901574803149606, 0.9921259842519685, 0.9940944881889764, 0.9960629921259843, 0.9980314960629921, 1.0}, new char[]{'=', 'm', ' ', '5', '2', '9', 'e', 'n', 't', 'r', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("* ", new ProportionalProbability( new double[]{0.9420849420849421, 0.9459459459459459, 0.9498069498069498, 0.9536679536679536, 0.9575289575289575, 0.9613899613899614, 0.9652509652509652, 0.9691119691119691, 0.9729729729729729, 0.9768339768339768, 0.9806949806949806, 0.9845559845559845, 0.9884169884169883, 0.9922779922779922, 0.996138996138996, 0.9999999999999999}, new char[]{' ', 'r', '2', 'b', ')', 't', '-', 's', 'c', 'a', 'p', 'g', 'l', 'i', '[', 'm'}) );
        twoCharacterInputWithUnknownOutput.put(")?", new ProportionalProbability( new double[]{0.9243027888446215, 0.9282868525896414, 0.9322709163346613, 0.9362549800796812, 0.9402390438247011, 0.944223107569721, 0.948207171314741, 0.9521912350597609, 0.9561752988047808, 0.9601593625498007, 0.9641434262948206, 0.9681274900398406, 0.9721115537848605, 0.9760956175298804, 0.9800796812749003, 0.9840637450199202, 0.9880478087649401, 0.99203187250996, 0.99601593625498, 0.9999999999999999}, new char[]{' ', '?', 's', 't', 'r', 'm', 'g', 'c', 'o', 'l', 'h', 'v', 'i', 'w', 'n', 'y', 'd', 'p', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("(a", new ProportionalProbability( new double[]{0.9849177330895795, 0.9853747714808044, 0.9858318098720293, 0.9862888482632542, 0.9867458866544792, 0.9872029250457041, 0.987659963436929, 0.9881170018281539, 0.9885740402193788, 0.9890310786106037, 0.9894881170018286, 0.9899451553930535, 0.9904021937842784, 0.9908592321755033, 0.9913162705667282, 0.9917733089579531, 0.992230347349178, 0.9926873857404029, 0.9931444241316278, 0.9936014625228528, 0.9940585009140777, 0.9945155393053026, 0.9949725776965275, 0.9954296160877524, 0.9958866544789773, 0.9963436928702022, 0.9968007312614271, 0.997257769652652, 0.9977148080438769, 0.9981718464351018, 0.9986288848263267, 0.9990859232175516, 0.9995429616087765, 1.0000000000000013}, new char[]{'H', 'a', ',', 'i', ' ', 'r', 's', 'e', 'o', 't', 'V', 'f', '0', ')', '^', '(', 'C', 'b', 'O', 'u', 'm', 'B', 'l', 'p', 'w', '*', 'q', 'x', 'h', 'c', 'v', '5', '<', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(")B", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{' ', 'B', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("(b", new ProportionalProbability( new double[]{0.9808429118773946, 0.9821200510855683, 0.9833971902937421, 0.9846743295019158, 0.9859514687100895, 0.9872286079182633, 0.988505747126437, 0.9897828863346108, 0.9910600255427845, 0.9923371647509582, 0.993614303959132, 0.9948914431673057, 0.9961685823754794, 0.9974457215836532, 0.9987228607918269, 1.0000000000000007}, new char[]{'e', 'b', 'a', ' ', 'c', 't', 'g', 'f', ')', 's', 'o', '\"', 'i', 'n', 'm', '血'}) );
        twoCharacterInputWithUnknownOutput.put("(c", new ProportionalProbability( new double[]{0.9845890410958904, 0.985445205479452, 0.9863013698630136, 0.9871575342465753, 0.9880136986301369, 0.9888698630136985, 0.9897260273972601, 0.9905821917808217, 0.9914383561643834, 0.992294520547945, 0.9931506849315066, 0.9940068493150682, 0.9948630136986298, 0.9957191780821915, 0.9965753424657531, 0.9974315068493147, 0.9982876712328763, 0.9991438356164379, 0.9999999999999996}, new char[]{'c', '(', 's', 'y', 'H', 'i', 'f', 'e', 'r', 'n', 'o', 'p', ':', ')', 'l', 'd', '^', ' ', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("(d", new ProportionalProbability( new double[]{0.9883313885647608, 0.9894982497082847, 0.9906651108518086, 0.9918319719953326, 0.9929988331388565, 0.9941656942823804, 0.9953325554259044, 0.9964994165694283, 0.9976662777129522, 0.9988331388564762, 1.0}, new char[]{'d', 'e', '(', 'u', ' ', 'i', 't', 'p', ')', 'o', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("(e", new ProportionalProbability( new double[]{0.9834770114942529, 0.9841954022988506, 0.9849137931034483, 0.985632183908046, 0.9863505747126436, 0.9870689655172413, 0.987787356321839, 0.9885057471264367, 0.9892241379310344, 0.989942528735632, 0.9906609195402297, 0.9913793103448274, 0.9920977011494251, 0.9928160919540228, 0.9935344827586204, 0.9942528735632181, 0.9949712643678158, 0.9956896551724135, 0.9964080459770112, 0.9971264367816088, 0.9978448275862065, 0.9985632183908042, 0.9992816091954019, 0.9999999999999996}, new char[]{'e', 'l', '=', '(', 'i', 'u', ' ', ',', 'h', 'a', 'n', 's', 't', 'm', 'p', 'r', ')', '.', 'o', 'c', 'x', 'w', 'b', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("(f", new ProportionalProbability( new double[]{0.9975606037505718, 0.997713066016161, 0.9978655282817503, 0.9980179905473396, 0.9981704528129289, 0.9983229150785182, 0.9984753773441075, 0.9986278396096968, 0.9987803018752861, 0.9989327641408754, 0.9990852264064647, 0.999237688672054, 0.9993901509376433, 0.9995426132032326, 0.9996950754688219, 0.9998475377344112, 1.0000000000000004}, new char[]{' ', 'd', 'f', '(', 'r', 'a', 'c', 'e', 'm', 'w', 's', 'u', 'h', 'n', 'T', 'p', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("*(", new ProportionalProbability( new double[]{0.9772727272727273, 1.0}, new char[]{'(', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("(g", new ProportionalProbability( new double[]{0.9619565217391305, 0.9646739130434783, 0.967391304347826, 0.9701086956521738, 0.9728260869565216, 0.9755434782608694, 0.9782608695652172, 0.980978260869565, 0.9836956521739127, 0.9864130434782605, 0.9891304347826083, 0.9918478260869561, 0.9945652173913039, 0.9972826086956517, 0.9999999999999994}, new char[]{'g', 'u', ' ', 'e', 'i', 'r', 't', 'n', 'a', '(', ')', '3', ',', '-', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("(h", new ProportionalProbability( new double[]{0.979381443298969, 0.9819587628865979, 0.9845360824742267, 0.9871134020618556, 0.9896907216494845, 0.9922680412371133, 0.9948453608247422, 0.997422680412371, 0.9999999999999999}, new char[]{'a', 'h', 's', '+', 'e', '\"', 'i', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put("(i", new ProportionalProbability( new double[]{0.9771547248182763, 0.9781931464174455, 0.9792315680166147, 0.9802699896157839, 0.9813084112149532, 0.9823468328141224, 0.9833852544132916, 0.9844236760124608, 0.9854620976116301, 0.9865005192107993, 0.9875389408099685, 0.9885773624091377, 0.989615784008307, 0.9906542056074762, 0.9916926272066454, 0.9927310488058146, 0.9937694704049839, 0.9948078920041531, 0.9958463136033223, 0.9968847352024915, 0.9979231568016608, 0.99896157840083, 0.9999999999999992}, new char[]{'i', 'r', ')', '2', ' ', 'l', 's', 'a', 'n', ',', 't', 'H', 'b', 'o', 'd', 'e', 'h', 'g', 'm', 'p', 'u', 'f', '3'}) );
        twoCharacterInputWithUnknownOutput.put("(j", new ProportionalProbability( new double[]{0.9558823529411765, 0.9705882352941176, 0.9852941176470588, 0.9999999999999999}, new char[]{'j', 'n', 'T', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("(k", new ProportionalProbability( new double[]{0.9571428571428572, 0.9642857142857143, 0.9714285714285714, 0.9785714285714285, 0.9857142857142857, 0.9928571428571428, 0.9999999999999999}, new char[]{'f', 'k', 'i', 'n', ')', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("(l", new ProportionalProbability( new double[]{0.9740932642487047, 0.9758203799654577, 0.9775474956822107, 0.9792746113989637, 0.9810017271157166, 0.9827288428324696, 0.9844559585492226, 0.9861830742659756, 0.9879101899827286, 0.9896373056994816, 0.9913644214162346, 0.9930915371329876, 0.9948186528497406, 0.9965457685664936, 0.9982728842832466, 0.9999999999999996}, new char[]{'l', 'a', 'g', 't', ' ', '(', 'u', 'r', 'i', 'o', 'W', 'c', 'e', 'v', 'm', '/'}) );
        twoCharacterInputWithUnknownOutput.put("(m", new ProportionalProbability( new double[]{0.9974901398350663, 0.9976096569857774, 0.9977291741364885, 0.9978486912871997, 0.9979682084379108, 0.9980877255886219, 0.998207242739333, 0.9983267598900442, 0.9984462770407553, 0.9985657941914664, 0.9986853113421775, 0.9988048284928887, 0.9989243456435998, 0.9990438627943109, 0.999163379945022, 0.9992828970957331, 0.9994024142464443, 0.9995219313971554, 0.9996414485478665, 0.9997609656985776, 0.9998804828492888, 0.9999999999999999}, new char[]{' ', 'm', 'e', '(', 'd', 't', ')', 'o', 'c', 'P', 'f', 'a', 'n', 'r', 'l', 'v', 's', 'u', '=', 'p', '-', ':'}) );
        twoCharacterInputWithUnknownOutput.put("(n", new ProportionalProbability( new double[]{0.9910191331511129, 0.9914096056228037, 0.9918000780944944, 0.9921905505661852, 0.992581023037876, 0.9929714955095668, 0.9933619679812575, 0.9937524404529483, 0.9941429129246391, 0.9945333853963298, 0.9949238578680206, 0.9953143303397114, 0.9957048028114022, 0.9960952752830929, 0.9964857477547837, 0.9968762202264745, 0.9972666926981653, 0.997657165169856, 0.9980476376415468, 0.9984381101132376, 0.9988285825849283, 0.9992190550566191, 0.9996095275283099, 1.0000000000000007}, new char[]{' ', 'n', '(', 'c', ')', 'e', 'o', 'g', 'u', 'k', 'b', 'x', '^', 'C', 'r', 's', '+', '1', ',', 'E', 'l', 'm', 'a', 't'}) );
        twoCharacterInputWithUnknownOutput.put("(o", new ProportionalProbability( new double[]{0.9867595818815331, 0.9874564459930314, 0.9881533101045297, 0.9888501742160279, 0.9895470383275262, 0.9902439024390245, 0.9909407665505228, 0.991637630662021, 0.9923344947735193, 0.9930313588850176, 0.9937282229965159, 0.9944250871080141, 0.9951219512195124, 0.9958188153310107, 0.996515679442509, 0.9972125435540072, 0.9979094076655055, 0.9986062717770038, 0.9993031358885021, 1.0000000000000002}, new char[]{'t', 'o', ' ', '(', 'w', 'g', 'e', 'i', 'r', ')', 'c', 'a', '∞', 'f', 'l', 'm', 'd', 'h', 'n', 's'}) );
        twoCharacterInputWithUnknownOutput.put("(p", new ProportionalProbability( new double[]{0.986404833836858, 0.9871601208459214, 0.9879154078549849, 0.9886706948640483, 0.9894259818731118, 0.9901812688821753, 0.9909365558912387, 0.9916918429003022, 0.9924471299093657, 0.9932024169184291, 0.9939577039274926, 0.9947129909365561, 0.9954682779456195, 0.996223564954683, 0.9969788519637465, 0.9977341389728099, 0.9984894259818734, 0.9992447129909369, 1.0000000000000002}, new char[]{'p', '\"', 'l', 'e', 'i', 'y', 'a', 'w', 'c', '/', ')', ' ', 'n', 'm', 'r', 'h', 't', 'f', 's'}) );
        twoCharacterInputWithUnknownOutput.put("(q", new ProportionalProbability( new double[]{0.9708029197080292, 0.9781021897810219, 0.9854014598540146, 0.9927007299270073, 1.0}, new char[]{'q', ')', '(', ' ', '.'}) );
        twoCharacterInputWithUnknownOutput.put("(r", new ProportionalProbability( new double[]{0.9756637168141593, 0.9778761061946902, 0.9800884955752212, 0.9823008849557521, 0.984513274336283, 0.9867256637168139, 0.9889380530973448, 0.9911504424778758, 0.9933628318584067, 0.9955752212389376, 0.9977876106194685, 0.9999999999999994}, new char[]{'a', 'r', ' ', 'y', 'u', '*', '1', 'e', 'n', 's', 'i', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(")S", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'m', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("(s", new ProportionalProbability( new double[]{0.9887088856161022, 0.9891998036327934, 0.9896907216494846, 0.9901816396661758, 0.990672557682867, 0.9911634756995582, 0.9916543937162494, 0.9921453117329406, 0.9926362297496318, 0.993127147766323, 0.9936180657830143, 0.9941089837997055, 0.9945999018163967, 0.9950908198330879, 0.9955817378497791, 0.9960726558664703, 0.9965635738831615, 0.9970544918998527, 0.997545409916544, 0.9980363279332352, 0.9985272459499264, 0.9990181639666176, 0.9995090819833088, 1.0}, new char[]{'s', ' ', 'o', 'x', 't', 'r', 'd', 'f', 'i', ')', 'e', '-', 'p', '(', 'g', 'b', 'n', 'a', 'y', 'U', ',', 'c', '=', '2'}) );
        twoCharacterInputWithUnknownOutput.put(")T", new ProportionalProbability( new double[]{0.625, 0.75, 0.875, 1.0}, new char[]{'T', 'o', 'd', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("(t", new ProportionalProbability( new double[]{0.9863989637305699, 0.9870466321243523, 0.9876943005181347, 0.9883419689119171, 0.9889896373056994, 0.9896373056994818, 0.9902849740932642, 0.9909326424870466, 0.991580310880829, 0.9922279792746114, 0.9928756476683938, 0.9935233160621761, 0.9941709844559585, 0.9948186528497409, 0.9954663212435233, 0.9961139896373057, 0.9967616580310881, 0.9974093264248705, 0.9980569948186528, 0.9987046632124352, 0.9993523316062176, 1.0}, new char[]{'t', ' ', 'p', 'm', '(', 'r', 'c', 's', 'M', 'e', 'i', 'd', 'g', 'n', 'l', 'y', 'v', 'o', 'q', 'a', 'w', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("(u", new ProportionalProbability( new double[]{0.9730639730639731, 0.9747474747474748, 0.9764309764309765, 0.9781144781144783, 0.97979797979798, 0.9814814814814817, 0.9831649831649835, 0.9848484848484852, 0.9865319865319869, 0.9882154882154887, 0.9898989898989904, 0.9915824915824921, 0.9932659932659939, 0.9949494949494956, 0.9966329966329973, 0.998316498316499, 1.0000000000000007}, new char[]{'u', 'r', 'e', ' ', 's', 'n', '±', '(', 'g', '1', '6', 'a', ')', 'd', 'i', 'o', 't'}) );
        twoCharacterInputWithUnknownOutput.put("(v", new ProportionalProbability( new double[]{0.9635036496350365, 0.9671532846715329, 0.9708029197080293, 0.9744525547445257, 0.9781021897810221, 0.9817518248175185, 0.985401459854015, 0.9890510948905114, 0.9927007299270078, 0.9963503649635042, 1.0000000000000004}, new char[]{'v', ')', 'p', ' ', 'o', 'n', '(', 't', 'r', 'e', 's'}) );
        twoCharacterInputWithUnknownOutput.put("(w", new ProportionalProbability( new double[]{0.978494623655914, 0.9802867383512545, 0.9820788530465949, 0.9838709677419354, 0.9856630824372759, 0.9874551971326163, 0.9892473118279568, 0.9910394265232972, 0.9928315412186377, 0.9946236559139782, 0.9964157706093186, 0.9982078853046591, 0.9999999999999996}, new char[]{'w', 'r', 'e', 'b', 'd', 'a', 's', 'F', ' ', 't', 'o', 'i', 'c'}) );
        twoCharacterInputWithUnknownOutput.put(")X", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'X', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("(x", new ProportionalProbability( new double[]{0.9870887130362349, 0.9875052061640983, 0.9879216992919617, 0.9883381924198251, 0.9887546855476885, 0.9891711786755519, 0.9895876718034153, 0.9900041649312787, 0.9904206580591421, 0.9908371511870055, 0.991253644314869, 0.9916701374427324, 0.9920866305705958, 0.9925031236984592, 0.9929196168263226, 0.993336109954186, 0.9937526030820494, 0.9941690962099128, 0.9945855893377762, 0.9950020824656396, 0.995418575593503, 0.9958350687213664, 0.9962515618492298, 0.9966680549770932, 0.9970845481049566, 0.99750104123282, 0.9979175343606834, 0.9983340274885468, 0.9987505206164102, 0.9991670137442736, 0.999583506872137, 1.0000000000000004}, new char[]{'x', 'e', ')', ' ', '^', 'u', 'c', '1', 's', 'k', 'f', '²', 'F', 'o', '.', '[', '±', 'd', '(', 'i', 'l', 'h', 'r', 't', '2', 'a', '!', '=', '/', 'C', ':', '0'}) );
        twoCharacterInputWithUnknownOutput.put("(y", new ProportionalProbability( new double[]{0.9894736842105263, 0.9947368421052631, 1.0}, new char[]{'y', '\'', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(")]", new ProportionalProbability( new double[]{0.96, 0.9666666666666667, 0.9733333333333334, 0.9800000000000001, 0.9866666666666668, 0.9933333333333335, 1.0000000000000002}, new char[]{']', ' ', 'i', '(', 'n', 'H', '['}) );
        twoCharacterInputWithUnknownOutput.put("(|", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{'|', '√', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("+ ", new ProportionalProbability( new double[]{0.9752014879107254, 0.9758214507129572, 0.9764414135151891, 0.977061376317421, 0.9776813391196528, 0.9783013019218847, 0.9789212647241166, 0.9795412275263484, 0.9801611903285803, 0.9807811531308122, 0.981401115933044, 0.9820210787352759, 0.9826410415375078, 0.9832610043397396, 0.9838809671419715, 0.9845009299442034, 0.9851208927464352, 0.9857408555486671, 0.986360818350899, 0.9869807811531308, 0.9876007439553627, 0.9882207067575945, 0.9888406695598264, 0.9894606323620583, 0.9900805951642901, 0.990700557966522, 0.9913205207687539, 0.9919404835709857, 0.9925604463732176, 0.9931804091754495, 0.9938003719776813, 0.9944203347799132, 0.9950402975821451, 0.9956602603843769, 0.9962802231866088, 0.9969001859888407, 0.9975201487910725, 0.9981401115933044, 0.9987600743955363, 0.9993800371977681, 1.0}, new char[]{'-', ' ', '+', 't', 'H', '2', ')', 'v', 'e', 'n', 'C', '(', 's', 'm', 'g', 'o', 'L', 'O', 'θ', 'c', 'r', '*', 'G', 'x', '|', '^', 'l', 'u', 'a', '0', 'i', '=', 'h', '>', '5', 'W', '?', 'p', '6', ',', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(")^", new ProportionalProbability( new double[]{0.9554794520547946, 0.9589041095890412, 0.9623287671232877, 0.9657534246575343, 0.9691780821917809, 0.9726027397260275, 0.9760273972602741, 0.9794520547945207, 0.9828767123287673, 0.9863013698630139, 0.9897260273972605, 0.993150684931507, 0.9965753424657536, 1.0000000000000002}, new char[]{'^', 'm', ' ', 'a', 'x', '+', '7', ')', '→', 'n', 's', '(', 'r', '-'}) );
        twoCharacterInputWithUnknownOutput.put("*?", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'?', 'f', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("(~", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'e', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("*A", new ProportionalProbability( new double[]{0.7, 0.7999999999999999, 0.8999999999999999, 0.9999999999999999}, new char[]{'A', 't', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(")a", new ProportionalProbability( new double[]{0.9523809523809523, 1.0}, new char[]{'a', '('}) );
        twoCharacterInputWithUnknownOutput.put(")b", new ProportionalProbability( new double[]{0.9642857142857143, 1.0}, new char[]{'b', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("*C", new ProportionalProbability( new double[]{0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'C', 'M', 'q', ','}) );
        twoCharacterInputWithUnknownOutput.put(")c", new ProportionalProbability( new double[]{0.9565217391304348, 0.9710144927536232, 0.9855072463768115, 0.9999999999999999}, new char[]{'c', 't', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(")d", new ProportionalProbability( new double[]{0.9936708860759493, 1.0}, new char[]{'d', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("*E", new ProportionalProbability( new double[]{0.7857142857142857, 0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'E', 'o', 's', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("*F", new ProportionalProbability( new double[]{0.8125, 0.875, 0.9375, 1.0}, new char[]{'n', 's', 't', 'F'}) );
        twoCharacterInputWithUnknownOutput.put(" ż", new ProportionalProbability( new double[]{0.8666666666666667, 0.9333333333333333, 1.0}, new char[]{'ż', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put(")e", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'e', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("+(", new ProportionalProbability( new double[]{0.9801324503311258, 0.9867549668874173, 0.9933774834437087, 1.0}, new char[]{'(', ';', ' ', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("+)", new ProportionalProbability( new double[]{0.9743589743589743, 0.9871794871794871, 0.9999999999999999}, new char[]{')', 's', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("*H", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'s', 'f'}) );
        twoCharacterInputWithUnknownOutput.put(")h", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'h', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("*I", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'I', '1'}) );
        twoCharacterInputWithUnknownOutput.put(")i", new ProportionalProbability( new double[]{0.8, 1.0}, new char[]{'z', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("*J", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'J', 'm'}) );
        twoCharacterInputWithUnknownOutput.put(")j", new ProportionalProbability( new double[]{0.8, 1.0}, new char[]{'x', 'j'}) );
        twoCharacterInputWithUnknownOutput.put("+.", new ProportionalProbability( new double[]{0.9761904761904762, 1.0}, new char[]{'.', ' '}) );
        twoCharacterInputWithUnknownOutput.put("*M", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'M', ' ', '2'}) );
        twoCharacterInputWithUnknownOutput.put(")m", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'m', ' '}) );
        twoCharacterInputWithUnknownOutput.put("+/", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{'/', 'r', '+'}) );
        twoCharacterInputWithUnknownOutput.put("+0", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'0', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("*O", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'O', '9'}) );
        twoCharacterInputWithUnknownOutput.put("+1", new ProportionalProbability( new double[]{0.9586466165413534, 0.962406015037594, 0.9661654135338347, 0.9699248120300753, 0.9736842105263159, 0.9774436090225566, 0.9812030075187972, 0.9849624060150378, 0.9887218045112784, 0.9924812030075191, 0.9962406015037597, 1.0000000000000002}, new char[]{'1', 'e', 'O', 'o', 'n', 's', 'r', '(', '+', ',', 'c', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("*P", new ProportionalProbability( new double[]{0.7142857142857143, 0.75, 0.7857142857142857, 0.8214285714285714, 0.8571428571428571, 0.8928571428571428, 0.9285714285714285, 0.9642857142857142, 0.9999999999999999}, new char[]{'l', 'r', 'a', 'P', '*', 'i', 'G', 'f', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("*R", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{'t', 's', ' ', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("+4", new ProportionalProbability( new double[]{0.9649122807017544, 0.9824561403508771, 1.0}, new char[]{'4', 'x', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(")r", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'r', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("*S", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'v', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(")s", new ProportionalProbability( new double[]{0.9464285714285714, 0.9642857142857143, 0.9821428571428572, 1.0}, new char[]{')', 's', '(', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("+5", new ProportionalProbability( new double[]{0.9375, 0.96875, 1.0}, new char[]{'5', 'x', '→'}) );
        twoCharacterInputWithUnknownOutput.put("*T", new ProportionalProbability( new double[]{0.8666666666666667, 0.9333333333333333, 1.0}, new char[]{'T', 'f', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(")t", new ProportionalProbability( new double[]{0.9736842105263158, 1.0}, new char[]{'t', ']'}) );
        twoCharacterInputWithUnknownOutput.put("+7", new ProportionalProbability( new double[]{0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{' ', '7', 'r', 's'}) );
        twoCharacterInputWithUnknownOutput.put("*W", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'e', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("+9", new ProportionalProbability( new double[]{0.9090909090909091, 1.0}, new char[]{'9', 'd'}) );
        twoCharacterInputWithUnknownOutput.put(")x", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'x', ' '}) );
        twoCharacterInputWithUnknownOutput.put("*[", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{' ', '['}) );
        twoCharacterInputWithUnknownOutput.put(" ƒ", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{'ƒ', 's', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(", ", new ProportionalProbability( new double[]{0.9988357291440281, 0.9988512527554411, 0.9988667763668541, 0.998882299978267, 0.99889782358968, 0.998913347201093, 0.998928870812506, 0.998944394423919, 0.998959918035332, 0.998975441646745, 0.998990965258158, 0.999006488869571, 0.999022012480984, 0.999037536092397, 0.99905305970381, 0.999068583315223, 0.999084106926636, 0.999099630538049, 0.999115154149462, 0.9991306777608749, 0.9991462013722879, 0.9991617249837009, 0.9991772485951139, 0.9991927722065269, 0.9992082958179399, 0.9992238194293529, 0.9992393430407659, 0.9992548666521789, 0.9992703902635919, 0.9992859138750049, 0.9993014374864179, 0.9993169610978309, 0.9993324847092439, 0.9993480083206568, 0.9993635319320698, 0.9993790555434828, 0.9993945791548958, 0.9994101027663088, 0.9994256263777218, 0.9994411499891348, 0.9994566736005478, 0.9994721972119608, 0.9994877208233738, 0.9995032444347868, 0.9995187680461998, 0.9995342916576128, 0.9995498152690258, 0.9995653388804387, 0.9995808624918517, 0.9995963861032647, 0.9996119097146777, 0.9996274333260907, 0.9996429569375037, 0.9996584805489167, 0.9996740041603297, 0.9996895277717427, 0.9997050513831557, 0.9997205749945687, 0.9997360986059817, 0.9997516222173947, 0.9997671458288077, 0.9997826694402207, 0.9997981930516336, 0.9998137166630466, 0.9998292402744596, 0.9998447638858726, 0.9998602874972856, 0.9998758111086986, 0.9998913347201116, 0.9999068583315246, 0.9999223819429376, 0.9999379055543506, 0.9999534291657636, 0.9999689527771766, 0.9999844763885896, 1.0000000000000024}, new char[]{' ', 'n', 'a', 't', 'o', 'l', 'i', 'x', '.', 's', 'h', 'r', 'c', 'm', 'k', 'd', 'e', 'u', '2', '4', '6', '0', 'g', 'p', 'f', '\"', 'y', 'w', ',', 'P', 'C', 'b', '-', 'M', 'v', 'z', '?', ')', 'I', 'D', 'K', 'E', 'R', 'L', 'A', '(', '^', '1', 'U', 'Z', 'S', '/', 'F', 'j', 'Y', 'J', 'q', '8', 'H', 'T', 'N', ':', 'B', '_', 'G', '7', '\'', 'ת', 'ω', 'O', 'V', '}', 'W', '°', '&', '9'}) );
        twoCharacterInputWithUnknownOutput.put(",\"", new ProportionalProbability( new double[]{0.9506172839506173, 0.962962962962963, 0.9753086419753088, 0.9876543209876545, 1.0000000000000002}, new char[]{'s', '\"', 'g', ' ', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("+B", new ProportionalProbability( new double[]{0.9726027397260274, 0.9863013698630136, 1.0}, new char[]{'B', 'h', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("*a", new ProportionalProbability( new double[]{0.9411764705882353, 0.9705882352941176, 1.0}, new char[]{'a', ')', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("+C", new ProportionalProbability( new double[]{0.9632352941176471, 0.9705882352941176, 0.9779411764705882, 0.9852941176470588, 0.9926470588235293, 0.9999999999999999}, new char[]{'C', '+', 's', ' ', 'l', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("+D", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'k', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("+E", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{'E', '+', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("*e", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'i', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("+F", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{' ', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("+G", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'G', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("*f", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'e', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("*i", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'i', ' '}) );
        twoCharacterInputWithUnknownOutput.put(",,", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{',', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(",-", new ProportionalProbability( new double[]{0.9761904761904762, 1.0}, new char[]{'-', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\'É", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'É', '\''}) );
        twoCharacterInputWithUnknownOutput.put(",.", new ProportionalProbability( new double[]{0.9285714285714286, 0.9642857142857143, 1.0}, new char[]{'.', ' ', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("*l", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{'l', 'c', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("*m", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'¹', 'm'}) );
        twoCharacterInputWithUnknownOutput.put(",0", new ProportionalProbability( new double[]{0.9671641791044776, 0.9701492537313433, 0.973134328358209, 0.9761194029850747, 0.9791044776119404, 0.9820895522388061, 0.9850746268656718, 0.9880597014925375, 0.9910447761194032, 0.9940298507462689, 0.9970149253731346, 1.0000000000000002}, new char[]{'0', 'n', 'p', 'o', 'e', 't', ' ', 'i', ')', 'R', 'a', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("+O", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'O', 'i', 't'}) );
        twoCharacterInputWithUnknownOutput.put(",1", new ProportionalProbability( new double[]{0.9333333333333333, 0.9466666666666667, 0.96, 0.9733333333333333, 0.9866666666666666, 0.9999999999999999}, new char[]{'1', ',', 's', '3', 'q', ' '}) );
        twoCharacterInputWithUnknownOutput.put("*p", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'p', '('}) );
        twoCharacterInputWithUnknownOutput.put(",3", new ProportionalProbability( new double[]{0.95, 0.975, 1.0}, new char[]{' ', '3', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("+R", new ProportionalProbability( new double[]{0.75, 0.875, 1.0}, new char[]{' ', 'g', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("+S", new ProportionalProbability( new double[]{0.8, 0.8500000000000001, 0.9000000000000001, 0.9500000000000002, 1.0000000000000002}, new char[]{'S', 's', 'd', ' ', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("*r", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'r', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(",5", new ProportionalProbability( new double[]{0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'5', 's', ' '}) );
        twoCharacterInputWithUnknownOutput.put(",6", new ProportionalProbability( new double[]{0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'6', '3', '0'}) );
        twoCharacterInputWithUnknownOutput.put("+U", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'U', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("*t", new ProportionalProbability( new double[]{0.8947368421052632, 0.9473684210526316, 1.0}, new char[]{'t', 's', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("+V", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'V', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("*v", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'v', '.'}) );
        twoCharacterInputWithUnknownOutput.put(",9", new ProportionalProbability( new double[]{0.8181818181818182, 0.9090909090909092, 1.0}, new char[]{'9', 'q', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(",<", new ProportionalProbability( new double[]{0.9836065573770492, 1.0}, new char[]{' ', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("+[", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'[', 'e', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("- ", new ProportionalProbability( new double[]{0.992425215046861, 0.9925536012325075, 0.9926819874181539, 0.9928103736038004, 0.9929387597894469, 0.9930671459750934, 0.9931955321607399, 0.9933239183463863, 0.9934523045320328, 0.9935806907176793, 0.9937090769033258, 0.9938374630889723, 0.9939658492746187, 0.9940942354602652, 0.9942226216459117, 0.9943510078315582, 0.9944793940172046, 0.9946077802028511, 0.9947361663884976, 0.9948645525741441, 0.9949929387597906, 0.995121324945437, 0.9952497111310835, 0.99537809731673, 0.9955064835023765, 0.995634869688023, 0.9957632558736694, 0.9958916420593159, 0.9960200282449624, 0.9961484144306089, 0.9962768006162553, 0.9964051868019018, 0.9965335729875483, 0.9966619591731948, 0.9967903453588413, 0.9969187315444877, 0.9970471177301342, 0.9971755039157807, 0.9973038901014272, 0.9974322762870736, 0.9975606624727201, 0.9976890486583666, 0.9978174348440131, 0.9979458210296596, 0.998074207215306, 0.9982025934009525, 0.998330979586599, 0.9984593657722455, 0.998587751957892, 0.9987161381435384, 0.9988445243291849, 0.9989729105148314, 0.9991012967004779, 0.9992296828861243, 0.9993580690717708, 0.9994864552574173, 0.9996148414430638, 0.9997432276287103, 0.9998716138143567, 1.000000000000003}, new char[]{'o', 'p', ' ', 'l', 'e', 'd', 'm', 't', 'J', 'r', 'a', 'f', 's', 'i', 'h', 'n', 'y', 'c', 'E', '-', 'u', 'g', 'j', 'k', 'C', 'b', 'P', ')', 'x', 'R', '&', 'z', '.', 'v', '2', '8', '0', 'V', '\'', '=', '1', 'θ', 'w', 'K', 'D', 'L', 'G', 'q', '(', '+', ',', 'T', 'S', '/', '?', 'H', '5', '9', 'M', '3'}) );
        twoCharacterInputWithUnknownOutput.put("-\"", new ProportionalProbability( new double[]{0.9982817869415808, 1.0}, new char[]{'\"', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("+b", new ProportionalProbability( new double[]{0.9781420765027322, 0.9836065573770492, 0.9890710382513661, 0.994535519125683, 1.0}, new char[]{'b', '(', '+', 'c', ' '}) );
        twoCharacterInputWithUnknownOutput.put("+c", new ProportionalProbability( new double[]{0.9863945578231292, 0.9931972789115646, 1.0}, new char[]{'c', ' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("+d", new ProportionalProbability( new double[]{0.9459459459459459, 0.972972972972973, 1.0}, new char[]{'d', '/', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("\'à", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'\'', 'à'}) );
        twoCharacterInputWithUnknownOutput.put("+e", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'e', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("-\'", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'\'', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("-(", new ProportionalProbability( new double[]{0.9666666666666667, 0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'(', 't', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("+f", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'f', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("\'â", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'â', '\''}) );
        twoCharacterInputWithUnknownOutput.put("-)", new ProportionalProbability( new double[]{0.9801980198019802, 0.9900990099009901, 1.0}, new char[]{')', 's', 'd'}) );
        twoCharacterInputWithUnknownOutput.put(",H", new ProportionalProbability( new double[]{0.7857142857142857, 0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'G', ' ', 'y', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("--", new ProportionalProbability( new double[]{0.9883341110592627, 0.9888007466168922, 0.9892673821745217, 0.9897340177321512, 0.9902006532897807, 0.9906672888474102, 0.9911339244050397, 0.9916005599626692, 0.9920671955202987, 0.9925338310779281, 0.9930004666355576, 0.9934671021931871, 0.9939337377508166, 0.9944003733084461, 0.9948670088660756, 0.9953336444237051, 0.9958002799813346, 0.9962669155389641, 0.9967335510965936, 0.997200186654223, 0.9976668222118525, 0.998133457769482, 0.9986000933271115, 0.999066728884741, 0.9995333644423705, 1.0}, new char[]{')', 'l', '-', 'n', 'c', ' ', 'u', 'm', 'b', 'e', 'r', 'o', 'f', 'i', 's', 'p', 't', 'a', 'T', 'd', 'D', 'x', '1', '0', 'P', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("-.", new ProportionalProbability( new double[]{0.9375, 0.96875, 1.0}, new char[]{' ', '.', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("\'é", new ProportionalProbability( new double[]{0.9921568627450981, 0.996078431372549, 1.0}, new char[]{'\'', 'é', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("+m", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'m', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("-/", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'/', '-'}) );
        twoCharacterInputWithUnknownOutput.put(",N", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'a', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("-0", new ProportionalProbability( new double[]{0.8695652173913043, 0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'0', 'r', 'y', '+'}) );
        twoCharacterInputWithUnknownOutput.put(",O", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'O', ' ', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("-1", new ProportionalProbability( new double[]{0.9874913134120917, 0.9881862404447533, 0.988881167477415, 0.9895760945100766, 0.9902710215427382, 0.9909659485753998, 0.9916608756080614, 0.992355802640723, 0.9930507296733846, 0.9937456567060462, 0.9944405837387078, 0.9951355107713694, 0.995830437804031, 0.9965253648366926, 0.9972202918693542, 0.9979152189020158, 0.9986101459346775, 0.9993050729673391, 1.0000000000000007}, new char[]{'1', 'r', ' ', 's', '(', 'a', 'o', 'x', 'n', 'c', 'I', 'y', 'i', 'E', '5', 'e', 'l', 't', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("-2", new ProportionalProbability( new double[]{0.9566395663956639, 0.959349593495935, 0.962059620596206, 0.964769647696477, 0.967479674796748, 0.970189701897019, 0.97289972899729, 0.9756097560975611, 0.9783197831978321, 0.9810298102981031, 0.9837398373983741, 0.9864498644986451, 0.9891598915989162, 0.9918699186991872, 0.9945799457994582, 0.9972899728997292, 1.0000000000000002}, new char[]{'n', '2', 'c', ' ', ')', '5', '8', 'α', 'd', '1', '9', '-', 'a', 'o', '.', 'r', '4'}) );
        twoCharacterInputWithUnknownOutput.put("+p", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'p', ','}) );
        twoCharacterInputWithUnknownOutput.put("-3", new ProportionalProbability( new double[]{0.949748743718593, 0.9547738693467337, 0.9597989949748744, 0.9648241206030151, 0.9698492462311559, 0.9748743718592966, 0.9798994974874373, 0.984924623115578, 0.9899497487437188, 0.9949748743718595, 1.0000000000000002}, new char[]{'3', 't', '?', 'm', 'v', 's', 'o', 'i', '.', '^', '-'}) );
        twoCharacterInputWithUnknownOutput.put("+q", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'q', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("-4", new ProportionalProbability( new double[]{0.975609756097561, 0.983739837398374, 0.9918699186991871, 1.0}, new char[]{'4', 'i', 's', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("\'î", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'î', '\''}) );
        twoCharacterInputWithUnknownOutput.put("-5", new ProportionalProbability( new double[]{0.9764705882352941, 0.988235294117647, 0.9999999999999999}, new char[]{'5', 'h', ' '}) );
        twoCharacterInputWithUnknownOutput.put("-6", new ProportionalProbability( new double[]{0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{'6', 'h', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(")²", new ProportionalProbability( new double[]{0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'²', 't', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("-7", new ProportionalProbability( new double[]{0.9838709677419355, 1.0}, new char[]{'7', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("-8", new ProportionalProbability( new double[]{0.98, 1.0}, new char[]{'8', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("-9", new ProportionalProbability( new double[]{0.9830508474576272, 1.0}, new char[]{'9', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("-<", new ProportionalProbability( new double[]{0.9919028340080972, 0.9939271255060729, 0.9959514170040485, 0.9979757085020242, 0.9999999999999999}, new char[]{' ', '-', 'a', '<', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("->", new ProportionalProbability( new double[]{0.9318181818181818, 0.9356060606060606, 0.9393939393939393, 0.9431818181818181, 0.9469696969696969, 0.9507575757575757, 0.9545454545454545, 0.9583333333333333, 0.962121212121212, 0.9659090909090908, 0.9696969696969696, 0.9734848484848484, 0.9772727272727272, 0.981060606060606, 0.9848484848484848, 0.9886363636363635, 0.9924242424242423, 0.9962121212121211, 0.9999999999999999}, new char[]{' ', '>', 'r', 'a', 'e', 'p', '+', 'u', 's', 'd', 'm', 'c', 'y', ')', 'x', 'o', 'h', 'n', 'D'}) );
        twoCharacterInputWithUnknownOutput.put(". ", new ProportionalProbability( new double[]{0.9974065969689602, 0.9974471188913202, 0.9974876408136802, 0.9975281627360403, 0.9975686846584003, 0.9976092065807604, 0.9976497285031204, 0.9976902504254804, 0.9977307723478405, 0.9977712942702005, 0.9978118161925605, 0.9978523381149206, 0.9978928600372806, 0.9979333819596407, 0.9979739038820007, 0.9980144258043607, 0.9980549477267208, 0.9980954696490808, 0.9981359915714408, 0.9981765134938009, 0.9982170354161609, 0.998257557338521, 0.998298079260881, 0.998338601183241, 0.9983791231056011, 0.9984196450279611, 0.9984601669503211, 0.9985006888726812, 0.9985412107950412, 0.9985817327174012, 0.9986222546397613, 0.9986627765621213, 0.9987032984844814, 0.9987438204068414, 0.9987843423292014, 0.9988248642515615, 0.9988653861739215, 0.9989059080962815, 0.9989464300186416, 0.9989869519410016, 0.9990274738633617, 0.9990679957857217, 0.9991085177080817, 0.9991490396304418, 0.9991895615528018, 0.9992300834751618, 0.9992706053975219, 0.9993111273198819, 0.999351649242242, 0.999392171164602, 0.999432693086962, 0.9994732150093221, 0.9995137369316821, 0.9995542588540421, 0.9995947807764022, 0.9996353026987622, 0.9996758246211223, 0.9997163465434823, 0.9997568684658423, 0.9997973903882024, 0.9998379123105624, 0.9998784342329224, 0.9999189561552825, 0.9999594780776425, 1.0000000000000024}, new char[]{'<', 'e', 's', 'i', 'd', 'y', ' ', 'a', 't', 'c', 'o', 'r', 'f', '-', 'm', 'k', 'n', 'g', 'w', 'u', 'b', 'F', 'h', ']', '.', 'l', ',', ')', 'T', 'p', 'A', 'G', 'v', 'j', 'C', '=', ';', '&', 'D', '1', '\'', 'B', 'z', 'M', '5', 'S', 'x', 'Y', 'P', 'Q', '0', '/', '6', '2', '\"', 'W', ':', 'q', 'V', 'I', 'E', 'ñ', 'H', '9', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("-?", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{' ', 't', '?'}) );
        twoCharacterInputWithUnknownOutput.put(".\"", new ProportionalProbability( new double[]{0.95, 0.9538461538461538, 0.9576923076923076, 0.9615384615384615, 0.9653846153846153, 0.9692307692307691, 0.973076923076923, 0.9769230769230768, 0.9807692307692306, 0.9846153846153844, 0.9884615384615383, 0.9923076923076921, 0.996153846153846, 0.9999999999999998}, new char[]{'.', '\"', 'r', 'f', 'd', 'e', ' ', 'o', 't', 'i', 's', 'g', 'b', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("-A", new ProportionalProbability( new double[]{0.9446494464944649, 0.9483394833948339, 0.9520295202952028, 0.9557195571955718, 0.9594095940959407, 0.9630996309963097, 0.9667896678966786, 0.9704797047970476, 0.9741697416974165, 0.9778597785977855, 0.9815498154981545, 0.9852398523985234, 0.9889298892988924, 0.9926199261992613, 0.9963099630996303, 0.9999999999999992}, new char[]{'o', 'A', 'e', 'f', 'n', 'u', 'W', 'H', 'r', 's', 'c', 'a', 'i', 't', '\'', ' '}) );
        twoCharacterInputWithUnknownOutput.put(",a", new ProportionalProbability( new double[]{0.918918918918919, 0.9324324324324325, 0.9459459459459459, 0.9594594594594594, 0.9729729729729729, 0.9864864864864864, 0.9999999999999999}, new char[]{'a', 'n', 't', ' ', 'r', 'e', 's'}) );
        twoCharacterInputWithUnknownOutput.put("-B", new ProportionalProbability( new double[]{0.9446640316205533, 0.9486166007905138, 0.9525691699604742, 0.9565217391304347, 0.9604743083003952, 0.9644268774703556, 0.968379446640316, 0.9723320158102765, 0.976284584980237, 0.9802371541501974, 0.9841897233201579, 0.9881422924901183, 0.9920948616600788, 0.9960474308300392, 0.9999999999999997}, new char[]{'B', 'v', ' ', 'l', 'p', 'P', 'm', 'i', 'c', 'a', 'g', 'd', 't', 'y', 'L'}) );
        twoCharacterInputWithUnknownOutput.put(",b", new ProportionalProbability( new double[]{0.963302752293578, 0.9724770642201834, 0.9816513761467889, 0.9908256880733943, 0.9999999999999998}, new char[]{' ', 't', 'b', 'l', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("-C", new ProportionalProbability( new double[]{0.9440203562340967, 0.9465648854961832, 0.9491094147582697, 0.9516539440203562, 0.9541984732824427, 0.9567430025445292, 0.9592875318066156, 0.9618320610687021, 0.9643765903307886, 0.9669211195928751, 0.9694656488549616, 0.972010178117048, 0.9745547073791345, 0.977099236641221, 0.9796437659033075, 0.982188295165394, 0.9847328244274804, 0.9872773536895669, 0.9898218829516534, 0.9923664122137399, 0.9949109414758264, 0.9974554707379129, 0.9999999999999993}, new char[]{'c', 'C', 'i', 's', 'e', ' ', 'r', 'g', 'E', 'f', 'a', 'd', 'n', 'k', 't', 'o', 'y', '-', 'B', 'G', 'T', 'm', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("-D", new ProportionalProbability( new double[]{0.926829268292683, 0.9317073170731708, 0.9365853658536586, 0.9414634146341464, 0.9463414634146342, 0.951219512195122, 0.9560975609756098, 0.9609756097560976, 0.9658536585365854, 0.9707317073170733, 0.9756097560975611, 0.9804878048780489, 0.9853658536585367, 0.9902439024390245, 0.9951219512195123, 1.0}, new char[]{'D', 'r', 'a', 'g', 'M', 'n', 'o', 't', 'e', 'i', 'l', 'f', ' ', 'u', '-', '1'}) );
        twoCharacterInputWithUnknownOutput.put(",c", new ProportionalProbability( new double[]{0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'p', 'c', ' '}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart3(){
        twoCharacterInputWithUnknownOutput.put("-E", new ProportionalProbability( new double[]{0.9226190476190477, 0.9285714285714286, 0.9345238095238095, 0.9404761904761905, 0.9464285714285714, 0.9523809523809523, 0.9583333333333333, 0.9642857142857142, 0.9702380952380951, 0.976190476190476, 0.982142857142857, 0.9880952380952379, 0.9940476190476188, 0.9999999999999998}, new char[]{'E', 'a', 't', ' ', 'n', 'c', 'e', 'i', 's', 'y', 'r', 'T', '-', 'N'}) );
        twoCharacterInputWithUnknownOutput.put(",d", new ProportionalProbability( new double[]{0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'d', 'u', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(".\'", new ProportionalProbability( new double[]{0.9230769230769231, 0.9615384615384616, 1.0}, new char[]{'e', '\'', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("-F", new ProportionalProbability( new double[]{0.9195402298850575, 0.9252873563218391, 0.9310344827586208, 0.9367816091954024, 0.9425287356321841, 0.9482758620689657, 0.9540229885057474, 0.9597701149425291, 0.9655172413793107, 0.9712643678160924, 0.977011494252874, 0.9827586206896557, 0.9885057471264374, 0.994252873563219, 1.0000000000000007}, new char[]{'F', 'l', 'M', 's', 'u', 't', 'f', 'o', ' ', 'n', 'e', 'h', '-', 'i', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(".(", new ProportionalProbability( new double[]{0.8378378378378378, 0.8648648648648649, 0.8918918918918919, 0.9189189189189189, 0.9459459459459458, 0.9729729729729728, 0.9999999999999998}, new char[]{'x', '(', 'C', 'l', 'a', 'o', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("-G", new ProportionalProbability( new double[]{0.9122807017543859, 0.9210526315789473, 0.9298245614035088, 0.9385964912280702, 0.9473684210526316, 0.9561403508771931, 0.9649122807017545, 0.9736842105263159, 0.9824561403508774, 0.9912280701754388, 1.0000000000000002}, new char[]{'c', 'o', 'G', 'l', ' ', 'r', 'a', 's', 'u', 'i', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("-H", new ProportionalProbability( new double[]{0.9560439560439561, 0.9615384615384616, 0.967032967032967, 0.9725274725274725, 0.978021978021978, 0.9835164835164835, 0.9890109890109889, 0.9945054945054944, 0.9999999999999999}, new char[]{'H', 'e', 's', 'n', ' ', 'd', 'i', '-', 'm'}) );
        twoCharacterInputWithUnknownOutput.put(".)", new ProportionalProbability( new double[]{0.9801699716713881, 0.9815864022662889, 0.9830028328611897, 0.9844192634560905, 0.9858356940509914, 0.9872521246458922, 0.988668555240793, 0.9900849858356938, 0.9915014164305946, 0.9929178470254955, 0.9943342776203963, 0.9957507082152971, 0.9971671388101979, 0.9985835694050987, 0.9999999999999996}, new char[]{')', ' ', 'a', 'i', 'b', 'l', 'c', 'e', 'r', 'd', 'o', 't', 'h', 'm', 'u'}) );
        twoCharacterInputWithUnknownOutput.put(".*", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{'*', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("-I", new ProportionalProbability( new double[]{0.9378531073446328, 0.943502824858757, 0.9491525423728813, 0.9548022598870055, 0.9604519774011298, 0.966101694915254, 0.9717514124293782, 0.9774011299435025, 0.9830508474576267, 0.988700564971751, 0.9943502824858752, 0.9999999999999994}, new char[]{'I', 't', 'p', 'l', 'i', 'f', 'D', 'e', 'n', ' ', 'a', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("-J", new ProportionalProbability( new double[]{0.9107142857142857, 0.9285714285714286, 0.9464285714285715, 0.9642857142857144, 0.9821428571428573, 1.0000000000000002}, new char[]{'i', 'J', ' ', ')', 'n', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(".+", new ProportionalProbability( new double[]{0.896551724137931, 0.9310344827586207, 0.9655172413793103, 0.9999999999999999}, new char[]{'+', 'c', 'x', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(",i", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{',', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(".,", new ProportionalProbability( new double[]{0.9536082474226805, 0.9587628865979382, 0.9639175257731959, 0.9690721649484536, 0.9742268041237113, 0.979381443298969, 0.9845360824742267, 0.9896907216494845, 0.9948453608247422, 0.9999999999999999}, new char[]{',', ' ', 'd', 'f', 'v', 'y', 'a', 'i', 'b', '.'}) );
        twoCharacterInputWithUnknownOutput.put("-K", new ProportionalProbability( new double[]{0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'K', 'n', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("-L", new ProportionalProbability( new double[]{0.9257425742574258, 0.9306930693069307, 0.9356435643564357, 0.9405940594059407, 0.9455445544554456, 0.9504950495049506, 0.9554455445544555, 0.9603960396039605, 0.9653465346534654, 0.9702970297029704, 0.9752475247524753, 0.9801980198019803, 0.9851485148514852, 0.9900990099009902, 0.9950495049504952, 1.0}, new char[]{'L', 'l', 'i', '-', 'y', '\"', 's', 'r', 'o', ' ', 'e', '9', 'm', 'n', 't', 'c'}) );
        twoCharacterInputWithUnknownOutput.put(",k", new ProportionalProbability( new double[]{0.9850746268656716, 1.0}, new char[]{'k', ','}) );
        twoCharacterInputWithUnknownOutput.put(".-", new ProportionalProbability( new double[]{0.9090909090909091, 0.9393939393939393, 0.9696969696969696, 0.9999999999999999}, new char[]{'-', '7', 'e', '.'}) );
        twoCharacterInputWithUnknownOutput.put("..", new ProportionalProbability( new double[]{0.9931462667311723, 0.9932268988872762, 0.9933075310433801, 0.993388163199484, 0.9934687953555879, 0.9935494275116917, 0.9936300596677956, 0.9937106918238995, 0.9937913239800034, 0.9938719561361072, 0.9939525882922111, 0.994033220448315, 0.9941138526044189, 0.9941944847605227, 0.9942751169166266, 0.9943557490727305, 0.9944363812288344, 0.9945170133849383, 0.9945976455410421, 0.994678277697146, 0.9947589098532499, 0.9948395420093538, 0.9949201741654576, 0.9950008063215615, 0.9950814384776654, 0.9951620706337693, 0.9952427027898731, 0.995323334945977, 0.9954039671020809, 0.9954845992581848, 0.9955652314142887, 0.9956458635703925, 0.9957264957264964, 0.9958071278826003, 0.9958877600387042, 0.995968392194808, 0.9960490243509119, 0.9961296565070158, 0.9962102886631197, 0.9962909208192235, 0.9963715529753274, 0.9964521851314313, 0.9965328172875352, 0.996613449443639, 0.9966940815997429, 0.9967747137558468, 0.9968553459119507, 0.9969359780680546, 0.9970166102241584, 0.9970972423802623, 0.9971778745363662, 0.9972585066924701, 0.997339138848574, 0.9974197710046778, 0.9975004031607817, 0.9975810353168856, 0.9976616674729895, 0.9977422996290933, 0.9978229317851972, 0.9979035639413011, 0.997984196097405, 0.9980648282535088, 0.9981454604096127, 0.9982260925657166, 0.9983067247218205, 0.9983873568779243, 0.9984679890340282, 0.9985486211901321, 0.998629253346236, 0.9987098855023399, 0.9987905176584437, 0.9988711498145476, 0.9989517819706515, 0.9990324141267554, 0.9991130462828592, 0.9991936784389631, 0.999274310595067, 0.9993549427511709, 0.9994355749072747, 0.9995162070633786, 0.9995968392194825, 0.9996774713755864, 0.9997581035316903, 0.9998387356877941, 0.999919367843898, 1.0000000000000018}, new char[]{'T', 'h', 't', 'o', 'A', ' ', '•', 'I', '.', 'd', 'a', 'n', '\"', 'e', 'l', 'i', 'c', 'f', 'O', 'w', 's', ')', '2', 'π', 'k', '3', 'N', 'm', 'b', 'P', '(', 'C', 'u', 'r', '5', '0', '1', '/', 'q', 'p', 'M', 'j', '=', 'Y', 'F', 'v', 'D', 'S', 'B', 'H', 'E', 'x', 'y', '+', '8', ',', '-', 'W', 'g', 'é', '^', '?', 'R', 'L', 'G', '4', '¹', 'J', '!', '9', '√', '…', 'Q', 'U', 'K', '\'', 'V', 'z', '°', '²', '}', 'Z', 'X', '7', '£', 'θ'}) );
        twoCharacterInputWithUnknownOutput.put("-M", new ProportionalProbability( new double[]{0.9128205128205128, 0.9179487179487179, 0.923076923076923, 0.9282051282051281, 0.9333333333333332, 0.9384615384615383, 0.9435897435897435, 0.9487179487179486, 0.9538461538461537, 0.9589743589743588, 0.9641025641025639, 0.969230769230769, 0.9743589743589741, 0.9794871794871792, 0.9846153846153843, 0.9897435897435894, 0.9948717948717946, 0.9999999999999997}, new char[]{'M', 'C', 'e', 'l', 't', 'L', 'o', 'r', 'c', 's', '-', 'd', '.', 'n', 'a', 'm', 'P', '5'}) );
        twoCharacterInputWithUnknownOutput.put(",l", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'l', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("-N", new ProportionalProbability( new double[]{0.9186991869918699, 0.926829268292683, 0.934959349593496, 0.9430894308943091, 0.9512195121951221, 0.9593495934959352, 0.9674796747967482, 0.9756097560975613, 0.9837398373983743, 0.9918699186991874, 1.0000000000000004}, new char[]{'N', ' ', 'o', 'l', 'n', 'c', 's', 't', '-', 'e', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("./", new ProportionalProbability( new double[]{0.90625, 0.9375, 0.96875, 1.0}, new char[]{'/', 's', '.', ' '}) );
        twoCharacterInputWithUnknownOutput.put(",m", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'m', 'y', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("(é", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'(', 'é'}) );
        twoCharacterInputWithUnknownOutput.put(".0", new ProportionalProbability( new double[]{0.9716713881019831, 0.9745042492917848, 0.9773371104815866, 0.9801699716713883, 0.9830028328611901, 0.9858356940509918, 0.9886685552407936, 0.9915014164305953, 0.9943342776203971, 0.9971671388101988, 1.0000000000000004}, new char[]{'0', 'd', 'i', 'm', 's', 'p', ' ', 'a', 'l', 'h', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("-O", new ProportionalProbability( new double[]{0.9411764705882353, 0.9529411764705882, 0.9647058823529411, 0.976470588235294, 0.9882352941176469, 0.9999999999999998}, new char[]{'O', 'n', 't', 'a', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put(",n", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'h', 'n', ','}) );
        twoCharacterInputWithUnknownOutput.put(".1", new ProportionalProbability( new double[]{0.968, 0.976, 0.984, 0.992, 1.0}, new char[]{'1', 'e', 'd', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put("-P", new ProportionalProbability( new double[]{0.9458333333333333, 0.95, 0.9541666666666666, 0.9583333333333333, 0.9624999999999999, 0.9666666666666666, 0.9708333333333332, 0.9749999999999999, 0.9791666666666665, 0.9833333333333332, 0.9874999999999998, 0.9916666666666665, 0.9958333333333331, 0.9999999999999998}, new char[]{'P', ' ', 'l', 'i', ',', 'n', 'e', 'a', 's', 't', 'g', 'o', '-', 'E'}) );
        twoCharacterInputWithUnknownOutput.put(".2", new ProportionalProbability( new double[]{0.963302752293578, 0.9724770642201834, 0.9816513761467889, 0.9908256880733943, 0.9999999999999998}, new char[]{'2', 'v', '-', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(",p", new ProportionalProbability( new double[]{0.9423076923076923, 0.9615384615384616, 0.9807692307692308, 1.0}, new char[]{'p', 'd', ',', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("-R", new ProportionalProbability( new double[]{0.9465648854961832, 0.950381679389313, 0.9541984732824427, 0.9580152671755724, 0.9618320610687021, 0.9656488549618318, 0.9694656488549616, 0.9732824427480913, 0.977099236641221, 0.9809160305343507, 0.9847328244274804, 0.9885496183206102, 0.9923664122137399, 0.9961832061068696, 0.9999999999999993}, new char[]{'o', 'R', 't', 's', 'd', 'e', 'n', ' ', '-', 'C', 'b', ',', 'i', 'm', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(".3", new ProportionalProbability( new double[]{0.9478260869565217, 0.9565217391304347, 0.9652173913043477, 0.9739130434782607, 0.9826086956521737, 0.9913043478260867, 0.9999999999999997}, new char[]{'3', 'u', 's', ' ', ')', 'e', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("-S", new ProportionalProbability( new double[]{0.9672131147540983, 0.9699453551912568, 0.9726775956284153, 0.9754098360655737, 0.9781420765027322, 0.9808743169398907, 0.9836065573770492, 0.9863387978142076, 0.9890710382513661, 0.9918032786885246, 0.994535519125683, 0.9972677595628415, 1.0}, new char[]{'S', 'o', '.', 's', 'h', 'n', 't', '-', 'e', ' ', 'l', 'f', 'p'}) );
        twoCharacterInputWithUnknownOutput.put(".4", new ProportionalProbability( new double[]{0.9591836734693877, 0.9693877551020408, 0.9795918367346939, 0.9897959183673469, 1.0}, new char[]{'4', 's', 'v', ' ', '.'}) );
        twoCharacterInputWithUnknownOutput.put(",r", new ProportionalProbability( new double[]{0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{'n', 'r', 's'}) );
        twoCharacterInputWithUnknownOutput.put(".5", new ProportionalProbability( new double[]{0.9508771929824561, 0.9543859649122807, 0.9578947368421052, 0.9614035087719298, 0.9649122807017544, 0.968421052631579, 0.9719298245614035, 0.9754385964912281, 0.9789473684210527, 0.9824561403508772, 0.9859649122807018, 0.9894736842105264, 0.992982456140351, 0.9964912280701755, 1.0}, new char[]{'5', 'r', 't', ' ', 'm', 'c', 'l', 'u', '+', ')', 's', 'e', 'g', 'd', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("-T", new ProportionalProbability( new double[]{0.9532163742690059, 0.9590643274853801, 0.9649122807017543, 0.9707602339181285, 0.9766081871345027, 0.9824561403508769, 0.9883040935672511, 0.9941520467836253, 0.9999999999999996}, new char[]{'T', ' ', 't', 'n', 'e', 'c', '-', 'r', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(",s", new ProportionalProbability( new double[]{0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'c', 's', 'e', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("-U", new ProportionalProbability( new double[]{0.9322033898305084, 0.9491525423728813, 0.9661016949152541, 0.9830508474576269, 0.9999999999999998}, new char[]{'U', 'a', 'L', ' ', 's'}) );
        twoCharacterInputWithUnknownOutput.put(".6", new ProportionalProbability( new double[]{0.9439252336448598, 0.9532710280373832, 0.9626168224299065, 0.9719626168224299, 0.9813084112149533, 0.9906542056074766, 1.0}, new char[]{'6', 't', 'e', 'f', 'a', 'd', '4'}) );
        twoCharacterInputWithUnknownOutput.put(",t", new ProportionalProbability( new double[]{0.9444444444444444, 0.9629629629629629, 0.9814814814814814, 0.9999999999999999}, new char[]{'s', 'o', 't', ','}) );
        twoCharacterInputWithUnknownOutput.put("-V", new ProportionalProbability( new double[]{0.9473684210526315, 0.9649122807017543, 0.9824561403508771, 1.0}, new char[]{'V', 'p', 'i', '-'}) );
        twoCharacterInputWithUnknownOutput.put(".7", new ProportionalProbability( new double[]{0.963963963963964, 0.972972972972973, 0.981981981981982, 0.9909909909909911, 1.0}, new char[]{'7', '.', 'p', 'i', '8'}) );
        twoCharacterInputWithUnknownOutput.put(".8", new ProportionalProbability( new double[]{0.9555555555555556, 0.9666666666666667, 0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'8', 'e', ' ', '0', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("-W", new ProportionalProbability( new double[]{0.9270833333333334, 0.9375, 0.9479166666666666, 0.9583333333333333, 0.9687499999999999, 0.9791666666666665, 0.9895833333333331, 0.9999999999999998}, new char[]{'s', 'i', 'e', 'W', 'r', '-', ' ', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(",v", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{' ', '1'}) );
        twoCharacterInputWithUnknownOutput.put("-X", new ProportionalProbability( new double[]{0.8823529411764706, 0.9411764705882353, 1.0}, new char[]{'X', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(".9", new ProportionalProbability( new double[]{0.9615384615384616, 0.9807692307692308, 1.0}, new char[]{'9', 'k', 'y'}) );
        twoCharacterInputWithUnknownOutput.put(",y", new ProportionalProbability( new double[]{0.9866666666666667, 1.0}, new char[]{'y', ' '}) );
        twoCharacterInputWithUnknownOutput.put("-Z", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'u', 'Z'}) );
        twoCharacterInputWithUnknownOutput.put(".;", new ProportionalProbability( new double[]{0.8666666666666667, 0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'v', 'e', 's', ';', 'l'}) );
        twoCharacterInputWithUnknownOutput.put(".<", new ProportionalProbability( new double[]{0.9882659713168188, 0.9884832681442851, 0.9887005649717514, 0.9889178617992177, 0.989135158626684, 0.9893524554541503, 0.9895697522816166, 0.9897870491090829, 0.9900043459365492, 0.9902216427640155, 0.9904389395914818, 0.9906562364189481, 0.9908735332464144, 0.9910908300738807, 0.991308126901347, 0.9915254237288132, 0.9917427205562795, 0.9919600173837458, 0.9921773142112121, 0.9923946110386784, 0.9926119078661447, 0.992829204693611, 0.9930465015210773, 0.9932637983485436, 0.9934810951760099, 0.9936983920034762, 0.9939156888309425, 0.9941329856584088, 0.9943502824858751, 0.9945675793133414, 0.9947848761408077, 0.995002172968274, 0.9952194697957403, 0.9954367666232066, 0.9956540634506729, 0.9958713602781392, 0.9960886571056055, 0.9963059539330718, 0.996523250760538, 0.9967405475880043, 0.9969578444154706, 0.9971751412429369, 0.9973924380704032, 0.9976097348978695, 0.9978270317253358, 0.9980443285528021, 0.9982616253802684, 0.9984789222077347, 0.998696219035201, 0.9989135158626673, 0.9991308126901336, 0.9993481095175999, 0.9995654063450662, 0.9997827031725325, 0.9999999999999988}, new char[]{'e', ' ', 'y', 's', 'n', '.', 'f', 'a', 't', 'l', 'z', 'r', '-', 'u', 'i', 'p', 'd', 'c', 'b', '(', 'w', 'k', 'v', 'P', '\"', 'h', '=', 'o', 'x', ',', 'T', 'm', 'W', 'g', 'C', '1', 'D', 'B', 'H', ';', ')', '\'', '5', 'M', 'A', '9', 'R', '7', 'G', 'O', '%', '/', 'I', '2', '0'}) );
        twoCharacterInputWithUnknownOutput.put(".=", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'=', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(".>", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'>', 's'}) );
        twoCharacterInputWithUnknownOutput.put("/ ", new ProportionalProbability( new double[]{0.9862068965517241, 0.9866666666666667, 0.9871264367816093, 0.9875862068965519, 0.9880459770114944, 0.988505747126437, 0.9889655172413796, 0.9894252873563222, 0.9898850574712648, 0.9903448275862073, 0.9908045977011499, 0.9912643678160925, 0.9917241379310351, 0.9921839080459777, 0.9926436781609203, 0.9931034482758628, 0.9935632183908054, 0.994022988505748, 0.9944827586206906, 0.9949425287356332, 0.9954022988505757, 0.9958620689655183, 0.9963218390804609, 0.9967816091954035, 0.9972413793103461, 0.9977011494252886, 0.9981609195402312, 0.9986206896551738, 0.9990804597701164, 0.999540229885059, 1.0000000000000016}, new char[]{' ', 'e', 'm', 's', 'k', 'd', 'h', 'o', 'l', 'n', 'p', 'a', ')', '-', 'g', 't', 'W', 'i', '+', 'C', ']', 'f', 'u', '/', '^', '*', 'r', 'c', 'x', 'b', 'H'}) );
        twoCharacterInputWithUnknownOutput.put(".?", new ProportionalProbability( new double[]{0.9556025369978859, 0.9577167019027485, 0.9598308668076111, 0.9619450317124737, 0.9640591966173363, 0.9661733615221989, 0.9682875264270615, 0.9704016913319241, 0.9725158562367867, 0.9746300211416493, 0.9767441860465119, 0.9788583509513745, 0.9809725158562371, 0.9830866807610997, 0.9852008456659623, 0.9873150105708249, 0.9894291754756875, 0.9915433403805501, 0.9936575052854127, 0.9957716701902753, 0.997885835095138, 1.0000000000000004}, new char[]{'?', 'a', 'c', 'u', 'n', 'm', 'e', 'h', 'i', 'v', 'w', ' ', 'p', 's', 'l', 'r', 't', 'o', 'P', 'g', 'C', 'd'}) );
        twoCharacterInputWithUnknownOutput.put(".A", new ProportionalProbability( new double[]{0.9523809523809523, 0.9761904761904762, 1.0}, new char[]{'A', 's', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("-a", new ProportionalProbability( new double[]{0.9784172661870504, 0.9798561151079137, 0.981294964028777, 0.9827338129496404, 0.9841726618705037, 0.985611510791367, 0.9870503597122303, 0.9884892086330936, 0.989928057553957, 0.9913669064748203, 0.9928057553956836, 0.9942446043165469, 0.9956834532374103, 0.9971223021582736, 0.9985611510791369, 1.0000000000000002}, new char[]{'a', ' ', 'o', 'n', 't', 'h', 'e', 's', 'r', '(', 'x', 'c', 'd', ',', 'i', 'v'}) );
        twoCharacterInputWithUnknownOutput.put(".B", new ProportionalProbability( new double[]{0.875, 0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'9', 'a', 'B', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("-b", new ProportionalProbability( new double[]{0.9728682170542635, 0.9741602067183462, 0.975452196382429, 0.9767441860465117, 0.9780361757105944, 0.9793281653746772, 0.9806201550387599, 0.9819121447028426, 0.9832041343669253, 0.9844961240310081, 0.9857881136950908, 0.9870801033591735, 0.9883720930232562, 0.989664082687339, 0.9909560723514217, 0.9922480620155044, 0.9935400516795871, 0.9948320413436699, 0.9961240310077526, 0.9974160206718353, 0.998708010335918, 1.0000000000000007}, new char[]{'b', 'n', 'e', 'p', 'l', 'd', ' ', '.', 'f', '2', '-', '^', 'r', 's', 'u', 'a', 'y', 'c', ',', 'i', '/', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(".C", new ProportionalProbability( new double[]{0.9347826086956522, 0.9456521739130436, 0.9565217391304349, 0.9673913043478263, 0.9782608695652176, 0.989130434782609, 1.0000000000000002}, new char[]{'p', 'C', ' ', 'a', 'm', 'u', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("-c", new ProportionalProbability( new double[]{0.9828203292770222, 0.9835361488904797, 0.9842519685039371, 0.9849677881173946, 0.9856836077308521, 0.9863994273443095, 0.987115246957767, 0.9878310665712244, 0.9885468861846819, 0.9892627057981394, 0.9899785254115968, 0.9906943450250543, 0.9914101646385117, 0.9921259842519692, 0.9928418038654266, 0.9935576234788841, 0.9942734430923416, 0.994989262705799, 0.9957050823192565, 0.9964209019327139, 0.9971367215461714, 0.9978525411596288, 0.9985683607730863, 0.9992841803865438, 1.000000000000001}, new char[]{'c', 'r', ' ', 't', 'h', '-', '+', 'i', 'e', 's', 'y', 'o', 'b', '?', 'u', 'f', '.', 'l', 'a', 'S', ']', 'n', 'm', 'p', ')'}) );
        twoCharacterInputWithUnknownOutput.put(".D", new ProportionalProbability( new double[]{0.9523809523809523, 1.0}, new char[]{'D', 's'}) );
        twoCharacterInputWithUnknownOutput.put("-d", new ProportionalProbability( new double[]{0.9771428571428571, 0.9785714285714285, 0.98, 0.9814285714285714, 0.9828571428571429, 0.9842857142857143, 0.9857142857142858, 0.9871428571428572, 0.9885714285714287, 0.9900000000000001, 0.9914285714285715, 0.992857142857143, 0.9942857142857144, 0.9957142857142859, 0.9971428571428573, 0.9985714285714288, 1.0000000000000002}, new char[]{'d', 'h', 'w', 'i', 'g', ' ', 'b', 'm', '-', 'r', 't', 'c', 'e', 's', 'x', 'a', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(".E", new ProportionalProbability( new double[]{0.9361702127659575, 0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{'E', ' ', 'a', 's'}) );
        twoCharacterInputWithUnknownOutput.put("-e", new ProportionalProbability( new double[]{0.9933035714285714, 0.9938616071428571, 0.9944196428571428, 0.9949776785714285, 0.9955357142857142, 0.9960937499999999, 0.9966517857142856, 0.9972098214285713, 0.997767857142857, 0.9983258928571427, 0.9988839285714284, 0.9994419642857141, 0.9999999999999998}, new char[]{'c', 'e', 'u', 'a', 's', ' ', 'm', '-', 'v', 'i', '=', 'h', 'l'}) );
        twoCharacterInputWithUnknownOutput.put(".F", new ProportionalProbability( new double[]{0.8076923076923077, 0.8461538461538461, 0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'F', '-', 'f', 'p', 'l', ' '}) );
        twoCharacterInputWithUnknownOutput.put("-f", new ProportionalProbability( new double[]{0.97953216374269, 0.9809941520467836, 0.9824561403508772, 0.9839181286549709, 0.9853801169590645, 0.9868421052631581, 0.9883040935672517, 0.9897660818713453, 0.9912280701754389, 0.9926900584795325, 0.9941520467836261, 0.9956140350877197, 0.9970760233918133, 0.998538011695907, 1.0000000000000004}, new char[]{'f', 'c', '-', 'i', 'r', 'n', 'e', 'x', 'a', 's', 'g', 't', 'o', 'l', '.'}) );
        twoCharacterInputWithUnknownOutput.put("/(", new ProportionalProbability( new double[]{0.9723076923076923, 0.9753846153846154, 0.9784615384615385, 0.9815384615384616, 0.9846153846153847, 0.9876923076923078, 0.9907692307692308, 0.9938461538461539, 0.996923076923077, 1.0}, new char[]{'(', 'c', '+', ')', '/', ' ', 's', '∫', 'u', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(".G", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'G', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("-g", new ProportionalProbability( new double[]{0.9820627802690582, 0.9865470852017937, 0.9910313901345291, 0.9955156950672646, 1.0}, new char[]{'g', '-', 'r', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put(".H", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'H', 't'}) );
        twoCharacterInputWithUnknownOutput.put(".I", new ProportionalProbability( new double[]{0.8780487804878049, 0.9024390243902439, 0.926829268292683, 0.951219512195122, 0.9756097560975611, 1.0}, new char[]{'n', 'a', 'I', 'u', 'f', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("-h", new ProportionalProbability( new double[]{0.9548387096774194, 0.9580645161290322, 0.9612903225806451, 0.9645161290322579, 0.9677419354838708, 0.9709677419354836, 0.9741935483870965, 0.9774193548387093, 0.9806451612903222, 0.983870967741935, 0.9870967741935479, 0.9903225806451608, 0.9935483870967736, 0.9967741935483865, 0.9999999999999993}, new char[]{'h', 'i', 'n', 'e', 'p', 's', ' ', '^', 'a', 'c', 'd', 'o', '-', 'm', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("-i", new ProportionalProbability( new double[]{0.9768683274021353, 0.9786476868327403, 0.9804270462633453, 0.9822064056939503, 0.9839857651245554, 0.9857651245551604, 0.9875444839857654, 0.9893238434163705, 0.9911032028469755, 0.9928825622775805, 0.9946619217081856, 0.9964412811387906, 0.9982206405693956, 1.0000000000000007}, new char[]{'i', ' ', 'e', 'T', 't', 'a', 'd', 'm', 'r', 'n', 'f', '-', 's', '('}) );
        twoCharacterInputWithUnknownOutput.put("-k", new ProportionalProbability( new double[]{0.9761904761904762, 0.9821428571428571, 0.988095238095238, 0.994047619047619, 0.9999999999999999}, new char[]{'k', 'i', ' ', 't', '('}) );
        twoCharacterInputWithUnknownOutput.put("/-", new ProportionalProbability( new double[]{0.8823529411764706, 0.9411764705882353, 1.0}, new char[]{'-', ' ', '/'}) );
        twoCharacterInputWithUnknownOutput.put(".L", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{' ', '.'}) );
        twoCharacterInputWithUnknownOutput.put("-l", new ProportionalProbability( new double[]{0.9803407601572739, 0.981651376146789, 0.9829619921363041, 0.9842726081258192, 0.9855832241153343, 0.9868938401048494, 0.9882044560943645, 0.9895150720838796, 0.9908256880733947, 0.9921363040629098, 0.9934469200524249, 0.99475753604194, 0.996068152031455, 0.9973787680209701, 0.9986893840104852, 1.0000000000000002}, new char[]{'i', 'l', 'o', ' ', 'g', 'e', 'a', 'u', 't', 'n', 'p', 'h', 'c', 'b', 'r', 'y'}) );
        twoCharacterInputWithUnknownOutput.put(".M", new ProportionalProbability( new double[]{0.92, 0.9600000000000001, 1.0}, new char[]{'e', ' ', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("-m", new ProportionalProbability( new double[]{0.981042654028436, 0.9822274881516588, 0.9834123222748816, 0.9845971563981044, 0.9857819905213272, 0.98696682464455, 0.9881516587677728, 0.9893364928909956, 0.9905213270142184, 0.9917061611374411, 0.9928909952606639, 0.9940758293838867, 0.9952606635071095, 0.9964454976303323, 0.9976303317535551, 0.9988151658767779, 1.0000000000000007}, new char[]{'m', 'h', '-', 'r', 'e', 'n', 'l', 'Δ', 's', ' ', 'a', 'g', 'o', 't', 'i', 'f', ','}) );
        twoCharacterInputWithUnknownOutput.put("//", new ProportionalProbability( new double[]{0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{'/', 'e', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(".N", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'a', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("-n", new ProportionalProbability( new double[]{0.994157740993184, 0.9951314508276533, 0.9961051606621226, 0.9970788704965919, 0.9980525803310613, 0.9990262901655306, 0.9999999999999999}, new char[]{'n', 'm', 'a', 't', ' ', 'd', 's'}) );
        twoCharacterInputWithUnknownOutput.put(".O", new ProportionalProbability( new double[]{0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'Z', 'O', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("/0", new ProportionalProbability( new double[]{0.8461538461538461, 0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'0', 'a', ' ', '∞', 's'}) );
        twoCharacterInputWithUnknownOutput.put("-o", new ProportionalProbability( new double[]{0.9779661016949153, 0.9796610169491525, 0.9813559322033898, 0.983050847457627, 0.9847457627118643, 0.9864406779661016, 0.9881355932203388, 0.9898305084745761, 0.9915254237288134, 0.9932203389830506, 0.9949152542372879, 0.9966101694915251, 0.9983050847457624, 0.9999999999999997}, new char[]{'o', 'r', 't', 's', 'g', 'e', 'a', 'i', 'c', 'h', 'n', 'w', ' ', 'y'}) );
        twoCharacterInputWithUnknownOutput.put(".P", new ProportionalProbability( new double[]{0.7692307692307693, 0.8461538461538463, 0.9230769230769231, 1.0}, new char[]{'t', 'V', 'P', ' '}) );
        twoCharacterInputWithUnknownOutput.put("/1", new ProportionalProbability( new double[]{0.9726027397260274, 0.9794520547945206, 0.9863013698630138, 0.9931506849315069, 1.0}, new char[]{'1', 'h', 'r', 's', ' '}) );
        twoCharacterInputWithUnknownOutput.put("/2", new ProportionalProbability( new double[]{0.9846938775510204, 0.9857142857142858, 0.9867346938775511, 0.9877551020408164, 0.9887755102040817, 0.989795918367347, 0.9908163265306124, 0.9918367346938777, 0.992857142857143, 0.9938775510204083, 0.9948979591836736, 0.995918367346939, 0.9969387755102043, 0.9979591836734696, 0.9989795918367349, 1.0000000000000002}, new char[]{'2', '*', ')', '/', ' ', 'x', 'r', 'B', 'f', 's', 'a', 'm', 't', 'o', 'v', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("-p", new ProportionalProbability( new double[]{0.977803738317757, 0.9789719626168224, 0.9801401869158878, 0.9813084112149532, 0.9824766355140185, 0.9836448598130839, 0.9848130841121493, 0.9859813084112147, 0.98714953271028, 0.9883177570093454, 0.9894859813084108, 0.9906542056074762, 0.9918224299065416, 0.992990654205607, 0.9941588785046723, 0.9953271028037377, 0.9964953271028031, 0.9976635514018685, 0.9988317757009338, 0.9999999999999992}, new char[]{'p', 'o', 's', 'r', ' ', '-', 'n', 'a', 'g', 'm', 'd', 'I', 'l', 't', 'h', 'i', 'u', '.', 'B', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("/3", new ProportionalProbability( new double[]{0.9805825242718447, 0.9838187702265372, 0.9870550161812297, 0.9902912621359222, 0.9935275080906147, 0.9967637540453073, 0.9999999999999998}, new char[]{'3', '1', 'l', 'r', '(', 'o', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("-q", new ProportionalProbability( new double[]{0.96875, 1.0}, new char[]{'q', 'u'}) );
        twoCharacterInputWithUnknownOutput.put(".R", new ProportionalProbability( new double[]{0.8421052631578947, 0.894736842105263, 0.9473684210526314, 0.9999999999999998}, new char[]{'R', 'e', 'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put("-r", new ProportionalProbability( new double[]{0.972972972972973, 0.9743954480796586, 0.9758179231863442, 0.9772403982930298, 0.9786628733997154, 0.9800853485064009, 0.9815078236130865, 0.9829302987197721, 0.9843527738264577, 0.9857752489331433, 0.9871977240398289, 0.9886201991465144, 0.9900426742532, 0.9914651493598856, 0.9928876244665712, 0.9943100995732568, 0.9957325746799424, 0.997155049786628, 0.9985775248933135, 0.9999999999999991}, new char[]{'r', 'O', 'o', 'n', 's', 'y', 't', 'g', 'i', 'e', 'u', ':', ' ', '-', 'a', 'm', 'd', 'c', 'l', 'f'}) );
        twoCharacterInputWithUnknownOutput.put(".S", new ProportionalProbability( new double[]{0.9737827715355806, 0.9756554307116105, 0.9775280898876405, 0.9794007490636705, 0.9812734082397004, 0.9831460674157304, 0.9850187265917604, 0.9868913857677903, 0.9887640449438203, 0.9906367041198503, 0.9925093632958802, 0.9943820224719102, 0.9962546816479402, 0.9981273408239701, 1.0}, new char[]{'S', 'e', 'w', 'r', ' ', 'i', 'a', 'o', 's', 'k', 'u', 'n', 'y', 'h', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("/4", new ProportionalProbability( new double[]{0.9855072463768116, 0.9927536231884059, 1.0}, new char[]{'4', '/', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("-s", new ProportionalProbability( new double[]{0.9857482185273159, 0.9863420427553443, 0.9869358669833728, 0.9875296912114012, 0.9881235154394297, 0.9887173396674581, 0.9893111638954866, 0.989904988123515, 0.9904988123515435, 0.9910926365795719, 0.9916864608076004, 0.9922802850356288, 0.9928741092636573, 0.9934679334916857, 0.9940617577197142, 0.9946555819477426, 0.9952494061757711, 0.9958432304037995, 0.996437054631828, 0.9970308788598564, 0.9976247030878849, 0.9982185273159133, 0.9988123515439418, 0.9994061757719702, 0.9999999999999987}, new char[]{'s', ' ', 'u', 'c', 'g', 'i', 'h', 'a', 't', 'l', 'e', 'o', 'r', 'p', 'n', 'd', '.', '}', 'm', '\"', 'y', '-', 'G', 'b', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("/5", new ProportionalProbability( new double[]{0.9866666666666667, 1.0}, new char[]{'5', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(".T", new ProportionalProbability( new double[]{0.8727272727272727, 0.8909090909090909, 0.9090909090909091, 0.9272727272727272, 0.9454545454545454, 0.9636363636363636, 0.9818181818181818, 1.0}, new char[]{'T', ' ', 'r', 'v', 'y', 's', 'e', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("-t", new ProportionalProbability( new double[]{0.9796078431372549, 0.9803921568627451, 0.9811764705882352, 0.9819607843137254, 0.9827450980392155, 0.9835294117647057, 0.9843137254901958, 0.985098039215686, 0.9858823529411761, 0.9866666666666662, 0.9874509803921564, 0.9882352941176465, 0.9890196078431367, 0.9898039215686268, 0.990588235294117, 0.9913725490196071, 0.9921568627450973, 0.9929411764705874, 0.9937254901960776, 0.9945098039215677, 0.9952941176470579, 0.996078431372548, 0.9968627450980382, 0.9976470588235283, 0.9984313725490185, 0.9992156862745086, 0.9999999999999988}, new char[]{' ', 'p', 't', 'o', 'e', 'i', 'n', 'r', 'v', 'u', '-', 'w', 'c', 'x', 'h', 's', 'b', 'm', 'y', 'k', 'f', ',', 'a', 'C', 'l', '1', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("/6", new ProportionalProbability( new double[]{0.9767441860465116, 0.9883720930232558, 1.0}, new char[]{'6', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put(".U", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'U', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("-u", new ProportionalProbability( new double[]{0.9596541786743515, 0.962536023054755, 0.9654178674351586, 0.9682997118155621, 0.9711815561959656, 0.9740634005763691, 0.9769452449567726, 0.9798270893371761, 0.9827089337175796, 0.9855907780979831, 0.9884726224783866, 0.9913544668587901, 0.9942363112391936, 0.9971181556195972, 1.0000000000000007}, new char[]{'u', 'h', 'r', 't', 's', 'e', 'p', ' ', 'n', '-', 'g', 'f', 'o', 'a', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(".V", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'.', 'V'}) );
        twoCharacterInputWithUnknownOutput.put("/7", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{'7', ' '}) );
        twoCharacterInputWithUnknownOutput.put("-v", new ProportionalProbability( new double[]{0.9725274725274725, 0.9752747252747253, 0.978021978021978, 0.9807692307692307, 0.9835164835164835, 0.9862637362637362, 0.9890109890109889, 0.9917582417582417, 0.9945054945054944, 0.9972527472527472, 0.9999999999999999}, new char[]{'v', '-', 'i', ' ', 'g', 'h', '.', 'n', 'e', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(".W", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'W', 'd', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("-w", new ProportionalProbability( new double[]{0.9795918367346939, 0.9825072886297376, 0.9854227405247813, 0.988338192419825, 0.9912536443148687, 0.9941690962099125, 0.9970845481049562, 0.9999999999999999}, new char[]{'w', 'e', ' ', '-', 'r', 'y', 't', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("/9", new ProportionalProbability( new double[]{0.9473684210526315, 1.0}, new char[]{'9', ' '}) );
        twoCharacterInputWithUnknownOutput.put("-x", new ProportionalProbability( new double[]{0.970954356846473, 0.975103734439834, 0.979253112033195, 0.983402489626556, 0.987551867219917, 0.9917012448132779, 0.9958506224066389, 0.9999999999999999}, new char[]{'x', ' ', 'y', ')', 't', 'n', 'b', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("-y", new ProportionalProbability( new double[]{0.9743589743589743, 0.9829059829059829, 0.9914529914529914, 0.9999999999999999}, new char[]{'y', '\"', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("/<", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("-z", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'r', 'z', 't'}) );
        twoCharacterInputWithUnknownOutput.put(".[", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'[', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("/=", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{'=', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(".]", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'v', ']'}) );
        twoCharacterInputWithUnknownOutput.put("0 ", new ProportionalProbability( new double[]{0.9853333333333333, 0.9857777777777778, 0.9862222222222222, 0.9866666666666667, 0.9871111111111112, 0.9875555555555556, 0.9880000000000001, 0.9884444444444446, 0.988888888888889, 0.9893333333333335, 0.989777777777778, 0.9902222222222224, 0.9906666666666669, 0.9911111111111114, 0.9915555555555559, 0.9920000000000003, 0.9924444444444448, 0.9928888888888893, 0.9933333333333337, 0.9937777777777782, 0.9942222222222227, 0.9946666666666671, 0.9951111111111116, 0.9955555555555561, 0.9960000000000006, 0.996444444444445, 0.9968888888888895, 0.997333333333334, 0.9977777777777784, 0.9982222222222229, 0.9986666666666674, 0.9991111111111118, 0.9995555555555563, 1.0000000000000007}, new char[]{'e', ' ', 'b', 't', 'a', ',', 'n', '1', 'o', 'l', 's', '5', '0', '-', 'd', 'm', '.', 'h', 'i', 'r', ']', 'v', 'C', '2', 'k', 'u', 'J', 'c', 'p', 'f', '8', '/', 'A', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("/A", new ProportionalProbability( new double[]{0.9333333333333333, 0.9444444444444444, 0.9555555555555555, 0.9666666666666666, 0.9777777777777776, 0.9888888888888887, 0.9999999999999998}, new char[]{'A', 'a', '-', 'e', 's', 'n', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(".a", new ProportionalProbability( new double[]{0.8461538461538461, 0.8571428571428571, 0.868131868131868, 0.879120879120879, 0.89010989010989, 0.9010989010989009, 0.9120879120879118, 0.9230769230769228, 0.9340659340659337, 0.9450549450549447, 0.9560439560439556, 0.9670329670329666, 0.9780219780219775, 0.9890109890109885, 0.9999999999999994}, new char[]{'y', ' ', 's', 'a', 'g', 'J', 'e', '.', 't', 'i', 'o', 'p', 'h', 'w', ','}) );
        twoCharacterInputWithUnknownOutput.put("/B", new ProportionalProbability( new double[]{0.9701492537313433, 0.9850746268656717, 1.0}, new char[]{'B', ' ', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("/C", new ProportionalProbability( new double[]{0.9727272727272728, 0.9818181818181818, 0.9909090909090909, 0.9999999999999999}, new char[]{'C', 'o', 'm', 'W'}) );
        twoCharacterInputWithUnknownOutput.put(".b", new ProportionalProbability( new double[]{0.868421052631579, 0.8947368421052632, 0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'b', ' ', 'c', 'o', 'm', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("0%", new ProportionalProbability( new double[]{0.9654088050314465, 0.9685534591194969, 0.9716981132075472, 0.9748427672955975, 0.9779874213836478, 0.9811320754716981, 0.9842767295597484, 0.9874213836477987, 0.9905660377358491, 0.9937106918238994, 0.9968553459119497, 1.0}, new char[]{'%', 'o', 'e', 'u', 'v', ' ', 'f', 't', 'h', 'l', 'w', 'M'}) );
        twoCharacterInputWithUnknownOutput.put(".c", new ProportionalProbability( new double[]{0.8688524590163934, 0.8852459016393442, 0.9016393442622951, 0.9180327868852459, 0.9344262295081968, 0.9508196721311476, 0.9672131147540984, 0.9836065573770493, 1.0}, new char[]{'c', 'o', ' ', 'n', 'h', 'e', 'u', 'r', '.'}) );
        twoCharacterInputWithUnknownOutput.put("/D", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'D', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("/E", new ProportionalProbability( new double[]{0.9666666666666667, 0.9833333333333334, 1.0}, new char[]{'E', 'h', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(".d", new ProportionalProbability( new double[]{0.8780487804878049, 0.9024390243902439, 0.926829268292683, 0.951219512195122, 0.9756097560975611, 1.0}, new char[]{'p', 'd', ' ', '.', 'y', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(".e", new ProportionalProbability( new double[]{0.9606060606060606, 0.9636363636363636, 0.9666666666666667, 0.9696969696969697, 0.9727272727272728, 0.9757575757575758, 0.9787878787878789, 0.9818181818181819, 0.984848484848485, 0.987878787878788, 0.9909090909090911, 0.9939393939393941, 0.9969696969696972, 1.0000000000000002}, new char[]{'e', 'o', ' ', 'i', 'm', '0', 'n', 't', 'b', '.', 'E', 'u', 'g', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("/F", new ProportionalProbability( new double[]{0.9166666666666666, 0.9333333333333333, 0.9500000000000001, 0.9666666666666668, 0.9833333333333335, 1.0000000000000002}, new char[]{'F', 'r', 'f', 'c', 'l', ')'}) );
        twoCharacterInputWithUnknownOutput.put("0\'", new ProportionalProbability( new double[]{0.9545454545454546, 0.9602272727272728, 0.965909090909091, 0.9715909090909093, 0.9772727272727275, 0.9829545454545457, 0.988636363636364, 0.9943181818181822, 1.0000000000000004}, new char[]{'\'', 'w', 'e', 'l', 'g', 'o', 'm', 'W', 'c'}) );
        twoCharacterInputWithUnknownOutput.put(".f", new ProportionalProbability( new double[]{0.9629629629629629, 0.9814814814814814, 0.9999999999999999}, new char[]{'f', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("0(", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'(', '.'}) );
        twoCharacterInputWithUnknownOutput.put("0)", new ProportionalProbability( new double[]{0.9465020576131687, 0.9506172839506173, 0.9547325102880658, 0.9588477366255144, 0.9629629629629629, 0.9670781893004115, 0.97119341563786, 0.9753086419753085, 0.9794238683127571, 0.9835390946502056, 0.9876543209876542, 0.9917695473251027, 0.9958847736625512, 0.9999999999999998}, new char[]{')', ' ', '0', 'a', 's', 'i', 'e', 'd', 'o', '(', ',', 't', 'f', '.'}) );
        twoCharacterInputWithUnknownOutput.put(".g", new ProportionalProbability( new double[]{0.9749430523917996, 0.9757023538344723, 0.9764616552771451, 0.9772209567198179, 0.9779802581624907, 0.9787395596051635, 0.9794988610478362, 0.980258162490509, 0.9810174639331818, 0.9817767653758546, 0.9825360668185273, 0.9832953682612001, 0.9840546697038729, 0.9848139711465457, 0.9855732725892185, 0.9863325740318912, 0.987091875474564, 0.9878511769172368, 0.9886104783599096, 0.9893697798025823, 0.9901290812452551, 0.9908883826879279, 0.9916476841306007, 0.9924069855732734, 0.9931662870159462, 0.993925588458619, 0.9946848899012918, 0.9954441913439646, 0.9962034927866373, 0.9969627942293101, 0.9977220956719829, 0.9984813971146557, 0.9992406985573284, 1.000000000000001}, new char[]{'g', 'c', 's', 'u', 'A', 'a', ' ', 'l', 'n', 'p', 'd', 'm', '&', '(', 't', ',', ':', 'k', 'e', 'D', '.', 'i', 'U', 'C', 'o', '=', 'v', 'r', 'F', 'b', 'f', 'w', 'x', '\''}) );
        twoCharacterInputWithUnknownOutput.put(".h", new ProportionalProbability( new double[]{0.86, 0.88, 0.9, 0.92, 0.9400000000000001, 0.9600000000000001, 0.9800000000000001, 1.0}, new char[]{'h', 'e', 'r', '.', ' ', 'w', 'o', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("/I", new ProportionalProbability( new double[]{0.9787234042553191, 1.0}, new char[]{'I', 'u'}) );
        twoCharacterInputWithUnknownOutput.put(".i", new ProportionalProbability( new double[]{0.7692307692307693, 0.7948717948717949, 0.8205128205128206, 0.8461538461538463, 0.8717948717948719, 0.8974358974358976, 0.9230769230769232, 0.9487179487179489, 0.9743589743589746, 1.0000000000000002}, new char[]{'i', 's', 'u', 't', 'g', 'r', 'e', 'h', 'd', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("0+", new ProportionalProbability( new double[]{0.9615384615384616, 1.0}, new char[]{'+', 's'}) );
        twoCharacterInputWithUnknownOutput.put("0,", new ProportionalProbability( new double[]{0.9679633867276888, 0.9702517162471396, 0.9725400457665904, 0.9748283752860412, 0.977116704805492, 0.9794050343249427, 0.9816933638443935, 0.9839816933638443, 0.9862700228832951, 0.9885583524027459, 0.9908466819221967, 0.9931350114416475, 0.9954233409610983, 0.9977116704805491, 0.9999999999999999}, new char[]{',', '(', '.', 'f', 'e', 'd', 'n', 's', 'a', 'y', 'r', 'o', 'h', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put(".j", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'j', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("0-", new ProportionalProbability( new double[]{0.9471698113207547, 0.9509433962264151, 0.9547169811320755, 0.9584905660377359, 0.9622641509433962, 0.9660377358490566, 0.969811320754717, 0.9735849056603774, 0.9773584905660377, 0.9811320754716981, 0.9849056603773585, 0.9886792452830189, 0.9924528301886792, 0.9962264150943396, 1.0}, new char[]{'-', 'o', 't', 's', ' ', 'z', 'l', 'a', 'u', 'i', 'w', '1', 'p', 'f', '\''}) );
        twoCharacterInputWithUnknownOutput.put("/L", new ProportionalProbability( new double[]{0.9428571428571428, 0.9571428571428571, 0.9714285714285713, 0.9857142857142855, 0.9999999999999998}, new char[]{' ', 'h', 'b', 'L', 'u'}) );
        twoCharacterInputWithUnknownOutput.put(".k", new ProportionalProbability( new double[]{0.9090909090909091, 1.0}, new char[]{'k', ' '}) );
        twoCharacterInputWithUnknownOutput.put("0.", new ProportionalProbability( new double[]{0.9707495429616088, 0.9725776965265082, 0.9744058500914076, 0.976234003656307, 0.9780621572212064, 0.9798903107861058, 0.9817184643510052, 0.9835466179159046, 0.985374771480804, 0.9872029250457034, 0.9890310786106028, 0.9908592321755022, 0.9926873857404016, 0.994515539305301, 0.9963436928702004, 0.9981718464350998, 0.9999999999999992}, new char[]{'.', ' ', 'd', 'e', 'n', 'b', 'i', 'l', 'H', '→', 't', 'u', 'v', 'g', 'C', 'm', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("/M", new ProportionalProbability( new double[]{0.9178082191780822, 0.9315068493150684, 0.9452054794520548, 0.9589041095890412, 0.9726027397260275, 0.9863013698630139, 1.0000000000000002}, new char[]{'n', '/', 'M', 'F', 'h', 'u', ':'}) );
        twoCharacterInputWithUnknownOutput.put(".l", new ProportionalProbability( new double[]{0.8571428571428571, 0.8928571428571428, 0.9285714285714285, 0.9642857142857142, 0.9999999999999999}, new char[]{'l', 's', 'h', 'o', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(".m", new ProportionalProbability( new double[]{0.9387755102040817, 0.9591836734693878, 0.979591836734694, 1.0}, new char[]{' ', 's', 'm', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("0/", new ProportionalProbability( new double[]{0.9213483146067416, 0.9325842696629214, 0.9438202247191012, 0.955056179775281, 0.9662921348314608, 0.9775280898876406, 0.9887640449438204, 1.0000000000000002}, new char[]{'/', '+', 'a', 'r', 't', ',', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("/N", new ProportionalProbability( new double[]{0.9811320754716981, 1.0}, new char[]{'N', '2'}) );
        twoCharacterInputWithUnknownOutput.put("00", new ProportionalProbability( new double[]{0.9864349300551081, 0.986858838490886, 0.9872827469266638, 0.9877066553624417, 0.9881305637982196, 0.9885544722339975, 0.9889783806697754, 0.9894022891055533, 0.9898261975413312, 0.990250105977109, 0.9906740144128869, 0.9910979228486648, 0.9915218312844427, 0.9919457397202206, 0.9923696481559985, 0.9927935565917764, 0.9932174650275543, 0.9936413734633321, 0.99406528189911, 0.9944891903348879, 0.9949130987706658, 0.9953370072064437, 0.9957609156422216, 0.9961848240779995, 0.9966087325137774, 0.9970326409495552, 0.9974565493853331, 0.997880457821111, 0.9983043662568889, 0.9987282746926668, 0.9991521831284447, 0.9995760915642226, 1.0000000000000004}, new char[]{'0', ' ', 'd', 'a', 'n', 'l', '\"', 'i', 't', 'w', 'o', 'r', 'b', 'c', ')', '.', 'm', 'u', 'J', 'h', 'q', 'K', 'e', 'p', 'g', 'y', 'f', 's', 'X', ':', 'S', '\'', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("/O", new ProportionalProbability( new double[]{0.9583333333333334, 0.9722222222222222, 0.986111111111111, 0.9999999999999999}, new char[]{'d', 'O', 't', 'h'}) );
        twoCharacterInputWithUnknownOutput.put(".n", new ProportionalProbability( new double[]{0.7666666666666667, 0.8, 0.8333333333333334, 0.8666666666666667, 0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{',', 'n', '.', 'i', 's', ' ', 'd', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("01", new ProportionalProbability( new double[]{0.9652173913043478, 0.9695652173913043, 0.9739130434782608, 0.9782608695652173, 0.9826086956521738, 0.9869565217391303, 0.9913043478260868, 0.9956521739130433, 0.9999999999999998}, new char[]{'1', 'u', '.', 'm', 'e', 't', 'l', 'r', '2'}) );
        twoCharacterInputWithUnknownOutput.put(".o", new ProportionalProbability( new double[]{0.8125, 0.84375, 0.875, 0.90625, 0.9375, 0.96875, 1.0}, new char[]{'o', '-', 'p', 'b', ' ', '\"', 't'}) );
        twoCharacterInputWithUnknownOutput.put("/P", new ProportionalProbability( new double[]{0.9528301886792453, 0.9622641509433962, 0.9716981132075472, 0.9811320754716981, 0.9905660377358491, 1.0}, new char[]{'P', 'c', 'a', 't', 'h', ' '}) );
        twoCharacterInputWithUnknownOutput.put(".p", new ProportionalProbability( new double[]{0.8723404255319149, 0.8936170212765958, 0.9148936170212767, 0.9361702127659576, 0.9574468085106385, 0.9787234042553193, 1.0000000000000002}, new char[]{'.', 't', 'p', ' ', 's', 'r', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("02", new ProportionalProbability( new double[]{0.97, 0.98, 0.99, 1.0}, new char[]{'2', 'a', ' ', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("/Q", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'r', 'Q'}) );
        twoCharacterInputWithUnknownOutput.put("/R", new ProportionalProbability( new double[]{0.989247311827957, 1.0}, new char[]{'R', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("03", new ProportionalProbability( new double[]{0.9647058823529412, 0.9764705882352941, 0.988235294117647, 0.9999999999999999}, new char[]{'3', 'n', 'y', 't'}) );
        twoCharacterInputWithUnknownOutput.put("04", new ProportionalProbability( new double[]{0.9612403100775194, 0.9689922480620156, 0.9767441860465117, 0.9844961240310078, 0.992248062015504, 1.0}, new char[]{'4', '.', 't', 'e', 'd', '%'}) );
        twoCharacterInputWithUnknownOutput.put(".r", new ProportionalProbability( new double[]{0.8695652173913043, 0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'r', 'u', '.', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("/S", new ProportionalProbability( new double[]{0.9859154929577465, 1.0}, new char[]{'S', '/'}) );
        twoCharacterInputWithUnknownOutput.put("/T", new ProportionalProbability( new double[]{0.9834710743801653, 0.9917355371900827, 1.0}, new char[]{'T', ' ', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("05", new ProportionalProbability( new double[]{0.9821428571428571, 0.9910714285714285, 0.9999999999999999}, new char[]{'5', 'm', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(".s", new ProportionalProbability( new double[]{0.9523809523809523, 0.9682539682539681, 0.984126984126984, 0.9999999999999998}, new char[]{'s', 'r', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("06", new ProportionalProbability( new double[]{0.9420289855072463, 0.9565217391304347, 0.9710144927536231, 0.9855072463768114, 0.9999999999999998}, new char[]{'6', 'i', ' ', '8', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(".t", new ProportionalProbability( new double[]{0.855072463768116, 0.8695652173913043, 0.8840579710144927, 0.898550724637681, 0.9130434782608694, 0.9275362318840578, 0.9420289855072461, 0.9565217391304345, 0.9710144927536228, 0.9855072463768112, 0.9999999999999996}, new char[]{'t', '.', 'c', 'n', 'e', 'o', ' ', 'u', 'w', 'a', 's'}) );
        twoCharacterInputWithUnknownOutput.put("/V", new ProportionalProbability( new double[]{0.967741935483871, 1.0}, new char[]{'V', '/'}) );
        twoCharacterInputWithUnknownOutput.put("07", new ProportionalProbability( new double[]{0.9431818181818182, 0.9545454545454546, 0.9659090909090909, 0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{'7', ' ', 'm', 'n', 'U', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(".u", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'u', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("08", new ProportionalProbability( new double[]{0.9577464788732394, 0.9718309859154929, 0.9859154929577464, 0.9999999999999999}, new char[]{'8', 'r', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(".v", new ProportionalProbability( new double[]{0.75, 0.875, 1.0}, new char[]{'v', 'n', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("/W", new ProportionalProbability( new double[]{0.9375, 0.9583333333333334, 0.9791666666666667, 1.0}, new char[]{'t', 'W', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(".w", new ProportionalProbability( new double[]{0.8125, 0.84375, 0.875, 0.90625, 0.9375, 0.96875, 1.0}, new char[]{'w', 'r', 'a', '1', ' ', '2', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("09", new ProportionalProbability( new double[]{0.958904109589041, 0.9726027397260273, 0.9863013698630136, 1.0}, new char[]{'9', ' ', '5', '('}) );
        twoCharacterInputWithUnknownOutput.put(".x", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'h', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(".y", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{' ', 'e', '\''}) );
        twoCharacterInputWithUnknownOutput.put("0<", new ProportionalProbability( new double[]{0.9895366218236173, 0.9910313901345291, 0.9925261584454409, 0.9940209267563527, 0.9955156950672645, 0.9970104633781762, 0.998505231689088, 0.9999999999999998}, new char[]{' ', 'a', '<', 'δ', 'c', 'v', 'r', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("/[", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'[', '√'}) );
        twoCharacterInputWithUnknownOutput.put("\'œ", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'\'', 'œ'}) );
        twoCharacterInputWithUnknownOutput.put("1 ", new ProportionalProbability( new double[]{0.9790331974373908, 0.9796156086196856, 0.9801980198019803, 0.980780430984275, 0.9813628421665698, 0.9819452533488645, 0.9825276645311593, 0.983110075713454, 0.9836924868957487, 0.9842748980780435, 0.9848573092603382, 0.985439720442633, 0.9860221316249277, 0.9866045428072224, 0.9871869539895172, 0.9877693651718119, 0.9883517763541066, 0.9889341875364014, 0.9895165987186961, 0.9900990099009909, 0.9906814210832856, 0.9912638322655803, 0.9918462434478751, 0.9924286546301698, 0.9930110658124646, 0.9935934769947593, 0.994175888177054, 0.9947582993593488, 0.9953407105416435, 0.9959231217239383, 0.996505532906233, 0.9970879440885277, 0.9976703552708225, 0.9982527664531172, 0.998835177635412, 0.9994175888177067, 1.0000000000000013}, new char[]{' ', 'Q', 'L', 'e', '(', 'l', 'o', 'y', 'm', 'r', ',', 'p', 'c', '1', 'a', 't', ')', 'b', '5', '9', '.', '²', 'h', 'i', 'u', '|', '7', 'n', 'g', 'A', '<', '+', 'f', '¹', 's', '/', '2'}) );
        twoCharacterInputWithUnknownOutput.put("0?", new ProportionalProbability( new double[]{0.9459459459459459, 0.9594594594594594, 0.9729729729729729, 0.9864864864864864, 0.9999999999999999}, new char[]{' ', '?', 'l', 'e', 'h'}) );
        twoCharacterInputWithUnknownOutput.put(".}", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{'}', 'a', ' ', ','}) );
        twoCharacterInputWithUnknownOutput.put("/a", new ProportionalProbability( new double[]{0.9845397048489107, 0.9852424455375967, 0.9859451862262826, 0.9866479269149685, 0.9873506676036544, 0.9880534082923403, 0.9887561489810263, 0.9894588896697122, 0.9901616303583981, 0.990864371047084, 0.99156711173577, 0.9922698524244559, 0.9929725931131418, 0.9936753338018277, 0.9943780744905136, 0.9950808151791996, 0.9957835558678855, 0.9964862965565714, 0.9971890372452573, 0.9978917779339432, 0.9985945186226292, 0.9992972593113151, 1.0000000000000009}, new char[]{'/', 'a', 'e', 'ñ', 'h', 'c', 'n', 't', 'u', 's', 'j', 'r', '\"', 'i', 'v', '1', ' ', 'd', 'l', 'g', 'm', 'y', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("0B", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'d', ' ', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("/b", new ProportionalProbability( new double[]{0.9733656174334141, 0.9757869249394674, 0.9782082324455207, 0.980629539951574, 0.9830508474576273, 0.9854721549636806, 0.9878934624697339, 0.9903147699757872, 0.9927360774818405, 0.9951573849878937, 0.997578692493947, 1.0000000000000002}, new char[]{'r', 'e', 'b', ' ', 'o', 'w', '/', '.', 'n', 'd', 's', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("/c", new ProportionalProbability( new double[]{0.966131907308378, 0.9679144385026739, 0.9696969696969698, 0.9714795008912658, 0.9732620320855617, 0.9750445632798577, 0.9768270944741536, 0.9786096256684496, 0.9803921568627455, 0.9821746880570414, 0.9839572192513374, 0.9857397504456333, 0.9875222816399293, 0.9893048128342252, 0.9910873440285212, 0.9928698752228171, 0.994652406417113, 0.996434937611409, 0.9982174688057049, 1.0000000000000009}, new char[]{'/', 'c', 'p', 'f', 'e', 'l', 'x', 'i', 'o', 'r', 'a', 'n', 't', 'j', 's', 'm', '2', 'q', 'g', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("1%", new ProportionalProbability( new double[]{0.8611111111111112, 0.888888888888889, 0.9166666666666667, 0.9444444444444445, 0.9722222222222223, 1.0}, new char[]{'%', 't', 'a', ' ', 'e', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("0D", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'D', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("/d", new ProportionalProbability( new double[]{0.9849884526558892, 0.9861431870669747, 0.9872979214780602, 0.9884526558891457, 0.9896073903002311, 0.9907621247113166, 0.9919168591224021, 0.9930715935334876, 0.9942263279445731, 0.9953810623556586, 0.9965357967667441, 0.9976905311778296, 0.9988452655889151, 1.0000000000000004}, new char[]{'e', 'd', '/', 'r', 'i', 'f', 'o', ' ', 's', 'n', 'v', 'a', 'g', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("/e", new ProportionalProbability( new double[]{0.9789644012944984, 0.9805825242718447, 0.982200647249191, 0.9838187702265373, 0.9854368932038836, 0.9870550161812299, 0.9886731391585762, 0.9902912621359226, 0.9919093851132689, 0.9935275080906152, 0.9951456310679615, 0.9967637540453078, 0.9983818770226541, 1.0000000000000004}, new char[]{'/', 'e', 'u', 'w', 's', 'r', 'a', ' ', 'd', 'p', 'o', 'n', '\"', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("1\'", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'r', '\''}) );
        twoCharacterInputWithUnknownOutput.put("/f", new ProportionalProbability( new double[]{0.9722703639514731, 0.9740034662045061, 0.975736568457539, 0.9774696707105719, 0.9792027729636048, 0.9809358752166377, 0.9826689774696706, 0.9844020797227035, 0.9861351819757365, 0.9878682842287694, 0.9896013864818023, 0.9913344887348352, 0.9930675909878681, 0.994800693240901, 0.996533795493934, 0.9982668977469669, 0.9999999999999998}, new char[]{'/', 'f', 's', 'u', ' ', 'n', '\"', '(', 'r', 't', 'h', 'e', 'o', 'd', 'p', 'a', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("1)", new ProportionalProbability( new double[]{0.9772256728778468, 0.9782608695652174, 0.979296066252588, 0.9803312629399586, 0.9813664596273293, 0.9824016563146999, 0.9834368530020705, 0.9844720496894411, 0.9855072463768118, 0.9865424430641824, 0.987577639751553, 0.9886128364389236, 0.9896480331262942, 0.9906832298136649, 0.9917184265010355, 0.9927536231884061, 0.9937888198757767, 0.9948240165631473, 0.995859213250518, 0.9968944099378886, 0.9979296066252592, 0.9989648033126298, 1.0000000000000004}, new char[]{')', 'a', ' ', 'e', 'r', 'n', 't', 'x', 's', 'g', 'h', 'i', '(', 'o', 'p', '9', 'm', '1', '^', 'Z', 'π', 'd', '&'}) );
        twoCharacterInputWithUnknownOutput.put("/g", new ProportionalProbability( new double[]{0.9637305699481865, 0.9689119170984456, 0.9740932642487047, 0.9792746113989638, 0.9844559585492229, 0.9896373056994819, 0.994818652849741, 1.0}, new char[]{'g', '/', 'r', ' ', 'f', '.', 'l', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("/h", new ProportionalProbability( new double[]{0.9716981132075472, 0.9748427672955975, 0.9779874213836478, 0.9811320754716981, 0.9842767295597484, 0.9874213836477987, 0.9905660377358491, 0.9937106918238994, 0.9968553459119497, 1.0}, new char[]{'h', 'l', '/', 'e', 'o', 'r', ' ', 'i', 'n', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("1+", new ProportionalProbability( new double[]{0.9859154929577465, 0.9906103286384976, 0.9953051643192488, 0.9999999999999999}, new char[]{'+', '0', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("/i", new ProportionalProbability( new double[]{0.9733333333333334, 0.9777777777777779, 0.9822222222222223, 0.9866666666666668, 0.9911111111111113, 0.9955555555555557, 1.0000000000000002}, new char[]{'i', 't', '/', 'd', 'a', 'f', ' '}) );
        twoCharacterInputWithUnknownOutput.put("1,", new ProportionalProbability( new double[]{0.9634464751958225, 0.9660574412532638, 0.968668407310705, 0.9712793733681463, 0.9738903394255876, 0.9765013054830288, 0.9791122715404701, 0.9817232375979114, 0.9843342036553526, 0.9869451697127939, 0.9895561357702352, 0.9921671018276764, 0.9947780678851177, 0.997389033942559, 1.0000000000000002}, new char[]{',', '9', 'h', ' ', 'A', 'd', 'e', 'v', 'm', 'a', 't', '⊆', 'c', '(', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("/j", new ProportionalProbability( new double[]{0.9642857142857143, 0.9821428571428572, 1.0}, new char[]{'j', '/', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("1-", new ProportionalProbability( new double[]{0.9688473520249221, 0.9719626168224299, 0.9750778816199377, 0.9781931464174455, 0.9813084112149533, 0.9844236760124611, 0.9875389408099688, 0.9906542056074766, 0.9937694704049844, 0.9968847352024922, 1.0}, new char[]{'-', ' ', 'u', 'n', 'e', 'r', '2', 'f', '1', 'z', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("/k", new ProportionalProbability( new double[]{0.9876543209876543, 1.0}, new char[]{'k', '°'}) );
        twoCharacterInputWithUnknownOutput.put("1.", new ProportionalProbability( new double[]{0.9580745341614907, 0.9596273291925466, 0.9611801242236024, 0.9627329192546583, 0.9642857142857142, 0.9658385093167701, 0.9673913043478259, 0.9689440993788818, 0.9704968944099377, 0.9720496894409936, 0.9736024844720494, 0.9751552795031053, 0.9767080745341612, 0.9782608695652171, 0.979813664596273, 0.9813664596273288, 0.9829192546583847, 0.9844720496894406, 0.9860248447204965, 0.9875776397515523, 0.9891304347826082, 0.9906832298136641, 0.99223602484472, 0.9937888198757758, 0.9953416149068317, 0.9968944099378876, 0.9984472049689435, 0.9999999999999993}, new char[]{' ', 'p', '.', '-', 's', 'i', 't', 'e', 'n', 'c', 'a', 'y', 'o', 'd', 'u', 'f', 'r', '0', '^', 'h', 'l', 'b', 'P', 'x', 'A', '/', 'm', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("/l", new ProportionalProbability( new double[]{0.9714285714285714, 0.9742857142857143, 0.9771428571428572, 0.9800000000000001, 0.982857142857143, 0.9857142857142859, 0.9885714285714288, 0.9914285714285717, 0.9942857142857146, 0.9971428571428574, 1.0000000000000002}, new char[]{'e', 'l', 't', 'g', ' ', 'd', 'h', '/', 'p', 'f', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("1/", new ProportionalProbability( new double[]{0.9791883454734651, 0.9802289281997919, 0.9812695109261187, 0.9823100936524455, 0.9833506763787723, 0.9843912591050991, 0.9854318418314258, 0.9864724245577526, 0.9875130072840794, 0.9885535900104062, 0.989594172736733, 0.9906347554630598, 0.9916753381893866, 0.9927159209157134, 0.9937565036420402, 0.994797086368367, 0.9958376690946937, 0.9968782518210205, 0.9979188345473473, 0.9989594172736741, 1.0000000000000009}, new char[]{'/', ' ', 't', 'T', 'u', 's', 'a', 'x', ':', 'f', 'i', ')', '1', '=', 'o', 'r', '2', '\'', 'n', 'C', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("/m", new ProportionalProbability( new double[]{0.9553349875930521, 0.9578163771712159, 0.9602977667493797, 0.9627791563275435, 0.9652605459057073, 0.9677419354838711, 0.9702233250620349, 0.9727047146401987, 0.9751861042183625, 0.9776674937965263, 0.9801488833746901, 0.9826302729528539, 0.9851116625310177, 0.9875930521091815, 0.9900744416873453, 0.9925558312655091, 0.9950372208436729, 0.9975186104218366, 1.0000000000000004}, new char[]{'m', '\"', 'd', 'g', 'u', 'a', '=', 'i', 'c', 't', 'w', 'e', '.', '/', 'r', ' ', 'n', 's', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("10", new ProportionalProbability( new double[]{0.9825436408977556, 0.9831670822942643, 0.983790523690773, 0.9844139650872817, 0.9850374064837905, 0.9856608478802992, 0.9862842892768079, 0.9869077306733166, 0.9875311720698253, 0.988154613466334, 0.9887780548628428, 0.9894014962593515, 0.9900249376558602, 0.9906483790523689, 0.9912718204488776, 0.9918952618453863, 0.9925187032418951, 0.9931421446384038, 0.9937655860349125, 0.9943890274314212, 0.9950124688279299, 0.9956359102244386, 0.9962593516209474, 0.9968827930174561, 0.9975062344139648, 0.9981296758104735, 0.9987531172069822, 0.999376558603491, 0.9999999999999997}, new char[]{'0', 'e', 's', ' ', 'o', 'h', '(', 'm', 'l', 'p', 'r', 'v', '1', 't', 'B', 'y', 'K', 'w', 'a', '.', 'd', 'b', ',', 'q', 'f', 'u', 'i', '3', '%'}) );
        twoCharacterInputWithUnknownOutput.put("/n", new ProportionalProbability( new double[]{0.9643916913946587, 0.9673590504451038, 0.9703264094955489, 0.973293768545994, 0.9762611275964391, 0.9792284866468842, 0.9821958456973293, 0.9851632047477744, 0.9881305637982195, 0.9910979228486646, 0.9940652818991097, 0.9970326409495548, 0.9999999999999999}, new char[]{'/', 'n', 'l', 'r', 's', 'v', '(', ' ', '0', '1', 'd', 'o', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("11", new ProportionalProbability( new double[]{0.9672727272727273, 0.9709090909090909, 0.9745454545454546, 0.9781818181818183, 0.9818181818181819, 0.9854545454545456, 0.9890909090909092, 0.9927272727272729, 0.9963636363636366, 1.0000000000000002}, new char[]{'1', 'C', 'a', 'o', 'h', 'e', ' ', 'r', 'c', 's'}) );
        twoCharacterInputWithUnknownOutput.put("/o", new ProportionalProbability( new double[]{0.9701149425287356, 0.9724137931034483, 0.974712643678161, 0.9770114942528737, 0.9793103448275864, 0.9816091954022991, 0.9839080459770118, 0.9862068965517244, 0.9885057471264371, 0.9908045977011498, 0.9931034482758625, 0.9954022988505752, 0.9977011494252879, 1.0000000000000004}, new char[]{'e', 'o', 'i', 'a', 's', ' ', 'w', 'p', 'r', 't', 'g', '/', 'l', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("12", new ProportionalProbability( new double[]{0.9770992366412213, 0.9786259541984732, 0.9801526717557251, 0.9816793893129769, 0.9832061068702288, 0.9847328244274807, 0.9862595419847325, 0.9877862595419844, 0.9893129770992363, 0.9908396946564881, 0.99236641221374, 0.9938931297709919, 0.9954198473282437, 0.9969465648854956, 0.9984732824427475, 0.9999999999999993}, new char[]{'2', ' ', 'k', '.', 'c', 'a', 't', 'v', 's', 'e', 'o', 'r', 'b', ',', 'h', '-'}) );
        twoCharacterInputWithUnknownOutput.put("/p", new ProportionalProbability( new double[]{0.9772403982930299, 0.9786628733997155, 0.980085348506401, 0.9815078236130866, 0.9829302987197722, 0.9843527738264578, 0.9857752489331434, 0.987197724039829, 0.9886201991465146, 0.9900426742532001, 0.9914651493598857, 0.9928876244665713, 0.9943100995732569, 0.9957325746799425, 0.9971550497866281, 0.9985775248933136, 0.9999999999999992}, new char[]{'p', 's', 'c', 'e', 'd', '/', 'h', ' ', 't', 'o', 'n', 'm', 'u', 'i', 'r', 'a', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("13", new ProportionalProbability( new double[]{0.9657794676806084, 0.9695817490494297, 0.9733840304182511, 0.9771863117870724, 0.9809885931558937, 0.984790874524715, 0.9885931558935364, 0.9923954372623577, 0.996197718631179, 1.0000000000000002}, new char[]{'3', 'i', ' ', 'm', 't', 'p', 'b', 'o', 'g', '-'}) );
        twoCharacterInputWithUnknownOutput.put("/q", new ProportionalProbability( new double[]{0.925, 0.9500000000000001, 0.9750000000000001, 1.0}, new char[]{'q', '/', 's', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("14", new ProportionalProbability( new double[]{0.9697802197802198, 0.9725274725274725, 0.9752747252747253, 0.978021978021978, 0.9807692307692307, 0.9835164835164835, 0.9862637362637362, 0.9890109890109889, 0.9917582417582417, 0.9945054945054944, 0.9972527472527472, 0.9999999999999999}, new char[]{'4', 'a', '8', ' ', 'l', 'v', 'm', 'd', '\'', 'c', 'n', '9'}) );
        twoCharacterInputWithUnknownOutput.put("/r", new ProportionalProbability( new double[]{0.9704797047970479, 0.9741697416974169, 0.9778597785977858, 0.9815498154981548, 0.9852398523985237, 0.9889298892988927, 0.9926199261992616, 0.9963099630996306, 0.9999999999999996}, new char[]{'r', 'u', 'e', 'o', ' ', 't', 'i', 'h', 's'}) );
        twoCharacterInputWithUnknownOutput.put("/s", new ProportionalProbability( new double[]{0.9826589595375722, 0.9836223506743738, 0.9845857418111753, 0.9855491329479769, 0.9865125240847784, 0.98747591522158, 0.9884393063583815, 0.9894026974951831, 0.9903660886319846, 0.9913294797687862, 0.9922928709055877, 0.9932562620423893, 0.9942196531791908, 0.9951830443159924, 0.9961464354527939, 0.9971098265895955, 0.998073217726397, 0.9990366088631986, 1.0}, new char[]{'s', '/', 'h', 'y', 'e', 'd', 'o', 'c', '\"', 't', 'f', 'i', ' ', 'u', 'r', 'm', 'l', 'a', '['}) );
        twoCharacterInputWithUnknownOutput.put("15", new ProportionalProbability( new double[]{0.9749552772808586, 0.9767441860465116, 0.9785330948121646, 0.9803220035778175, 0.9821109123434705, 0.9838998211091234, 0.9856887298747764, 0.9874776386404294, 0.9892665474060823, 0.9910554561717353, 0.9928443649373883, 0.9946332737030412, 0.9964221824686942, 0.9982110912343471, 1.0}, new char[]{'5', 'a', 'y', '(', 'e', 'F', 'm', 'i', 'H', 'o', ' ', 't', 'h', 'l', '8'}) );
        twoCharacterInputWithUnknownOutput.put("16", new ProportionalProbability( new double[]{0.9834558823529411, 0.9852941176470588, 0.9871323529411764, 0.988970588235294, 0.9908088235294117, 0.9926470588235293, 0.994485294117647, 0.9963235294117646, 0.9981617647058822, 0.9999999999999999}, new char[]{'6', ' ', 'h', '4', 'r', '^', 't', 'g', 'f', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("/t", new ProportionalProbability( new double[]{0.974308300395257, 0.9762845849802372, 0.9782608695652174, 0.9802371541501976, 0.9822134387351779, 0.9841897233201581, 0.9861660079051383, 0.9881422924901185, 0.9901185770750988, 0.992094861660079, 0.9940711462450592, 0.9960474308300394, 0.9980237154150197, 0.9999999999999999}, new char[]{'t', 'h', 'l', 'g', 'a', 'f', 'e', 's', 'i', 'o', '/', ' ', 'p', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("17", new ProportionalProbability( new double[]{0.988031914893617, 0.9893617021276595, 0.990691489361702, 0.9920212765957446, 0.9933510638297871, 0.9946808510638296, 0.9960106382978722, 0.9973404255319147, 0.9986702127659572, 0.9999999999999998}, new char[]{'7', ' ', 'e', 't', 'o', 'u', 'i', 's', '.', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("/u", new ProportionalProbability( new double[]{0.9494949494949495, 0.9595959595959596, 0.9696969696969696, 0.9797979797979797, 0.9898989898989897, 0.9999999999999998}, new char[]{'u', 'l', 'a', '/', 'r', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("0V", new ProportionalProbability( new double[]{0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'r', ' ', 'i', 'V'}) );
        twoCharacterInputWithUnknownOutput.put("18", new ProportionalProbability( new double[]{0.9880728185812931, 0.9887005649717514, 0.9893283113622097, 0.9899560577526679, 0.9905838041431262, 0.9912115505335845, 0.9918392969240427, 0.992467043314501, 0.9930947897049592, 0.9937225360954175, 0.9943502824858758, 0.994978028876334, 0.9956057752667923, 0.9962335216572505, 0.9968612680477088, 0.9974890144381671, 0.9981167608286253, 0.9987445072190836, 0.9993722536095418, 1.0}, new char[]{'8', 'i', 'p', 'd', 't', ':', ' ', 'r', 's', 'c', 'b', 'l', '2', 'n', 'o', 'g', 'h', 'u', 'e', '1'}) );
        twoCharacterInputWithUnknownOutput.put("/v", new ProportionalProbability( new double[]{0.9649122807017544, 0.9736842105263158, 0.9824561403508772, 0.9912280701754387, 1.0}, new char[]{'v', '/', 'u', 'r', 's'}) );
        twoCharacterInputWithUnknownOutput.put("19", new ProportionalProbability( new double[]{0.9899827288428324, 0.9903281519861831, 0.9906735751295337, 0.9910189982728843, 0.9913644214162349, 0.9917098445595856, 0.9920552677029362, 0.9924006908462868, 0.9927461139896374, 0.993091537132988, 0.9934369602763387, 0.9937823834196893, 0.9941278065630399, 0.9944732297063905, 0.9948186528497411, 0.9951640759930918, 0.9955094991364424, 0.995854922279793, 0.9962003454231436, 0.9965457685664942, 0.9968911917098449, 0.9972366148531955, 0.9975820379965461, 0.9979274611398967, 0.9982728842832473, 0.998618307426598, 0.9989637305699486, 0.9993091537132992, 0.9996545768566498, 1.0000000000000004}, new char[]{'9', 'n', 'o', 'y', 't', ',', 'l', 'u', ' ', 'h', 's', 'w', 'e', 'a', 'c', 'm', 'r', '5', 'H', 'i', 'I', '.', 'R', 'p', 'k', 'd', '3', ':', 'B', '2'}) );
        twoCharacterInputWithUnknownOutput.put("/w", new ProportionalProbability( new double[]{0.9684684684684685, 0.9729729729729729, 0.9774774774774774, 0.9819819819819818, 0.9864864864864863, 0.9909909909909907, 0.9954954954954952, 0.9999999999999997}, new char[]{'l', ' ', 'e', 'w', 'a', 'p', 't', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("/y", new ProportionalProbability( new double[]{0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'y', 'l', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("1<", new ProportionalProbability( new double[]{0.9905956112852664, 0.9921630094043886, 0.9937304075235108, 0.995297805642633, 0.9968652037617552, 0.9984326018808775, 0.9999999999999997}, new char[]{' ', 'h', 'e', '<', '=', 'd', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("0^", new ProportionalProbability( new double[]{0.9854368932038835, 0.9902912621359223, 0.9951456310679612, 1.0}, new char[]{'^', 'o', 's', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("2 ", new ProportionalProbability( new double[]{0.9836979836979837, 0.9841269841269841, 0.9845559845559845, 0.9849849849849849, 0.9854139854139853, 0.9858429858429857, 0.9862719862719861, 0.9867009867009865, 0.9871299871299869, 0.9875589875589873, 0.9879879879879877, 0.9884169884169881, 0.9888459888459885, 0.9892749892749889, 0.9897039897039893, 0.9901329901329897, 0.9905619905619901, 0.9909909909909905, 0.9914199914199909, 0.9918489918489913, 0.9922779922779917, 0.9927069927069921, 0.9931359931359925, 0.993564993564993, 0.9939939939939934, 0.9944229944229938, 0.9948519948519942, 0.9952809952809946, 0.995709995709995, 0.9961389961389954, 0.9965679965679958, 0.9969969969969962, 0.9974259974259966, 0.997854997854997, 0.9982839982839974, 0.9987129987129978, 0.9991419991419982, 0.9995709995709986, 0.999999999999999}, new char[]{' ', 'e', 'b', 'i', 'r', '2', 't', 'a', '.', 'o', 's', 'O', '=', 'k', 'N', 'I', 'd', 'y', ',', 'm', 'c', 'w', ')', 'l', '0', '(', 'x', '8', 'n', 'f', 'H', ':', 'v', 'h', 'g', '-', 'u', 'P', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("1?", new ProportionalProbability( new double[]{0.9142857142857143, 0.9285714285714285, 0.9428571428571427, 0.957142857142857, 0.9714285714285712, 0.9857142857142854, 0.9999999999999997}, new char[]{'u', '?', ' ', 'a', 'h', 't', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("0c", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'c', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("2%", new ProportionalProbability( new double[]{0.9428571428571428, 0.9571428571428571, 0.9714285714285713, 0.9857142857142855, 0.9999999999999998}, new char[]{'-', '%', 'n', ')', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("0d", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'d', 'p', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("2(", new ProportionalProbability( new double[]{0.9735449735449735, 0.9788359788359788, 0.9841269841269842, 0.9894179894179895, 0.9947089947089949, 1.0000000000000002}, new char[]{'(', ' ', 'a', '2', '.', '∞'}) );
        twoCharacterInputWithUnknownOutput.put("2)", new ProportionalProbability( new double[]{0.9797077922077922, 0.9805194805194806, 0.9813311688311689, 0.9821428571428572, 0.9829545454545455, 0.9837662337662338, 0.9845779220779222, 0.9853896103896105, 0.9862012987012988, 0.9870129870129871, 0.9878246753246754, 0.9886363636363638, 0.9894480519480521, 0.9902597402597404, 0.9910714285714287, 0.991883116883117, 0.9926948051948054, 0.9935064935064937, 0.994318181818182, 0.9951298701298703, 0.9959415584415586, 0.996753246753247, 0.9975649350649353, 0.9983766233766236, 0.9991883116883119, 1.0000000000000002}, new char[]{')', 'n', 'a', 'h', 'W', 'T', 'i', 's', 'c', 'e', ' ', 'v', 'w', 'M', 'y', 't', 'F', 'm', 'l', '(', 'o', 'd', 'P', '2', 'r', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("2+", new ProportionalProbability( new double[]{0.96, 0.965, 0.97, 0.975, 0.98, 0.985, 0.99, 0.995, 1.0}, new char[]{'+', 'g', 'D', 'b', 'n', 'h', 'O', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put("2,", new ProportionalProbability( new double[]{0.9658792650918635, 0.968503937007874, 0.9711286089238844, 0.9737532808398949, 0.9763779527559053, 0.9790026246719158, 0.9816272965879262, 0.9842519685039367, 0.9868766404199472, 0.9895013123359576, 0.9921259842519681, 0.9947506561679785, 0.997375328083989, 0.9999999999999994}, new char[]{',', ' ', '2', ')', 'n', '0', 'd', '_', '6', 'o', '(', 'i', 's', 't'}) );
        twoCharacterInputWithUnknownOutput.put("2-", new ProportionalProbability( new double[]{0.9835526315789473, 0.9868421052631579, 0.9901315789473684, 0.9934210526315789, 0.9967105263157894, 0.9999999999999999}, new char[]{'-', 'a', 'm', '1', 'y', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("0k", new ProportionalProbability( new double[]{0.88, 0.92, 0.9600000000000001, 1.0}, new char[]{'k', 's', 'x', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("2.", new ProportionalProbability( new double[]{0.9607843137254902, 0.9622926093514329, 0.9638009049773756, 0.9653092006033183, 0.9668174962292609, 0.9683257918552036, 0.9698340874811463, 0.971342383107089, 0.9728506787330317, 0.9743589743589743, 0.975867269984917, 0.9773755656108597, 0.9788838612368024, 0.9803921568627451, 0.9819004524886877, 0.9834087481146304, 0.9849170437405731, 0.9864253393665158, 0.9879336349924585, 0.9894419306184011, 0.9909502262443438, 0.9924585218702865, 0.9939668174962292, 0.9954751131221719, 0.9969834087481145, 0.9984917043740572, 0.9999999999999999}, new char[]{'o', 'd', '.', '-', 's', 'h', 'r', 'i', 't', 'g', 'a', 'n', '→', ' ', 'u', 'e', 'p', 'U', 'C', '3', 'P', 'w', 'A', 'c', 'f', 'l', '2'}) );
        twoCharacterInputWithUnknownOutput.put("2/", new ProportionalProbability( new double[]{0.9844961240310077, 0.9883720930232558, 0.9922480620155039, 0.9961240310077519, 1.0}, new char[]{'/', 'c', 'a', 'b', ' '}) );
        twoCharacterInputWithUnknownOutput.put("0m", new ProportionalProbability( new double[]{0.9230769230769231, 0.9384615384615385, 0.9538461538461538, 0.9692307692307691, 0.9846153846153844, 0.9999999999999998}, new char[]{'m', ' ', 'o', 'e', 'p', 't'}) );
        twoCharacterInputWithUnknownOutput.put("20", new ProportionalProbability( new double[]{0.9705882352941176, 0.9718670076726342, 0.9731457800511508, 0.9744245524296674, 0.975703324808184, 0.9769820971867006, 0.9782608695652172, 0.9795396419437338, 0.9808184143222504, 0.982097186700767, 0.9833759590792835, 0.9846547314578001, 0.9859335038363167, 0.9872122762148333, 0.9884910485933499, 0.9897698209718665, 0.9910485933503831, 0.9923273657288997, 0.9936061381074163, 0.9948849104859329, 0.9961636828644495, 0.997442455242966, 0.9987212276214826, 0.9999999999999992}, new char[]{'0', 't', 'i', 'o', ' ', 'r', 'y', '4', '6', '9', '1', 'n', 'm', 'c', '7', 'e', 'u', 'a', 'l', 's', 'k', 'd', 'I', '5'}) );
        twoCharacterInputWithUnknownOutput.put("0n", new ProportionalProbability( new double[]{0.8, 1.0}, new char[]{'a', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("21", new ProportionalProbability( new double[]{0.9752475247524752, 0.9801980198019802, 0.9851485148514851, 0.9900990099009901, 0.995049504950495, 1.0}, new char[]{'1', ' ', 't', 'r', 'e', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("22", new ProportionalProbability( new double[]{0.9635416666666666, 0.96875, 0.9739583333333334, 0.9791666666666667, 0.9843750000000001, 0.9895833333333335, 0.9947916666666669, 1.0000000000000002}, new char[]{'2', 'r', 'n', '6', '0', 's', 't', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("23", new ProportionalProbability( new double[]{0.9593908629441624, 0.9644670050761421, 0.9695431472081218, 0.9746192893401016, 0.9796954314720813, 0.984771573604061, 0.9898477157360407, 0.9949238578680204, 1.0}, new char[]{'3', 'n', ' ', 'p', 'm', 's', 'u', 'c', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("24", new ProportionalProbability( new double[]{0.9711934156378601, 0.9753086419753086, 0.9794238683127572, 0.9835390946502057, 0.9876543209876543, 0.9917695473251028, 0.9958847736625513, 0.9999999999999999}, new char[]{'4', '1', 'y', 'r', 'C', 'c', 'w', '^'}) );
        twoCharacterInputWithUnknownOutput.put("0s", new ProportionalProbability( new double[]{0.9866071428571429, 0.9888392857142858, 0.9910714285714287, 0.9933035714285716, 0.9955357142857145, 0.9977678571428574, 1.0000000000000002}, new char[]{'s', 't', ' ', 'h', '-', 'c', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("25", new ProportionalProbability( new double[]{0.9633333333333334, 0.9666666666666667, 0.97, 0.9733333333333333, 0.9766666666666666, 0.9799999999999999, 0.9833333333333332, 0.9866666666666665, 0.9899999999999998, 0.9933333333333331, 0.9966666666666664, 0.9999999999999997}, new char[]{'5', ' ', 'c', 'm', 'o', 't', 'l', 'e', ':', 'n', '.', '1'}) );
        twoCharacterInputWithUnknownOutput.put("26", new ProportionalProbability( new double[]{0.972972972972973, 0.981981981981982, 0.9909909909909911, 1.0}, new char[]{'6', ' ', '1', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("0t", new ProportionalProbability( new double[]{0.9651162790697675, 0.9767441860465117, 0.9883720930232559, 1.0}, new char[]{'t', 'y', 'a', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("27", new ProportionalProbability( new double[]{0.9709302325581395, 0.9767441860465116, 0.9825581395348837, 0.9883720930232558, 0.9941860465116279, 1.0}, new char[]{'7', 'm', 'l', 'f', '1', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("1V", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'V', '/'}) );
        twoCharacterInputWithUnknownOutput.put("28", new ProportionalProbability( new double[]{0.9734513274336283, 0.9823008849557522, 0.9911504424778761, 1.0}, new char[]{'8', '2', 'e', 's'}) );
        twoCharacterInputWithUnknownOutput.put("29", new ProportionalProbability( new double[]{0.9775280898876404, 0.9887640449438202, 1.0}, new char[]{'9', 's', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("2:", new ProportionalProbability( new double[]{0.9508196721311475, 0.9672131147540983, 0.9836065573770492, 1.0}, new char[]{':', 't', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put("0x", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'x', 's'}) );
        twoCharacterInputWithUnknownOutput.put("2<", new ProportionalProbability( new double[]{0.9937565036420395, 0.9947970863683663, 0.9958376690946931, 0.9968782518210199, 0.9979188345473466, 0.9989594172736734, 1.0000000000000002}, new char[]{' ', 'e', '<', '=', 'i', 'a', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("2=", new ProportionalProbability( new double[]{0.9651162790697675, 0.9767441860465117, 0.9883720930232559, 1.0}, new char[]{'=', '-', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("1]", new ProportionalProbability( new double[]{0.98, 1.0}, new char[]{']', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("3 ", new ProportionalProbability( new double[]{0.9816576086956522, 0.9823369565217391, 0.983016304347826, 0.983695652173913, 0.9843749999999999, 0.9850543478260868, 0.9857336956521737, 0.9864130434782606, 0.9870923913043476, 0.9877717391304345, 0.9884510869565214, 0.9891304347826083, 0.9898097826086952, 0.9904891304347822, 0.9911684782608691, 0.991847826086956, 0.9925271739130429, 0.9932065217391298, 0.9938858695652167, 0.9945652173913037, 0.9952445652173906, 0.9959239130434775, 0.9966032608695644, 0.9972826086956513, 0.9979619565217382, 0.9986413043478252, 0.9993206521739121, 0.999999999999999}, new char[]{' ', 'r', ')', 'K', 'e', 'n', 'c', 'f', 'i', 'a', 't', 'l', 'o', 's', 'd', ',', 'u', 'm', '2', 'y', 'p', '-', 'w', 'v', 'g', '/', 'b', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("2?", new ProportionalProbability( new double[]{0.9137931034482759, 0.9224137931034483, 0.9310344827586207, 0.939655172413793, 0.9482758620689654, 0.9568965517241378, 0.9655172413793102, 0.9741379310344825, 0.9827586206896549, 0.9913793103448273, 0.9999999999999997}, new char[]{'?', 'c', 't', 'd', 'l', 'I', ' ', 'm', '-', 'e', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("1^", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'^', 'u', '/'}) );
        twoCharacterInputWithUnknownOutput.put("2B", new ProportionalProbability( new double[]{0.9, 0.925, 0.9500000000000001, 0.9750000000000001, 1.0}, new char[]{'B', 'o', 's', 'h', ' '}) );
        twoCharacterInputWithUnknownOutput.put("2C", new ProportionalProbability( new double[]{0.9642857142857143, 0.9821428571428572, 1.0}, new char[]{'C', '↔', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("3%", new ProportionalProbability( new double[]{0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{'%', 'c', ' '}) );
        twoCharacterInputWithUnknownOutput.put("3(", new ProportionalProbability( new double[]{0.9814814814814815, 1.0}, new char[]{'(', ' '}) );
        twoCharacterInputWithUnknownOutput.put("3)", new ProportionalProbability( new double[]{0.952191235059761, 0.954183266932271, 0.9561752988047809, 0.9581673306772909, 0.9601593625498008, 0.9621513944223108, 0.9641434262948207, 0.9661354581673307, 0.9681274900398407, 0.9701195219123506, 0.9721115537848606, 0.9741035856573705, 0.9760956175298805, 0.9780876494023905, 0.9800796812749004, 0.9820717131474104, 0.9840637450199203, 0.9860557768924303, 0.9880478087649402, 0.9900398406374502, 0.9920318725099602, 0.9940239043824701, 0.9960159362549801, 0.99800796812749, 1.0}, new char[]{')', 'w', 'a', 'v', 'R', ' ', 't', '∞', 'b', 'y', 'h', 'd', 'n', 'm', 'f', 's', 'o', 'e', 'c', 'l', 'i', 'r', '(', 'g', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("2H", new ProportionalProbability( new double[]{0.8923076923076924, 0.9076923076923078, 0.9230769230769231, 0.9384615384615385, 0.9538461538461538, 0.9692307692307691, 0.9846153846153844, 0.9999999999999998}, new char[]{'H', ' ', 'h', '+', '\"', '→', 'I', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("1g", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'h', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("3,", new ProportionalProbability( new double[]{0.964824120603015, 0.9698492462311558, 0.9748743718592965, 0.9798994974874372, 0.9849246231155779, 0.9899497487437187, 0.9949748743718594, 1.0}, new char[]{',', 'l', 'n', '1', '=', ' ', 'u', 's'}) );
        twoCharacterInputWithUnknownOutput.put("3-", new ProportionalProbability( new double[]{0.9681818181818181, 0.9727272727272727, 0.9772727272727272, 0.9818181818181817, 0.9863636363636362, 0.9909090909090907, 0.9954545454545453, 0.9999999999999998}, new char[]{'-', 's', 'e', 'o', 'p', ' ', 'l', '4'}) );
        twoCharacterInputWithUnknownOutput.put("1k", new ProportionalProbability( new double[]{0.9375, 0.96875, 1.0}, new char[]{'k', 't', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("3.", new ProportionalProbability( new double[]{0.95, 0.9523809523809523, 0.9547619047619047, 0.9571428571428571, 0.9595238095238094, 0.9619047619047618, 0.9642857142857142, 0.9666666666666666, 0.9690476190476189, 0.9714285714285713, 0.9738095238095237, 0.976190476190476, 0.9785714285714284, 0.9809523809523808, 0.9833333333333332, 0.9857142857142855, 0.9880952380952379, 0.9904761904761903, 0.9928571428571427, 0.995238095238095, 0.9976190476190474, 0.9999999999999998}, new char[]{'d', 'e', '.', ' ', 'w', '4', 'o', 'i', 't', 'n', 's', 'p', 'u', 'r', 'l', 'm', 'f', 'a', 'g', ',', 'K', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("2N", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{'N', '→', 'D', '6'}) );
        twoCharacterInputWithUnknownOutput.put("1m", new ProportionalProbability( new double[]{0.8974358974358975, 0.9230769230769231, 0.9487179487179488, 0.9743589743589745, 1.0}, new char[]{'m', 'n', 'a', 's', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("3/", new ProportionalProbability( new double[]{0.9855072463768116, 0.9903381642512078, 0.995169082125604, 1.0}, new char[]{'/', ' ', 'y', '.'}) );
        twoCharacterInputWithUnknownOutput.put("30", new ProportionalProbability( new double[]{0.9717171717171718, 0.9737373737373738, 0.9757575757575758, 0.9777777777777779, 0.9797979797979799, 0.9818181818181819, 0.983838383838384, 0.985858585858586, 0.987878787878788, 0.9898989898989901, 0.9919191919191921, 0.9939393939393941, 0.9959595959595962, 0.9979797979797982, 1.0000000000000002}, new char[]{'0', 'a', ' ', '4', 'i', 'O', 'c', 'n', 'l', '.', 's', 'r', 'w', 'M', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("2O", new ProportionalProbability( new double[]{0.948051948051948, 0.9545454545454545, 0.9610389610389609, 0.9675324675324674, 0.9740259740259738, 0.9805194805194802, 0.9870129870129867, 0.9935064935064931, 0.9999999999999996}, new char[]{'O', 't', 'h', ' ', 'H', 'u', '2', '+', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("-ê", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'-', 'ê'}) );
        twoCharacterInputWithUnknownOutput.put("1n", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'n', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("31", new ProportionalProbability( new double[]{0.9659090909090909, 0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{'1', '8', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("32", new ProportionalProbability( new double[]{0.9763313609467456, 0.9822485207100592, 0.9881656804733728, 0.9940828402366865, 1.0}, new char[]{'2', ' ', 'a', 'c', 't'}) );
        twoCharacterInputWithUnknownOutput.put("33", new ProportionalProbability( new double[]{0.9748427672955975, 0.9811320754716981, 0.9874213836477987, 0.9937106918238994, 1.0}, new char[]{'3', 's', 'n', 'e', ' '}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart4(){
        twoCharacterInputWithUnknownOutput.put("34", new ProportionalProbability( new double[]{0.968421052631579, 0.9789473684210527, 0.9894736842105264, 1.0}, new char[]{'4', 'd', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put("2S", new ProportionalProbability( new double[]{0.956989247311828, 0.967741935483871, 0.978494623655914, 0.989247311827957, 1.0}, new char[]{'S', '4', ' ', 'H', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("35", new ProportionalProbability( new double[]{0.9470588235294117, 0.9529411764705882, 0.9588235294117646, 0.9647058823529411, 0.9705882352941175, 0.976470588235294, 0.9823529411764704, 0.9882352941176469, 0.9941176470588233, 0.9999999999999998}, new char[]{'5', 'a', 'm', ' ', '1', 'i', 'd', 'g', 'n', 't'}) );
        twoCharacterInputWithUnknownOutput.put("1s", new ProportionalProbability( new double[]{0.9644268774703557, 0.9683794466403162, 0.9723320158102766, 0.9762845849802371, 0.9802371541501975, 0.984189723320158, 0.9881422924901184, 0.9920948616600789, 0.9960474308300393, 0.9999999999999998}, new char[]{'s', 'c', ' ', 'n', 'r', 't', 'e', 'o', 'i', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("36", new ProportionalProbability( new double[]{0.9728682170542635, 0.9767441860465116, 0.9806201550387597, 0.9844961240310077, 0.9883720930232558, 0.9922480620155039, 0.9961240310077519, 1.0}, new char[]{'6', '0', 'b', ' ', 'n', '2', 'i', 's'}) );
        twoCharacterInputWithUnknownOutput.put("37", new ProportionalProbability( new double[]{0.9523809523809523, 0.9603174603174602, 0.9682539682539681, 0.976190476190476, 0.984126984126984, 0.9920634920634919, 0.9999999999999998}, new char[]{'t', '7', '.', ' ', 'H', 'p', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("38", new ProportionalProbability( new double[]{0.9716981132075472, 0.9811320754716981, 0.9905660377358491, 1.0}, new char[]{'8', ' ', 'w', '4'}) );
        twoCharacterInputWithUnknownOutput.put("39", new ProportionalProbability( new double[]{0.984375, 0.9921875, 1.0}, new char[]{'9', 'e', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("1x", new ProportionalProbability( new double[]{0.9767441860465116, 1.0}, new char[]{'x', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("3<", new ProportionalProbability( new double[]{0.9897959183673469, 0.9914965986394557, 0.9931972789115645, 0.9948979591836733, 0.9965986394557821, 0.9982993197278909, 0.9999999999999997}, new char[]{' ', 'a', '3', 'r', 'e', '<', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("2]", new ProportionalProbability( new double[]{0.9090909090909091, 0.9318181818181818, 0.9545454545454545, 0.9772727272727272, 0.9999999999999999}, new char[]{']', 't', 'α', '1', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("4 ", new ProportionalProbability( new double[]{0.9762122598353157, 0.9771271729185728, 0.9780420860018298, 0.9789569990850869, 0.979871912168344, 0.9807868252516011, 0.9817017383348582, 0.9826166514181153, 0.9835315645013724, 0.9844464775846294, 0.9853613906678865, 0.9862763037511436, 0.9871912168344007, 0.9881061299176578, 0.9890210430009149, 0.989935956084172, 0.990850869167429, 0.9917657822506861, 0.9926806953339432, 0.9935956084172003, 0.9945105215004574, 0.9954254345837145, 0.9963403476669715, 0.9972552607502286, 0.9981701738334857, 0.9990850869167428, 0.9999999999999999}, new char[]{' ', '2', 'm', 'o', 'G', 't', 'r', 'e', 's', 'p', 'l', 'd', 'a', 'i', 'u', '1', 'h', 'c', 'R', 'n', 'w', ')', ',', 'b', 'y', 'H', '4'}) );
        twoCharacterInputWithUnknownOutput.put("3?", new ProportionalProbability( new double[]{0.8860759493670886, 0.8987341772151898, 0.911392405063291, 0.9240506329113922, 0.9367088607594934, 0.9493670886075947, 0.9620253164556959, 0.9746835443037971, 0.9873417721518983, 0.9999999999999996}, new char[]{' ', '?', 'e', 'r', 't', '.', 'f', 'w', 'd', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("2^", new ProportionalProbability( new double[]{0.9705882352941176, 1.0}, new char[]{'^', '2'}) );
        twoCharacterInputWithUnknownOutput.put("2a", new ProportionalProbability( new double[]{0.918918918918919, 0.9324324324324325, 0.9459459459459459, 0.9594594594594594, 0.9729729729729729, 0.9864864864864864, 0.9999999999999999}, new char[]{'a', ')', '2', '4', 'd', '(', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("3B", new ProportionalProbability( new double[]{0.9629629629629629, 1.0}, new char[]{'B', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("4%", new ProportionalProbability( new double[]{0.8936170212765957, 0.9148936170212766, 0.9361702127659575, 0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{'%', 'w', 'o', 'e', 'p', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("2c", new ProportionalProbability( new double[]{0.921875, 0.9375, 0.953125, 0.96875, 0.984375, 1.0}, new char[]{'c', '1', ' ', 'i', 'e', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("3D", new ProportionalProbability( new double[]{0.9411764705882353, 0.9529411764705882, 0.9647058823529411, 0.976470588235294, 0.9882352941176469, 0.9999999999999998}, new char[]{' ', 'a', 'D', 'n', 'm', 't'}) );
        twoCharacterInputWithUnknownOutput.put("2e", new ProportionalProbability( new double[]{0.7857142857142857, 0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'l', 't', 'h', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("4(", new ProportionalProbability( new double[]{0.9285714285714286, 0.9642857142857143, 1.0}, new char[]{'(', ' ', '0'}) );
        twoCharacterInputWithUnknownOutput.put("4)", new ProportionalProbability( new double[]{0.9634551495016611, 0.9667774086378738, 0.9700996677740864, 0.973421926910299, 0.9767441860465117, 0.9800664451827243, 0.983388704318937, 0.9867109634551496, 0.9900332225913623, 0.9933554817275749, 0.9966777408637876, 1.0000000000000002}, new char[]{')', 'C', 'a', 'n', 'g', '(', ' ', '+', 't', 'e', 'h', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("3H", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'H', '\"', ' '}) );
        twoCharacterInputWithUnknownOutput.put("2g", new ProportionalProbability( new double[]{0.9, 0.9500000000000001, 1.0}, new char[]{'g', 'a', '1'}) );
        twoCharacterInputWithUnknownOutput.put("4,", new ProportionalProbability( new double[]{0.9731182795698925, 0.978494623655914, 0.9838709677419355, 0.989247311827957, 0.9946236559139785, 1.0}, new char[]{',', 'e', ' ', 't', 'y', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("4-", new ProportionalProbability( new double[]{0.9836065573770492, 0.9918032786885246, 1.0}, new char[]{'-', ' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("4.", new ProportionalProbability( new double[]{0.9535603715170279, 0.9566563467492261, 0.9597523219814242, 0.9628482972136224, 0.9659442724458206, 0.9690402476780188, 0.972136222910217, 0.9752321981424151, 0.9783281733746133, 0.9814241486068115, 0.9845201238390097, 0.9876160990712078, 0.990712074303406, 0.9938080495356042, 0.9969040247678024, 1.0000000000000004}, new char[]{'s', 'm', '.', ' ', 'f', 'H', '(', 't', 'i', 'o', 'n', 'r', 'e', 'a', 'h', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("4/", new ProportionalProbability( new double[]{0.9722222222222222, 0.986111111111111, 0.9999999999999999}, new char[]{'/', 'c', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("2m", new ProportionalProbability( new double[]{0.967741935483871, 1.0}, new char[]{'m', '2'}) );
        twoCharacterInputWithUnknownOutput.put("40", new ProportionalProbability( new double[]{0.9728915662650602, 0.9759036144578314, 0.9789156626506025, 0.9819277108433736, 0.9849397590361447, 0.9879518072289158, 0.990963855421687, 0.9939759036144581, 0.9969879518072292, 1.0000000000000002}, new char[]{'e', '0', ' ', 'n', 'p', 'o', 'r', 's', 'i', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("2n", new ProportionalProbability( new double[]{0.967741935483871, 0.9706744868035191, 0.9736070381231672, 0.9765395894428153, 0.9794721407624634, 0.9824046920821115, 0.9853372434017595, 0.9882697947214076, 0.9912023460410557, 0.9941348973607038, 0.9970674486803519, 1.0}, new char[]{'t', 'n', '-', 'i', 'a', ' ', 's', 'w', 'e', '2', 'r', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("41", new ProportionalProbability( new double[]{0.9846153846153847, 0.9923076923076923, 1.0}, new char[]{'1', 't', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("42", new ProportionalProbability( new double[]{0.9484536082474226, 0.9587628865979381, 0.9690721649484535, 0.9793814432989689, 0.9896907216494844, 0.9999999999999998}, new char[]{'2', 'e', 't', 'l', ' ', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("2p", new ProportionalProbability( new double[]{0.9615384615384616, 0.9807692307692308, 1.0}, new char[]{'p', 'v', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("43", new ProportionalProbability( new double[]{0.9428571428571428, 0.9571428571428571, 0.9714285714285713, 0.9857142857142855, 0.9999999999999998}, new char[]{'3', 'e', '1', 'r', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("0°", new ProportionalProbability( new double[]{0.9706666666666667, 0.9733333333333334, 0.9760000000000001, 0.9786666666666668, 0.9813333333333335, 0.9840000000000002, 0.9866666666666669, 0.9893333333333336, 0.9920000000000003, 0.994666666666667, 0.9973333333333337, 1.0000000000000004}, new char[]{'°', ' ', 'c', 'n', 'g', 'i', 'K', 'b', 'r', 'a', 'o', 't'}) );
        twoCharacterInputWithUnknownOutput.put("44", new ProportionalProbability( new double[]{0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'4', 'e', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("45", new ProportionalProbability( new double[]{0.9661016949152542, 0.9694915254237287, 0.9728813559322033, 0.9762711864406778, 0.9796610169491523, 0.9830508474576268, 0.9864406779661014, 0.9898305084745759, 0.9932203389830504, 0.9966101694915249, 0.9999999999999994}, new char[]{'5', '(', 'm', ' ', 'h', 'i', 'd', '3', ',', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("2s", new ProportionalProbability( new double[]{0.9875, 1.0}, new char[]{'s', ' '}) );
        twoCharacterInputWithUnknownOutput.put("2t", new ProportionalProbability( new double[]{0.975, 1.0}, new char[]{'t', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("46", new ProportionalProbability( new double[]{0.968421052631579, 0.9789473684210527, 0.9894736842105264, 1.0}, new char[]{'6', 'n', 'r', ' '}) );
        twoCharacterInputWithUnknownOutput.put("47", new ProportionalProbability( new double[]{0.981651376146789, 0.9908256880733946, 1.0}, new char[]{'7', 'l', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("48", new ProportionalProbability( new double[]{0.9826086956521739, 0.9913043478260869, 0.9999999999999999}, new char[]{'8', 's', ' '}) );
        twoCharacterInputWithUnknownOutput.put("49", new ProportionalProbability( new double[]{0.9464285714285714, 0.9553571428571428, 0.9642857142857142, 0.9732142857142856, 0.982142857142857, 0.9910714285714284, 0.9999999999999998}, new char[]{'9', 'm', 'e', '(', 'a', 'c', 's'}) );
        twoCharacterInputWithUnknownOutput.put("2x", new ProportionalProbability( new double[]{0.9838709677419355, 0.989247311827957, 0.9946236559139785, 1.0}, new char[]{'x', 'F', 'w', '6'}) );
        twoCharacterInputWithUnknownOutput.put("2y", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'y', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("4<", new ProportionalProbability( new double[]{0.9920424403183024, 0.9946949602122016, 0.9973474801061009, 1.0}, new char[]{' ', 'v', 's', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("3]", new ProportionalProbability( new double[]{0.7222222222222222, 0.7777777777777778, 0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'i', ' ', 'v', ']', 'e', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("5 ", new ProportionalProbability( new double[]{0.9786476868327402, 0.9795373665480427, 0.9804270462633452, 0.9813167259786477, 0.9822064056939502, 0.9830960854092528, 0.9839857651245553, 0.9848754448398578, 0.9857651245551603, 0.9866548042704628, 0.9875444839857653, 0.9884341637010678, 0.9893238434163704, 0.9902135231316729, 0.9911032028469754, 0.9919928825622779, 0.9928825622775804, 0.9937722419928829, 0.9946619217081855, 0.995551601423488, 0.9964412811387905, 0.997330960854093, 0.9982206405693955, 0.999110320284698, 1.0000000000000004}, new char[]{' ', 'r', '1', 't', 'b', 'h', 'o', 'i', 'e', 'a', 'u', 'c', '8', 'n', 'l', 'C', 'm', 'E', ')', 's', 'O', '0', 'w', 'z', '7'}) );
        twoCharacterInputWithUnknownOutput.put("4?", new ProportionalProbability( new double[]{0.9365079365079365, 0.9523809523809523, 0.9682539682539681, 0.984126984126984, 0.9999999999999998}, new char[]{'?', 's', ' ', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("5%", new ProportionalProbability( new double[]{0.9375, 0.9423076923076923, 0.9471153846153846, 0.9519230769230769, 0.9567307692307692, 0.9615384615384615, 0.9663461538461537, 0.971153846153846, 0.9759615384615383, 0.9807692307692306, 0.9855769230769229, 0.9903846153846152, 0.9951923076923075, 0.9999999999999998}, new char[]{'%', 'e', 't', ' ', 'o', 'i', '5', 'p', 'n', 'l', 's', 'a', 'c', '4'}) );
        twoCharacterInputWithUnknownOutput.put("3d", new ProportionalProbability( new double[]{0.9733333333333334, 0.9866666666666667, 1.0}, new char[]{'d', 's', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("5(", new ProportionalProbability( new double[]{0.8947368421052632, 0.9473684210526316, 1.0}, new char[]{'(', ' ', '5'}) );
        twoCharacterInputWithUnknownOutput.put("5)", new ProportionalProbability( new double[]{0.9534883720930233, 0.9573643410852714, 0.9612403100775194, 0.9651162790697675, 0.9689922480620156, 0.9728682170542636, 0.9767441860465117, 0.9806201550387598, 0.9844961240310078, 0.9883720930232559, 0.992248062015504, 0.996124031007752, 1.0}, new char[]{' ', ')', '+', 'e', 'l', 'v', 'a', 'i', 'c', 'n', 's', 't', '9'}) );
        twoCharacterInputWithUnknownOutput.put("5+", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'+', '5'}) );
        twoCharacterInputWithUnknownOutput.put("5,", new ProportionalProbability( new double[]{0.9428571428571428, 0.95, 0.9571428571428571, 0.9642857142857142, 0.9714285714285713, 0.9785714285714284, 0.9857142857142855, 0.9928571428571427, 0.9999999999999998}, new char[]{',', 'u', 'r', 'b', 'e', 'I', 'H', 'i', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("5-", new ProportionalProbability( new double[]{0.972027972027972, 0.979020979020979, 0.9860139860139859, 0.9930069930069929, 0.9999999999999999}, new char[]{'-', 'w', 'c', 'o', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("5.", new ProportionalProbability( new double[]{0.9345794392523364, 0.9392523364485981, 0.9439252336448597, 0.9485981308411213, 0.953271028037383, 0.9579439252336446, 0.9626168224299062, 0.9672897196261678, 0.9719626168224295, 0.9766355140186911, 0.9813084112149527, 0.9859813084112143, 0.990654205607476, 0.9953271028037376, 0.9999999999999992}, new char[]{'l', '-', '.', 'n', 'h', 'o', ':', ' ', 'e', 'g', 's', 'r', 'd', '∞', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("3m", new ProportionalProbability( new double[]{0.6666666666666666, 0.8333333333333333, 0.9999999999999999}, new char[]{'m', 's', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("5/", new ProportionalProbability( new double[]{0.9814814814814815, 1.0}, new char[]{'/', ')'}) );
        twoCharacterInputWithUnknownOutput.put("50", new ProportionalProbability( new double[]{0.9711684370257967, 0.9726858877086495, 0.9742033383915023, 0.9757207890743551, 0.9772382397572079, 0.9787556904400607, 0.9802731411229135, 0.9817905918057663, 0.9833080424886191, 0.9848254931714719, 0.9863429438543247, 0.9878603945371776, 0.9893778452200304, 0.9908952959028832, 0.992412746585736, 0.9939301972685888, 0.9954476479514416, 0.9969650986342944, 0.9984825493171472, 1.0}, new char[]{'0', '-', 'i', ' ', 'm', 'v', ',', 's', 'h', 't', ')', 'l', 'R', 'o', 'g', 'n', 'W', 'u', 'e', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("4O", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'p', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("51", new ProportionalProbability( new double[]{0.9473684210526315, 0.9578947368421052, 0.968421052631579, 0.9789473684210527, 0.9894736842105264, 1.0}, new char[]{'i', '1', 'E', 'e', 'm', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("3p", new ProportionalProbability( new double[]{0.9545454545454546, 0.9772727272727273, 1.0}, new char[]{'p', ' ', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("53", new ProportionalProbability( new double[]{0.9615384615384616, 0.9743589743589743, 0.9871794871794871, 0.9999999999999999}, new char[]{'3', 'o', '1', '.'}) );
        twoCharacterInputWithUnknownOutput.put("54", new ProportionalProbability( new double[]{0.9622641509433962, 0.9811320754716981, 1.0}, new char[]{'4', 's', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("3r", new ProportionalProbability( new double[]{0.9548872180451128, 0.9624060150375939, 0.9699248120300752, 0.9774436090225564, 0.9849624060150377, 0.992481203007519, 1.0000000000000002}, new char[]{'r', 'i', '1', 'n', 'e', 'a', '2'}) );
        twoCharacterInputWithUnknownOutput.put("55", new ProportionalProbability( new double[]{0.9459459459459459, 0.954954954954955, 0.963963963963964, 0.972972972972973, 0.981981981981982, 0.9909909909909911, 1.0}, new char[]{'5', ')', 'i', '8', 'f', 'h', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("56", new ProportionalProbability( new double[]{0.9813084112149533, 0.9906542056074766, 1.0}, new char[]{'6', 'o', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("3t", new ProportionalProbability( new double[]{0.8571428571428571, 0.9047619047619047, 0.9523809523809523, 1.0}, new char[]{'t', 's', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("57", new ProportionalProbability( new double[]{0.9538461538461539, 0.9692307692307693, 0.9846153846153847, 1.0}, new char[]{'7', 'e', '1', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("58", new ProportionalProbability( new double[]{0.9661016949152542, 0.983050847457627, 0.9999999999999999}, new char[]{'8', 'a', 't'}) );
        twoCharacterInputWithUnknownOutput.put("59", new ProportionalProbability( new double[]{0.9714285714285714, 0.9809523809523809, 0.9904761904761904, 0.9999999999999999}, new char[]{'9', 'l', 'n', 't'}) );
        twoCharacterInputWithUnknownOutput.put("3x", new ProportionalProbability( new double[]{0.9508196721311475, 0.9672131147540983, 0.9836065573770492, 1.0}, new char[]{'x', '1', '+', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("3y", new ProportionalProbability( new double[]{0.5, 1.0}, new char[]{'3', ' '}) );
        twoCharacterInputWithUnknownOutput.put("5<", new ProportionalProbability( new double[]{0.9933110367892977, 0.9966555183946488, 1.0}, new char[]{' ', '<', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("4]", new ProportionalProbability( new double[]{0.6666666666666666, 0.7222222222222222, 0.7777777777777778, 0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'v', 'n', 'r', ' ', 'l', 'e', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("6 ", new ProportionalProbability( new double[]{0.9736842105263158, 0.9754385964912281, 0.9771929824561404, 0.9789473684210527, 0.980701754385965, 0.9824561403508772, 0.9842105263157895, 0.9859649122807018, 0.9877192982456141, 0.9894736842105264, 0.9912280701754387, 0.992982456140351, 0.9947368421052633, 0.9964912280701755, 0.9982456140350878, 1.0}, new char[]{' ', 'o', 'h', 'n', 't', '0', 'a', '1', 'l', 'r', 's', 'e', 'u', '9', 'c', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("5?", new ProportionalProbability( new double[]{0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'a', 'r', '?', 't'}) );
        twoCharacterInputWithUnknownOutput.put("4a", new ProportionalProbability( new double[]{0.9655172413793104, 1.0}, new char[]{'a', '2'}) );
        twoCharacterInputWithUnknownOutput.put("6%", new ProportionalProbability( new double[]{0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'o', '%', 'b', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("5D", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'s', 'c', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("6(", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'(', ' '}) );
        twoCharacterInputWithUnknownOutput.put("6)", new ProportionalProbability( new double[]{0.9691358024691358, 0.9753086419753086, 0.9814814814814815, 0.9876543209876544, 0.9938271604938272, 1.0}, new char[]{')', 'n', ' ', 'a', 'i', 't'}) );
        twoCharacterInputWithUnknownOutput.put("6,", new ProportionalProbability( new double[]{0.9383561643835616, 0.9452054794520548, 0.952054794520548, 0.9589041095890412, 0.9657534246575343, 0.9726027397260275, 0.9794520547945207, 0.9863013698630139, 0.993150684931507, 1.0000000000000002}, new char[]{',', 'e', 'b', 'o', 'f', ')', 's', ' ', 'i', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("5K", new ProportionalProbability( new double[]{0.8, 1.0}, new char[]{'K', ' '}) );
        twoCharacterInputWithUnknownOutput.put("6-", new ProportionalProbability( new double[]{0.9879518072289156, 1.0}, new char[]{'-', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("6.", new ProportionalProbability( new double[]{0.9340659340659341, 0.9395604395604396, 0.945054945054945, 0.9505494505494505, 0.956043956043956, 0.9615384615384615, 0.9670329670329669, 0.9725274725274724, 0.9780219780219779, 0.9835164835164834, 0.9890109890109888, 0.9945054945054943, 0.9999999999999998}, new char[]{'.', '-', '\'', ' ', 'C', '0', 'n', 'a', '1', 'c', ')', 'x', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("4m", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'m', '0', '3'}) );
        twoCharacterInputWithUnknownOutput.put("60", new ProportionalProbability( new double[]{0.9714285714285714, 0.9732142857142857, 0.975, 0.9767857142857143, 0.9785714285714285, 0.9803571428571428, 0.9821428571428571, 0.9839285714285714, 0.9857142857142857, 0.9874999999999999, 0.9892857142857142, 0.9910714285714285, 0.9928571428571428, 0.994642857142857, 0.9964285714285713, 0.9982142857142856, 0.9999999999999999}, new char[]{'0', 's', 'e', 'r', '9', 'n', 'o', 'h', 't', 'a', 'i', ')', ' ', ',', 'd', 'A', '6'}) );
        twoCharacterInputWithUnknownOutput.put("61", new ProportionalProbability( new double[]{0.9568965517241379, 0.9655172413793103, 0.9741379310344827, 0.982758620689655, 0.9913793103448274, 0.9999999999999998}, new char[]{'1', 'a', ' ', 'w', 'M', '6'}) );
        twoCharacterInputWithUnknownOutput.put("62", new ProportionalProbability( new double[]{0.9711538461538461, 0.9807692307692307, 0.9903846153846153, 0.9999999999999999}, new char[]{'2', ',', ' ', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("63", new ProportionalProbability( new double[]{0.983957219251337, 0.9893048128342247, 0.9946524064171124, 1.0}, new char[]{'3', 'r', 'n', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("64", new ProportionalProbability( new double[]{0.9925373134328358, 1.0}, new char[]{'4', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("65", new ProportionalProbability( new double[]{0.9639175257731959, 0.9690721649484536, 0.9742268041237113, 0.979381443298969, 0.9845360824742267, 0.9896907216494845, 0.9948453608247422, 0.9999999999999999}, new char[]{'5', ' ', 'i', 'e', 'a', '0', 'm', '1'}) );
        twoCharacterInputWithUnknownOutput.put("4s", new ProportionalProbability( new double[]{0.9545454545454546, 0.9772727272727273, 1.0}, new char[]{'s', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("4t", new ProportionalProbability( new double[]{0.98, 0.99, 1.0}, new char[]{'t', 'h', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("66", new ProportionalProbability( new double[]{0.944, 0.952, 0.96, 0.968, 0.976, 0.984, 0.992, 1.0}, new char[]{'r', '6', 'm', 'i', 'h', 'b', 'e', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("67", new ProportionalProbability( new double[]{0.967032967032967, 0.978021978021978, 0.9890109890109889, 0.9999999999999999}, new char[]{'7', ' ', 'a', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("68", new ProportionalProbability( new double[]{0.9693877551020408, 0.9795918367346939, 0.9897959183673469, 1.0}, new char[]{'8', 'h', 'i', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("69", new ProportionalProbability( new double[]{0.9693877551020408, 0.9795918367346939, 0.9897959183673469, 1.0}, new char[]{'9', 'i', 'n', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("4x", new ProportionalProbability( new double[]{0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'x', 't', '2'}) );
        twoCharacterInputWithUnknownOutput.put("6<", new ProportionalProbability( new double[]{0.9963636363636363, 1.0}, new char[]{' ', '<'}) );
        twoCharacterInputWithUnknownOutput.put("5]", new ProportionalProbability( new double[]{0.75, 0.875, 1.0}, new char[]{'e', 'u', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("7 ", new ProportionalProbability( new double[]{0.9648711943793911, 0.9672131147540983, 0.9695550351288056, 0.9718969555035128, 0.9742388758782201, 0.9765807962529274, 0.9789227166276346, 0.9812646370023419, 0.9836065573770492, 0.9859484777517564, 0.9882903981264637, 0.990632318501171, 0.9929742388758782, 0.9953161592505855, 0.9976580796252927, 1.0}, new char[]{' ', 't', ')', 's', 'b', 'n', 'l', 'u', 'r', 'c', 'm', 'a', 'p', '.', '8', 'V'}) );
        twoCharacterInputWithUnknownOutput.put("6?", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'d', '?', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("7%", new ProportionalProbability( new double[]{0.8936170212765957, 0.9148936170212766, 0.9361702127659575, 0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{'s', '%', 'o', 'V', ' ', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("5c", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'i', 'a', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("5f", new ProportionalProbability( new double[]{0.975609756097561, 1.0}, new char[]{'f', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("7(", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'(', ' '}) );
        twoCharacterInputWithUnknownOutput.put("7)", new ProportionalProbability( new double[]{0.941747572815534, 0.9514563106796117, 0.9611650485436893, 0.970873786407767, 0.9805825242718447, 0.9902912621359223, 1.0}, new char[]{' ', ')', 'e', 'r', 'a', 'n', 's'}) );
        twoCharacterInputWithUnknownOutput.put("6H", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'H', ' ', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("7,", new ProportionalProbability( new double[]{0.972972972972973, 0.981981981981982, 0.9909909909909911, 1.0}, new char[]{',', ' ', 's', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("7-", new ProportionalProbability( new double[]{0.9655172413793104, 0.9827586206896552, 1.0}, new char[]{'-', '9', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("7.", new ProportionalProbability( new double[]{0.9407894736842105, 0.9473684210526315, 0.9539473684210525, 0.9605263157894736, 0.9671052631578946, 0.9736842105263156, 0.9802631578947366, 0.9868421052631576, 0.9934210526315786, 0.9999999999999997}, new char[]{'.', '-', 'h', 'c', ' ', 'g', 'e', 's', 'l', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("7/", new ProportionalProbability( new double[]{0.967741935483871, 1.0}, new char[]{'/', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("5m", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{' ', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("70", new ProportionalProbability( new double[]{0.9840255591054313, 0.9872204472843451, 0.9904153354632589, 0.9936102236421727, 0.9968051118210864, 1.0000000000000002}, new char[]{'0', 'p', '%', 'r', 't', '.'}) );
        twoCharacterInputWithUnknownOutput.put("71", new ProportionalProbability( new double[]{0.9759036144578314, 0.9879518072289157, 1.0}, new char[]{'1', 'm', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("73", new ProportionalProbability( new double[]{0.963302752293578, 0.9724770642201834, 0.9816513761467889, 0.9908256880733943, 0.9999999999999998}, new char[]{'3', 'n', 'i', ' ', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("74", new ProportionalProbability( new double[]{0.9620253164556962, 0.9746835443037974, 0.9873417721518987, 0.9999999999999999}, new char[]{'4', 'i', 'n', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("75", new ProportionalProbability( new double[]{0.9662162162162162, 0.972972972972973, 0.9797297297297298, 0.9864864864864866, 0.9932432432432434, 1.0000000000000002}, new char[]{'5', 't', 'l', 'h', 'm', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("5s", new ProportionalProbability( new double[]{0.9736842105263158, 1.0}, new char[]{'s', 't'}) );
        twoCharacterInputWithUnknownOutput.put("76", new ProportionalProbability( new double[]{0.9704142011834319, 0.9763313609467456, 0.9822485207100592, 0.9881656804733728, 0.9940828402366865, 1.0}, new char[]{'6', 'T', 'l', 'g', 'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put("5t", new ProportionalProbability( new double[]{0.970873786407767, 0.9805825242718447, 0.9902912621359223, 1.0}, new char[]{'t', ' ', 'p', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("77", new ProportionalProbability( new double[]{0.984251968503937, 0.9921259842519685, 1.0}, new char[]{'7', 'd', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("78", new ProportionalProbability( new double[]{0.9675324675324676, 0.974025974025974, 0.9805194805194805, 0.9870129870129869, 0.9935064935064933, 0.9999999999999998}, new char[]{'8', ' ', 't', ')', 'p', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("79", new ProportionalProbability( new double[]{0.9720930232558139, 0.9767441860465116, 0.9813953488372092, 0.9860465116279069, 0.9906976744186046, 0.9953488372093022, 0.9999999999999999}, new char[]{'9', 't', 's', 'n', 'o', 'd', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("7:", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{':', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("7<", new ProportionalProbability( new double[]{0.9831932773109243, 0.9873949579831932, 0.9915966386554621, 0.995798319327731, 0.9999999999999999}, new char[]{' ', 'r', 'i', 'o', 't'}) );
        twoCharacterInputWithUnknownOutput.put("7=", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'m', '='}) );
        twoCharacterInputWithUnknownOutput.put("6]", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{'n', ']'}) );
        twoCharacterInputWithUnknownOutput.put("8 ", new ProportionalProbability( new double[]{0.9700214132762313, 0.9721627408993576, 0.974304068522484, 0.9764453961456103, 0.9785867237687367, 0.980728051391863, 0.9828693790149894, 0.9850107066381157, 0.9871520342612421, 0.9892933618843684, 0.9914346895074948, 0.9935760171306212, 0.9957173447537475, 0.9978586723768739, 1.0000000000000002}, new char[]{' ', 't', 'h', 'g', 'a', 'l', 'u', 'n', 'f', 'd', 'm', 'e', '-', 'r', '2'}) );
        twoCharacterInputWithUnknownOutput.put("7?", new ProportionalProbability( new double[]{0.8571428571428571, 0.8928571428571428, 0.9285714285714285, 0.9642857142857142, 0.9999999999999999}, new char[]{'f', '?', 'm', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("7B", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'B', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("8%", new ProportionalProbability( new double[]{0.95, 0.975, 1.0}, new char[]{'%', 'p', ' '}) );
        twoCharacterInputWithUnknownOutput.put("8(", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'(', '-'}) );
        twoCharacterInputWithUnknownOutput.put("8)", new ProportionalProbability( new double[]{0.9431818181818182, 0.9545454545454546, 0.9659090909090909, 0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{')', 'o', 'e', ' ', 'a', '→'}) );
        twoCharacterInputWithUnknownOutput.put("8,", new ProportionalProbability( new double[]{0.9669421487603306, 0.9752066115702479, 0.9834710743801652, 0.9917355371900826, 0.9999999999999999}, new char[]{',', '3', '0', 'i', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("8-", new ProportionalProbability( new double[]{0.9910714285714286, 1.0}, new char[]{'-', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("8.", new ProportionalProbability( new double[]{0.9444444444444444, 0.9537037037037037, 0.962962962962963, 0.9722222222222223, 0.9814814814814816, 0.9907407407407409, 1.0000000000000002}, new char[]{'.', 'e', 'a', 'n', 'm', 'c', ' '}) );
        twoCharacterInputWithUnknownOutput.put("6m", new ProportionalProbability( new double[]{0.7142857142857143, 0.8571428571428572, 1.0}, new char[]{'s', 'm', ' '}) );
        twoCharacterInputWithUnknownOutput.put("80", new ProportionalProbability( new double[]{0.9770318021201413, 0.9787985865724381, 0.980565371024735, 0.9823321554770318, 0.9840989399293286, 0.9858657243816255, 0.9876325088339223, 0.9893992932862191, 0.991166077738516, 0.9929328621908128, 0.9946996466431096, 0.9964664310954064, 0.9982332155477033, 1.0}, new char[]{'0', 'u', 'i', ' ', 's', 'e', 'd', 't', '1', 'o', 'w', 'g', 'b', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("81", new ProportionalProbability( new double[]{0.9712230215827338, 0.9784172661870503, 0.9856115107913668, 0.9928057553956833, 0.9999999999999998}, new char[]{'1', 't', 'l', 'i', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("82", new ProportionalProbability( new double[]{0.9534883720930233, 0.9651162790697675, 0.9767441860465117, 0.9883720930232559, 1.0}, new char[]{'2', 'd', ',', 'm', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("83", new ProportionalProbability( new double[]{0.9691358024691358, 0.9753086419753086, 0.9814814814814815, 0.9876543209876544, 0.9938271604938272, 1.0}, new char[]{'3', 'B', ' ', '4', 'e', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("84", new ProportionalProbability( new double[]{0.9794871794871794, 0.9846153846153846, 0.9897435897435897, 0.9948717948717948, 0.9999999999999999}, new char[]{'4', 'm', 'i', 'e', 't'}) );
        twoCharacterInputWithUnknownOutput.put("85", new ProportionalProbability( new double[]{0.9655172413793104, 0.971264367816092, 0.9770114942528737, 0.9827586206896554, 0.988505747126437, 0.9942528735632187, 1.0000000000000002}, new char[]{'5', 'r', 't', 'e', 'u', ' ', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("86", new ProportionalProbability( new double[]{0.976, 0.98, 0.984, 0.988, 0.992, 0.996, 1.0}, new char[]{'6', 's', ' ', 'i', 'n', 't', '8'}) );
        twoCharacterInputWithUnknownOutput.put("6t", new ProportionalProbability( new double[]{0.9871794871794872, 1.0}, new char[]{'t', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("4²", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'²', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("87", new ProportionalProbability( new double[]{0.9841269841269841, 0.9894179894179893, 0.9947089947089947, 1.0}, new char[]{'7', 'd', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("88", new ProportionalProbability( new double[]{0.9861111111111112, 0.9930555555555556, 1.0}, new char[]{'8', '-', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("89", new ProportionalProbability( new double[]{0.9901960784313726, 0.9950980392156863, 1.0}, new char[]{'9', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put("6x", new ProportionalProbability( new double[]{0.9591836734693877, 0.9795918367346939, 1.0}, new char[]{'x', ',', '4'}) );
        twoCharacterInputWithUnknownOutput.put("8<", new ProportionalProbability( new double[]{0.9931506849315068, 1.0}, new char[]{' ', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("7]", new ProportionalProbability( new double[]{0.6666666666666666, 0.8333333333333333, 0.9999999999999999}, new char[]{'i', 'u', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("9 ", new ProportionalProbability( new double[]{0.9786476868327402, 0.9822064056939501, 0.9857651245551601, 0.98932384341637, 0.99288256227758, 0.9964412811387899, 0.9999999999999999}, new char[]{' ', 'i', 'r', 'n', 'a', 'e', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("8?", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{' ', 'r', '?', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("9(", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'(', '+', ' '}) );
        twoCharacterInputWithUnknownOutput.put("9)", new ProportionalProbability( new double[]{0.9320388349514563, 0.941747572815534, 0.9514563106796117, 0.9611650485436893, 0.970873786407767, 0.9805825242718447, 0.9902912621359223, 1.0}, new char[]{')', 'e', 't', 'T', '→', 'c', 'n', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("9,", new ProportionalProbability( new double[]{0.9538461538461539, 0.9615384615384616, 0.9692307692307692, 0.9769230769230769, 0.9846153846153846, 0.9923076923076922, 0.9999999999999999}, new char[]{',', 'n', 'q', 'a', 'e', 't', '1'}) );
        twoCharacterInputWithUnknownOutput.put("9-", new ProportionalProbability( new double[]{0.9789473684210527, 0.9894736842105264, 1.0}, new char[]{'-', 'M', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("9.", new ProportionalProbability( new double[]{0.9660194174757282, 0.970873786407767, 0.9757281553398058, 0.9805825242718447, 0.9854368932038835, 0.9902912621359223, 0.9951456310679612, 1.0}, new char[]{'.', 'I', 'S', ' ', 'i', 'o', 's', 't'}) );
        twoCharacterInputWithUnknownOutput.put("90", new ProportionalProbability( new double[]{0.9833024118738405, 0.9851576994434138, 0.9870129870129871, 0.9888682745825604, 0.9907235621521338, 0.9925788497217071, 0.9944341372912804, 0.9962894248608537, 0.998144712430427, 1.0000000000000002}, new char[]{'0', 's', ' ', 'd', 'L', 't', 'b', 'n', 'u', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("91", new ProportionalProbability( new double[]{0.9890510948905109, 0.9927007299270073, 0.9963503649635037, 1.0}, new char[]{'1', 'f', 'v', ' '}) );
        twoCharacterInputWithUnknownOutput.put("92", new ProportionalProbability( new double[]{0.9723320158102767, 0.9762845849802372, 0.9802371541501976, 0.9841897233201581, 0.9881422924901185, 0.992094861660079, 0.9960474308300394, 0.9999999999999999}, new char[]{'2', ' ', 't', 'h', 'e', 'r', 'o', '('}) );
        twoCharacterInputWithUnknownOutput.put("93", new ProportionalProbability( new double[]{0.9820717131474104, 0.9840637450199203, 0.9860557768924303, 0.9880478087649402, 0.9900398406374502, 0.9920318725099602, 0.9940239043824701, 0.9960159362549801, 0.99800796812749, 1.0}, new char[]{'3', 'e', 'u', ':', 'i', 'g', ' ', 'p', 'o', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("94", new ProportionalProbability( new double[]{0.9813278008298755, 0.983402489626556, 0.9854771784232365, 0.987551867219917, 0.9896265560165974, 0.9917012448132779, 0.9937759336099584, 0.9958506224066389, 0.9979253112033194, 0.9999999999999999}, new char[]{'4', ' ', 'r', 't', 'c', '(', 's', 'e', 'g', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("5°", new ProportionalProbability( new double[]{0.9873417721518988, 1.0}, new char[]{'°', 't'}) );
        twoCharacterInputWithUnknownOutput.put("95", new ProportionalProbability( new double[]{0.9582366589327146, 0.9605568445475637, 0.9628770301624129, 0.965197215777262, 0.9675174013921112, 0.9698375870069603, 0.9721577726218095, 0.9744779582366586, 0.9767981438515078, 0.9791183294663569, 0.981438515081206, 0.9837587006960552, 0.9860788863109043, 0.9883990719257535, 0.9907192575406026, 0.9930394431554518, 0.9953596287703009, 0.9976798143851501, 0.9999999999999992}, new char[]{'5', 'y', 'n', ' ', 'h', 'b', 'i', 'p', 'u', 't', 'd', 'l', 'f', 'D', 's', '(', 'e', 'c', '0'}) );
        twoCharacterInputWithUnknownOutput.put("96", new ProportionalProbability( new double[]{0.9804878048780488, 0.9829268292682927, 0.9853658536585366, 0.9878048780487805, 0.9902439024390244, 0.9926829268292683, 0.9951219512195122, 0.9975609756097561, 1.0}, new char[]{'6', 'n', ' ', 'i', 'h', 't', 'r', 'o', '-'}) );
        twoCharacterInputWithUnknownOutput.put("7t", new ProportionalProbability( new double[]{0.961038961038961, 0.974025974025974, 0.987012987012987, 1.0}, new char[]{'t', 'd', ' ', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("97", new ProportionalProbability( new double[]{0.9714285714285714, 0.975, 0.9785714285714285, 0.9821428571428571, 0.9857142857142857, 0.9892857142857142, 0.9928571428571428, 0.9964285714285713, 0.9999999999999999}, new char[]{'7', ' ', 'e', 'i', 't', 'm', 'n', 'h', '-'}) );
        twoCharacterInputWithUnknownOutput.put("98", new ProportionalProbability( new double[]{0.9623430962343096, 0.9665271966527196, 0.9707112970711296, 0.9748953974895396, 0.9790794979079496, 0.9832635983263596, 0.9874476987447696, 0.9916317991631796, 0.9958158995815896, 0.9999999999999996}, new char[]{'8', ' ', 'c', 't', 'd', 'm', 'u', 'g', 'x', 's'}) );
        twoCharacterInputWithUnknownOutput.put("7v", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'v', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("99", new ProportionalProbability( new double[]{0.9723320158102767, 0.9762845849802372, 0.9802371541501976, 0.9841897233201581, 0.9881422924901185, 0.992094861660079, 0.9960474308300394, 0.9999999999999999}, new char[]{'t', '9', 'v', 'i', 'm', ' ', 'e', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("9<", new ProportionalProbability( new double[]{0.9878048780487805, 0.9939024390243902, 1.0}, new char[]{' ', 'a', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("8]", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{']', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(": ", new ProportionalProbability( new double[]{0.9919019933554817, 0.9921096345514949, 0.9923172757475082, 0.9925249169435214, 0.9927325581395346, 0.9929401993355479, 0.9931478405315611, 0.9933554817275744, 0.9935631229235876, 0.9937707641196009, 0.9939784053156141, 0.9941860465116273, 0.9943936877076406, 0.9946013289036538, 0.9948089700996671, 0.9950166112956803, 0.9952242524916936, 0.9954318936877068, 0.99563953488372, 0.9958471760797333, 0.9960548172757465, 0.9962624584717598, 0.996470099667773, 0.9966777408637862, 0.9968853820597995, 0.9970930232558127, 0.997300664451826, 0.9975083056478392, 0.9977159468438525, 0.9979235880398657, 0.9981312292358789, 0.9983388704318922, 0.9985465116279054, 0.9987541528239187, 0.9989617940199319, 0.9991694352159451, 0.9993770764119584, 0.9995847176079716, 0.9997923588039849, 0.9999999999999981}, new char[]{'l', ' ', 'd', 'i', 'r', 'm', 'o', 'n', 'e', '=', 'b', 'v', '-', '4', 'h', 'p', '(', 't', 'c', 'w', 'a', 'S', 'N', 's', 'f', '1', 'g', 'y', 'R', 'x', ':', 'C', 'P', 'u', 'k', ',', 'T', 'E', 'B', '2'}) );
        twoCharacterInputWithUnknownOutput.put("9?", new ProportionalProbability( new double[]{0.8666666666666667, 0.9333333333333333, 1.0}, new char[]{'?', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("9B", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'B', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("9H", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'H', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(":*", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'n', '*'}) );
        twoCharacterInputWithUnknownOutput.put("8m", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'m', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(":3", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'3', 't'}) );
        twoCharacterInputWithUnknownOutput.put("8t", new ProportionalProbability( new double[]{0.9863013698630136, 1.0}, new char[]{'t', 's'}) );
        twoCharacterInputWithUnknownOutput.put("8x", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'x', '3'}) );
        twoCharacterInputWithUnknownOutput.put(":<", new ProportionalProbability( new double[]{0.9822784810126582, 0.9835443037974684, 0.9848101265822785, 0.9860759493670886, 0.9873417721518988, 0.9886075949367089, 0.989873417721519, 0.9911392405063292, 0.9924050632911393, 0.9936708860759494, 0.9949367088607596, 0.9962025316455697, 0.9974683544303798, 0.99873417721519, 1.0}, new char[]{' ', 'M', 'o', 'r', 'u', 'e', 'h', 'n', 'l', 'a', 'V', 'w', 's', 'm', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("; ", new ProportionalProbability( new double[]{0.9976844458639412, 0.9977642925582881, 0.997844139252635, 0.997923985946982, 0.9980038326413289, 0.9980836793356758, 0.9981635260300227, 0.9982433727243696, 0.9983232194187165, 0.9984030661130634, 0.9984829128074103, 0.9985627595017572, 0.9986426061961041, 0.998722452890451, 0.9988022995847979, 0.9988821462791448, 0.9989619929734918, 0.9990418396678387, 0.9991216863621856, 0.9992015330565325, 0.9992813797508794, 0.9993612264452263, 0.9994410731395732, 0.9995209198339201, 0.999600766528267, 0.9996806132226139, 0.9997604599169608, 0.9998403066113077, 0.9999201533056546, 1.0000000000000016}, new char[]{' ', 'h', 'e', 't', 'd', 'i', 'a', 'l', 'o', 's', 'c', 'r', 'n', 'g', 'b', 'u', 'w', '.', '(', 'p', '>', 'k', 'y', 'f', 'x', '9', 'C', 'q', 'ר', ';'}) );
        twoCharacterInputWithUnknownOutput.put(":A", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'A', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("9f", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'9', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("9t", new ProportionalProbability( new double[]{0.96875, 0.9791666666666666, 0.9895833333333333, 0.9999999999999999}, new char[]{'t', 'C', 'n', 'H'}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart5(){
        twoCharacterInputWithUnknownOutput.put("< ", new ProportionalProbability( new double[]{0.9782608695652174, 0.9891304347826088, 1.0}, new char[]{' ', 'e', ','}) );
        twoCharacterInputWithUnknownOutput.put("<-", new ProportionalProbability( new double[]{0.84, 0.88, 0.92, 0.9600000000000001, 1.0}, new char[]{'q', '-', 'a', 'o', ')'}) );
        twoCharacterInputWithUnknownOutput.put(" Δ", new ProportionalProbability( new double[]{0.9, 0.9111111111111111, 0.9222222222222222, 0.9333333333333332, 0.9444444444444443, 0.9555555555555554, 0.9666666666666665, 0.9777777777777775, 0.9888888888888886, 0.9999999999999997}, new char[]{'e', ' ', 'Δ', 'f', 's', 'V', ',', 'a', 'w', 'h'}) );
        twoCharacterInputWithUnknownOutput.put(":p", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'p', 'b', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("<<", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'<', ' '}) );
        twoCharacterInputWithUnknownOutput.put("= ", new ProportionalProbability( new double[]{0.9800717417297728, 0.9804703068951774, 0.980868872060582, 0.9812674372259866, 0.9816660023913912, 0.9820645675567958, 0.9824631327222004, 0.982861697887605, 0.9832602630530096, 0.9836588282184142, 0.9840573933838188, 0.9844559585492234, 0.984854523714628, 0.9852530888800326, 0.9856516540454372, 0.9860502192108418, 0.9864487843762464, 0.986847349541651, 0.9872459147070556, 0.9876444798724602, 0.9880430450378648, 0.9884416102032694, 0.988840175368674, 0.9892387405340786, 0.9896373056994832, 0.9900358708648878, 0.9904344360302924, 0.990833001195697, 0.9912315663611015, 0.9916301315265061, 0.9920286966919107, 0.9924272618573153, 0.9928258270227199, 0.9932243921881245, 0.9936229573535291, 0.9940215225189337, 0.9944200876843383, 0.9948186528497429, 0.9952172180151475, 0.9956157831805521, 0.9960143483459567, 0.9964129135113613, 0.9968114786767659, 0.9972100438421705, 0.9976086090075751, 0.9980071741729797, 0.9984057393383843, 0.9988043045037889, 0.9992028696691935, 0.9996014348345981, 1.0000000000000027}, new char[]{' ', ')', '5', 'f', 'e', 'o', 'x', 'c', 'v', 'g', 'd', '-', 'i', 's', 'r', 'l', ']', 'h', 'n', 't', 'N', 'b', 'p', '\"', '1', 'a', 'B', '2', '+', 'w', 'T', 'm', 'C', 'R', 'H', 'u', 'y', '/', ':', ',', 'Δ', 'k', '0', '=', 'S', '(', 'z', 'A', 'F', 'q', '\''}) );
        twoCharacterInputWithUnknownOutput.put("<F", new ProportionalProbability( new double[]{0.9996189289855726, 0.9996230265233621, 0.9996271240611516, 0.9996312215989411, 0.9996353191367306, 0.9996394166745202, 0.9996435142123097, 0.9996476117500992, 0.9996517092878887, 0.9996558068256782, 0.9996599043634677, 0.9996640019012573, 0.9996680994390468, 0.9996721969768363, 0.9996762945146258, 0.9996803920524153, 0.9996844895902048, 0.9996885871279944, 0.9996926846657839, 0.9996967822035734, 0.9997008797413629, 0.9997049772791524, 0.9997090748169419, 0.9997131723547314, 0.999717269892521, 0.9997213674303105, 0.9997254649681, 0.9997295625058895, 0.999733660043679, 0.9997377575814685, 0.9997418551192581, 0.9997459526570476, 0.9997500501948371, 0.9997541477326266, 0.9997582452704161, 0.9997623428082056, 0.9997664403459952, 0.9997705378837847, 0.9997746354215742, 0.9997787329593637, 0.9997828304971532, 0.9997869280349427, 0.9997910255727323, 0.9997951231105218, 0.9997992206483113, 0.9998033181861008, 0.9998074157238903, 0.9998115132616798, 0.9998156107994693, 0.9998197083372589, 0.9998238058750484, 0.9998279034128379, 0.9998320009506274, 0.9998360984884169, 0.9998401960262064, 0.999844293563996, 0.9998483911017855, 0.999852488639575, 0.9998565861773645, 0.999860683715154, 0.9998647812529435, 0.999868878790733, 0.9998729763285226, 0.9998770738663121, 0.9998811714041016, 0.9998852689418911, 0.9998893664796806, 0.9998934640174701, 0.9998975615552597, 0.9999016590930492, 0.9999057566308387, 0.9999098541686282, 0.9999139517064177, 0.9999180492442072, 0.9999221467819968, 0.9999262443197863, 0.9999303418575758, 0.9999344393953653, 0.9999385369331548, 0.9999426344709443, 0.9999467320087339, 0.9999508295465234, 0.9999549270843129, 0.9999590246221024, 0.9999631221598919, 0.9999672196976814, 0.999971317235471, 0.9999754147732605, 0.99997951231105, 0.9999836098488395, 0.999987707386629, 0.9999918049244185, 0.999995902462208, 0.9999999999999976}, new char[]{'m', 'h', '\"', ' ', 'e', 't', 'i', 'l', 'p', 'w', 's', 'c', ':', 'n', 'k', 'a', 'u', 'r', 'o', 'v', 'b', 'N', 'y', 'f', 'I', 'g', 'd', '.', 'q', '/', 'C', '2', 'R', '+', '1', '(', '-', 'P', 'x', 'D', '6', 'B', '\'', ',', 'W', '=', '5', 'S', ')', 'M', 'F', 'A', 'O', 'T', 'ו', '±', 'é', '0', 'L', 'j', 'V', 'K', '[', '3', '?', '#', '→', '>', '∫', '•', '%', 'H', 'E', 'θ', '9', 'z', '^', 'G', '₂', '4', '$', 'ל', '&', '7', '√', '…', 'Q', 'ח', 'Y', '₀', '8', 'ż', 'ą', '*'}) );
        twoCharacterInputWithUnknownOutput.put("=(", new ProportionalProbability( new double[]{0.9797297297297297, 0.9864864864864865, 0.9932432432432433, 1.0}, new char[]{'(', ' ', ')', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("=-", new ProportionalProbability( new double[]{0.9439252336448598, 0.9532710280373832, 0.9626168224299065, 0.9719626168224299, 0.9813084112149533, 0.9906542056074766, 1.0}, new char[]{'-', 'x', '1', '.', ' ', '+', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("=.", new ProportionalProbability( new double[]{0.9090909090909091, 1.0}, new char[]{' ', '.'}) );
        twoCharacterInputWithUnknownOutput.put(" α", new ProportionalProbability( new double[]{0.9732142857142857, 0.9821428571428571, 0.9910714285714285, 0.9999999999999999}, new char[]{' ', 'α', 'h', '?'}) );
        twoCharacterInputWithUnknownOutput.put(" β", new ProportionalProbability( new double[]{0.9807692307692307, 1.0}, new char[]{'β', ']'}) );
        twoCharacterInputWithUnknownOutput.put("=0", new ProportionalProbability( new double[]{0.9672131147540983, 0.9754098360655737, 0.9836065573770492, 0.9918032786885246, 1.0}, new char[]{'0', 'e', 'y', 'a', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("=1", new ProportionalProbability( new double[]{0.9827586206896551, 0.9885057471264368, 0.9942528735632185, 1.0}, new char[]{'1', 'm', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("=2", new ProportionalProbability( new double[]{0.967479674796748, 0.9756097560975611, 0.9837398373983741, 0.9918699186991872, 1.0000000000000002}, new char[]{'2', 'i', '.', '+', '→'}) );
        twoCharacterInputWithUnknownOutput.put("=3", new ProportionalProbability( new double[]{0.9523809523809523, 0.9761904761904762, 1.0}, new char[]{'e', '3', '='}) );
        twoCharacterInputWithUnknownOutput.put(" θ", new ProportionalProbability( new double[]{0.9776119402985075, 0.9850746268656717, 0.9925373134328359, 1.0}, new char[]{'θ', ' ', 's', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("=7", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'7', '5'}) );
        twoCharacterInputWithUnknownOutput.put(" λ", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{'i', 'λ'}) );
        twoCharacterInputWithUnknownOutput.put("=9", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'9', 'm'}) );
        twoCharacterInputWithUnknownOutput.put(" μ", new ProportionalProbability( new double[]{0.8, 0.8500000000000001, 0.9000000000000001, 0.9500000000000002, 1.0000000000000002}, new char[]{'μ', 'a', 'e', ' ', 's'}) );
        twoCharacterInputWithUnknownOutput.put("=;", new ProportionalProbability( new double[]{0.5, 1.0}, new char[]{';', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("=<", new ProportionalProbability( new double[]{0.9941605839416059, 0.9956204379562045, 0.9970802919708031, 0.9985401459854016, 1.0000000000000002}, new char[]{' ', '<', 'e', 'o', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(" π", new ProportionalProbability( new double[]{0.972972972972973, 0.9797297297297298, 0.9864864864864866, 0.9932432432432434, 1.0000000000000002}, new char[]{'π', 'm', 'a', 'x', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("=>", new ProportionalProbability( new double[]{0.9230769230769231, 0.9615384615384616, 1.0}, new char[]{'>', 'd', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("> ", new ProportionalProbability( new double[]{0.9569160997732427, 0.9591836734693878, 0.961451247165533, 0.9637188208616781, 0.9659863945578233, 0.9682539682539685, 0.9705215419501136, 0.9727891156462588, 0.975056689342404, 0.9773242630385491, 0.9795918367346943, 0.9818594104308395, 0.9841269841269846, 0.9863945578231298, 0.988662131519275, 0.9909297052154201, 0.9931972789115653, 0.9954648526077104, 0.9977324263038556, 1.0000000000000007}, new char[]{'+', ' ', 'e', 'f', 'i', 's', 'x', '>', 'c', 'o', 'n', '-', 'O', 'd', 't', ')', '0', 'l', 'a', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("=?", new ProportionalProbability( new double[]{0.9846153846153847, 1.0}, new char[]{' ', '?'}) );
        twoCharacterInputWithUnknownOutput.put("<_", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'_', 's'}) );
        twoCharacterInputWithUnknownOutput.put(">\"", new ProportionalProbability( new double[]{0.9027777777777778, 0.9074074074074074, 0.9120370370370371, 0.9166666666666667, 0.9212962962962964, 0.925925925925926, 0.9305555555555557, 0.9351851851851853, 0.939814814814815, 0.9444444444444446, 0.9490740740740743, 0.9537037037037039, 0.9583333333333336, 0.9629629629629632, 0.9675925925925929, 0.9722222222222225, 0.9768518518518522, 0.9814814814814818, 0.9861111111111115, 0.9907407407407411, 0.9953703703703708, 1.0000000000000004}, new char[]{'y', '\"', ' ', 'u', 'p', 'd', 'o', 'g', 'l', 's', ',', '\'', 't', 'e', 'i', 'f', 'w', 'n', 'a', 'c', '.', '/'}) );
        twoCharacterInputWithUnknownOutput.put(">#", new ProportionalProbability( new double[]{0.9259259259259259, 0.962962962962963, 1.0}, new char[]{'#', 'r', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("=B", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'B', 't'}) );
        twoCharacterInputWithUnknownOutput.put("=C", new ProportionalProbability( new double[]{0.9622641509433962, 0.9811320754716981, 1.0}, new char[]{'C', 'o', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(">%", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'%', ' '}) );
        twoCharacterInputWithUnknownOutput.put(">\'", new ProportionalProbability( new double[]{0.8809523809523809, 0.9047619047619048, 0.9285714285714286, 0.9523809523809524, 0.9761904761904763, 1.0}, new char[]{'a', 'n', 'i', '\'', ' ', 's'}) );
        twoCharacterInputWithUnknownOutput.put("=F", new ProportionalProbability( new double[]{0.9047619047619048, 0.9523809523809523, 1.0}, new char[]{'F', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(" ω", new ProportionalProbability( new double[]{0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{' ', 'a', 'ω', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">(", new ProportionalProbability( new double[]{0.9823788546255506, 0.9831130690161527, 0.9838472834067548, 0.9845814977973568, 0.9853157121879589, 0.9860499265785609, 0.986784140969163, 0.9875183553597651, 0.9882525697503671, 0.9889867841409692, 0.9897209985315712, 0.9904552129221733, 0.9911894273127754, 0.9919236417033774, 0.9926578560939795, 0.9933920704845816, 0.9941262848751836, 0.9948604992657857, 0.9955947136563877, 0.9963289280469898, 0.9970631424375919, 0.9977973568281939, 0.998531571218796, 0.999265785609398, 1.0}, new char[]{'(', 'h', '-', ' ', 'm', '+', 's', 'n', 'e', 'r', ')', 'f', 'i', 'o', 'p', 't', '/', '2', 'w', '=', '1', 'b', 'a', 'l', 'M'}) );
        twoCharacterInputWithUnknownOutput.put(">*", new ProportionalProbability( new double[]{0.85, 0.8666666666666667, 0.8833333333333334, 0.9000000000000001, 0.9166666666666669, 0.9333333333333336, 0.9500000000000003, 0.966666666666667, 0.9833333333333337, 1.0000000000000004}, new char[]{'*', 'e', 'c', 'a', 'r', 'v', 'i', ' ', 'l', 'm'}) );
        twoCharacterInputWithUnknownOutput.put(">+", new ProportionalProbability( new double[]{0.8260869565217391, 0.8478260869565217, 0.8695652173913043, 0.8913043478260869, 0.9130434782608695, 0.9347826086956521, 0.9565217391304347, 0.9782608695652173, 0.9999999999999999}, new char[]{'+', 'e', 'k', 'h', 'w', 'u', 'd', 'n', 'l'}) );
        twoCharacterInputWithUnknownOutput.put(">-", new ProportionalProbability( new double[]{0.9706303724928367, 0.9713467048710602, 0.9720630372492838, 0.9727793696275073, 0.9734957020057309, 0.9742120343839544, 0.974928366762178, 0.9756446991404015, 0.9763610315186251, 0.9770773638968486, 0.9777936962750722, 0.9785100286532957, 0.9792263610315193, 0.9799426934097428, 0.9806590257879664, 0.9813753581661899, 0.9820916905444135, 0.982808022922637, 0.9835243553008606, 0.9842406876790841, 0.9849570200573077, 0.9856733524355312, 0.9863896848137548, 0.9871060171919783, 0.9878223495702019, 0.9885386819484254, 0.989255014326649, 0.9899713467048725, 0.9906876790830961, 0.9914040114613196, 0.9921203438395432, 0.9928366762177667, 0.9935530085959903, 0.9942693409742138, 0.9949856733524374, 0.9957020057306609, 0.9964183381088845, 0.997134670487108, 0.9978510028653316, 0.9985673352435551, 0.9992836676217787, 1.0000000000000022}, new char[]{'c', '-', 'n', 't', 'x', 'b', 'i', 'e', 'r', 'd', 'g', 'y', ' ', 'a', 's', 'f', '(', 'm', 'o', 'u', 'E', 'h', 'w', '7', '+', 'l', ',', 'S', '8', 'C', 'p', '5', '|', 'v', 'k', '1', 'q', 'M', 'L', '2', 'P', 'I'}) );
        twoCharacterInputWithUnknownOutput.put(">.", new ProportionalProbability( new double[]{0.8742857142857143, 0.88, 0.8857142857142857, 0.8914285714285713, 0.897142857142857, 0.9028571428571427, 0.9085714285714284, 0.914285714285714, 0.9199999999999997, 0.9257142857142854, 0.931428571428571, 0.9371428571428567, 0.9428571428571424, 0.9485714285714281, 0.9542857142857137, 0.9599999999999994, 0.9657142857142851, 0.9714285714285708, 0.9771428571428564, 0.9828571428571421, 0.9885714285714278, 0.9942857142857134, 0.9999999999999991}, new char[]{'o', 'e', '.', 'h', 't', ' ', 'c', 'p', 's', 'i', 'u', 'n', 'v', 'b', 'g', ',', 'a', 'r', 'l', 'ü', 'm', 'd', 'ś'}) );
        twoCharacterInputWithUnknownOutput.put("=N", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{' ', 'N'}) );
        twoCharacterInputWithUnknownOutput.put(">/", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'/', '('}) );
        twoCharacterInputWithUnknownOutput.put(">0", new ProportionalProbability( new double[]{0.9562043795620438, 0.9635036496350365, 0.9708029197080292, 0.9781021897810219, 0.9854014598540146, 0.9927007299270073, 1.0}, new char[]{'0', 's', 'h', 'i', 'a', '5', ' '}) );
        twoCharacterInputWithUnknownOutput.put(">1", new ProportionalProbability( new double[]{0.9803921568627451, 0.9810682893847193, 0.9817444219066936, 0.9824205544286679, 0.9830966869506422, 0.9837728194726165, 0.9844489519945908, 0.9851250845165651, 0.9858012170385394, 0.9864773495605137, 0.987153482082488, 0.9878296146044623, 0.9885057471264366, 0.9891818796484109, 0.9898580121703852, 0.9905341446923595, 0.9912102772143337, 0.991886409736308, 0.9925625422582823, 0.9932386747802566, 0.9939148073022309, 0.9945909398242052, 0.9952670723461795, 0.9959432048681538, 0.9966193373901281, 0.9972954699121024, 0.9979716024340767, 0.998647734956051, 0.9993238674780253, 0.9999999999999996}, new char[]{'1', ' ', 'a', ',', 'd', 't', 'ƒ', 'r', 'm', 'e', 'u', 'l', '5', 'n', 'i', '4', 'c', 'p', '-', '2', 'o', 'w', 'g', 's', 'x', '(', 'h', 'S', 'b', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("=P", new ProportionalProbability( new double[]{0.9791666666666666, 1.0}, new char[]{'P', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(">2", new ProportionalProbability( new double[]{0.9654320987654321, 0.9679012345679012, 0.9703703703703703, 0.9728395061728394, 0.9753086419753085, 0.9777777777777776, 0.9802469135802467, 0.9827160493827158, 0.9851851851851849, 0.987654320987654, 0.9901234567901231, 0.9925925925925922, 0.9950617283950614, 0.9975308641975305, 0.9999999999999996}, new char[]{'2', 's', 'n', ' ', 'e', 'd', 'h', 'α', 'c', 't', 'i', ')', '+', '%', 'f'}) );
        twoCharacterInputWithUnknownOutput.put(">3", new ProportionalProbability( new double[]{0.9556650246305419, 0.9605911330049262, 0.9655172413793104, 0.9704433497536946, 0.9753694581280788, 0.9802955665024631, 0.9852216748768473, 0.9901477832512315, 0.9950738916256158, 1.0}, new char[]{'3', 'c', 'm', 'x', 'k', 'i', 'e', 'P', 'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put(">4", new ProportionalProbability( new double[]{0.9276315789473685, 0.9342105263157895, 0.9407894736842105, 0.9473684210526315, 0.9539473684210525, 0.9605263157894736, 0.9671052631578946, 0.9736842105263156, 0.9802631578947366, 0.9868421052631576, 0.9934210526315786, 0.9999999999999997}, new char[]{'4', 'u', ' ', 'e', '0', 't', 'n', 'i', 'p', 'd', 'm', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(">5", new ProportionalProbability( new double[]{0.9703703703703703, 0.9777777777777777, 0.9851851851851852, 0.9925925925925926, 1.0}, new char[]{'5', '4', ',', '=', 't'}) );
        twoCharacterInputWithUnknownOutput.put(">6", new ProportionalProbability( new double[]{0.9404761904761905, 0.9523809523809523, 0.9642857142857142, 0.976190476190476, 0.9880952380952379, 0.9999999999999998}, new char[]{'6', '3', 'o', ' ', 'l', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">7", new ProportionalProbability( new double[]{0.9402985074626866, 0.955223880597015, 0.9701492537313434, 0.9850746268656718, 1.0000000000000002}, new char[]{'7', 'e', 'k', 's', ' '}) );
        twoCharacterInputWithUnknownOutput.put(">8", new ProportionalProbability( new double[]{0.98, 1.0}, new char[]{'8', '0'}) );
        twoCharacterInputWithUnknownOutput.put(">9", new ProportionalProbability( new double[]{0.984375, 1.0}, new char[]{'9', '0'}) );
        twoCharacterInputWithUnknownOutput.put(">:", new ProportionalProbability( new double[]{0.9047619047619048, 0.9285714285714286, 0.9523809523809524, 0.9761904761904763, 1.0}, new char[]{'s', ':', 'n', 'l', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("><", new ProportionalProbability( new double[]{0.987012987012987, 1.0}, new char[]{' ', '<'}) );
        twoCharacterInputWithUnknownOutput.put(">=", new ProportionalProbability( new double[]{0.8125, 0.825, 0.8374999999999999, 0.8499999999999999, 0.8624999999999998, 0.8749999999999998, 0.8874999999999997, 0.8999999999999997, 0.9124999999999996, 0.9249999999999996, 0.9374999999999996, 0.9499999999999995, 0.9624999999999995, 0.9749999999999994, 0.9874999999999994, 0.9999999999999993}, new char[]{'=', ' ', '+', ']', ')', 'h', 'l', 'a', '-', 't', '(', 'i', '1', 'p', 's', 'c'}) );
        twoCharacterInputWithUnknownOutput.put(">>", new ProportionalProbability( new double[]{0.8518518518518519, 0.8888888888888888, 0.9259259259259258, 0.9629629629629628, 0.9999999999999998}, new char[]{'>', 'd', ' ', '+', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("<|", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'|', ','}) );
        twoCharacterInputWithUnknownOutput.put("? ", new ProportionalProbability( new double[]{0.9784454604833442, 0.9790986283474853, 0.9797517962116263, 0.9804049640757674, 0.9810581319399084, 0.9817112998040495, 0.9823644676681905, 0.9830176355323316, 0.9836708033964726, 0.9843239712606137, 0.9849771391247547, 0.9856303069888958, 0.9862834748530368, 0.9869366427171778, 0.9875898105813189, 0.9882429784454599, 0.988896146309601, 0.989549314173742, 0.9902024820378831, 0.9908556499020241, 0.9915088177661652, 0.9921619856303062, 0.9928151534944473, 0.9934683213585883, 0.9941214892227294, 0.9947746570868704, 0.9954278249510115, 0.9960809928151525, 0.9967341606792935, 0.9973873285434346, 0.9980404964075756, 0.9986936642717167, 0.9993468321358577, 0.9999999999999988}, new char[]{'c', ' ', 'n', '(', 'r', '-', 'e', 't', 'f', 'a', 'b', 'v', 'h', 'i', '.', '^', 'Δ', 'g', 'y', 'l', '!', 'p', 'w', 'נ', 'm', 's', '?', 'C', ')', 'ì', 'o', 'd', 'k', ','}) );
        twoCharacterInputWithUnknownOutput.put(">?", new ProportionalProbability( new double[]{0.7857142857142857, 0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'?', '.', 'r', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(">@", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'@', 's'}) );
        twoCharacterInputWithUnknownOutput.put(">A", new ProportionalProbability( new double[]{0.9968140183193946, 0.9968936678614098, 0.9969733174034249, 0.99705296694544, 0.9971326164874551, 0.9972122660294702, 0.9972919155714853, 0.9973715651135004, 0.9974512146555156, 0.9975308641975307, 0.9976105137395458, 0.9976901632815609, 0.997769812823576, 0.9978494623655911, 0.9979291119076062, 0.9980087614496214, 0.9980884109916365, 0.9981680605336516, 0.9982477100756667, 0.9983273596176818, 0.9984070091596969, 0.998486658701712, 0.9985663082437272, 0.9986459577857423, 0.9987256073277574, 0.9988052568697725, 0.9988849064117876, 0.9989645559538027, 0.9990442054958178, 0.999123855037833, 0.9992035045798481, 0.9992831541218632, 0.9993628036638783, 0.9994424532058934, 0.9995221027479085, 0.9996017522899237, 0.9996814018319388, 0.9997610513739539, 0.999840700915969, 0.9999203504579841, 0.9999999999999992}, new char[]{'a', 's', 'r', 'i', 'w', 'e', ' ', 'y', 'v', 't', 'l', 'f', 'n', 'h', 'd', ',', 'p', 'O', 'b', '0', 'o', 'c', 'g', 'm', 'k', 'u', 'C', '(', 'H', 'q', '=', 'A', 'z', 'B', 'M', 'x', '3', 'I', '8', 'F', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("?\"", new ProportionalProbability( new double[]{0.8604651162790697, 0.8837209302325582, 0.9069767441860466, 0.930232558139535, 0.9534883720930234, 0.9767441860465118, 1.0000000000000002}, new char[]{'\"', 's', 'w', 'a', 'o', 'l', 'h'}) );
        twoCharacterInputWithUnknownOutput.put(">B", new ProportionalProbability( new double[]{0.9934049829018076, 0.9936492427943332, 0.9938935026868588, 0.9941377625793845, 0.9943820224719101, 0.9946262823644357, 0.9948705422569614, 0.995114802149487, 0.9953590620420126, 0.9956033219345383, 0.9958475818270639, 0.9960918417195895, 0.9963361016121152, 0.9965803615046408, 0.9968246213971664, 0.9970688812896921, 0.9973131411822177, 0.9975574010747433, 0.997801660967269, 0.9980459208597946, 0.9982901807523202, 0.9985344406448459, 0.9987787005373715, 0.9990229604298971, 0.9992672203224228, 0.9995114802149484, 0.999755740107474, 0.9999999999999997}, new char[]{'b', 's', 'e', 'a', 'p', 'c', 'h', 'r', 'o', 'l', 'n', 'd', 'i', '-', '.', 'g', 'm', ' ', 't', 'y', 'f', 'q', 'v', 'u', 'w', '!', 'R', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("=a", new ProportionalProbability( new double[]{0.9913793103448276, 0.9956896551724138, 1.0}, new char[]{'a', 'x', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">C", new ProportionalProbability( new double[]{0.9948330683624801, 0.9949655537890831, 0.9950980392156862, 0.9952305246422892, 0.9953630100688923, 0.9954954954954953, 0.9956279809220984, 0.9957604663487014, 0.9958929517753045, 0.9960254372019075, 0.9961579226285106, 0.9962904080551136, 0.9964228934817166, 0.9965553789083197, 0.9966878643349227, 0.9968203497615258, 0.9969528351881288, 0.9970853206147319, 0.9972178060413349, 0.997350291467938, 0.997482776894541, 0.9976152623211441, 0.9977477477477471, 0.9978802331743502, 0.9980127186009532, 0.9981452040275562, 0.9982776894541593, 0.9984101748807623, 0.9985426603073654, 0.9986751457339684, 0.9988076311605715, 0.9989401165871745, 0.9990726020137776, 0.9992050874403806, 0.9993375728669837, 0.9994700582935867, 0.9996025437201898, 0.9997350291467928, 0.9998675145733958, 0.9999999999999989}, new char[]{'c', 's', 'a', 'u', 'e', 'n', 'i', ' ', 'w', 'r', 'm', 'y', 'f', 'o', 'v', 'l', 't', 'b', 'q', 'd', 'C', 'h', 'g', 'M', 'p', ':', 'I', '.', ',', 'k', 'H', 'P', '0', 'E', '\"', 'A', 'x', 'R', '?', '('}) );
        twoCharacterInputWithUnknownOutput.put("=b", new ProportionalProbability( new double[]{0.9642857142857143, 0.9761904761904762, 0.988095238095238, 0.9999999999999999}, new char[]{'b', 's', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">D", new ProportionalProbability( new double[]{0.9931848404255319, 0.9933510638297872, 0.9935172872340425, 0.9936835106382979, 0.9938497340425532, 0.9940159574468085, 0.9941821808510638, 0.9943484042553191, 0.9945146276595744, 0.9946808510638298, 0.9948470744680851, 0.9950132978723404, 0.9951795212765957, 0.995345744680851, 0.9955119680851063, 0.9956781914893617, 0.995844414893617, 0.9960106382978723, 0.9961768617021276, 0.9963430851063829, 0.9965093085106382, 0.9966755319148936, 0.9968417553191489, 0.9970079787234042, 0.9971742021276595, 0.9973404255319148, 0.9975066489361701, 0.9976728723404255, 0.9978390957446808, 0.9980053191489361, 0.9981715425531914, 0.9983377659574467, 0.998503989361702, 0.9986702127659574, 0.9988364361702127, 0.999002659574468, 0.9991688829787233, 0.9993351063829786, 0.9995013297872339, 0.9996675531914893, 0.9998337765957446, 0.9999999999999999}, new char[]{'d', 'o', 's', 'a', ' ', 'A', 'e', 'g', 'r', 'W', 'u', 'f', 'p', 'S', '(', 'T', 'I', 'P', 'O', 'n', 'D', '.', 'B', 'i', 'Z', 'm', 'M', 'E', 'h', 'c', 'V', 'l', 'b', 'F', 'K', 'N', 't', 'G', 'k', 'R', 'w', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("=c", new ProportionalProbability( new double[]{0.9746835443037974, 0.9873417721518987, 0.9999999999999999}, new char[]{'c', 'i', ' '}) );
        twoCharacterInputWithUnknownOutput.put(">E", new ProportionalProbability( new double[]{0.9922118380062306, 0.9924714434060229, 0.9927310488058152, 0.9929906542056075, 0.9932502596053998, 0.9935098650051921, 0.9937694704049844, 0.9940290758047767, 0.994288681204569, 0.9945482866043613, 0.9948078920041536, 0.995067497403946, 0.9953271028037383, 0.9955867082035306, 0.9958463136033229, 0.9961059190031152, 0.9963655244029075, 0.9966251298026998, 0.9968847352024921, 0.9971443406022844, 0.9974039460020767, 0.997663551401869, 0.9979231568016613, 0.9981827622014536, 0.9984423676012459, 0.9987019730010382, 0.9989615784008306, 0.9992211838006229, 0.9994807892004152, 0.9997403946002075, 0.9999999999999998}, new char[]{'e', 'o', 'a', 's', 'l', ' ', 'f', 'm', 'u', 'g', 'p', 't', 'r', 'E', 'd', '2', 'b', 'n', ',', 'R', 'h', 'c', 'x', 'i', 'w', 'L', '.', 'y', ':', 'S', '4'}) );
        twoCharacterInputWithUnknownOutput.put("=d", new ProportionalProbability( new double[]{0.9787234042553191, 1.0}, new char[]{'d', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("?&", new ProportionalProbability( new double[]{0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'r', 'a', 's', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(">F", new ProportionalProbability( new double[]{0.9921040408732001, 0.9923362749651649, 0.9925685090571296, 0.9928007431490943, 0.993032977241059, 0.9932652113330237, 0.9934974454249884, 0.9937296795169531, 0.9939619136089178, 0.9941941477008825, 0.9944263817928473, 0.994658615884812, 0.9948908499767767, 0.9951230840687414, 0.9953553181607061, 0.9955875522526708, 0.9958197863446355, 0.9960520204366002, 0.996284254528565, 0.9965164886205297, 0.9967487227124944, 0.9969809568044591, 0.9972131908964238, 0.9974454249883885, 0.9976776590803532, 0.9979098931723179, 0.9981421272642826, 0.9983743613562474, 0.9986065954482121, 0.9988388295401768, 0.9990710636321415, 0.9993032977241062, 0.9995355318160709, 0.9997677659080356, 1.0000000000000002}, new char[]{'o', 'f', 'a', 's', 'e', 'n', ' ', 'd', 'i', 't', 'r', 'l', 'u', '\"', 'h', '-', 'v', 'x', '=', 'p', 'j', 'N', 'w', 'b', '.', 'g', 'S', 'm', 'A', 'V', ')', '0', ',', 'c', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("?\'", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'\'', 'f'}) );
        twoCharacterInputWithUnknownOutput.put(">G", new ProportionalProbability( new double[]{0.9898089171974522, 0.9902335456475584, 0.9906581740976645, 0.9910828025477707, 0.9915074309978769, 0.991932059447983, 0.9923566878980892, 0.9927813163481953, 0.9932059447983015, 0.9936305732484076, 0.9940552016985138, 0.99447983014862, 0.9949044585987261, 0.9953290870488323, 0.9957537154989384, 0.9961783439490446, 0.9966029723991507, 0.9970276008492569, 0.9974522292993631, 0.9978768577494692, 0.9983014861995754, 0.9987261146496815, 0.9991507430997877, 0.9995753715498938, 1.0}, new char[]{'g', 'a', 'e', 's', 'd', 'B', 'p', 'n', ',', ' ', 'i', 'o', 'h', 'l', 'r', 'v', 't', 'y', 'k', 'P', 'c', '(', 'w', 'f', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("=f", new ProportionalProbability( new double[]{0.9772727272727273, 1.0}, new char[]{'e', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("?(", new ProportionalProbability( new double[]{0.8571428571428571, 0.9047619047619047, 0.9523809523809523, 1.0}, new char[]{' ', '(', 's', 't'}) );
        twoCharacterInputWithUnknownOutput.put(">H", new ProportionalProbability( new double[]{0.9912886752778612, 0.9915890657855212, 0.9918894562931811, 0.9921898468008411, 0.992490237308501, 0.992790627816161, 0.993091018323821, 0.9933914088314809, 0.9936917993391409, 0.9939921898468008, 0.9942925803544608, 0.9945929708621207, 0.9948933613697807, 0.9951937518774406, 0.9954941423851006, 0.9957945328927605, 0.9960949234004205, 0.9963953139080804, 0.9966957044157404, 0.9969960949234004, 0.9972964854310603, 0.9975968759387203, 0.9978972664463802, 0.9981976569540402, 0.9984980474617001, 0.9987984379693601, 0.99909882847702, 0.99939921898468, 0.9996996094923399, 0.9999999999999999}, new char[]{'h', 's', ' ', 'a', 'e', 'o', 'l', 'r', 'q', 'n', 'f', ',', 'c', 'y', 'd', '?', 'i', 'g', 'p', 'v', 't', 'H', '2', 'm', 'b', 'u', '1', 'I', 'C', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("?)", new ProportionalProbability( new double[]{0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{')', ' ', 'n'}) );
        twoCharacterInputWithUnknownOutput.put(">I", new ProportionalProbability( new double[]{0.9933811362382791, 0.9935649935649935, 0.993748850891708, 0.9939327082184224, 0.9941165655451368, 0.9943004228718513, 0.9944842801985657, 0.9946681375252802, 0.9948519948519946, 0.995035852178709, 0.9952197095054235, 0.9954035668321379, 0.9955874241588524, 0.9957712814855668, 0.9959551388122813, 0.9961389961389957, 0.9963228534657101, 0.9965067107924246, 0.996690568119139, 0.9968744254458535, 0.9970582827725679, 0.9972421400992824, 0.9974259974259968, 0.9976098547527112, 0.9977937120794257, 0.9979775694061401, 0.9981614267328546, 0.998345284059569, 0.9985291413862835, 0.9987129987129979, 0.9988968560397123, 0.9990807133664268, 0.9992645706931412, 0.9994484280198557, 0.9996322853465701, 0.9998161426732846, 0.999999999999999}, new char[]{'s', 't', 'e', 'i', ' ', 'a', 'y', 'm', 'r', 'O', 'p', 'U', 'd', 'n', 'o', 'l', ',', 'c', 'h', 'f', '.', 'u', 'g', 'I', 'w', 'k', '2', 'b', ')', '9', 'P', '6', 'L', '⊆', 'A', '/', '-'}) );
        twoCharacterInputWithUnknownOutput.put("=h", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'h', 't'}) );
        twoCharacterInputWithUnknownOutput.put(">J", new ProportionalProbability( new double[]{0.9779086892488954, 0.979381443298969, 0.9808541973490427, 0.9823269513991163, 0.9837997054491899, 0.9852724594992636, 0.9867452135493372, 0.9882179675994108, 0.9896907216494845, 0.9911634756995581, 0.9926362297496317, 0.9941089837997054, 0.995581737849779, 0.9970544918998526, 0.9985272459499263, 0.9999999999999999}, new char[]{'j', 's', 'a', 'e', ' ', 't', 'n', 'u', ',', 'p', '.', 'b', 'h', 'i', 'w', 'ś'}) );
        twoCharacterInputWithUnknownOutput.put(">K", new ProportionalProbability( new double[]{0.9686192468619247, 0.9707112970711297, 0.9728033472803347, 0.9748953974895397, 0.9769874476987447, 0.9790794979079497, 0.9811715481171547, 0.9832635983263597, 0.9853556485355647, 0.9874476987447697, 0.9895397489539747, 0.9916317991631797, 0.9937238493723847, 0.9958158995815897, 0.9979079497907947, 0.9999999999999997}, new char[]{'k', 's', 'y', 'e', 'a', 't', 'h', 'p', 'n', 'g', ' ', 'r', 'q', 'f', 'A', '2'}) );
        twoCharacterInputWithUnknownOutput.put(">L", new ProportionalProbability( new double[]{0.9919668938656281, 0.9922103213242455, 0.9924537487828629, 0.9926971762414802, 0.9929406037000976, 0.993184031158715, 0.9934274586173324, 0.9936708860759498, 0.9939143135345672, 0.9941577409931845, 0.9944011684518019, 0.9946445959104193, 0.9948880233690367, 0.9951314508276541, 0.9953748782862715, 0.9956183057448889, 0.9958617332035062, 0.9961051606621236, 0.996348588120741, 0.9965920155793584, 0.9968354430379758, 0.9970788704965932, 0.9973222979552105, 0.9975657254138279, 0.9978091528724453, 0.9980525803310627, 0.9982960077896801, 0.9985394352482975, 0.9987828627069149, 0.9990262901655322, 0.9992697176241496, 0.999513145082767, 0.9997565725413844, 1.0000000000000018}, new char[]{'l', 'a', 'e', 'r', 's', 'p', 'd', 'm', 'i', 't', 'n', 'h', ' ', 'o', '=', 'u', 'v', ',', 'c', '1', 'y', ':', 'g', 'U', 'C', 'f', 'w', '5', 'b', '\'', 'F', '.', '-', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(">M", new ProportionalProbability( new double[]{0.9921726755218216, 0.9924098671726755, 0.9926470588235294, 0.9928842504743833, 0.9931214421252372, 0.9933586337760911, 0.993595825426945, 0.9938330170777989, 0.9940702087286528, 0.9943074003795067, 0.9945445920303606, 0.9947817836812145, 0.9950189753320684, 0.9952561669829223, 0.9954933586337762, 0.9957305502846301, 0.995967741935484, 0.9962049335863379, 0.9964421252371918, 0.9966793168880457, 0.9969165085388996, 0.9971537001897535, 0.9973908918406074, 0.9976280834914613, 0.9978652751423152, 0.998102466793169, 0.998339658444023, 0.9985768500948768, 0.9988140417457307, 0.9990512333965846, 0.9992884250474385, 0.9995256166982924, 0.9997628083491463, 1.0000000000000002}, new char[]{'m', 'e', 's', 'M', 'a', 'r', 'o', 'i', 'w', 'b', 't', ' ', 'p', 'n', 'h', 'u', 'v', 'c', '=', 'l', 'd', '5', 'k', 'g', '/', 'f', '1', 'x', 'y', 'F', '^', '0', ',', 'P'}) );
        twoCharacterInputWithUnknownOutput.put(">N", new ProportionalProbability( new double[]{0.9888490641178813, 0.989247311827957, 0.9896455595380327, 0.9900438072481084, 0.990442054958184, 0.9908403026682597, 0.9912385503783354, 0.9916367980884111, 0.9920350457984868, 0.9924332935085625, 0.9928315412186381, 0.9932297889287138, 0.9936280366387895, 0.9940262843488652, 0.9944245320589409, 0.9948227797690166, 0.9952210274790922, 0.9956192751891679, 0.9960175228992436, 0.9964157706093193, 0.996814018319395, 0.9972122660294707, 0.9976105137395463, 0.998008761449622, 0.9984070091596977, 0.9988052568697734, 0.9992035045798491, 0.9996017522899248, 1.0000000000000004}, new char[]{'n', 's', 'a', 'l', '4', 'e', 'h', 'w', 'c', 'r', '.', 'o', ' ', 'i', 'u', 'm', 'p', 't', '-', ',', '=', 'b', '_', 'v', 'd', 'G', 'P', 'y', 'ī'}) );
        twoCharacterInputWithUnknownOutput.put("=m", new ProportionalProbability( new double[]{0.9555555555555556, 0.9666666666666667, 0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'m', '/', 'w', 'e', 'p'}) );
        twoCharacterInputWithUnknownOutput.put(">O", new ProportionalProbability( new double[]{0.9884416102032683, 0.9888401753686729, 0.9892387405340775, 0.989637305699482, 0.9900358708648866, 0.9904344360302912, 0.9908330011956958, 0.9912315663611004, 0.991630131526505, 0.9920286966919096, 0.9924272618573142, 0.9928258270227188, 0.9932243921881234, 0.993622957353528, 0.9940215225189326, 0.9944200876843372, 0.9948186528497418, 0.9952172180151464, 0.995615783180551, 0.9960143483459556, 0.9964129135113602, 0.9968114786767648, 0.9972100438421694, 0.997608609007574, 0.9980071741729786, 0.9984057393383832, 0.9988043045037878, 0.9992028696691924, 0.999601434834597, 1.0000000000000016}, new char[]{'o', 's', 'h', ' ', 'l', 'a', 'e', 'f', 'i', 'n', '5', 'r', 'b', 'd', 'S', 'm', 'c', ',', 'w', 'y', 't', 'k', 'v', 'x', '.', 'p', 'u', 'A', 'j', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("=n", new ProportionalProbability( new double[]{0.875, 0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'n', 'p', 'i', 'd'}) );
        twoCharacterInputWithUnknownOutput.put(">P", new ProportionalProbability( new double[]{0.9941348973607038, 0.9943074003795066, 0.9944799033983094, 0.9946524064171122, 0.994824909435915, 0.9949974124547177, 0.9951699154735205, 0.9953424184923233, 0.9955149215111261, 0.9956874245299289, 0.9958599275487316, 0.9960324305675344, 0.9962049335863372, 0.99637743660514, 0.9965499396239428, 0.9967224426427456, 0.9968949456615483, 0.9970674486803511, 0.9972399516991539, 0.9974124547179567, 0.9975849577367595, 0.9977574607555623, 0.997929963774365, 0.9981024667931678, 0.9982749698119706, 0.9984474728307734, 0.9986199758495762, 0.998792478868379, 0.9989649818871817, 0.9991374849059845, 0.9993099879247873, 0.9994824909435901, 0.9996549939623929, 0.9998274969811957, 0.9999999999999984}, new char[]{'p', 'a', 's', ' ', 'e', 'o', 'd', 'i', 'r', 't', 'n', 'L', 'u', ',', 'E', '=', 'f', 'b', 'F', 'y', 'v', 'c', 'l', 'h', 'N', 'P', 'g', '\"', 'z', '7', 'T', 'm', 'A', 'V', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("=o", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'t', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(">Q", new ProportionalProbability( new double[]{0.964769647696477, 0.967479674796748, 0.970189701897019, 0.97289972899729, 0.9756097560975611, 0.9783197831978321, 0.9810298102981031, 0.9837398373983741, 0.9864498644986451, 0.9891598915989162, 0.9918699186991872, 0.9945799457994582, 0.9972899728997292, 1.0000000000000002}, new char[]{'q', 's', 'u', 'e', 'i', 'a', 'h', 'd', ' ', 't', 'o', 'r', 'n', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("=p", new ProportionalProbability( new double[]{0.9736842105263158, 1.0}, new char[]{'p', ')'}) );
        twoCharacterInputWithUnknownOutput.put(">R", new ProportionalProbability( new double[]{0.9902801600914809, 0.9905660377358491, 0.9908519153802172, 0.9911377930245854, 0.9914236706689535, 0.9917095483133217, 0.9919954259576899, 0.992281303602058, 0.9925671812464262, 0.9928530588907943, 0.9931389365351625, 0.9934248141795307, 0.9937106918238988, 0.993996569468267, 0.9942824471126351, 0.9945683247570033, 0.9948542024013715, 0.9951400800457396, 0.9954259576901078, 0.9957118353344759, 0.9959977129788441, 0.9962835906232123, 0.9965694682675804, 0.9968553459119486, 0.9971412235563167, 0.9974271012006849, 0.9977129788450531, 0.9979988564894212, 0.9982847341337894, 0.9985706117781575, 0.9988564894225257, 0.9991423670668939, 0.999428244711262, 0.9997141223556302, 0.9999999999999983}, new char[]{'s', 'r', 'a', 'e', 'u', 'i', 'y', 'b', 'o', 'p', ' ', 't', 'h', 'x', 'l', 'm', 'w', 'd', 'R', 'g', 'n', 'L', '-', 'c', 'f', '1', '2', 'v', 'D', ']', 'k', '=', '&', 'j', 'T'}) );
        twoCharacterInputWithUnknownOutput.put(">S", new ProportionalProbability( new double[]{0.9948138757635128, 0.994929122968768, 0.9950443701740233, 0.9951596173792785, 0.9952748645845337, 0.995390111789789, 0.9955053589950442, 0.9956206062002995, 0.9957358534055547, 0.99585110061081, 0.9959663478160652, 0.9960815950213204, 0.9961968422265757, 0.9963120894318309, 0.9964273366370862, 0.9965425838423414, 0.9966578310475966, 0.9967730782528519, 0.9968883254581071, 0.9970035726633624, 0.9971188198686176, 0.9972340670738729, 0.9973493142791281, 0.9974645614843833, 0.9975798086896386, 0.9976950558948938, 0.9978103031001491, 0.9979255503054043, 0.9980407975106595, 0.9981560447159148, 0.99827129192117, 0.9983865391264253, 0.9985017863316805, 0.9986170335369358, 0.998732280742191, 0.9988475279474462, 0.9989627751527015, 0.9990780223579567, 0.999193269563212, 0.9993085167684672, 0.9994237639737225, 0.9995390111789777, 0.9996542583842329, 0.9997695055894882, 0.9998847527947434, 0.9999999999999987}, new char[]{'a', 's', 'n', 'e', 'i', 'd', 'E', 'p', 'g', ' ', 'c', 'r', 't', 'h', 'o', ',', 'D', 'f', 'l', 'S', 'w', 'N', 'W', '1', 'A', '+', 'm', '4', '9', ':', 'C', 'u', 'z', 'v', 'L', 'y', 'b', 'H', '/', '(', '\'', 'k', '=', 'O', '-', '3'}) );
        twoCharacterInputWithUnknownOutput.put("=r", new ProportionalProbability( new double[]{0.9761904761904762, 1.0}, new char[]{'r', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">T", new ProportionalProbability( new double[]{0.998426267033871, 0.9984620336921922, 0.9984978003505134, 0.9985335670088346, 0.9985693336671557, 0.9986051003254769, 0.9986408669837981, 0.9986766336421192, 0.9987124003004404, 0.9987481669587616, 0.9987839336170827, 0.9988197002754039, 0.9988554669337251, 0.9988912335920462, 0.9989270002503674, 0.9989627669086886, 0.9989985335670097, 0.9990343002253309, 0.9990700668836521, 0.9991058335419732, 0.9991416002002944, 0.9991773668586156, 0.9992131335169367, 0.9992489001752579, 0.9992846668335791, 0.9993204334919003, 0.9993562001502214, 0.9993919668085426, 0.9994277334668638, 0.9994635001251849, 0.9994992667835061, 0.9995350334418273, 0.9995708001001484, 0.9996065667584696, 0.9996423334167908, 0.9996781000751119, 0.9997138667334331, 0.9997496333917543, 0.9997854000500754, 0.9998211667083966, 0.9998569333667178, 0.9998927000250389, 0.9999284666833601, 0.9999642333416813, 1.0000000000000024}, new char[]{'t', 'a', 'i', 's', 'o', ' ', 'e', 'r', 'm', 'h', 'u', 'c', 'z', 'd', 'g', 'l', 'n', 'f', 'b', 'x', 'v', '-', 'w', 'p', ',', 'y', ':', '.', 'T', 'N', 'I', 'q', 'A', 'C', '(', 'L', 'ַ', '\"', 'k', '=', ')', '+', 'W', 'G', 'F'}) );
        twoCharacterInputWithUnknownOutput.put(">U", new ProportionalProbability( new double[]{0.9851393188854489, 0.9857585139318885, 0.9863777089783281, 0.9869969040247677, 0.9876160990712073, 0.9882352941176469, 0.9888544891640865, 0.9894736842105261, 0.9900928792569657, 0.9907120743034052, 0.9913312693498448, 0.9919504643962844, 0.992569659442724, 0.9931888544891636, 0.9938080495356032, 0.9944272445820428, 0.9950464396284824, 0.995665634674922, 0.9962848297213616, 0.9969040247678012, 0.9975232198142407, 0.9981424148606803, 0.9987616099071199, 0.9993808049535595, 0.9999999999999991}, new char[]{'u', ' ', 'a', 's', 'b', 'e', 'N', 'i', 'o', 'r', 'l', 'c', 't', '6', 'd', 'A', 'm', 'y', 'w', 'B', 'v', '>', 'n', '-', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("=t", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'=', 't'}) );
        twoCharacterInputWithUnknownOutput.put(">V", new ProportionalProbability( new double[]{0.9817850637522769, 0.982695810564663, 0.9836065573770492, 0.9845173041894353, 0.9854280510018214, 0.9863387978142075, 0.9872495446265936, 0.9881602914389798, 0.9890710382513659, 0.989981785063752, 0.9908925318761381, 0.9918032786885242, 0.9927140255009104, 0.9936247723132965, 0.9945355191256826, 0.9954462659380687, 0.9963570127504549, 0.997267759562841, 0.9981785063752271, 0.9990892531876132, 0.9999999999999993}, new char[]{'v', 's', 'r', 'e', 'a', 'c', 'o', 'l', 'h', 'b', 'y', 'n', ' ', 'd', 'u', 'i', '(', 'f', 't', '2', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("=u", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'u', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">W", new ProportionalProbability( new double[]{0.9940569830449222, 0.994231777661248, 0.9944065722775739, 0.9945813668938998, 0.9947561615102256, 0.9949309561265515, 0.9951057507428773, 0.9952805453592032, 0.995455339975529, 0.9956301345918549, 0.9958049292081808, 0.9959797238245066, 0.9961545184408325, 0.9963293130571583, 0.9965041076734842, 0.99667890228981, 0.9968536969061359, 0.9970284915224618, 0.9972032861387876, 0.9973780807551135, 0.9975528753714393, 0.9977276699877652, 0.997902464604091, 0.9980772592204169, 0.9982520538367428, 0.9984268484530686, 0.9986016430693945, 0.9987764376857203, 0.9989512323020462, 0.999126026918372, 0.9993008215346979, 0.9994756161510238, 0.9996504107673496, 0.9998252053836755, 1.0000000000000013}, new char[]{'w', 's', 'k', 'a', 'i', 'm', 'h', 'e', 'n', ' ', 'r', 'u', 'b', 'l', 'v', 'o', 'c', 'y', 'j', 'p', 'd', '.', 't', 'W', ',', '-', 'E', '?', 'S', 'A', 'g', 'V', 'R', '1', '6'}) );
        twoCharacterInputWithUnknownOutput.put("=v", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'v', 't'}) );
        twoCharacterInputWithUnknownOutput.put(">X", new ProportionalProbability( new double[]{0.8620689655172413, 0.8965517241379309, 0.9310344827586206, 0.9655172413793102, 0.9999999999999998}, new char[]{'x', 'P', 'u', 'o', '-'}) );
        twoCharacterInputWithUnknownOutput.put(">Y", new ProportionalProbability( new double[]{0.976068376068376, 0.9777777777777777, 0.9794871794871794, 0.9811965811965812, 0.9829059829059829, 0.9846153846153846, 0.9863247863247863, 0.988034188034188, 0.9897435897435897, 0.9914529914529914, 0.9931623931623931, 0.9948717948717948, 0.9965811965811965, 0.9982905982905982, 0.9999999999999999}, new char[]{'s', 'y', 'p', 'a', 'e', 'h', 'd', ' ', 'R', 'i', 'o', 'r', 'N', 'Y', 'f'}) );
        twoCharacterInputWithUnknownOutput.put(">Z", new ProportionalProbability( new double[]{0.9338842975206612, 0.9421487603305785, 0.9504132231404958, 0.9586776859504131, 0.9669421487603305, 0.9752066115702478, 0.9834710743801651, 0.9917355371900825, 0.9999999999999998}, new char[]{'z', 'a', 's', 'n', 'o', 'g', 'e', 'c', ' '}) );
        twoCharacterInputWithUnknownOutput.put("?;", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{';', ' '}) );
        twoCharacterInputWithUnknownOutput.put("?<", new ProportionalProbability( new double[]{0.995734650353575, 0.9957907733752385, 0.9958468963969019, 0.9959030194185654, 0.9959591424402289, 0.9960152654618923, 0.9960713884835558, 0.9961275115052193, 0.9961836345268827, 0.9962397575485462, 0.9962958805702097, 0.9963520035918731, 0.9964081266135366, 0.9964642496352001, 0.9965203726568636, 0.996576495678527, 0.9966326187001905, 0.996688741721854, 0.9967448647435174, 0.9968009877651809, 0.9968571107868444, 0.9969132338085078, 0.9969693568301713, 0.9970254798518348, 0.9970816028734982, 0.9971377258951617, 0.9971938489168252, 0.9972499719384886, 0.9973060949601521, 0.9973622179818156, 0.997418341003479, 0.9974744640251425, 0.997530587046806, 0.9975867100684694, 0.9976428330901329, 0.9976989561117964, 0.9977550791334598, 0.9978112021551233, 0.9978673251767868, 0.9979234481984502, 0.9979795712201137, 0.9980356942417772, 0.9980918172634407, 0.9981479402851041, 0.9982040633067676, 0.998260186328431, 0.9983163093500945, 0.998372432371758, 0.9984285553934215, 0.9984846784150849, 0.9985408014367484, 0.9985969244584119, 0.9986530474800753, 0.9987091705017388, 0.9987652935234023, 0.9988214165450657, 0.9988775395667292, 0.9989336625883927, 0.9989897856100561, 0.9990459086317196, 0.9991020316533831, 0.9991581546750465, 0.99921427769671, 0.9992704007183735, 0.9993265237400369, 0.9993826467617004, 0.9994387697833639, 0.9994948928050273, 0.9995510158266908, 0.9996071388483543, 0.9996632618700177, 0.9997193848916812, 0.9997755079133447, 0.9998316309350082, 0.9998877539566716, 0.9999438769783351, 0.9999999999999986}, new char[]{'m', ' ', 'y', 'P', 'a', 'n', 'c', 'd', 't', 'o', 'e', 'p', 'w', 'i', 's', 'b', 'l', 'h', 'u', '?', 'r', 'N', 'g', 'k', 'f', ',', 'x', 'S', 'θ', '+', '%', 'A', 'U', '-', '3', 'q', 'λ', 'W', 'j', '\"', 'v', 'O', '\'', ')', '=', '>', '.', '&', 'I', '0', '(', 'C', '6', 'B', '’', 'F', ':', 'R', 'Q', 'E', 'D', 'Δ', '1', 'z', 'M', 'V', 'π', '/', 'L', '5', '7', '2', '8', 'T', '±', '×', 'H'}) );
        twoCharacterInputWithUnknownOutput.put(">[", new ProportionalProbability( new double[]{0.9851485148514851, 0.9900990099009901, 0.995049504950495, 1.0}, new char[]{'[', 'o', ' ', ')'}) );
        twoCharacterInputWithUnknownOutput.put("??", new ProportionalProbability( new double[]{0.9166666666666666, 0.9333333333333333, 0.9500000000000001, 0.9666666666666668, 0.9833333333333335, 1.0000000000000002}, new char[]{'n', '?', ' ', 'a', 'c', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">_", new ProportionalProbability( new double[]{0.9568345323741008, 0.9640287769784173, 0.9712230215827338, 0.9784172661870503, 0.9856115107913668, 0.9928057553956833, 0.9999999999999998}, new char[]{'_', 'h', 'b', 't', 'd', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put(">a", new ProportionalProbability( new double[]{0.9965166130760986, 0.996605930689532, 0.9966952483029653, 0.9967845659163986, 0.996873883529832, 0.9969632011432653, 0.9970525187566986, 0.997141836370132, 0.9972311539835653, 0.9973204715969987, 0.997409789210432, 0.9974991068238653, 0.9975884244372987, 0.997677742050732, 0.9977670596641653, 0.9978563772775987, 0.997945694891032, 0.9980350125044654, 0.9981243301178987, 0.998213647731332, 0.9983029653447654, 0.9983922829581987, 0.998481600571632, 0.9985709181850654, 0.9986602357984987, 0.9987495534119321, 0.9988388710253654, 0.9989281886387987, 0.9990175062522321, 0.9991068238656654, 0.9991961414790987, 0.9992854590925321, 0.9993747767059654, 0.9994640943193988, 0.9995534119328321, 0.9996427295462654, 0.9997320471596988, 0.9998213647731321, 0.9999106823865654, 0.9999999999999988}, new char[]{'a', 's', 'e', ' ', 'y', 'v', 't', 'l', 'h', 'f', 'r', 'p', 'O', 'i', '0', 'n', 'o', 'd', 'c', 'g', ',', 'b', 'w', 'k', 'C', 'H', ')', 'u', '=', 'A', 'z', '(', 'm', 'B', 'x', 'I', 'q', '8', 'F', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put(">b", new ProportionalProbability( new double[]{0.9936647173489279, 0.9939083820662769, 0.9941520467836258, 0.9943957115009747, 0.9946393762183237, 0.9948830409356726, 0.9951267056530215, 0.9953703703703705, 0.9956140350877194, 0.9958576998050683, 0.9961013645224173, 0.9963450292397662, 0.9965886939571151, 0.9968323586744641, 0.997076023391813, 0.9973196881091619, 0.9975633528265109, 0.9978070175438598, 0.9980506822612087, 0.9982943469785577, 0.9985380116959066, 0.9987816764132555, 0.9990253411306045, 0.9992690058479534, 0.9995126705653024, 0.9997563352826513, 1.0000000000000002}, new char[]{'b', 's', 'e', 'a', 'p', 'c', 'h', 'r', 'o', 'l', 'n', 'd', 'i', '-', '.', 't', 'g', 'm', ' ', 'y', 'f', 'q', 'v', 'u', 'w', '!', 'k'}) );
        twoCharacterInputWithUnknownOutput.put(">c", new ProportionalProbability( new double[]{0.9947566550147889, 0.9948910997579995, 0.9950255445012101, 0.9951599892444206, 0.9952944339876312, 0.9954288787308417, 0.9955633234740523, 0.9956977682172629, 0.9958322129604734, 0.995966657703684, 0.9961011024468945, 0.9962355471901051, 0.9963699919333157, 0.9965044366765262, 0.9966388814197368, 0.9967733261629473, 0.9969077709061579, 0.9970422156493685, 0.997176660392579, 0.9973111051357896, 0.9974455498790001, 0.9975799946222107, 0.9977144393654213, 0.9978488841086318, 0.9979833288518424, 0.9981177735950529, 0.9982522183382635, 0.9983866630814741, 0.9985211078246846, 0.9986555525678952, 0.9987899973111057, 0.9989244420543163, 0.9990588867975269, 0.9991933315407374, 0.999327776283948, 0.9994622210271585, 0.9995966657703691, 0.9997311105135797, 0.9998655552567902, 1.0000000000000007}, new char[]{'c', 's', 'a', 'e', 'n', 'i', ' ', 'w', 'r', 'm', 'y', 'f', 'o', 'v', 'l', 't', 'b', 'q', 'd', 'u', 'h', 'g', 'M', 'p', ':', 'I', '.', ',', 'k', 'H', 'P', '0', 'E', '\"', 'A', 'x', '\'', 'R', '?', '('}) );
        twoCharacterInputWithUnknownOutput.put(">d", new ProportionalProbability( new double[]{0.9932510288065843, 0.9934156378600822, 0.9935802469135802, 0.9937448559670781, 0.993909465020576, 0.9940740740740739, 0.9942386831275718, 0.9944032921810697, 0.9945679012345676, 0.9947325102880655, 0.9948971193415634, 0.9950617283950614, 0.9952263374485593, 0.9953909465020572, 0.9955555555555551, 0.995720164609053, 0.9958847736625509, 0.9960493827160488, 0.9962139917695467, 0.9963786008230446, 0.9965432098765425, 0.9967078189300405, 0.9968724279835384, 0.9970370370370363, 0.9972016460905342, 0.9973662551440321, 0.99753086419753, 0.9976954732510279, 0.9978600823045258, 0.9980246913580237, 0.9981893004115217, 0.9983539094650196, 0.9985185185185175, 0.9986831275720154, 0.9988477366255133, 0.9990123456790112, 0.9991769547325091, 0.999341563786007, 0.9995061728395049, 0.9996707818930028, 0.9998353909465008, 0.9999999999999987}, new char[]{'d', 'o', 's', 'a', ' ', 'A', 'e', 'g', 'r', 'W', 'u', 'f', 'p', 'S', '(', 'T', 'I', 'P', 'O', 'n', 'D', '.', 'B', 'i', 'Z', 'm', 'M', 'E', 'h', 'c', 'V', 'l', 'b', 'F', 'K', 'N', 't', 'G', 'k', 'R', 'w', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("?E", new ProportionalProbability( new double[]{0.7727272727272727, 0.8181818181818181, 0.8636363636363635, 0.909090909090909, 0.9545454545454544, 0.9999999999999998}, new char[]{'E', 'n', 'e', 'u', 'g', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(">e", new ProportionalProbability( new double[]{0.9918227380638354, 0.9920865207069375, 0.9923503033500396, 0.9926140859931417, 0.9928778686362438, 0.993141651279346, 0.9934054339224481, 0.9936692165655502, 0.9939329992086523, 0.9941967818517544, 0.9944605644948565, 0.9947243471379587, 0.9949881297810608, 0.9952519124241629, 0.995515695067265, 0.9957794777103671, 0.9960432603534692, 0.9963070429965714, 0.9965708256396735, 0.9968346082827756, 0.9970983909258777, 0.9973621735689798, 0.9976259562120819, 0.9978897388551841, 0.9981535214982862, 0.9984173041413883, 0.9986810867844904, 0.9989448694275925, 0.9992086520706946, 0.9994724347137968, 0.9997362173568989, 1.0000000000000009}, new char[]{'e', 'o', 'a', 's', 'l', ' ', 'f', 'm', 'u', 'g', 'p', 't', 'r', 'C', 'E', 'd', 'b', 'n', ',', 'R', '2', 'h', 'c', 'x', 'i', 'w', ')', 'L', '.', 'y', 'S', '4'}) );
        twoCharacterInputWithUnknownOutput.put(">f", new ProportionalProbability( new double[]{0.9919466175793833, 0.9921767142199723, 0.9924068108605614, 0.9926369075011504, 0.9928670041417395, 0.9930971007823285, 0.9933271974229175, 0.9935572940635066, 0.9937873907040956, 0.9940174873446846, 0.9942475839852737, 0.9944776806258627, 0.9947077772664518, 0.9949378739070408, 0.9951679705476298, 0.9953980671882189, 0.9956281638288079, 0.995858260469397, 0.996088357109986, 0.996318453750575, 0.9965485503911641, 0.9967786470317531, 0.9970087436723422, 0.9972388403129312, 0.9974689369535202, 0.9976990335941093, 0.9979291302346983, 0.9981592268752874, 0.9983893235158764, 0.9986194201564654, 0.9988495167970545, 0.9990796134376435, 0.9993097100782325, 0.9995398067188216, 0.9997699033594106, 0.9999999999999997}, new char[]{'o', 'f', 'a', 's', 'e', 'n', ' ', 'd', 'i', 't', '(', 'r', 'l', 'u', '\"', 'h', '-', 'v', 'x', 'p', '7', 'j', 'N', 'w', 'b', ')', '.', 'g', 'S', 'm', 'A', 'V', '0', ',', 'c', 'y'}) );
        twoCharacterInputWithUnknownOutput.put(">g", new ProportionalProbability( new double[]{0.9895470383275261, 0.9899825783972125, 0.9904181184668989, 0.9908536585365852, 0.9912891986062716, 0.991724738675958, 0.9921602787456444, 0.9925958188153308, 0.9930313588850171, 0.9934668989547035, 0.9939024390243899, 0.9943379790940763, 0.9947735191637627, 0.995209059233449, 0.9956445993031354, 0.9960801393728218, 0.9965156794425082, 0.9969512195121946, 0.9973867595818809, 0.9978222996515673, 0.9982578397212537, 0.9986933797909401, 0.9991289198606265, 0.9995644599303128, 0.9999999999999992}, new char[]{'g', 'a', 'e', 's', 'd', 'B', 'p', 'n', ',', ' ', 'i', 'o', 'h', 'l', 'r', 'v', 't', 'y', 'k', 'P', 'c', '(', 'w', 'f', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("?H", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'b', 'o', 'H'}) );
        twoCharacterInputWithUnknownOutput.put(">h", new ProportionalProbability( new double[]{0.9917632702867603, 0.9920683343502136, 0.9923733984136669, 0.9926784624771202, 0.9929835265405735, 0.9932885906040269, 0.9935936546674802, 0.9938987187309335, 0.9942037827943868, 0.9945088468578401, 0.9948139109212935, 0.9951189749847468, 0.9954240390482001, 0.9957291031116534, 0.9960341671751067, 0.99633923123856, 0.9966442953020134, 0.9969493593654667, 0.99725442342892, 0.9975594874923733, 0.9978645515558267, 0.99816961561928, 0.9984746796827333, 0.9987797437461866, 0.9990848078096399, 0.9993898718730932, 0.9996949359365466, 0.9999999999999999}, new char[]{'h', 's', ' ', 'a', 'e', 'o', 'r', 'q', 'n', 'f', ',', 'c', 'y', 'd', 'l', '?', 'i', 'g', 'p', 'v', 't', 'm', 'b', 'u', '1', 'I', 'C', 'k'}) );
        twoCharacterInputWithUnknownOutput.put(">i", new ProportionalProbability( new double[]{0.993543179983858, 0.9937449556093624, 0.9939467312348668, 0.9941485068603712, 0.9943502824858755, 0.9945520581113799, 0.9947538337368843, 0.9949556093623887, 0.9951573849878931, 0.9953591606133975, 0.9955609362389019, 0.9957627118644062, 0.9959644874899106, 0.996166263115415, 0.9963680387409194, 0.9965698143664238, 0.9967715899919282, 0.9969733656174325, 0.9971751412429369, 0.9973769168684413, 0.9975786924939457, 0.9977804681194501, 0.9979822437449545, 0.9981840193704589, 0.9983857949959632, 0.9985875706214676, 0.998789346246972, 0.9989911218724764, 0.9991928974979808, 0.9993946731234852, 0.9995964487489896, 0.999798224374494, 0.9999999999999983}, new char[]{'s', 't', 'e', 'i', ' ', 'a', 'y', 'm', 'r', 'U', 'd', 'n', 'l', ',', 'o', 'c', 'h', 'f', '.', 'u', 'g', 'w', 'p', 'k', '2', 'b', '9', 'P', 'L', '⊆', 'A', '/', '-'}) );
        twoCharacterInputWithUnknownOutput.put(">j", new ProportionalProbability( new double[]{0.9774774774774775, 0.978978978978979, 0.9804804804804805, 0.981981981981982, 0.9834834834834836, 0.9849849849849851, 0.9864864864864866, 0.9879879879879881, 0.9894894894894897, 0.9909909909909912, 0.9924924924924927, 0.9939939939939942, 0.9954954954954958, 0.9969969969969973, 0.9984984984984988, 1.0000000000000002}, new char[]{'j', 's', 'a', 'e', ' ', 't', 'n', 'u', ',', 'p', '.', 'b', 'h', 'i', 'w', 'ś'}) );
        twoCharacterInputWithUnknownOutput.put(">k", new ProportionalProbability( new double[]{0.967948717948718, 0.9700854700854701, 0.9722222222222222, 0.9743589743589743, 0.9764957264957265, 0.9786324786324786, 0.9807692307692307, 0.9829059829059829, 0.985042735042735, 0.9871794871794871, 0.9893162393162392, 0.9914529914529914, 0.9935897435897435, 0.9957264957264956, 0.9978632478632478, 0.9999999999999999}, new char[]{'k', 's', 'y', 'e', 'a', 't', 'h', 'p', 'n', 'g', 'r', 'q', 'f', 'A', '2', ' '}) );
        twoCharacterInputWithUnknownOutput.put(">l", new ProportionalProbability( new double[]{0.9920347574221579, 0.9922761284093652, 0.9925174993965725, 0.9927588703837799, 0.9930002413709872, 0.9932416123581945, 0.9934829833454019, 0.9937243543326092, 0.9939657253198165, 0.9942070963070239, 0.9944484672942312, 0.9946898382814385, 0.9949312092686459, 0.9951725802558532, 0.9954139512430605, 0.9956553222302679, 0.9958966932174752, 0.9961380642046825, 0.9963794351918899, 0.9966208061790972, 0.9968621771663045, 0.9971035481535119, 0.9973449191407192, 0.9975862901279265, 0.9978276611151339, 0.9980690321023412, 0.9983104030895485, 0.9985517740767559, 0.9987931450639632, 0.9990345160511706, 0.9992758870383779, 0.9995172580255852, 0.9997586290127926, 0.9999999999999999}, new char[]{'l', 'a', 'e', 'r', 's', 'p', 'd', 'm', 'i', 't', 'n', 'h', ' ', 'o', '=', 'u', 'v', ',', 'c', '1', 'y', ':', 'g', 'U', 'C', 'f', 'w', '5', 'b', '\'', 'F', '.', '-', 'x'}) );
        twoCharacterInputWithUnknownOutput.put(">m", new ProportionalProbability( new double[]{0.9923169267707083, 0.9925570228091236, 0.992797118847539, 0.9930372148859543, 0.9932773109243697, 0.993517406962785, 0.9937575030012004, 0.9939975990396157, 0.9942376950780311, 0.9944777911164464, 0.9947178871548618, 0.9949579831932771, 0.9951980792316925, 0.9954381752701078, 0.9956782713085232, 0.9959183673469385, 0.9961584633853539, 0.9963985594237692, 0.9966386554621846, 0.9968787515005999, 0.9971188475390153, 0.9973589435774306, 0.997599039615846, 0.9978391356542613, 0.9980792316926766, 0.998319327731092, 0.9985594237695073, 0.9987995198079227, 0.999039615846338, 0.9992797118847534, 0.9995198079231687, 0.9997599039615841, 0.9999999999999994}, new char[]{'m', 'e', 's', 'M', 'a', 'r', 'o', 'i', 'w', 'b', 't', ' ', 'p', 'n', 'h', 'u', 'v', 'c', '=', 'l', 'g', 'd', '5', 'k', '/', 'f', '1', 'x', 'y', '^', '0', ',', 'P'}) );
        twoCharacterInputWithUnknownOutput.put(">n", new ProportionalProbability( new double[]{0.989413680781759, 0.9898208469055374, 0.9902280130293158, 0.9906351791530943, 0.9910423452768727, 0.9914495114006512, 0.9918566775244296, 0.9922638436482081, 0.9926710097719865, 0.993078175895765, 0.9934853420195434, 0.9938925081433219, 0.9942996742671003, 0.9947068403908788, 0.9951140065146572, 0.9955211726384356, 0.9959283387622141, 0.9963355048859925, 0.996742671009771, 0.9971498371335494, 0.9975570032573279, 0.9979641693811063, 0.9983713355048848, 0.9987785016286632, 0.9991856677524417, 0.9995928338762201, 0.9999999999999986}, new char[]{'n', 's', 'a', 'l', '4', 'e', 'h', 'w', 'c', 'r', 'k', '.', 'o', ' ', 'i', 'u', 'm', 'p', 't', '-', ',', '=', 'b', 'v', 'd', 'y', 'ī'}) );
        twoCharacterInputWithUnknownOutput.put(">o", new ProportionalProbability( new double[]{0.9887278582930756, 0.9891304347826086, 0.9895330112721417, 0.9899355877616747, 0.9903381642512077, 0.9907407407407407, 0.9911433172302737, 0.9915458937198067, 0.9919484702093397, 0.9923510466988728, 0.9927536231884058, 0.9931561996779388, 0.9935587761674718, 0.9939613526570048, 0.9943639291465378, 0.9947665056360708, 0.9951690821256038, 0.9955716586151369, 0.9959742351046699, 0.9963768115942029, 0.9967793880837359, 0.9971819645732689, 0.9975845410628019, 0.9979871175523349, 0.998389694041868, 0.998792270531401, 0.999194847020934, 0.999597423510467, 1.0}, new char[]{'o', 's', 'h', ' ', 'l', 'a', 'e', 'f', 'i', 'n', 'b', 'd', 'r', 'S', 'm', 'c', ',', 'w', 'y', 't', 'k', 'v', 'x', '.', 'p', 'u', 'A', 'j', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(">p", new ProportionalProbability( new double[]{0.9942408376963351, 0.9944153577661431, 0.9945898778359511, 0.9947643979057591, 0.9949389179755671, 0.9951134380453751, 0.9952879581151831, 0.9954624781849911, 0.9956369982547991, 0.9958115183246071, 0.9959860383944151, 0.9961605584642231, 0.9963350785340311, 0.9965095986038391, 0.9966841186736471, 0.9968586387434551, 0.9970331588132632, 0.9972076788830712, 0.9973821989528792, 0.9975567190226872, 0.9977312390924952, 0.9979057591623032, 0.9980802792321112, 0.9982547993019192, 0.9984293193717272, 0.9986038394415352, 0.9987783595113432, 0.9989528795811512, 0.9991273996509592, 0.9993019197207672, 0.9994764397905752, 0.9996509598603832, 0.9998254799301912, 0.9999999999999992}, new char[]{'p', 'a', 's', ' ', 'e', 'o', 'd', 'i', 'r', 't', 'n', 'L', 'u', ',', '=', 'f', 'b', 'F', 'y', 'v', 'c', 'l', 'h', 'N', 'g', '\"', 'z', '/', 'P', '7', 'T', 'm', 'A', 'k'}) );
        twoCharacterInputWithUnknownOutput.put(">q", new ProportionalProbability( new double[]{0.9653333333333334, 0.9680000000000001, 0.9706666666666668, 0.9733333333333335, 0.9760000000000002, 0.9786666666666669, 0.9813333333333336, 0.9840000000000003, 0.986666666666667, 0.9893333333333337, 0.9920000000000004, 0.9946666666666671, 0.9973333333333338, 1.0000000000000004}, new char[]{'q', 's', 'u', 'e', 'i', 'a', 'd', ' ', 't', 'o', 'r', 'x', 'n', 'f'}) );
        twoCharacterInputWithUnknownOutput.put(">r", new ProportionalProbability( new double[]{0.9908987485779295, 0.9911831626848692, 0.9914675767918089, 0.9917519908987485, 0.9920364050056882, 0.9923208191126279, 0.9926052332195676, 0.9928896473265073, 0.993174061433447, 0.9934584755403867, 0.9937428896473264, 0.9940273037542661, 0.9943117178612058, 0.9945961319681454, 0.9948805460750851, 0.9951649601820248, 0.9954493742889645, 0.9957337883959042, 0.9960182025028439, 0.9963026166097836, 0.9965870307167233, 0.996871444823663, 0.9971558589306027, 0.9974402730375423, 0.997724687144482, 0.9980091012514217, 0.9982935153583614, 0.9985779294653011, 0.9988623435722408, 0.9991467576791805, 0.9994311717861202, 0.9997155858930599, 0.9999999999999996}, new char[]{'s', 'r', 'a', 'e', 'u', 'i', 'y', 'b', 'p', ' ', 't', 'o', 'h', 'x', 'l', 'm', 'w', 'd', '²', 'g', 'n', 'L', '-', 'c', 'f', '2', 'v', 'D', ']', 'k', '=', '&', 'j'}) );
        twoCharacterInputWithUnknownOutput.put(">s", new ProportionalProbability( new double[]{0.9949494949494949, 0.9950669485553206, 0.9951844021611463, 0.995301855766972, 0.9954193093727978, 0.9955367629786235, 0.9956542165844492, 0.9957716701902749, 0.9958891237961006, 0.9960065774019263, 0.996124031007752, 0.9962414846135778, 0.9963589382194035, 0.9964763918252292, 0.9965938454310549, 0.9967112990368806, 0.9968287526427063, 0.996946206248532, 0.9970636598543577, 0.9971811134601835, 0.9972985670660092, 0.9974160206718349, 0.9975334742776606, 0.9976509278834863, 0.997768381489312, 0.9978858350951377, 0.9980032887009634, 0.9981207423067892, 0.9982381959126149, 0.9983556495184406, 0.9984731031242663, 0.998590556730092, 0.9987080103359177, 0.9988254639417434, 0.9989429175475691, 0.9990603711533949, 0.9991778247592206, 0.9992952783650463, 0.999412731970872, 0.9995301855766977, 0.9996476391825234, 0.9997650927883491, 0.9998825463941748, 1.0000000000000004}, new char[]{'a', 's', 'n', 'e', 'i', 'd', 'E', 'p', 'g', ' ', 'c', 'r', 't', 'h', 'o', ',', 'D', 'f', 'l', 'w', 'N', 'W', '1', 'A', '+', 'm', '4', '9', 'C', 'u', 'z', 'v', 'L', 'y', 'b', 'H', '/', 'S', '(', '\'', 'k', '=', '-', '3'}) );
        twoCharacterInputWithUnknownOutput.put(">t", new ProportionalProbability( new double[]{0.9984552378215261, 0.9984911625233511, 0.9985270872251761, 0.9985630119270011, 0.9985989366288262, 0.9986348613306512, 0.9986707860324762, 0.9987067107343012, 0.9987426354361262, 0.9987785601379512, 0.9988144848397762, 0.9988504095416012, 0.9988863342434262, 0.9989222589452512, 0.9989581836470762, 0.9989941083489012, 0.9990300330507262, 0.9990659577525512, 0.9991018824543763, 0.9991378071562013, 0.9991737318580263, 0.9992096565598513, 0.9992455812616763, 0.9992815059635013, 0.9993174306653263, 0.9993533553671513, 0.9993892800689763, 0.9994252047708013, 0.9994611294726263, 0.9994970541744513, 0.9995329788762763, 0.9995689035781014, 0.9996048282799264, 0.9996407529817514, 0.9996766776835764, 0.9997126023854014, 0.9997485270872264, 0.9997844517890514, 0.9998203764908764, 0.9998563011927014, 0.9998922258945264, 0.9999281505963514, 0.9999640752981764, 1.0000000000000013}, new char[]{'t', 'a', 'i', 's', 'o', ' ', 'e', 'r', 'm', 'h', 'u', 'c', 'z', 'd', 'g', 'l', 'n', 'f', 'b', 'x', 'v', '-', 'w', 'p', ',', 'y', ':', 'T', '.', 'N', 'q', 'A', 'C', '(', 'L', 'ַ', 'I', '\"', 'k', '=', '+', 'G', ')', 'F'}) );
        twoCharacterInputWithUnknownOutput.put(">u", new ProportionalProbability( new double[]{0.9858203916272789, 0.986495611073599, 0.987170830519919, 0.9878460499662391, 0.9885212694125592, 0.9891964888588793, 0.9898717083051994, 0.9905469277515195, 0.9912221471978396, 0.9918973666441597, 0.9925725860904798, 0.9932478055367999, 0.99392302498312, 0.9945982444294401, 0.9952734638757602, 0.9959486833220803, 0.9966239027684004, 0.9972991222147205, 0.9979743416610406, 0.9986495611073607, 0.9993247805536808, 1.0000000000000009}, new char[]{'u', ' ', 'a', 's', 'b', 'e', 'N', 'i', 'o', 'r', 'l', 't', '6', 'A', 'c', 'd', 'm', 'y', 'v', 'n', '-', 'p'}) );
        twoCharacterInputWithUnknownOutput.put(">v", new ProportionalProbability( new double[]{0.9829867674858223, 0.9839319470699432, 0.9848771266540642, 0.9858223062381852, 0.9867674858223062, 0.9877126654064272, 0.9886578449905482, 0.9896030245746692, 0.9905482041587902, 0.9914933837429112, 0.9924385633270322, 0.9933837429111532, 0.9943289224952742, 0.9952741020793952, 0.9962192816635161, 0.9971644612476371, 0.9981096408317581, 0.9990548204158791, 1.0}, new char[]{'v', 's', 'r', 'e', 'a', 'c', 'o', 'l', 'h', 'b', 'y', 'n', ' ', 'd', 'u', '(', 'f', 't', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(">w", new ProportionalProbability( new double[]{0.9941962715441435, 0.9943721421034118, 0.9945480126626802, 0.9947238832219486, 0.994899753781217, 0.9950756243404854, 0.9952514948997537, 0.9954273654590221, 0.9956032360182905, 0.9957791065775589, 0.9959549771368272, 0.9961308476960956, 0.996306718255364, 0.9964825888146324, 0.9966584593739007, 0.9968343299331691, 0.9970102004924375, 0.9971860710517059, 0.9973619416109742, 0.9975378121702426, 0.997713682729511, 0.9978895532887794, 0.9980654238480478, 0.9982412944073161, 0.9984171649665845, 0.9985930355258529, 0.9987689060851213, 0.9989447766443896, 0.999120647203658, 0.9992965177629264, 0.9994723883221948, 0.9996482588814631, 0.9998241294407315, 0.9999999999999999}, new char[]{'w', 's', 'k', 'a', 'i', 'm', 'h', 'e', 'n', ' ', 'r', 'u', 'b', 'l', 'v', 'o', 'c', 'y', 'j', 'p', 'd', '.', 't', ',', '-', 'E', '?', 'S', 'A', 'g', 'V', 'R', '1', '6'}) );
        twoCharacterInputWithUnknownOutput.put(">x", new ProportionalProbability( new double[]{0.9242424242424242, 0.9318181818181818, 0.9393939393939393, 0.9469696969696969, 0.9545454545454545, 0.962121212121212, 0.9696969696969696, 0.9772727272727272, 0.9848484848484848, 0.9924242424242423, 0.9999999999999999}, new char[]{'0', 'x', 'c', ' ', 'a', ')', 'P', 'o', '-', 'f', '2'}) );
        twoCharacterInputWithUnknownOutput.put(">y", new ProportionalProbability( new double[]{0.9738461538461538, 0.9753846153846153, 0.9769230769230768, 0.9784615384615383, 0.9799999999999998, 0.9815384615384612, 0.9830769230769227, 0.9846153846153842, 0.9861538461538457, 0.9876923076923072, 0.9892307692307687, 0.9907692307692302, 0.9923076923076917, 0.9938461538461532, 0.9953846153846146, 0.9969230769230761, 0.9984615384615376, 0.9999999999999991}, new char[]{'s', 'y', 'p', 'a', 'e', 'h', 'd', ' ', 'R', 'i', 'o', '/', 'r', 'N', 'u', 'c', 'n', 'f'}) );
        twoCharacterInputWithUnknownOutput.put(">z", new ProportionalProbability( new double[]{0.9354838709677419, 0.9435483870967741, 0.9516129032258064, 0.9596774193548386, 0.9677419354838709, 0.9758064516129031, 0.9838709677419354, 0.9919354838709676, 0.9999999999999999}, new char[]{'z', 'a', 's', 'n', 'o', 'g', 'e', 'c', ' '}) );
        twoCharacterInputWithUnknownOutput.put("?[", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'?', '['}) );
        twoCharacterInputWithUnknownOutput.put("A ", new ProportionalProbability( new double[]{0.994748687171793, 0.9948987246811704, 0.9950487621905477, 0.9951987996999251, 0.9953488372093025, 0.9954988747186798, 0.9956489122280572, 0.9957989497374345, 0.9959489872468119, 0.9960990247561893, 0.9962490622655666, 0.996399099774944, 0.9965491372843214, 0.9966991747936987, 0.9968492123030761, 0.9969992498124535, 0.9971492873218308, 0.9972993248312082, 0.9974493623405856, 0.9975993998499629, 0.9977494373593403, 0.9978994748687177, 0.998049512378095, 0.9981995498874724, 0.9983495873968498, 0.9984996249062271, 0.9986496624156045, 0.9987996999249819, 0.9989497374343592, 0.9990997749437366, 0.999249812453114, 0.9993998499624913, 0.9995498874718687, 0.999699924981246, 0.9998499624906234, 1.0000000000000007}, new char[]{'>', ' ', 'i', 'v', 'w', 'h', 't', 'o', 'e', 'a', 'n', 'u', 'c', 'l', 's', 'r', 'f', 'p', 'g', 'm', '2', 'b', '8', 'B', 'd', '\'', '.', 'y', '/', ',', '…', '-', 'E', 'q', 'A', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("A\'", new ProportionalProbability( new double[]{0.875, 0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'/', 'i', '\'', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("A(", new ProportionalProbability( new double[]{0.8695652173913043, 0.8913043478260869, 0.9130434782608695, 0.9347826086956521, 0.9565217391304347, 0.9782608695652173, 0.9999999999999999}, new char[]{'(', 'U', ' ', 'g', 'a', 'b', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("A)", new ProportionalProbability( new double[]{0.911504424778761, 0.9203539823008849, 0.9292035398230089, 0.9380530973451328, 0.9469026548672567, 0.9557522123893806, 0.9646017699115045, 0.9734513274336284, 0.9823008849557523, 0.9911504424778762, 1.0}, new char[]{')', ' ', 'o', 'g', 'e', 'n', 'r', 'B', 'p', 'h', 's'}) );
        twoCharacterInputWithUnknownOutput.put("A,", new ProportionalProbability( new double[]{0.9552238805970149, 0.9626865671641791, 0.9701492537313433, 0.9776119402985075, 0.9850746268656717, 0.9925373134328359, 1.0}, new char[]{',', 'h', 'l', 'K', 'p', 'c', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("A-", new ProportionalProbability( new double[]{0.9027777777777778, 0.9166666666666666, 0.9305555555555555, 0.9444444444444443, 0.9583333333333331, 0.972222222222222, 0.9861111111111108, 0.9999999999999997}, new char[]{'-', ' ', 'e', ')', 'o', '(', 'h', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("A.", new ProportionalProbability( new double[]{0.9649122807017544, 0.9736842105263158, 0.9824561403508772, 0.9912280701754387, 1.0}, new char[]{'0', '.', 'l', 't', 's'}) );
        twoCharacterInputWithUnknownOutput.put("A/", new ProportionalProbability( new double[]{0.9230769230769231, 0.9615384615384616, 1.0}, new char[]{'/', ' ', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("A2", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'2', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("A4", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'h', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("?t", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'c', 't'}) );
        twoCharacterInputWithUnknownOutput.put("A:", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{'i', ':'}) );
        twoCharacterInputWithUnknownOutput.put("A<", new ProportionalProbability( new double[]{0.9889705882352942, 0.9926470588235294, 0.9963235294117647, 1.0}, new char[]{' ', 'A', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("A=", new ProportionalProbability( new double[]{0.9794520547945206, 0.9863013698630138, 0.9931506849315069, 1.0}, new char[]{'=', ')', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put("B ", new ProportionalProbability( new double[]{0.9645569620253165, 0.9670886075949368, 0.969620253164557, 0.9721518987341773, 0.9746835443037976, 0.9772151898734178, 0.9797468354430381, 0.9822784810126584, 0.9848101265822786, 0.9873417721518989, 0.9898734177215192, 0.9924050632911394, 0.9949367088607597, 0.99746835443038, 1.0000000000000002}, new char[]{' ', 'l', 'e', 'c', 's', 'a', 't', 'B', 'h', 'i', 'x', 'A', 'u', ',', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("A?", new ProportionalProbability( new double[]{0.8333333333333334, 0.8484848484848485, 0.8636363636363636, 0.8787878787878788, 0.8939393939393939, 0.9090909090909091, 0.9242424242424242, 0.9393939393939393, 0.9545454545454545, 0.9696969696969696, 0.9848484848484848, 0.9999999999999999}, new char[]{'i', ' ', 'V', 'a', 'r', 'p', 'o', 'D', '?', 'g', 's', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("AB", new ProportionalProbability( new double[]{0.9170506912442397, 0.9216589861751152, 0.9262672811059908, 0.9308755760368663, 0.9354838709677419, 0.9400921658986174, 0.944700460829493, 0.9493087557603686, 0.9539170506912441, 0.9585253456221197, 0.9631336405529952, 0.9677419354838708, 0.9723502304147463, 0.9769585253456219, 0.9815668202764974, 0.986175115207373, 0.9907834101382486, 0.9953917050691241, 0.9999999999999997}, new char[]{'B', ' ', 'T', 'n', 'M', 'a', 's', 'e', 'k', 'i', '\"', 'm', 't', ')', '.', 'f', 'o', '=', '-'}) );
        twoCharacterInputWithUnknownOutput.put("AC", new ProportionalProbability( new double[]{0.9644268774703557, 0.9683794466403162, 0.9723320158102766, 0.9762845849802371, 0.9802371541501975, 0.984189723320158, 0.9881422924901184, 0.9920948616600789, 0.9960474308300393, 0.9999999999999998}, new char[]{'C', '0', 'r', 'b', 's', ' ', '-', 'I', 't', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("AD", new ProportionalProbability( new double[]{0.9325396825396826, 0.9365079365079365, 0.9404761904761905, 0.9444444444444444, 0.9484126984126984, 0.9523809523809523, 0.9563492063492063, 0.9603174603174602, 0.9642857142857142, 0.9682539682539681, 0.9722222222222221, 0.976190476190476, 0.98015873015873, 0.984126984126984, 0.9880952380952379, 0.9920634920634919, 0.9960317460317458, 0.9999999999999998}, new char[]{'D', ' ', 'E', 'R', 'S', 'i', 'a', 'f', 'C', 'u', 'o', '.', 'r', 'e', 't', 'c', 'O', 's'}) );
        twoCharacterInputWithUnknownOutput.put("AE", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'E', 't'}) );
        twoCharacterInputWithUnknownOutput.put("AF", new ProportionalProbability( new double[]{0.8666666666666667, 0.888888888888889, 0.9111111111111112, 0.9333333333333335, 0.9555555555555557, 0.977777777777778, 1.0000000000000002}, new char[]{'F', 'd', 'T', 't', 'a', ' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("B\'", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{' ', '\''}) );
        twoCharacterInputWithUnknownOutput.put("AG", new ProportionalProbability( new double[]{0.9491525423728814, 0.9661016949152542, 0.983050847457627, 0.9999999999999999}, new char[]{'G', 'e', 'd', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("B)", new ProportionalProbability( new double[]{0.9527027027027027, 0.9594594594594595, 0.9662162162162163, 0.9729729729729731, 0.9797297297297299, 0.9864864864864867, 0.9932432432432435, 1.0000000000000002}, new char[]{')', 'w', 't', 'r', 'n', 'a', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put("AI", new ProportionalProbability( new double[]{0.9259259259259259, 0.9351851851851852, 0.9444444444444445, 0.9537037037037038, 0.9629629629629631, 0.9722222222222224, 0.9814814814814817, 0.990740740740741, 1.0000000000000002}, new char[]{'I', ' ', 'E', 'l', '\"', 'S', 'T', 'A', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("AK", new ProportionalProbability( new double[]{0.8648648648648649, 0.8918918918918919, 0.9189189189189189, 0.9459459459459458, 0.9729729729729728, 0.9999999999999998}, new char[]{'K', '\"', 'o', 'b', ' ', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("B,", new ProportionalProbability( new double[]{0.9242424242424242, 0.9393939393939393, 0.9545454545454545, 0.9696969696969696, 0.9848484848484848, 0.9999999999999999}, new char[]{',', 'b', 't', 'a', 'i', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("AL", new ProportionalProbability( new double[]{0.936026936026936, 0.9393939393939393, 0.9427609427609427, 0.946127946127946, 0.9494949494949494, 0.9528619528619527, 0.9562289562289561, 0.9595959595959594, 0.9629629629629628, 0.9663299663299662, 0.9696969696969695, 0.9730639730639729, 0.9764309764309762, 0.9797979797979796, 0.9831649831649829, 0.9865319865319863, 0.9898989898989896, 0.993265993265993, 0.9966329966329963, 0.9999999999999997}, new char[]{'L', 'h', 'e', 'E', 'I', ' ', '\"', 'f', 't', 'T', 'a', 'b', 'p', 'c', 'M', 'A', 'n', 'i', 'd', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("B-", new ProportionalProbability( new double[]{0.9259259259259259, 0.962962962962963, 1.0}, new char[]{'-', 'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put("AM", new ProportionalProbability( new double[]{0.9150326797385621, 0.9215686274509803, 0.9281045751633986, 0.9346405228758169, 0.9411764705882352, 0.9477124183006534, 0.9542483660130717, 0.96078431372549, 0.9673202614379083, 0.9738562091503266, 0.9803921568627448, 0.9869281045751631, 0.9934640522875814, 0.9999999999999997}, new char[]{'M', 'f', 'h', 's', 'a', 'y', 'I', 'E', 'L', 'e', 'r', 'o', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put("B.", new ProportionalProbability( new double[]{0.9642857142857143, 0.9821428571428572, 1.0}, new char[]{'.', 'o', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("AN", new ProportionalProbability( new double[]{0.9492957746478873, 0.952112676056338, 0.9549295774647887, 0.9577464788732394, 0.9605633802816901, 0.9633802816901408, 0.9661971830985915, 0.9690140845070422, 0.9718309859154929, 0.9746478873239436, 0.9774647887323943, 0.980281690140845, 0.9830985915492957, 0.9859154929577464, 0.9887323943661971, 0.9915492957746478, 0.9943661971830985, 0.9971830985915492, 0.9999999999999999}, new char[]{'N', ' ', 'e', 'C', 'S', 'f', 'T', 'o', 'i', 'R', 'b', 's', 'I', 't', 'd', 'O', 'g', 'F', 'Y'}) );
        twoCharacterInputWithUnknownOutput.put("B/", new ProportionalProbability( new double[]{0.8, 0.8666666666666667, 0.9333333333333333, 1.0}, new char[]{'/', '+', ' ', '2'}) );
        twoCharacterInputWithUnknownOutput.put("AO", new ProportionalProbability( new double[]{0.9565217391304348, 1.0}, new char[]{'O', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("AP", new ProportionalProbability( new double[]{0.9191919191919192, 0.9292929292929293, 0.9393939393939393, 0.9494949494949494, 0.9595959595959594, 0.9696969696969695, 0.9797979797979796, 0.9898989898989896, 0.9999999999999997}, new char[]{'P', 'k', 't', 'd', 'F', ' ', 'S', 'A', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("B1", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'1', ' '}) );
        twoCharacterInputWithUnknownOutput.put("B2", new ProportionalProbability( new double[]{0.9411764705882353, 0.9705882352941176, 1.0}, new char[]{'2', 't', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("AR", new ProportionalProbability( new double[]{0.948, 0.952, 0.956, 0.96, 0.964, 0.968, 0.972, 0.976, 0.98, 0.984, 0.988, 0.992, 0.996, 1.0}, new char[]{'R', ' ', 'I', 'f', 'w', 'i', '.', '=', 'H', 'h', 't', 'M', 'D', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("AS", new ProportionalProbability( new double[]{0.9455445544554455, 0.9504950495049505, 0.9554455445544554, 0.9603960396039604, 0.9653465346534653, 0.9702970297029703, 0.9752475247524752, 0.9801980198019802, 0.9851485148514851, 0.9900990099009901, 0.995049504950495, 1.0}, new char[]{'S', ' ', 'M', 'n', 'c', 't', 'T', 'd', 's', 'l', 'm', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("AT", new ProportionalProbability( new double[]{0.9347181008902077, 0.9376854599406528, 0.9406528189910979, 0.943620178041543, 0.9465875370919881, 0.9495548961424332, 0.9525222551928783, 0.9554896142433233, 0.9584569732937684, 0.9614243323442135, 0.9643916913946586, 0.9673590504451037, 0.9703264094955488, 0.9732937685459939, 0.976261127596439, 0.9792284866468841, 0.9821958456973292, 0.9851632047477743, 0.9881305637982194, 0.9910979228486645, 0.9940652818991096, 0.9970326409495547, 0.9999999999999998}, new char[]{'T', 'O', 'i', 'd', 'x', 'h', 'a', ' ', 'S', 'y', 'b', 'l', ',', 'o', 'r', 'D', 'U', '\"', 'E', 'A', 'L', 'f', 'e'}) );
        twoCharacterInputWithUnknownOutput.put(">±", new ProportionalProbability( new double[]{0.6666666666666666, 0.75, 0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'t', '−', ' ', 'e', '+'}) );
        twoCharacterInputWithUnknownOutput.put("AU", new ProportionalProbability( new double[]{0.975, 1.0}, new char[]{'U', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("AV", new ProportionalProbability( new double[]{0.921875, 0.9375, 0.953125, 0.96875, 0.984375, 1.0}, new char[]{'V', 'm', 't', ' ', 'a', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("AY", new ProportionalProbability( new double[]{0.925, 0.9500000000000001, 0.9750000000000001, 1.0}, new char[]{'Y', 'k', ' ', 'L'}) );
        twoCharacterInputWithUnknownOutput.put("AZ", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'Z', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("B<", new ProportionalProbability( new double[]{0.9814814814814815, 0.9907407407407408, 1.0}, new char[]{' ', 'u', 's'}) );
        twoCharacterInputWithUnknownOutput.put("B=", new ProportionalProbability( new double[]{0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{'=', 'l', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("A]", new ProportionalProbability( new double[]{0.9850746268656716, 1.0}, new char[]{']', ' '}) );
        twoCharacterInputWithUnknownOutput.put("B?", new ProportionalProbability( new double[]{0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'?', 'e', ' ', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("C ", new ProportionalProbability( new double[]{0.9476082004555809, 0.9498861047835991, 0.9521640091116174, 0.9544419134396356, 0.9567198177676538, 0.958997722095672, 0.9612756264236902, 0.9635535307517085, 0.9658314350797267, 0.9681093394077449, 0.9703872437357631, 0.9726651480637813, 0.9749430523917996, 0.9772209567198178, 0.979498861047836, 0.9817767653758542, 0.9840546697038725, 0.9863325740318907, 0.9886104783599089, 0.9908883826879271, 0.9931662870159453, 0.9954441913439636, 0.9977220956719818, 1.0}, new char[]{' ', 's', 'v', 'e', 'd', 't', 'i', 'C', 'a', 'w', 'f', '1', 'o', '.', 'q', 'r', '-', 'h', 'n', '3', 'A', 'c', 'u', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("A^", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'d', '^'}) );
        twoCharacterInputWithUnknownOutput.put("BA", new ProportionalProbability( new double[]{0.9024390243902439, 0.9146341463414634, 0.926829268292683, 0.9390243902439025, 0.951219512195122, 0.9634146341463415, 0.9756097560975611, 0.9878048780487806, 1.0}, new char[]{'A', 'k', 'a', 'U', 'e', ' ', 'i', 's', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("BB", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'B', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Aa", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'a', 's', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Ab", new ProportionalProbability( new double[]{0.9807302231237323, 0.9817444219066938, 0.9827586206896552, 0.9837728194726167, 0.9847870182555782, 0.9858012170385397, 0.9868154158215012, 0.9878296146044627, 0.9888438133874242, 0.9898580121703857, 0.9908722109533472, 0.9918864097363087, 0.9929006085192702, 0.9939148073022317, 0.9949290060851932, 0.9959432048681547, 0.9969574036511162, 0.9979716024340777, 0.9989858012170392, 1.0000000000000007}, new char[]{'b', 'z', 'A', ' ', 'i', 'a', 'e', 'r', 'n', 't', 'u', 'o', 's', 'V', 'f', 'm', 'c', 'x', 'p', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("BC", new ProportionalProbability( new double[]{0.9407894736842105, 0.9473684210526315, 0.9539473684210525, 0.9605263157894736, 0.9671052631578946, 0.9736842105263156, 0.9802631578947366, 0.9868421052631576, 0.9934210526315786, 0.9999999999999997}, new char[]{'C', 'i', ',', 'c', ' ', 'a', 'r', 'y', 'x', 'g'}) );
        twoCharacterInputWithUnknownOutput.put(">¿", new ProportionalProbability( new double[]{0.625, 0.6875, 0.75, 0.8125, 0.875, 0.9375, 1.0}, new char[]{'D', 's', 'p', 'm', 'r', ' ', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("Ac", new ProportionalProbability( new double[]{0.982532751091703, 0.9830179524502668, 0.9835031538088306, 0.9839883551673944, 0.9844735565259581, 0.9849587578845219, 0.9854439592430857, 0.9859291606016495, 0.9864143619602133, 0.986899563318777, 0.9873847646773408, 0.9878699660359046, 0.9883551673944684, 0.9888403687530322, 0.9893255701115959, 0.9898107714701597, 0.9902959728287235, 0.9907811741872873, 0.9912663755458511, 0.9917515769044148, 0.9922367782629786, 0.9927219796215424, 0.9932071809801062, 0.99369238233867, 0.9941775836972337, 0.9946627850557975, 0.9951479864143613, 0.9956331877729251, 0.9961183891314889, 0.9966035904900526, 0.9970887918486164, 0.9975739932071802, 0.998059194565744, 0.9985443959243078, 0.9990295972828716, 0.9995147986414353, 0.9999999999999991}, new char[]{' ', 't', 'c', 'm', 'a', 'h', 'l', 'n', 'F', 'e', 'v', '/', 'o', 'i', '.', '3', 'S', 'x', 's', 'b', 'g', 'r', '9', 'u', 'p', 'q', 'D', '=', ')', 'y', '2', 'd', '(', 'M', 'H', 'C', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("BD", new ProportionalProbability( new double[]{0.8367346938775511, 0.8571428571428572, 0.8775510204081634, 0.8979591836734695, 0.9183673469387756, 0.9387755102040818, 0.9591836734693879, 0.9795918367346941, 1.0000000000000002}, new char[]{' ', 'D', 'c', 'u', 'i', 'B', 'b', 'a', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Ad", new ProportionalProbability( new double[]{0.982779827798278, 0.9833948339483395, 0.984009840098401, 0.9846248462484625, 0.985239852398524, 0.9858548585485855, 0.986469864698647, 0.9870848708487084, 0.9876998769987699, 0.9883148831488314, 0.9889298892988929, 0.9895448954489544, 0.9901599015990159, 0.9907749077490774, 0.9913899138991389, 0.9920049200492004, 0.9926199261992619, 0.9932349323493234, 0.9938499384993849, 0.9944649446494463, 0.9950799507995078, 0.9956949569495693, 0.9963099630996308, 0.9969249692496923, 0.9975399753997538, 0.9981549815498153, 0.9987699876998768, 0.9993849938499383, 0.9999999999999998}, new char[]{'d', ' ', 'C', 'n', 'i', 'm', 'a', 'l', 'c', 'L', 'u', 'o', ',', 't', 'h', 'I', 'e', '’', 's', 'N', 'f', 'A', 'r', ':', 'k', 'U', 'M', 'T', '\''}) );
        twoCharacterInputWithUnknownOutput.put("BE", new ProportionalProbability( new double[]{0.954954954954955, 0.963963963963964, 0.972972972972973, 0.981981981981982, 0.9909909909909911, 1.0}, new char[]{'E', 'B', 'i', 's', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Ae", new ProportionalProbability( new double[]{0.9393939393939394, 0.946969696969697, 0.9545454545454546, 0.9621212121212122, 0.9696969696969697, 0.9772727272727273, 0.9848484848484849, 0.9924242424242424, 1.0}, new char[]{' ', 'e', 'l', '(', 's', 't', 'c', 'a', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("C\'", new ProportionalProbability( new double[]{0.918918918918919, 0.945945945945946, 0.972972972972973, 1.0}, new char[]{'d', '\'', 'i', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Af", new ProportionalProbability( new double[]{0.9833984375, 0.984375, 0.9853515625, 0.986328125, 0.9873046875, 0.98828125, 0.9892578125, 0.990234375, 0.9912109375, 0.9921875, 0.9931640625, 0.994140625, 0.9951171875, 0.99609375, 0.9970703125, 0.998046875, 0.9990234375, 1.0}, new char[]{' ', 'f', 'a', 'n', 'd', 'l', 'u', ',', 't', 'i', 'o', 'e', 'c', 'A', 'r', 's', 'm', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("BG", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'x', '4'}) );
        twoCharacterInputWithUnknownOutput.put("Ag", new ProportionalProbability( new double[]{0.981081081081081, 0.9824324324324324, 0.9837837837837837, 0.9851351351351351, 0.9864864864864864, 0.9878378378378377, 0.9891891891891891, 0.9905405405405404, 0.9918918918918918, 0.9932432432432431, 0.9945945945945944, 0.9959459459459458, 0.9972972972972971, 0.9986486486486484, 0.9999999999999998}, new char[]{'g', 'n', 'i', ' ', 's', 'u', 'a', 'l', 't', 'h', 'm', 'M', 'y', 'f', ','}) );
        twoCharacterInputWithUnknownOutput.put("C)", new ProportionalProbability( new double[]{0.9171270718232044, 0.9226519337016574, 0.9281767955801105, 0.9337016574585635, 0.9392265193370165, 0.9447513812154695, 0.9502762430939226, 0.9558011049723756, 0.9613259668508286, 0.9668508287292816, 0.9723756906077347, 0.9779005524861877, 0.9834254143646407, 0.9889502762430937, 0.9944751381215468, 0.9999999999999998}, new char[]{')', 'f', 'd', 'i', 'a', ' ', 'w', 'p', 'o', 'e', 'y', 't', '.', 'c', 'n', 's'}) );
        twoCharacterInputWithUnknownOutput.put("BH", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'B', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("BI", new ProportionalProbability( new double[]{0.9767441860465116, 1.0}, new char[]{'I', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("Ah", new ProportionalProbability( new double[]{0.92, 0.9400000000000001, 0.9600000000000001, 0.9800000000000001, 1.0}, new char[]{'h', 'A', ' ', 'a', ';'}) );
        twoCharacterInputWithUnknownOutput.put("Ai", new ProportionalProbability( new double[]{0.9691780821917808, 0.9726027397260274, 0.976027397260274, 0.9794520547945206, 0.9828767123287672, 0.9863013698630138, 0.9897260273972603, 0.9931506849315069, 0.9965753424657535, 1.0}, new char[]{'i', ' ', 't', 'u', 'e', 'a', 'l', 'n', 's', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("BJ", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'J', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("Aj", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'a', 't', 'u'}) );
        twoCharacterInputWithUnknownOutput.put(">Ç", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'ç', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("C,", new ProportionalProbability( new double[]{0.9130434782608695, 0.9202898550724637, 0.927536231884058, 0.9347826086956522, 0.9420289855072465, 0.9492753623188407, 0.9565217391304349, 0.9637681159420292, 0.9710144927536234, 0.9782608695652176, 0.9855072463768119, 0.9927536231884061, 1.0000000000000002}, new char[]{',', 'y', 'r', 'h', ' ', 'c', 's', 'm', 'p', 'H', 'e', 'n', '.'}) );
        twoCharacterInputWithUnknownOutput.put("C-", new ProportionalProbability( new double[]{0.925, 0.9500000000000001, 0.9750000000000001, 1.0}, new char[]{'-', 'X', 'v', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Ak", new ProportionalProbability( new double[]{0.9375, 0.9583333333333334, 0.9791666666666667, 1.0}, new char[]{'k', 'c', 'a', 't'}) );
        twoCharacterInputWithUnknownOutput.put("BL", new ProportionalProbability( new double[]{0.9058823529411765, 0.9176470588235294, 0.9294117647058823, 0.9411764705882352, 0.9529411764705881, 0.964705882352941, 0.9764705882352939, 0.9882352941176468, 0.9999999999999997}, new char[]{'u', 'L', 'A', 'R', 'o', ' ', 't', 'a', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("Al", new ProportionalProbability( new double[]{0.9881166726683471, 0.988476773496579, 0.9888368743248109, 0.9891969751530428, 0.9895570759812747, 0.9899171768095066, 0.9902772776377385, 0.9906373784659704, 0.9909974792942023, 0.9913575801224342, 0.9917176809506661, 0.992077781778898, 0.99243788260713, 0.9927979834353619, 0.9931580842635938, 0.9935181850918257, 0.9938782859200576, 0.9942383867482895, 0.9945984875765214, 0.9949585884047533, 0.9953186892329852, 0.9956787900612171, 0.996038890889449, 0.9963989917176809, 0.9967590925459128, 0.9971191933741447, 0.9974792942023766, 0.9978393950306085, 0.9981994958588404, 0.9985595966870723, 0.9989196975153042, 0.9992797983435361, 0.999639899171768, 0.9999999999999999}, new char[]{'l', ' ', 't', 'a', 'A', 'n', 'E', 'P', 'p', 'c', 'u', 'e', 's', 'o', 'H', 'd', 'r', 'i', 'S', 'U', 'g', 'm', 'y', 'h', 'f', ',', 'v', 'w', 'b', 'R', 'K', 'B', 'C', '.'}) );
        twoCharacterInputWithUnknownOutput.put("BM", new ProportionalProbability( new double[]{0.8, 0.8333333333333334, 0.8666666666666667, 0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'a', ' ', 's', 'r', 'e', 'M', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("C.", new ProportionalProbability( new double[]{0.9124087591240876, 0.9197080291970803, 0.927007299270073, 0.9343065693430657, 0.9416058394160584, 0.948905109489051, 0.9562043795620437, 0.9635036496350364, 0.9708029197080291, 0.9781021897810218, 0.9854014598540145, 0.9927007299270072, 0.9999999999999999}, new char[]{'C', '.', 'o', 'h', ' ', 'i', 'd', 'p', 't', 'b', 'f', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Am", new ProportionalProbability( new double[]{0.9890295358649789, 0.989451476793249, 0.989873417721519, 0.9902953586497891, 0.9907172995780592, 0.9911392405063293, 0.9915611814345994, 0.9919831223628695, 0.9924050632911395, 0.9928270042194096, 0.9932489451476797, 0.9936708860759498, 0.9940928270042199, 0.9945147679324899, 0.99493670886076, 0.9953586497890301, 0.9957805907173002, 0.9962025316455703, 0.9966244725738403, 0.9970464135021104, 0.9974683544303805, 0.9978902953586506, 0.9983122362869207, 0.9987341772151908, 0.9991561181434608, 0.9995780590717309, 1.0000000000000009}, new char[]{'m', 'a', 't', ' ', 'h', 'w', 'A', 'i', 'u', 'r', 'l', 's', 'c', 'f', 'e', 'd', 'n', 'o', 'E', 'y', 'v', 'L', 'p', '.', 'V', '-', ','}) );
        twoCharacterInputWithUnknownOutput.put("C/", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{'/', '4', 'h', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("An", new ProportionalProbability( new double[]{0.9938542581211589, 0.9940737489025461, 0.9942932396839332, 0.9945127304653204, 0.9947322212467076, 0.9949517120280947, 0.9951712028094819, 0.9953906935908691, 0.9956101843722562, 0.9958296751536434, 0.9960491659350306, 0.9962686567164177, 0.9964881474978049, 0.9967076382791921, 0.9969271290605792, 0.9971466198419664, 0.9973661106233536, 0.9975856014047407, 0.9978050921861279, 0.9980245829675151, 0.9982440737489022, 0.9984635645302894, 0.9986830553116766, 0.9989025460930637, 0.9991220368744509, 0.9993415276558381, 0.9995610184372252, 0.9997805092186124, 0.9999999999999996}, new char[]{'n', ':', 'a', ' ', 'h', 'l', 'A', 'r', 'm', 'e', 'i', 'y', '0', 'g', 'o', 't', 'w', 'd', 's', 'v', 'c', 'p', 'C', 'u', 'f', 'b', '8', 'S', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("BO", new ProportionalProbability( new double[]{0.9404761904761905, 0.9523809523809523, 0.9642857142857142, 0.976190476190476, 0.9880952380952379, 0.9999999999999998}, new char[]{'s', 'O', ' ', 'i', 'n', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("C1", new ProportionalProbability( new double[]{0.625, 0.75, 0.875, 1.0}, new char[]{'1', ' ', 'd', ','}) );
        twoCharacterInputWithUnknownOutput.put("BP", new ProportionalProbability( new double[]{0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'P', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ap", new ProportionalProbability( new double[]{0.9834437086092715, 0.9845474613686535, 0.9856512141280354, 0.9867549668874173, 0.9878587196467992, 0.9889624724061811, 0.990066225165563, 0.9911699779249449, 0.9922737306843268, 0.9933774834437087, 0.9944812362030906, 0.9955849889624725, 0.9966887417218544, 0.9977924944812363, 0.9988962472406182, 1.0}, new char[]{'a', 'p', 'e', ' ', 'A', 'm', 'l', 'o', 'i', ',', 'E', 'u', 'r', 't', 'c', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("C2", new ProportionalProbability( new double[]{0.9565217391304348, 0.9782608695652174, 1.0}, new char[]{'2', 'n', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Aq", new ProportionalProbability( new double[]{0.9230769230769231, 0.9487179487179488, 0.9743589743589745, 1.0}, new char[]{'q', 'a', 'e', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("BR", new ProportionalProbability( new double[]{0.8518518518518519, 0.8703703703703703, 0.8888888888888888, 0.9074074074074073, 0.9259259259259258, 0.9444444444444443, 0.9629629629629628, 0.9814814814814813, 0.9999999999999998}, new char[]{'o', 'R', '_', 'f', 'r', 'w', 'Y', 'a', ')'}) );
        twoCharacterInputWithUnknownOutput.put("C3", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{' ', '3'}) );
        twoCharacterInputWithUnknownOutput.put("Ar", new ProportionalProbability( new double[]{0.9859086491739553, 0.9863945578231292, 0.9868804664723032, 0.9873663751214772, 0.9878522837706512, 0.9883381924198251, 0.9888241010689991, 0.9893100097181731, 0.989795918367347, 0.990281827016521, 0.990767735665695, 0.991253644314869, 0.9917395529640429, 0.9922254616132169, 0.9927113702623909, 0.9931972789115648, 0.9936831875607388, 0.9941690962099128, 0.9946550048590868, 0.9951409135082607, 0.9956268221574347, 0.9961127308066087, 0.9965986394557826, 0.9970845481049566, 0.9975704567541306, 0.9980563654033046, 0.9985422740524785, 0.9990281827016525, 0.9995140913508265, 1.0000000000000004}, new char[]{'r', 's', 'a', 'l', 'A', 'o', '.', 'e', 'm', ' ', '•', 'u', 'y', 'f', '(', 'i', '1', 'w', 't', 'g', 'n', 'D', 'S', 'c', 'd', '-', 'M', 'k', 'b', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("BS", new ProportionalProbability( new double[]{0.9259259259259259, 0.962962962962963, 1.0}, new char[]{'S', 'o', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("As", new ProportionalProbability( new double[]{0.9819277108433735, 0.9826807228915663, 0.983433734939759, 0.9841867469879518, 0.9849397590361446, 0.9856927710843374, 0.9864457831325302, 0.987198795180723, 0.9879518072289157, 0.9887048192771085, 0.9894578313253013, 0.9902108433734941, 0.9909638554216869, 0.9917168674698796, 0.9924698795180724, 0.9932228915662652, 0.993975903614458, 0.9947289156626508, 0.9954819277108435, 0.9962349397590363, 0.9969879518072291, 0.9977409638554219, 0.9984939759036147, 0.9992469879518074, 1.0000000000000002}, new char[]{' ', 's', 'o', 'a', 'r', 't', 'w', '5', 'm', 'c', 'f', '1', 'e', 'n', 'b', 'h', 'E', 'g', 'l', '%', 'H', 'A', 'i', 'd', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("BT", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'T', ' '}) );
        twoCharacterInputWithUnknownOutput.put("At", new ProportionalProbability( new double[]{0.9766081871345029, 0.9775828460038987, 0.9785575048732944, 0.9795321637426901, 0.9805068226120859, 0.9814814814814816, 0.9824561403508774, 0.9834307992202731, 0.9844054580896688, 0.9853801169590646, 0.9863547758284603, 0.9873294346978561, 0.9883040935672518, 0.9892787524366475, 0.9902534113060433, 0.991228070175439, 0.9922027290448348, 0.9931773879142305, 0.9941520467836262, 0.995126705653022, 0.9961013645224177, 0.9970760233918134, 0.9980506822612092, 0.9990253411306049, 1.0000000000000007}, new char[]{'a', 't', ' ', 'l', 'r', 'm', 'g', 'n', 'k', 'e', 'o', 'v', 'p', '4', 'h', 'u', 'b', 'i', '0', 'y', 'c', 'w', 's', 'f', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("BU", new ProportionalProbability( new double[]{0.8863636363636364, 0.9090909090909091, 0.9318181818181818, 0.9545454545454545, 0.9772727272727272, 0.9999999999999999}, new char[]{'U', 'n', 's', 'i', ' ', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("C6", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'6', '='}) );
        twoCharacterInputWithUnknownOutput.put("Au", new ProportionalProbability( new double[]{0.9865339578454333, 0.9871194379391101, 0.9877049180327868, 0.9882903981264636, 0.9888758782201403, 0.9894613583138171, 0.9900468384074939, 0.9906323185011706, 0.9912177985948474, 0.9918032786885241, 0.9923887587822009, 0.9929742388758777, 0.9935597189695544, 0.9941451990632312, 0.9947306791569079, 0.9953161592505847, 0.9959016393442615, 0.9964871194379382, 0.997072599531615, 0.9976580796252917, 0.9982435597189685, 0.9988290398126453, 0.999414519906322, 0.9999999999999988}, new char[]{'u', 'A', 'a', 'm', ' ', 'b', 't', 'r', 'o', 'l', 'e', 'n', 'd', 'f', 'w', 'i', 'g', 'h', 'N', 'p', 'v', 'k', 's', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("BV", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Av", new ProportionalProbability( new double[]{0.968944099378882, 0.9710144927536233, 0.9730848861283645, 0.9751552795031058, 0.977225672877847, 0.9792960662525882, 0.9813664596273295, 0.9834368530020707, 0.985507246376812, 0.9875776397515532, 0.9896480331262945, 0.9917184265010357, 0.9937888198757769, 0.9958592132505182, 0.9979296066252594, 1.0000000000000007}, new char[]{'v', 'a', ' ', 'e', 'r', 's', 'w', 'i', 'o', 'g', 'T', 'm', 't', 'd', 'l', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("nﬂ", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'e', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Aw", new ProportionalProbability( new double[]{0.9917355371900827, 1.0}, new char[]{' ', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("Ax", new ProportionalProbability( new double[]{0.9819277108433735, 0.9879518072289156, 0.9939759036144578, 0.9999999999999999}, new char[]{'x', 'r', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("BY", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'Y', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("C:", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{':', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Ay", new ProportionalProbability( new double[]{0.9565217391304348, 1.0}, new char[]{'a', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("C<", new ProportionalProbability( new double[]{0.9833333333333333, 0.9866666666666666, 0.9899999999999999, 0.9933333333333332, 0.9966666666666665, 0.9999999999999998}, new char[]{' ', 'C', 'a', 'l', 'v', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("Az", new ProportionalProbability( new double[]{0.9629629629629629, 0.9814814814814814, 0.9999999999999999}, new char[]{'z', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("C=", new ProportionalProbability( new double[]{0.958904109589041, 0.9726027397260273, 0.9863013698630136, 1.0}, new char[]{'=', 'o', 'e', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("?¹", new ProportionalProbability( new double[]{0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'¹', 'i', ' ', '²'}) );
        twoCharacterInputWithUnknownOutput.put("D ", new ProportionalProbability( new double[]{0.9490538573508006, 0.9505094614264921, 0.9519650655021835, 0.953420669577875, 0.9548762736535664, 0.9563318777292579, 0.9577874818049493, 0.9592430858806408, 0.9606986899563322, 0.9621542940320237, 0.9636098981077151, 0.9650655021834066, 0.966521106259098, 0.9679767103347895, 0.9694323144104809, 0.9708879184861724, 0.9723435225618638, 0.9737991266375553, 0.9752547307132468, 0.9767103347889382, 0.9781659388646297, 0.9796215429403211, 0.9810771470160126, 0.982532751091704, 0.9839883551673955, 0.9854439592430869, 0.9868995633187784, 0.9883551673944698, 0.9898107714701613, 0.9912663755458527, 0.9927219796215442, 0.9941775836972356, 0.9956331877729271, 0.9970887918486185, 0.99854439592431, 1.0000000000000013}, new char[]{' ', 'n', 'h', 't', 'i', 'P', 'm', 'r', 's', 'e', ';', 'a', 'T', 'E', 'c', 'l', 'p', ',', '\"', 'f', '\'', 'U', 'F', 'g', 'L', '1', 'D', 'o', 'u', ':', 'w', 'C', 'R', 'b', 'K', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("C?", new ProportionalProbability( new double[]{0.8860759493670886, 0.8987341772151898, 0.911392405063291, 0.9240506329113922, 0.9367088607594934, 0.9493670886075947, 0.9620253164556959, 0.9746835443037971, 0.9873417721518983, 0.9999999999999996}, new char[]{'?', 'r', 't', 'i', 'd', 'e', 'c', 'g', 'm', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("B^", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'^', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("B_", new ProportionalProbability( new double[]{0.9996390380363669, 0.9996431398768627, 0.9996472417173585, 0.9996513435578543, 0.9996554453983502, 0.999659547238846, 0.9996636490793418, 0.9996677509198376, 0.9996718527603334, 0.9996759546008293, 0.9996800564413251, 0.9996841582818209, 0.9996882601223167, 0.9996923619628125, 0.9996964638033083, 0.9997005656438042, 0.9997046674843, 0.9997087693247958, 0.9997128711652916, 0.9997169730057874, 0.9997210748462833, 0.9997251766867791, 0.9997292785272749, 0.9997333803677707, 0.9997374822082665, 0.9997415840487623, 0.9997456858892582, 0.999749787729754, 0.9997538895702498, 0.9997579914107456, 0.9997620932512414, 0.9997661950917373, 0.9997702969322331, 0.9997743987727289, 0.9997785006132247, 0.9997826024537205, 0.9997867042942163, 0.9997908061347122, 0.999794907975208, 0.9997990098157038, 0.9998031116561996, 0.9998072134966954, 0.9998113153371913, 0.9998154171776871, 0.9998195190181829, 0.9998236208586787, 0.9998277226991745, 0.9998318245396703, 0.9998359263801662, 0.999840028220662, 0.9998441300611578, 0.9998482319016536, 0.9998523337421494, 0.9998564355826453, 0.9998605374231411, 0.9998646392636369, 0.9998687411041327, 0.9998728429446285, 0.9998769447851243, 0.9998810466256202, 0.999885148466116, 0.9998892503066118, 0.9998933521471076, 0.9998974539876034, 0.9999015558280993, 0.9999056576685951, 0.9999097595090909, 0.9999138613495867, 0.9999179631900825, 0.9999220650305783, 0.9999261668710742, 0.99993026871157, 0.9999343705520658, 0.9999384723925616, 0.9999425742330574, 0.9999466760735533, 0.9999507779140491, 0.9999548797545449, 0.9999589815950407, 0.9999630834355365, 0.9999671852760323, 0.9999712871165282, 0.999975388957024, 0.9999794907975198, 0.9999835926380156, 0.9999876944785114, 0.9999917963190073, 0.9999958981595031, 0.9999999999999989}, new char[]{'n', 'b', 'e', 'a', 's', 'p', 'c', 'k', 'v', 'g', 'l', 'w', '\"', 't', 'o', ' ', '&', 'x', 'r', 'f', 'u', 'i', 'h', 'd', 'F', 'm', 'y', '9', 'H', 'B', 'I', '.', '2', ':', '=', '0', '|', ',', '-', ')', 'C', 'A', '/', 'q', '(', 'M', 'V', 'G', 'E', 'L', 'z', 'D', 'R', 'W', '\'', 'K', '?', 'N', '3', 'S', '5', '[', 'j', 'P', '1', '8', 'T', '4', 'U', 'Φ', 'O', '7', 'ó', '…', '^', '₀', 'ü', '+', '•', 'ל', '¯', 'é', '∞', '²', 'ę', 'J', ']', 'ק', 'Y'}) );
        twoCharacterInputWithUnknownOutput.put("CA", new ProportionalProbability( new double[]{0.9227053140096618, 0.927536231884058, 0.9323671497584541, 0.9371980676328503, 0.9420289855072465, 0.9468599033816426, 0.9516908212560388, 0.9565217391304349, 0.9613526570048311, 0.9661835748792272, 0.9710144927536234, 0.9758454106280195, 0.9806763285024157, 0.9855072463768119, 0.990338164251208, 0.9951690821256042, 1.0000000000000002}, new char[]{'A', 'g', ' ', 'o', 'n', 'a', 'i', 'w', 'm', 'd', 's', 'D', 'M', 't', 'f', 'r', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Ba", new ProportionalProbability( new double[]{0.9873547505126452, 0.9876965140123034, 0.9880382775119616, 0.9883800410116198, 0.988721804511278, 0.9890635680109362, 0.9894053315105944, 0.9897470950102526, 0.9900888585099108, 0.990430622009569, 0.9907723855092272, 0.9911141490088854, 0.9914559125085436, 0.9917976760082018, 0.99213943950786, 0.9924812030075182, 0.9928229665071764, 0.9931647300068346, 0.9935064935064928, 0.993848257006151, 0.9941900205058092, 0.9945317840054674, 0.9948735475051256, 0.9952153110047838, 0.995557074504442, 0.9958988380041002, 0.9962406015037584, 0.9965823650034166, 0.9969241285030748, 0.997265892002733, 0.9976076555023912, 0.9979494190020494, 0.9982911825017076, 0.9986329460013658, 0.998974709501024, 0.9993164730006822, 0.9996582365003404, 0.9999999999999986}, new char[]{'a', 'B', ' ', 's', 'b', 'u', 'f', 'e', 'l', 'N', 'm', 'o', 'n', 'i', 'r', 'C', '&', 't', '1', 'p', 'P', 'k', 'G', 'H', 'd', 'y', 'h', ',', 'F', 'g', '2', 'w', 'v', 'R', 'c', 'T', 'x', 'L'}) );
        twoCharacterInputWithUnknownOutput.put("CB", new ProportionalProbability( new double[]{0.8690476190476191, 0.8809523809523809, 0.8928571428571428, 0.9047619047619047, 0.9166666666666665, 0.9285714285714284, 0.9404761904761902, 0.9523809523809521, 0.964285714285714, 0.9761904761904758, 0.9880952380952377, 0.9999999999999996}, new char[]{'B', ' ', 'e', 't', 'v', 'd', 'A', 'l', 'o', 'a', 'u', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("CC", new ProportionalProbability( new double[]{0.9152542372881356, 0.923728813559322, 0.9322033898305084, 0.9406779661016949, 0.9491525423728813, 0.9576271186440677, 0.9661016949152541, 0.9745762711864405, 0.9830508474576269, 0.9915254237288134, 0.9999999999999998}, new char[]{'C', 'a', 'e', 'i', '7', 'o', 'v', '5', 's', 'm', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("CD", new ProportionalProbability( new double[]{0.9407894736842105, 0.9473684210526315, 0.9539473684210525, 0.9605263157894736, 0.9671052631578946, 0.9736842105263156, 0.9802631578947366, 0.9868421052631576, 0.9934210526315786, 0.9999999999999997}, new char[]{'r', 't', 'v', 'C', ' ', 'D', 'm', 'f', 'd', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Bc", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'t', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("CE", new ProportionalProbability( new double[]{0.9479166666666666, 0.953125, 0.9583333333333334, 0.9635416666666667, 0.9687500000000001, 0.9739583333333335, 0.9791666666666669, 0.9843750000000002, 0.9895833333333336, 0.994791666666667, 1.0000000000000002}, new char[]{'E', 'C', '(', 'o', 's', 'a', ' ', 'U', 'e', 'L', 'R'}) );
        twoCharacterInputWithUnknownOutput.put(">à", new ProportionalProbability( new double[]{0.9705882352941176, 1.0}, new char[]{'à', 'e'}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart6(){
        twoCharacterInputWithUnknownOutput.put("Be", new ProportionalProbability( new double[]{0.9890420643336868, 0.9893955461293743, 0.9897490279250618, 0.9901025097207493, 0.9904559915164368, 0.9908094733121243, 0.9911629551078118, 0.9915164369034993, 0.9918699186991868, 0.9922234004948743, 0.9925768822905618, 0.9929303640862494, 0.9932838458819369, 0.9936373276776244, 0.9939908094733119, 0.9943442912689994, 0.9946977730646869, 0.9950512548603744, 0.9954047366560619, 0.9957582184517494, 0.9961117002474369, 0.9964651820431244, 0.9968186638388119, 0.9971721456344994, 0.9975256274301869, 0.9978791092258744, 0.9982325910215619, 0.9985860728172494, 0.9989395546129369, 0.9992930364086244, 0.9996465182043119, 0.9999999999999994}, new char[]{'e', 'l', ' ', 'B', 'v', 'o', 'b', 'm', 'i', 'g', 't', 'p', '0', 'u', 's', 'a', 'd', 'c', 'r', 'I', 'f', ',', 'n', 'k', 'h', '.', '>', '(', 'K', '\'', 'A', 'ו'}) );
        twoCharacterInputWithUnknownOutput.put("D\'", new ProportionalProbability( new double[]{0.8461538461538461, 0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'\'', 'h', 'm', 'n', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("CF", new ProportionalProbability( new double[]{0.9523809523809523, 0.9603174603174602, 0.9682539682539681, 0.976190476190476, 0.984126984126984, 0.9920634920634919, 0.9999999999999998}, new char[]{'F', 'n', 's', 'm', 'd', ' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("CG", new ProportionalProbability( new double[]{0.8571428571428571, 0.8857142857142857, 0.9142857142857143, 0.9428571428571428, 0.9714285714285714, 1.0}, new char[]{'G', 'A', 'c', ' ', 'e', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("CH", new ProportionalProbability( new double[]{0.9736842105263158, 0.9802631578947368, 0.9868421052631579, 0.9934210526315789, 0.9999999999999999}, new char[]{'H', ' ', 's', 'b', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("D)", new ProportionalProbability( new double[]{0.8653846153846154, 0.8846153846153847, 0.903846153846154, 0.9230769230769232, 0.9423076923076925, 0.9615384615384618, 0.9807692307692311, 1.0000000000000002}, new char[]{')', 'l', 'e', 'r', ' ', 't', 'y', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("CI", new ProportionalProbability( new double[]{0.9279279279279279, 0.9369369369369369, 0.9459459459459459, 0.954954954954955, 0.963963963963964, 0.972972972972973, 0.981981981981982, 0.9909909909909911, 1.0}, new char[]{'I', ' ', 'i', 'O', 'p', 'r', 'S', 't', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Bi", new ProportionalProbability( new double[]{0.9840348330914369, 0.9847605224963716, 0.9854862119013063, 0.9862119013062409, 0.9869375907111756, 0.9876632801161103, 0.9883889695210449, 0.9891146589259796, 0.9898403483309143, 0.990566037735849, 0.9912917271407836, 0.9920174165457183, 0.992743105950653, 0.9934687953555876, 0.9941944847605223, 0.994920174165457, 0.9956458635703916, 0.9963715529753263, 0.997097242380261, 0.9978229317851957, 0.9985486211901303, 0.999274310595065, 0.9999999999999997}, new char[]{'e', 'b', 'i', ' ', 'm', 'B', '(', 'r', 'l', 'E', 'a', 'k', 't', 'c', '1', 'h', 'o', 'u', 'g', 's', 'n', 'V', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("CJ", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{'J', 'T', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("CK", new ProportionalProbability( new double[]{0.9090909090909091, 0.9318181818181818, 0.9545454545454545, 0.9772727272727272, 0.9999999999999999}, new char[]{'K', 'L', 'C', 'T', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("D,", new ProportionalProbability( new double[]{0.8421052631578947, 0.8684210526315789, 0.894736842105263, 0.9210526315789472, 0.9473684210526314, 0.9736842105263156, 0.9999999999999998}, new char[]{',', 'r', ':', 'l', 't', 'u', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("CL", new ProportionalProbability( new double[]{0.9533333333333334, 0.9600000000000001, 0.9666666666666668, 0.9733333333333335, 0.9800000000000002, 0.9866666666666669, 0.9933333333333336, 1.0000000000000002}, new char[]{'L', 'f', 'u', 'e', 'a', 'o', '_', 'p'}) );
        twoCharacterInputWithUnknownOutput.put(">ç", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'ç', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("D-", new ProportionalProbability( new double[]{0.9508196721311475, 0.9672131147540983, 0.9836065573770492, 1.0}, new char[]{'-', 'D', '\"', 'j'}) );
        twoCharacterInputWithUnknownOutput.put("Bk", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'k', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Bl", new ProportionalProbability( new double[]{0.9769319492502884, 0.978085351787774, 0.9792387543252596, 0.9803921568627453, 0.9815455594002309, 0.9826989619377166, 0.9838523644752022, 0.9850057670126878, 0.9861591695501735, 0.9873125720876591, 0.9884659746251447, 0.9896193771626304, 0.990772779700116, 0.9919261822376017, 0.9930795847750873, 0.9942329873125729, 0.9953863898500586, 0.9965397923875442, 0.9976931949250298, 0.9988465974625155, 1.000000000000001}, new char[]{'B', 'm', 'l', 'b', ' ', 'o', 'e', 's', 'R', 'u', 'h', 't', 'a', 'i', 'y', 'r', 'v', 'n', 'U', 'S', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("D.", new ProportionalProbability( new double[]{0.9491525423728814, 0.9661016949152542, 0.983050847457627, 0.9999999999999999}, new char[]{'.', 'v', 'a', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("CM", new ProportionalProbability( new double[]{0.9032258064516129, 0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{'M', 'n', 'i', 's'}) );
        twoCharacterInputWithUnknownOutput.put("D/", new ProportionalProbability( new double[]{0.9393939393939394, 0.9545454545454546, 0.9696969696969697, 0.9848484848484849, 1.0}, new char[]{'/', 'c', 't', ' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("CN", new ProportionalProbability( new double[]{0.9305555555555556, 0.9444444444444444, 0.9583333333333333, 0.9722222222222221, 0.9861111111111109, 0.9999999999999998}, new char[]{'N', 's', 't', 'n', 'u', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("CO", new ProportionalProbability( new double[]{0.9652173913043478, 0.9681159420289854, 0.9710144927536231, 0.9739130434782607, 0.9768115942028983, 0.9797101449275359, 0.9826086956521736, 0.9855072463768112, 0.9884057971014488, 0.9913043478260865, 0.9942028985507241, 0.9971014492753617, 0.9999999999999993}, new char[]{'O', 'o', ' ', 'i', '-', 'l', 'r', 'I', 's', 'k', 'n', 'a', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Bo", new ProportionalProbability( new double[]{0.9865, 0.987, 0.9874999999999999, 0.9879999999999999, 0.9884999999999998, 0.9889999999999998, 0.9894999999999997, 0.9899999999999997, 0.9904999999999996, 0.9909999999999995, 0.9914999999999995, 0.9919999999999994, 0.9924999999999994, 0.9929999999999993, 0.9934999999999993, 0.9939999999999992, 0.9944999999999992, 0.9949999999999991, 0.995499999999999, 0.995999999999999, 0.9964999999999989, 0.9969999999999989, 0.9974999999999988, 0.9979999999999988, 0.9984999999999987, 0.9989999999999987, 0.9994999999999986, 0.9999999999999986}, new char[]{'o', '-', 'b', 'l', ' ', 'B', 't', '7', 'i', ':', 'W', 'r', 'e', 'c', 'm', 'u', 'g', 's', 'd', 'n', 'H', 'h', 'a', '.', 'y', 'F', 'p', 'V'}) );
        twoCharacterInputWithUnknownOutput.put("CP", new ProportionalProbability( new double[]{0.9323308270676691, 0.9398496240601504, 0.9473684210526316, 0.9548872180451129, 0.9624060150375942, 0.9699248120300754, 0.9774436090225567, 0.9849624060150379, 0.9924812030075192, 1.0000000000000004}, new char[]{' ', 'P', 'h', 'i', 'e', 'u', 'm', 'g', 'o', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("CR", new ProportionalProbability( new double[]{0.9111111111111111, 0.9333333333333333, 0.9555555555555556, 0.9777777777777779, 1.0}, new char[]{'R', 'S', 'T', 'r', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("Br", new ProportionalProbability( new double[]{0.9907438016528926, 0.9910743801652893, 0.991404958677686, 0.9917355371900827, 0.9920661157024794, 0.9923966942148761, 0.9927272727272728, 0.9930578512396695, 0.9933884297520662, 0.9937190082644629, 0.9940495867768596, 0.9943801652892563, 0.994710743801653, 0.9950413223140497, 0.9953719008264464, 0.9957024793388431, 0.9960330578512399, 0.9963636363636366, 0.9966942148760333, 0.99702479338843, 0.9973553719008267, 0.9976859504132234, 0.9980165289256201, 0.9983471074380168, 0.9986776859504135, 0.9990082644628102, 0.9993388429752069, 0.9996694214876036, 1.0000000000000002}, new char[]{'B', ' ', 'r', 'b', 'm', 'e', 'l', '2', 'u', 'v', 'a', 'o', 't', ';', 'c', 'n', 'E', 'k', 'h', 'I', 's', 'd', 'i', 'w', ',', '.', 'f', 'F', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("CS", new ProportionalProbability( new double[]{0.96, 0.9666666666666667, 0.9733333333333334, 0.9800000000000001, 0.9866666666666668, 0.9933333333333335, 1.0000000000000002}, new char[]{'S', ' ', 'e', 'I', 'b', 'a', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("CT", new ProportionalProbability( new double[]{0.934156378600823, 0.9382716049382716, 0.9423868312757201, 0.9465020576131686, 0.9506172839506172, 0.9547325102880657, 0.9588477366255143, 0.9629629629629628, 0.9670781893004113, 0.9711934156378599, 0.9753086419753084, 0.979423868312757, 0.9835390946502055, 0.987654320987654, 0.9917695473251026, 0.9958847736625511, 0.9999999999999997}, new char[]{'T', 'r', 'a', 'S', '/', 'X', '\"', 'P', 't', ')', ' ', 'o', 'p', 'E', 'H', 'n', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Bs", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'c', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Bu", new ProportionalProbability( new double[]{0.9857244825124911, 0.9864382583868666, 0.9871520342612421, 0.9878658101356176, 0.9885795860099931, 0.9892933618843686, 0.990007137758744, 0.9907209136331195, 0.991434689507495, 0.9921484653818705, 0.992862241256246, 0.9935760171306215, 0.994289793004997, 0.9950035688793725, 0.995717344753748, 0.9964311206281234, 0.9971448965024989, 0.9978586723768744, 0.9985724482512499, 0.9992862241256254, 1.0000000000000009}, new char[]{'u', 'm', 'd', ' ', 'r', 'b', 'y', 'B', 't', 'l', 'a', 'n', 'M', 'S', 's', '.', 'e', ',', '_', 'i', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("CV", new ProportionalProbability( new double[]{0.9122807017543859, 0.9298245614035088, 0.9473684210526316, 0.9649122807017545, 0.9824561403508774, 1.0000000000000002}, new char[]{'c', 'l', 'e', 'V', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put("CW", new ProportionalProbability( new double[]{0.8928571428571429, 0.9285714285714286, 0.9642857142857143, 1.0}, new char[]{'W', 'e', 's', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Bx", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'x', '^'}) );
        twoCharacterInputWithUnknownOutput.put("D:", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'e', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("CY", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{'Y', 'o', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("By", new ProportionalProbability( new double[]{0.9577922077922078, 0.961038961038961, 0.9642857142857143, 0.9675324675324676, 0.9707792207792209, 0.9740259740259741, 0.9772727272727274, 0.9805194805194807, 0.983766233766234, 0.9870129870129872, 0.9902597402597405, 0.9935064935064938, 0.9967532467532471, 1.0000000000000002}, new char[]{'y', 'h', ' ', 'f', 'i', 'u', 'p', 'r', 't', 'e', 'd', 'n', 'a', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("D<", new ProportionalProbability( new double[]{0.9736842105263158, 0.9824561403508772, 0.9912280701754387, 1.0}, new char[]{' ', 'D', 'h', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("E ", new ProportionalProbability( new double[]{0.9469026548672567, 0.9486725663716814, 0.9504424778761061, 0.9522123893805309, 0.9539823008849556, 0.9557522123893804, 0.9575221238938051, 0.9592920353982298, 0.9610619469026546, 0.9628318584070793, 0.964601769911504, 0.9663716814159288, 0.9681415929203535, 0.9699115044247782, 0.971681415929203, 0.9734513274336277, 0.9752212389380525, 0.9769911504424772, 0.9787610619469019, 0.9805309734513267, 0.9823008849557514, 0.9840707964601761, 0.9858407079646009, 0.9876106194690256, 0.9893805309734504, 0.9911504424778751, 0.9929203539822998, 0.9946902654867246, 0.9964601769911493, 0.998230088495574, 0.9999999999999988}, new char[]{'s', ' ', '1', 't', 'd', 'E', 'f', 'l', 'i', 'n', 'H', 'T', 'h', 'g', 'm', 'r', ',', 'A', 'L', 'F', 'e', 'G', 'P', 'D', 'M', 'R', 'I', 'U', '\"', 'C', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("D?", new ProportionalProbability( new double[]{0.8461538461538461, 0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'r', 'a', 'i', '?', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("C^", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'2', '^'}) );
        twoCharacterInputWithUnknownOutput.put("DA", new ProportionalProbability( new double[]{0.9281045751633987, 0.934640522875817, 0.9411764705882353, 0.9477124183006536, 0.9542483660130718, 0.9607843137254901, 0.9673202614379084, 0.9738562091503267, 0.980392156862745, 0.9869281045751632, 0.9934640522875815, 0.9999999999999998}, new char[]{'A', 's', ' ', 'F', '-', 'o', 'C', 'k', 'd', 'W', '\'', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Ca", new ProportionalProbability( new double[]{0.9920683343502136, 0.9922717103925158, 0.9924750864348181, 0.9926784624771203, 0.9928818385194226, 0.9930852145617248, 0.9932885906040271, 0.9934919666463293, 0.9936953426886316, 0.9938987187309338, 0.9941020947732361, 0.9943054708155383, 0.9945088468578406, 0.9947122229001428, 0.9949155989424451, 0.9951189749847473, 0.9953223510270496, 0.9955257270693518, 0.9957291031116541, 0.9959324791539563, 0.9961358551962586, 0.9963392312385608, 0.9965426072808631, 0.9967459833231653, 0.9969493593654676, 0.9971527354077698, 0.9973561114500721, 0.9975594874923743, 0.9977628635346766, 0.9979662395769788, 0.9981696156192811, 0.9983729916615833, 0.9985763677038856, 0.9987797437461878, 0.9989831197884901, 0.9991864958307923, 0.9993898718730946, 0.9995932479153968, 0.9997966239576991, 1.0000000000000013}, new char[]{'a', 'e', 'c', ':', 'i', 'o', ' ', 'C', 'n', 'd', 'h', 's', 'u', 'l', 'b', 't', 'm', 'v', 'x', 'r', 'g', '8', 'p', '3', 'A', 'y', 'U', 'P', 'w', 'E', '0', '²', '(', ',', 'k', 'B', '.', '=', 'M', '-'}) );
        twoCharacterInputWithUnknownOutput.put("DB", new ProportionalProbability( new double[]{0.75, 0.875, 1.0}, new char[]{'o', 'B', ' '}) );
        twoCharacterInputWithUnknownOutput.put("DD", new ProportionalProbability( new double[]{0.9772727272727273, 1.0}, new char[]{'D', 'Q'}) );
        twoCharacterInputWithUnknownOutput.put("Cc", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'c', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("DE", new ProportionalProbability( new double[]{0.9219858156028369, 0.9290780141843972, 0.9361702127659575, 0.9432624113475178, 0.950354609929078, 0.9574468085106383, 0.9645390070921986, 0.9716312056737589, 0.9787234042553192, 0.9858156028368795, 0.9929078014184398, 1.0}, new char[]{'E', ' ', 'I', 'o', 'C', ',', 'T', 'e', 'n', 'M', 'Y', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("Ce", new ProportionalProbability( new double[]{0.9726027397260274, 0.973744292237443, 0.9748858447488585, 0.9760273972602741, 0.9771689497716897, 0.9783105022831052, 0.9794520547945208, 0.9805936073059364, 0.9817351598173519, 0.9828767123287675, 0.9840182648401831, 0.9851598173515986, 0.9863013698630142, 0.9874429223744298, 0.9885844748858453, 0.9897260273972609, 0.9908675799086765, 0.992009132420092, 0.9931506849315076, 0.9942922374429232, 0.9954337899543387, 0.9965753424657543, 0.9977168949771699, 0.9988584474885854, 1.0000000000000009}, new char[]{'e', ' ', 'i', 'C', 'c', 'u', 'r', 'l', 's', 't', 'w', 'o', 'd', 'v', ')', 'a', ':', 'p', 'm', 'b', '.', 'D', 'g', 'n', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("DF", new ProportionalProbability( new double[]{0.8715596330275229, 0.8807339449541285, 0.8899082568807339, 0.8990825688073394, 0.9082568807339448, 0.9174311926605503, 0.9266055045871557, 0.9357798165137612, 0.9449541284403666, 0.9541284403669721, 0.9633027522935775, 0.972477064220183, 0.9816513761467884, 0.9908256880733939, 0.9999999999999993}, new char[]{'l', ' ', 'e', 'b', 'c', 'i', 'h', 'a', 'F', 's', 'd', 'B', 'r', 'f', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("E\'", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'n', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("E(", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{' ', '('}) );
        twoCharacterInputWithUnknownOutput.put("E)", new ProportionalProbability( new double[]{0.9069767441860465, 0.9186046511627907, 0.9302325581395349, 0.9418604651162791, 0.9534883720930233, 0.9651162790697675, 0.9767441860465117, 0.9883720930232559, 1.0}, new char[]{')', 'a', ' ', 'i', 't', 'l', 'n', 'h', 's'}) );
        twoCharacterInputWithUnknownOutput.put("DH", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'f', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("DI", new ProportionalProbability( new double[]{0.9577464788732394, 0.9647887323943661, 0.9718309859154929, 0.9788732394366196, 0.9859154929577464, 0.9929577464788731, 0.9999999999999999}, new char[]{'t', 'I', 'N', ' ', 'e', 'E', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("Ch", new ProportionalProbability( new double[]{0.9928323699421965, 0.9930635838150289, 0.9932947976878613, 0.9935260115606938, 0.9937572254335262, 0.9939884393063586, 0.994219653179191, 0.9944508670520235, 0.9946820809248559, 0.9949132947976883, 0.9951445086705207, 0.9953757225433532, 0.9956069364161856, 0.995838150289018, 0.9960693641618504, 0.9963005780346829, 0.9965317919075153, 0.9967630057803477, 0.9969942196531801, 0.9972254335260126, 0.997456647398845, 0.9976878612716774, 0.9979190751445098, 0.9981502890173423, 0.9983815028901747, 0.9986127167630071, 0.9988439306358395, 0.999075144508672, 0.9993063583815044, 0.9995375722543368, 0.9997687861271692, 1.0000000000000016}, new char[]{'h', 'c', ' ', 's', 'g', 'C', 'l', 'r', 'i', 'm', 't', 'F', 'B', '\"', 'u', 'a', 'o', 'e', 'b', 'k', '-', 'f', 'y', 'd', 'v', 'n', 'P', '&', 'q', 'p', 'I', '\''}) );
        twoCharacterInputWithUnknownOutput.put("Ci", new ProportionalProbability( new double[]{0.9739776951672863, 0.9752168525402727, 0.9764560099132591, 0.9776951672862455, 0.9789343246592319, 0.9801734820322183, 0.9814126394052047, 0.9826517967781911, 0.9838909541511776, 0.985130111524164, 0.9863692688971504, 0.9876084262701368, 0.9888475836431232, 0.9900867410161096, 0.991325898389096, 0.9925650557620824, 0.9938042131350688, 0.9950433705080552, 0.9962825278810417, 0.9975216852540281, 0.9987608426270145, 1.0000000000000009}, new char[]{'i', 'c', 'u', 'm', ' ', 'l', 't', 'r', 'e', 'k', 'W', 'd', 'o', 'S', 'b', 'E', 'a', '0', 'R', 's', 'n', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("DJ", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'J', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("E,", new ProportionalProbability( new double[]{0.8888888888888888, 0.9166666666666666, 0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'e', ',', ' ', 'f', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("E-", new ProportionalProbability( new double[]{0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{'-', ' ', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Cl", new ProportionalProbability( new double[]{0.9853723404255319, 0.9860372340425532, 0.9867021276595744, 0.9873670212765957, 0.988031914893617, 0.9886968085106382, 0.9893617021276595, 0.9900265957446808, 0.990691489361702, 0.9913563829787233, 0.9920212765957446, 0.9926861702127658, 0.9933510638297871, 0.9940159574468084, 0.9946808510638296, 0.9953457446808509, 0.9960106382978722, 0.9966755319148934, 0.9973404255319147, 0.998005319148936, 0.9986702127659572, 0.9993351063829785, 0.9999999999999998}, new char[]{'l', ',', ' ', 'd', 'm', 'u', 'c', 'i', '+', '0', 'o', 's', 'r', 'C', '(', 'e', 't', 'n', 'p', 'a', 'x', 'k', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("E.", new ProportionalProbability( new double[]{0.9400479616306955, 0.9424460431654677, 0.9448441247002398, 0.947242206235012, 0.9496402877697842, 0.9520383693045563, 0.9544364508393285, 0.9568345323741007, 0.9592326139088728, 0.961630695443645, 0.9640287769784172, 0.9664268585131893, 0.9688249400479615, 0.9712230215827337, 0.9736211031175058, 0.976019184652278, 0.9784172661870502, 0.9808153477218223, 0.9832134292565945, 0.9856115107913667, 0.9880095923261388, 0.990407673860911, 0.9928057553956832, 0.9952038369304553, 0.9976019184652275, 0.9999999999999997}, new char[]{'.', 'T', 'r', 'w', 'V', '-', 'O', '&', 's', 'n', 'g', 'd', 'c', 'i', ' ', 'k', 'N', 'b', 'u', 'a', 'l', ')', 'f', 't', 'x', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("(α", new ProportionalProbability( new double[]{0.958904109589041, 0.9726027397260273, 0.9863013698630136, 1.0}, new char[]{'α', ' ', 'β', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("DM", new ProportionalProbability( new double[]{0.9743589743589743, 1.0}, new char[]{' ', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("E/", new ProportionalProbability( new double[]{0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{'/', '4', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("DN", new ProportionalProbability( new double[]{0.9476744186046512, 0.9534883720930233, 0.9593023255813954, 0.9651162790697675, 0.9709302325581396, 0.9767441860465117, 0.9825581395348838, 0.9883720930232559, 0.994186046511628, 1.0}, new char[]{'N', 'g', 's', 'c', ' ', 'e', 'b', 'r', 'f', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("(β", new ProportionalProbability( new double[]{0.875, 0.9375, 1.0}, new char[]{'β', 'o', '['}) );
        twoCharacterInputWithUnknownOutput.put("DO", new ProportionalProbability( new double[]{0.96, 0.97, 0.98, 0.99, 1.0}, new char[]{'O', 'o', 's', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Co", new ProportionalProbability( new double[]{0.9958871915393654, 0.995971126405909, 0.9960550612724526, 0.9961389961389961, 0.9962229310055397, 0.9963068658720833, 0.9963908007386268, 0.9964747356051704, 0.996558670471714, 0.9966426053382575, 0.9967265402048011, 0.9968104750713447, 0.9968944099378882, 0.9969783448044318, 0.9970622796709754, 0.997146214537519, 0.9972301494040625, 0.9973140842706061, 0.9973980191371496, 0.9974819540036932, 0.9975658888702368, 0.9976498237367804, 0.9977337586033239, 0.9978176934698675, 0.997901628336411, 0.9979855632029546, 0.9980694980694982, 0.9981534329360418, 0.9982373678025853, 0.9983213026691289, 0.9984052375356725, 0.998489172402216, 0.9985731072687596, 0.9986570421353032, 0.9987409770018467, 0.9988249118683903, 0.9989088467349339, 0.9989927816014774, 0.999076716468021, 0.9991606513345646, 0.9992445862011081, 0.9993285210676517, 0.9994124559341953, 0.9994963908007388, 0.9995803256672824, 0.999664260533826, 0.9997481954003695, 0.9998321302669131, 0.9999160651334567, 1.0000000000000002}, new char[]{'o', ' ', 'i', 'l', 'L', 'c', 'r', 't', 'm', ',', 'a', 'C', 'e', 's', '\'', 'f', 'n', 'd', 'g', 'u', 'v', 'R', 'k', 'h', 'w', 'b', 'p', '&', 'y', '?', 'S', 'M', '.', '-', '1', 'A', 'F', 'U', '(', '=', 'E', 'D', 'B', 'P', 'V', '0', 'I', '8', 'N', ':'}) );
        twoCharacterInputWithUnknownOutput.put("DP", new ProportionalProbability( new double[]{0.94375, 0.95, 0.9562499999999999, 0.9624999999999999, 0.9687499999999999, 0.9749999999999999, 0.9812499999999998, 0.9874999999999998, 0.9937499999999998, 0.9999999999999998}, new char[]{'D', 'd', 'P', 's', 'p', ' ', 'e', 'n', 't', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("(δ", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{'u', 'δ'}) );
        twoCharacterInputWithUnknownOutput.put("E2", new ProportionalProbability( new double[]{0.9666666666666667, 0.9833333333333334, 1.0}, new char[]{'2', 'a', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("DR", new ProportionalProbability( new double[]{0.96, 0.97, 0.98, 0.99, 1.0}, new char[]{'R', ' ', 'e', 'h', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("Cr", new ProportionalProbability( new double[]{0.9826937547027841, 0.9834462001504891, 0.9841986455981941, 0.9849510910458992, 0.9857035364936042, 0.9864559819413092, 0.9872084273890143, 0.9879608728367193, 0.9887133182844243, 0.9894657637321294, 0.9902182091798344, 0.9909706546275394, 0.9917231000752444, 0.9924755455229495, 0.9932279909706545, 0.9939804364183595, 0.9947328818660646, 0.9954853273137696, 0.9962377727614746, 0.9969902182091797, 0.9977426636568847, 0.9984951091045897, 0.9992475545522947, 0.9999999999999998}, new char[]{'r', ' ', 'u', 'c', 'm', 'l', '=', 'i', '(', 'b', 'D', 'a', ':', 's', 'f', 'L', 'n', 'y', 'o', 'e', 'k', ',', '.', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("DS", new ProportionalProbability( new double[]{0.9464285714285714, 0.9642857142857143, 0.9821428571428572, 1.0}, new char[]{'A', ' ', 'S', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("Cs", new ProportionalProbability( new double[]{0.9427083333333334, 0.9479166666666667, 0.9531250000000001, 0.9583333333333335, 0.9635416666666669, 0.9687500000000002, 0.9739583333333336, 0.979166666666667, 0.9843750000000003, 0.9895833333333337, 0.9947916666666671, 1.0000000000000004}, new char[]{'s', 'I', '.', 'l', 'y', ' ', 'c', 'w', 'C', '?', 'n', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("DT", new ProportionalProbability( new double[]{0.8888888888888888, 0.9111111111111111, 0.9333333333333333, 0.9555555555555556, 0.9777777777777779, 1.0}, new char[]{'u', 'm', 'T', ')', '\'', ' '}) );
        twoCharacterInputWithUnknownOutput.put("(θ", new ProportionalProbability( new double[]{0.9779005524861878, 0.9834254143646408, 0.9889502762430938, 0.9944751381215469, 0.9999999999999999}, new char[]{'θ', 'i', 'o', '2', '['}) );
        twoCharacterInputWithUnknownOutput.put("DU", new ProportionalProbability( new double[]{0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'U', ' ', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("Cu", new ProportionalProbability( new double[]{0.9832605531295487, 0.9839883551673945, 0.9847161572052402, 0.9854439592430859, 0.9861717612809316, 0.9868995633187774, 0.9876273653566231, 0.9883551673944688, 0.9890829694323146, 0.9898107714701603, 0.990538573508006, 0.9912663755458517, 0.9919941775836975, 0.9927219796215432, 0.9934497816593889, 0.9941775836972346, 0.9949053857350804, 0.9956331877729261, 0.9963609898107718, 0.9970887918486175, 0.9978165938864633, 0.998544395924309, 0.9992721979621547, 1.0000000000000004}, new char[]{'o', 'u', ' ', 'n', 'c', 'm', '-', 'r', 'l', 'e', 'C', 'g', 'b', 'i', 's', 'p', 't', '=', 'A', 'v', 'z', '6', 'a', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("DV", new ProportionalProbability( new double[]{0.9545454545454546, 0.9696969696969697, 0.9848484848484849, 1.0}, new char[]{'V', 'E', 'e', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("DW", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'W', ' '}) );
        twoCharacterInputWithUnknownOutput.put("DY", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'E', 'Y'}) );
        twoCharacterInputWithUnknownOutput.put("E:", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{':', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("Cy", new ProportionalProbability( new double[]{0.9591836734693877, 0.963265306122449, 0.9673469387755103, 0.9714285714285715, 0.9755102040816328, 0.9795918367346941, 0.9836734693877554, 0.9877551020408166, 0.9918367346938779, 0.9959183673469392, 1.0000000000000004}, new char[]{'l', 'y', 't', ' ', 'r', 'c', 'e', 'f', 'h', 'o', ')'}) );
        twoCharacterInputWithUnknownOutput.put("E<", new ProportionalProbability( new double[]{0.9814814814814815, 0.9876543209876544, 0.9938271604938272, 1.0}, new char[]{' ', 'E', 'p', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Cz", new ProportionalProbability( new double[]{0.9565217391304348, 0.9652173913043478, 0.9739130434782608, 0.9826086956521738, 0.9913043478260868, 0.9999999999999998}, new char[]{'z', 'm', 'r', 'b', 'k', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("(π", new ProportionalProbability( new double[]{0.99, 0.995, 1.0}, new char[]{'π', ')', '-'}) );
        twoCharacterInputWithUnknownOutput.put("E=", new ProportionalProbability( new double[]{0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{'-', '=', '2'}) );
        twoCharacterInputWithUnknownOutput.put("F ", new ProportionalProbability( new double[]{0.9372549019607843, 0.9411764705882353, 0.9450980392156862, 0.9490196078431372, 0.9529411764705882, 0.9568627450980391, 0.9607843137254901, 0.9647058823529411, 0.968627450980392, 0.972549019607843, 0.976470588235294, 0.980392156862745, 0.9843137254901959, 0.9882352941176469, 0.9921568627450978, 0.9960784313725488, 0.9999999999999998}, new char[]{' ', 'e', 'y', 'l', 'a', 's', 'O', 'r', 'R', 'i', 'c', 'g', 'N', 'w', 'F', 'u', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("E?", new ProportionalProbability( new double[]{0.8769230769230769, 0.8923076923076922, 0.9076923076923076, 0.9230769230769229, 0.9384615384615382, 0.9538461538461536, 0.9692307692307689, 0.9846153846153842, 0.9999999999999996}, new char[]{'?', 'e', 'G', 'i', ' ', 'a', 'o', 'c', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("F!", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'!', ' '}) );
        twoCharacterInputWithUnknownOutput.put("EA", new ProportionalProbability( new double[]{0.9512195121951219, 0.9573170731707317, 0.9634146341463414, 0.9695121951219512, 0.975609756097561, 0.9817073170731707, 0.9878048780487805, 0.9939024390243902, 1.0}, new char[]{'A', 't', 'n', 'a', 'L', 'g', '\"', ' ', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("Da", new ProportionalProbability( new double[]{0.9948537378114843, 0.995124593716143, 0.9953954496208017, 0.9956663055254604, 0.9959371614301191, 0.9962080173347778, 0.9964788732394365, 0.9967497291440952, 0.9970205850487539, 0.9972914409534126, 0.9975622968580713, 0.99783315276273, 0.9981040086673887, 0.9983748645720474, 0.9986457204767061, 0.9989165763813648, 0.9991874322860235, 0.9994582881906822, 0.9997291440953409, 0.9999999999999996}, new char[]{'d', 'a', 'e', 'H', 'D', ' ', 'g', 'l', 'u', 'h', 'r', '.', 's', 'c', 'o', 't', 'm', 'W', 'n', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("F#", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{' ', '#'}) );
        twoCharacterInputWithUnknownOutput.put("EB", new ProportionalProbability( new double[]{0.9714285714285714, 1.0}, new char[]{'B', ' '}) );
        twoCharacterInputWithUnknownOutput.put("EC", new ProportionalProbability( new double[]{0.9202127659574468, 0.9255319148936171, 0.9308510638297873, 0.9361702127659576, 0.9414893617021278, 0.9468085106382981, 0.9521276595744683, 0.9574468085106386, 0.9627659574468088, 0.9680851063829791, 0.9734042553191493, 0.9787234042553196, 0.9840425531914898, 0.9893617021276601, 0.9946808510638303, 1.0000000000000004}, new char[]{'C', ' ', 'N', 'O', 'c', 's', 'I', 'i', 'a', 'D', 'u', 'T', 'r', 'W', ',', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("ED", new ProportionalProbability( new double[]{0.94375, 0.95, 0.9562499999999999, 0.9624999999999999, 0.9687499999999999, 0.9749999999999999, 0.9812499999999998, 0.9874999999999998, 0.9937499999999998, 0.9999999999999998}, new char[]{'D', 'i', 'R', 'o', ' ', 'd', 'U', 'A', 'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("EE", new ProportionalProbability( new double[]{0.912621359223301, 0.9223300970873787, 0.9320388349514563, 0.941747572815534, 0.9514563106796117, 0.9611650485436893, 0.970873786407767, 0.9805825242718447, 0.9902912621359223, 1.0}, new char[]{'E', 'k', ' ', 'g', 'S', 't', 'h', 'i', 'A', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("De", new ProportionalProbability( new double[]{0.9957645525629887, 0.9958731537793223, 0.9959817549956559, 0.9960903562119895, 0.9961989574283231, 0.9963075586446567, 0.9964161598609903, 0.9965247610773239, 0.9966333622936575, 0.9967419635099911, 0.9968505647263247, 0.9969591659426583, 0.9970677671589919, 0.9971763683753255, 0.9972849695916591, 0.9973935708079927, 0.9975021720243263, 0.9976107732406599, 0.9977193744569935, 0.9978279756733271, 0.9979365768896608, 0.9980451781059944, 0.998153779322328, 0.9982623805386616, 0.9983709817549952, 0.9984795829713288, 0.9985881841876624, 0.998696785403996, 0.9988053866203296, 0.9989139878366632, 0.9990225890529968, 0.9991311902693304, 0.999239791485664, 0.9993483927019976, 0.9994569939183312, 0.9995655951346648, 0.9996741963509984, 0.999782797567332, 0.9998913987836656, 0.9999999999999992}, new char[]{'e', 'f', 'h', 'd', 'p', 'b', 's', 'D', 'o', ' ', 'y', 'n', 'm', 'i', 'l', 'u', 'B', 'r', 'g', 'a', 't', 'w', 'z', 'c', '.', 'M', 'W', '(', 'v', 'G', 'V', 'x', 'E', 'A', ':', ')', '_', '-', '^', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("EF", new ProportionalProbability( new double[]{0.9193548387096774, 0.9354838709677419, 0.9516129032258064, 0.9677419354838709, 0.9838709677419354, 0.9999999999999999}, new char[]{'F', 'r', 't', 'E', 'R', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("F\'", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'\'', ' '}) );
        twoCharacterInputWithUnknownOutput.put("F(", new ProportionalProbability( new double[]{0.9841269841269841, 1.0}, new char[]{'(', ' '}) );
        twoCharacterInputWithUnknownOutput.put("EG", new ProportionalProbability( new double[]{0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{'G', ' ', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("F)", new ProportionalProbability( new double[]{0.9591836734693877, 0.9795918367346939, 1.0}, new char[]{')', 's', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("EI", new ProportionalProbability( new double[]{0.9047619047619048, 0.9523809523809523, 1.0}, new char[]{'I', 'a', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("Dh", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'h', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("Di", new ProportionalProbability( new double[]{0.9957321952520672, 0.9958655641504401, 0.995998933048813, 0.9961323019471859, 0.9962656708455588, 0.9963990397439317, 0.9965324086423046, 0.9966657775406775, 0.9967991464390504, 0.9969325153374233, 0.9970658842357962, 0.9971992531341691, 0.997332622032542, 0.9974659909309149, 0.9975993598292878, 0.9977327287276607, 0.9978660976260336, 0.9979994665244065, 0.9981328354227794, 0.9982662043211523, 0.9983995732195252, 0.9985329421178981, 0.998666311016271, 0.9987996799146439, 0.9989330488130168, 0.9990664177113897, 0.9991997866097626, 0.9993331555081355, 0.9994665244065084, 0.9995998933048813, 0.9997332622032542, 0.9998666311016271, 1.0}, new char[]{'d', 'i', 'g', 'D', ' ', 'm', 'u', 'r', 'l', 'f', '-', 'e', 'n', 'a', 't', '8', 'C', 's', 'o', '?', 'v', 'c', ')', 'p', '1', 'x', 'L', 'w', '7', 'y', 'z', 'h', ':'}) );
        twoCharacterInputWithUnknownOutput.put("F,", new ProportionalProbability( new double[]{0.8823529411764706, 0.9117647058823529, 0.9411764705882353, 0.9705882352941176, 1.0}, new char[]{',', 't', ' ', 'A', '&'}) );
        twoCharacterInputWithUnknownOutput.put("Dj", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'j', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("EL", new ProportionalProbability( new double[]{0.8913043478260869, 0.9021739130434783, 0.9130434782608696, 0.923913043478261, 0.9347826086956523, 0.9456521739130437, 0.956521739130435, 0.9673913043478264, 0.9782608695652177, 0.9891304347826091, 1.0000000000000004}, new char[]{'L', 'N', 'F', 'U', 'f', ' ', 't', 'B', 'P', 'E', ','}) );
        twoCharacterInputWithUnknownOutput.put("F-", new ProportionalProbability( new double[]{0.84375, 0.875, 0.90625, 0.9375, 0.96875, 1.0}, new char[]{' ', 'm', '-', 's', 'o', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("EM", new ProportionalProbability( new double[]{0.954954954954955, 0.963963963963964, 0.972972972972973, 0.981981981981982, 0.9909909909909911, 1.0}, new char[]{'M', 't', ' ', 'B', 'E', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("F.", new ProportionalProbability( new double[]{0.94, 0.96, 0.98, 1.0}, new char[]{'.', 'o', 'e', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("EN", new ProportionalProbability( new double[]{0.9405940594059405, 0.9455445544554455, 0.9504950495049505, 0.9554455445544554, 0.9603960396039604, 0.9653465346534653, 0.9702970297029703, 0.9752475247524752, 0.9801980198019802, 0.9851485148514851, 0.9900990099009901, 0.995049504950495, 1.0}, new char[]{'N', 'E', 'o', 'D', 'e', 'R', 'U', 'T', 'P', 'C', ' ', 'd', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Dm", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'m', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("F/", new ProportionalProbability( new double[]{0.8636363636363636, 0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{'/', 'r', 'a', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("EO", new ProportionalProbability( new double[]{0.9655172413793104, 1.0}, new char[]{'O', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Do", new ProportionalProbability( new double[]{0.9840142095914742, 0.9846062759029011, 0.9851983422143279, 0.9857904085257547, 0.9863824748371816, 0.9869745411486084, 0.9875666074600352, 0.988158673771462, 0.9887507400828889, 0.9893428063943157, 0.9899348727057425, 0.9905269390171694, 0.9911190053285962, 0.991711071640023, 0.9923031379514499, 0.9928952042628767, 0.9934872705743035, 0.9940793368857304, 0.9946714031971572, 0.995263469508584, 0.9958555358200109, 0.9964476021314377, 0.9970396684428645, 0.9976317347542913, 0.9982238010657182, 0.998815867377145, 0.9994079336885718, 0.9999999999999987}, new char[]{' ', 'o', 'D', 'l', 'p', 'd', 'u', 'a', 'f', 'c', 'k', 's', 'e', 'n', 'm', 't', '.', 'x', 'i', 'b', '?', 'r', '9', 'q', 'w', 'z', 'S', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("EP", new ProportionalProbability( new double[]{0.9636363636363636, 0.9727272727272727, 0.9818181818181817, 0.9909090909090907, 0.9999999999999998}, new char[]{'P', '2', ' ', 'e', 's'}) );
        twoCharacterInputWithUnknownOutput.put("F1", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'v', '1'}) );
        twoCharacterInputWithUnknownOutput.put("EQ", new ProportionalProbability( new double[]{0.9259259259259259, 0.962962962962963, 1.0}, new char[]{' ', 'f', 'Q'}) );
        twoCharacterInputWithUnknownOutput.put("ER", new ProportionalProbability( new double[]{0.9305555555555556, 0.9333333333333333, 0.9361111111111111, 0.9388888888888889, 0.9416666666666667, 0.9444444444444444, 0.9472222222222222, 0.95, 0.9527777777777777, 0.9555555555555555, 0.9583333333333333, 0.961111111111111, 0.9638888888888888, 0.9666666666666666, 0.9694444444444443, 0.9722222222222221, 0.9749999999999999, 0.9777777777777776, 0.9805555555555554, 0.9833333333333332, 0.9861111111111109, 0.9888888888888887, 0.9916666666666665, 0.9944444444444442, 0.997222222222222, 0.9999999999999998}, new char[]{'R', 'b', 's', 'a', 'n', ' ', 'Y', 'J', 'T', 'C', 'c', 'H', 't', 'E', '0', 'o', 'A', 'd', 'm', 'V', 'e', 'I', 'B', 'l', 'v', ','}) );
        twoCharacterInputWithUnknownOutput.put("Dr", new ProportionalProbability( new double[]{0.9809619238476954, 0.9819639278557114, 0.9829659318637274, 0.9839679358717434, 0.9849699398797593, 0.9859719438877753, 0.9869739478957913, 0.9879759519038073, 0.9889779559118232, 0.9899799599198392, 0.9909819639278552, 0.9919839679358712, 0.9929859719438872, 0.9939879759519031, 0.9949899799599191, 0.9959919839679351, 0.9969939879759511, 0.997995991983967, 0.998997995991983, 0.999999999999999}, new char[]{'r', 'l', ' ', 'd', 'm', 'D', 'u', 'e', 'a', 'i', 'P', 'b', 's', 'w', 'n', 'h', 'S', 'B', 'o', '('}) );
        twoCharacterInputWithUnknownOutput.put("ES", new ProportionalProbability( new double[]{0.9621993127147767, 0.9656357388316151, 0.9690721649484536, 0.9725085910652921, 0.9759450171821306, 0.979381443298969, 0.9828178694158075, 0.986254295532646, 0.9896907216494845, 0.9931271477663229, 0.9965635738831614, 0.9999999999999999}, new char[]{'S', 'c', 'o', 'D', 't', 'r', ' ', 'd', 'E', 'f', 'H', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("ET", new ProportionalProbability( new double[]{0.9084507042253521, 0.9154929577464789, 0.9225352112676056, 0.9295774647887324, 0.9366197183098591, 0.9436619718309859, 0.9507042253521126, 0.9577464788732394, 0.9647887323943661, 0.9718309859154929, 0.9788732394366196, 0.9859154929577464, 0.9929577464788731, 0.9999999999999999}, new char[]{'T', 'O', 'W', 'E', 'a', 'i', 'd', 'w', 's', 'o', 'm', 'e', 'p', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Ds", new ProportionalProbability( new double[]{0.9649122807017544, 0.9824561403508771, 1.0}, new char[]{'s', 'o', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("EU", new ProportionalProbability( new double[]{0.958041958041958, 0.965034965034965, 0.972027972027972, 0.979020979020979, 0.9860139860139859, 0.9930069930069929, 0.9999999999999999}, new char[]{'U', ' ', 'E', 'h', 'n', 'r', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Du", new ProportionalProbability( new double[]{0.9761273209549072, 0.9774535809018567, 0.9787798408488063, 0.9801061007957559, 0.9814323607427055, 0.982758620689655, 0.9840848806366046, 0.9854111405835542, 0.9867374005305037, 0.9880636604774533, 0.9893899204244029, 0.9907161803713525, 0.992042440318302, 0.9933687002652516, 0.9946949602122012, 0.9960212201591507, 0.9973474801061003, 0.9986737400530499, 0.9999999999999994}, new char[]{'u', 'd', ' ', 'a', 'D', 'e', 'h', 'l', 'i', 'm', 'b', 'g', 'n', 'r', 'N', 's', 'c', '2', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("EV", new ProportionalProbability( new double[]{0.8837209302325582, 0.9069767441860466, 0.930232558139535, 0.9534883720930234, 0.9767441860465118, 1.0000000000000002}, new char[]{' ', 'V', 'i', '-', 'e', 's'}) );
        twoCharacterInputWithUnknownOutput.put("EW", new ProportionalProbability( new double[]{0.7894736842105263, 0.8421052631578947, 0.894736842105263, 0.9473684210526314, 0.9999999999999998}, new char[]{'W', 'a', '\"', ' ', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("Dw", new ProportionalProbability( new double[]{0.967741935483871, 1.0}, new char[]{'w', ' '}) );
        twoCharacterInputWithUnknownOutput.put("EX", new ProportionalProbability( new double[]{0.9689922480620154, 0.9767441860465116, 0.9844961240310077, 0.9922480620155039, 1.0}, new char[]{'F', 'X', 'Y', ' ', 's'}) );
        twoCharacterInputWithUnknownOutput.put("EY", new ProportionalProbability( new double[]{0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{' ', 'Y', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Dx", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'x', '^'}) );
        twoCharacterInputWithUnknownOutput.put("F:", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{'S', ':'}) );
        twoCharacterInputWithUnknownOutput.put("Dy", new ProportionalProbability( new double[]{0.9492753623188406, 0.9565217391304348, 0.963768115942029, 0.9710144927536233, 0.9782608695652175, 0.9855072463768118, 0.992753623188406, 1.0000000000000002}, new char[]{'a', 'm', 'd', ' ', 'y', 'r', 'i', 't'}) );
        twoCharacterInputWithUnknownOutput.put("F=", new ProportionalProbability( new double[]{0.8518518518518519, 0.8888888888888888, 0.9259259259259258, 0.9629629629629628, 0.9999999999999998}, new char[]{'=', 'f', ' ', 'h', 't'}) );
        twoCharacterInputWithUnknownOutput.put("G ", new ProportionalProbability( new double[]{0.9186991869918699, 0.926829268292683, 0.934959349593496, 0.9430894308943091, 0.9512195121951221, 0.9593495934959352, 0.9674796747967482, 0.9756097560975613, 0.9837398373983743, 0.9918699186991874, 1.0000000000000004}, new char[]{' ', 'r', 'd', 'n', 'f', 'i', 'e', 'a', 'A', '.', 't'}) );
        twoCharacterInputWithUnknownOutput.put("F?", new ProportionalProbability( new double[]{0.75, 0.8125, 0.875, 0.9375, 1.0}, new char[]{'p', 't', ' ', '?', 's'}) );
        twoCharacterInputWithUnknownOutput.put("FA", new ProportionalProbability( new double[]{0.9868421052631579, 1.0}, new char[]{'A', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ea", new ProportionalProbability( new double[]{0.9794871794871794, 0.9803418803418803, 0.9811965811965812, 0.982051282051282, 0.9829059829059829, 0.9837606837606837, 0.9846153846153846, 0.9854700854700854, 0.9863247863247863, 0.9871794871794871, 0.988034188034188, 0.9888888888888888, 0.9897435897435897, 0.9905982905982905, 0.9914529914529914, 0.9923076923076922, 0.9931623931623931, 0.9940170940170939, 0.9948717948717948, 0.9957264957264956, 0.9965811965811965, 0.9974358974358973, 0.9982905982905982, 0.999145299145299, 0.9999999999999999}, new char[]{'a', 'l', ' ', 'e', 'f', 'h', 'm', 'i', 'r', 'n', 's', 't', 'k', 'o', 'w', 'u', '5', 'y', 'p', 'b', 'C', 'g', 'c', ',', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("FB", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'e', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("FC", new ProportionalProbability( new double[]{0.8857142857142857, 0.8999999999999999, 0.9142857142857141, 0.9285714285714284, 0.9428571428571426, 0.9571428571428569, 0.9714285714285711, 0.9857142857142853, 0.9999999999999996}, new char[]{'C', 's', 'e', 'i', 'o', 'r', 'F', '\"', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("Ec", new ProportionalProbability( new double[]{0.9812734082397003, 0.9831460674157303, 0.9850187265917603, 0.9868913857677902, 0.9887640449438202, 0.9906367041198502, 0.9925093632958801, 0.9943820224719101, 0.9962546816479401, 0.99812734082397, 1.0}, new char[]{'r', 'c', 'e', ' ', 'E', 'a', 'o', 'l', 's', 'R', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("FD", new ProportionalProbability( new double[]{0.9801980198019802, 0.9900990099009901, 1.0}, new char[]{'D', 'c', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Ed", new ProportionalProbability( new double[]{0.9669669669669669, 0.96996996996997, 0.972972972972973, 0.9759759759759761, 0.9789789789789791, 0.9819819819819822, 0.9849849849849852, 0.9879879879879883, 0.9909909909909913, 0.9939939939939944, 0.9969969969969974, 1.0000000000000004}, new char[]{' ', 'd', 'e', 'm', 'E', 'n', 't', 'w', 'f', 'o', 'l', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("FE", new ProportionalProbability( new double[]{0.9516129032258065, 0.967741935483871, 0.9838709677419355, 1.0}, new char[]{'F', 'E', 'D', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("FF", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'E', 'F', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("Ef", new ProportionalProbability( new double[]{0.9727722772277227, 0.9752475247524752, 0.9777227722772277, 0.9801980198019802, 0.9826732673267327, 0.9851485148514851, 0.9876237623762376, 0.9900990099009901, 0.9925742574257426, 0.995049504950495, 0.9975247524752475, 1.0}, new char[]{'e', 'f', 'b', ' ', 'd', 'a', 'm', 'o', 't', 'h', 'r', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("Eg", new ProportionalProbability( new double[]{0.9567567567567568, 0.9621621621621621, 0.9675675675675675, 0.9729729729729728, 0.9783783783783782, 0.9837837837837835, 0.9891891891891889, 0.9945945945945942, 0.9999999999999996}, new char[]{' ', 'g', 'a', 'l', 'e', 't', 'n', 'u', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("FI", new ProportionalProbability( new double[]{0.9242424242424242, 0.9393939393939393, 0.9545454545454545, 0.9696969696969696, 0.9848484848484848, 0.9999999999999999}, new char[]{'I', ' ', 'C', 'n', 'O', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Eh", new ProportionalProbability( new double[]{0.9375, 0.96875, 1.0}, new char[]{'e', 'h', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Ei", new ProportionalProbability( new double[]{0.9817073170731707, 0.9832317073170731, 0.9847560975609755, 0.9862804878048779, 0.9878048780487803, 0.9893292682926826, 0.990853658536585, 0.9923780487804874, 0.9939024390243898, 0.9954268292682922, 0.9969512195121946, 0.998475609756097, 0.9999999999999993}, new char[]{'i', 'e', 'E', 'p', 'r', 'a', ',', 'o', 't', 's', ' ', '…', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("G,", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{',', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("FL", new ProportionalProbability( new double[]{0.864406779661017, 0.8813559322033898, 0.8983050847457626, 0.9152542372881355, 0.9322033898305083, 0.9491525423728812, 0.966101694915254, 0.9830508474576268, 0.9999999999999997}, new char[]{'L', 'M', ' ', 'E', 'P', 'S', 'Y', 'c', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Ek", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'k', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("El", new ProportionalProbability( new double[]{0.9947183098591549, 0.9949698189134808, 0.9952213279678067, 0.9954728370221326, 0.9957243460764585, 0.9959758551307845, 0.9962273641851104, 0.9964788732394363, 0.9967303822937622, 0.9969818913480881, 0.997233400402414, 0.99748490945674, 0.9977364185110659, 0.9979879275653918, 0.9982394366197177, 0.9984909456740436, 0.9987424547283695, 0.9989939637826954, 0.9992454728370214, 0.9994969818913473, 0.9997484909456732, 0.9999999999999991}, new char[]{'e', 'l', ' ', 'd', 'P', 'r', 'x', 'c', 's', 'i', 'o', 't', 'a', 'n', 'g', 'v', 'E', 'm', 'k', 'u', 'y', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("FM", new ProportionalProbability( new double[]{0.7647058823529411, 0.8235294117647058, 0.8823529411764706, 0.9411764705882353, 1.0}, new char[]{'.', 'M', '/', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Em", new ProportionalProbability( new double[]{0.981651376146789, 0.9826707441386341, 0.9836901121304792, 0.9847094801223243, 0.9857288481141694, 0.9867482161060145, 0.9877675840978596, 0.9887869520897047, 0.9898063200815498, 0.9908256880733949, 0.99184505606524, 0.9928644240570851, 0.9938837920489302, 0.9949031600407753, 0.9959225280326204, 0.9969418960244655, 0.9979612640163106, 0.9989806320081557, 1.0000000000000007}, new char[]{'m', 'l', 'e', 'E', 'p', ' ', 'd', 'i', 't', 'x', 'b', 'n', 'a', 'c', 'o', ',', 'B', '.', 's'}) );
        twoCharacterInputWithUnknownOutput.put("En", new ProportionalProbability( new double[]{0.9922854387656702, 0.9926068788171006, 0.9929283188685311, 0.9932497589199615, 0.9935711989713919, 0.9938926390228223, 0.9942140790742527, 0.9945355191256832, 0.9948569591771136, 0.995178399228544, 0.9954998392799744, 0.9958212793314049, 0.9961427193828353, 0.9964641594342657, 0.9967855994856961, 0.9971070395371265, 0.997428479588557, 0.9977499196399874, 0.9980713596914178, 0.9983927997428482, 0.9987142397942786, 0.9990356798457091, 0.9993571198971395, 0.9996785599485699, 1.0000000000000002}, new char[]{'n', 'm', 'l', 'e', ' ', 'E', 'u', 'g', 'i', 'p', 'a', 'r', 'c', 't', '/', ',', 'o', 'f', 'h', 'y', ':', 'd', 's', 'N', '.'}) );
        twoCharacterInputWithUnknownOutput.put("FO", new ProportionalProbability( new double[]{0.9120879120879121, 0.923076923076923, 0.934065934065934, 0.9450549450549449, 0.9560439560439559, 0.9670329670329668, 0.9780219780219778, 0.9890109890109887, 0.9999999999999997}, new char[]{'O', 'E', 'i', 'I', ' ', 'Z', 'F', 'R', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("Eo", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'n', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("FP", new ProportionalProbability( new double[]{0.75, 0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'m', 'n', 'P', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ep", new ProportionalProbability( new double[]{0.9444444444444444, 0.9523809523809523, 0.9603174603174602, 0.9682539682539681, 0.976190476190476, 0.984126984126984, 0.9920634920634919, 0.9999999999999998}, new char[]{'p', 'c', 'o', 'a', 'n', ' ', 's', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("FR", new ProportionalProbability( new double[]{0.8924731182795699, 0.9032258064516129, 0.9139784946236559, 0.9247311827956989, 0.9354838709677419, 0.9462365591397849, 0.9569892473118279, 0.9677419354838709, 0.9784946236559139, 0.9892473118279569, 0.9999999999999999}, new char[]{'f', 'R', 'D', 'o', '1', 'e', 'A', 'a', 'L', ' ', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("Eq", new ProportionalProbability( new double[]{0.9727626459143969, 0.9747081712062257, 0.9766536964980544, 0.9785992217898832, 0.980544747081712, 0.9824902723735408, 0.9844357976653696, 0.9863813229571984, 0.9883268482490272, 0.990272373540856, 0.9922178988326847, 0.9941634241245135, 0.9961089494163423, 0.9980544747081711, 0.9999999999999999}, new char[]{'e', 'q', ' ', 'l', 'm', 't', 'o', 'r', 's', 'a', 'f', 'n', 'h', 'i', ')'}) );
        twoCharacterInputWithUnknownOutput.put("Er", new ProportionalProbability( new double[]{0.9875, 0.9892857142857143, 0.9910714285714286, 0.9928571428571429, 0.9946428571428572, 0.9964285714285714, 0.9982142857142857, 1.0}, new char[]{'r', 'e', 'E', ' ', 'n', 'h', 's', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("FS", new ProportionalProbability( new double[]{0.9285714285714286, 0.9523809523809524, 0.9761904761904763, 1.0}, new char[]{'i', 'S', 's', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Aî", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'a', 'î'}) );
        twoCharacterInputWithUnknownOutput.put("Es", new ProportionalProbability( new double[]{0.981638418079096, 0.983050847457627, 0.9844632768361581, 0.9858757062146891, 0.9872881355932202, 0.9887005649717512, 0.9901129943502822, 0.9915254237288132, 0.9929378531073443, 0.9943502824858753, 0.9957627118644063, 0.9971751412429374, 0.9985875706214684, 0.9999999999999994}, new char[]{'s', 'e', 'r', ' ', 'E', 'l', 'i', 'N', 'u', 'b', 'h', 't', 'm', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("FT", new ProportionalProbability( new double[]{0.9636363636363636, 0.9818181818181818, 1.0}, new char[]{'T', 'd', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Et", new ProportionalProbability( new double[]{0.9584905660377359, 0.9622641509433962, 0.9660377358490566, 0.969811320754717, 0.9735849056603774, 0.9773584905660377, 0.9811320754716981, 0.9849056603773585, 0.9886792452830189, 0.9924528301886792, 0.9962264150943396, 1.0}, new char[]{'t', 'E', ',', 'i', 'p', ' ', 'e', 'h', 'u', 'a', 's', '.'}) );
        twoCharacterInputWithUnknownOutput.put("FU", new ProportionalProbability( new double[]{0.84, 0.88, 0.92, 0.9600000000000001, 1.0}, new char[]{'U', 'E', 'h', 'I', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("Eu", new ProportionalProbability( new double[]{0.9826789838337182, 0.9838337182448037, 0.9849884526558892, 0.9861431870669747, 0.9872979214780602, 0.9884526558891457, 0.9896073903002311, 0.9907621247113166, 0.9919168591224021, 0.9930715935334876, 0.9942263279445731, 0.9953810623556586, 0.9965357967667441, 0.9976905311778296, 0.9988452655889151, 1.0000000000000004}, new char[]{'u', 'o', 'E', ' ', 't', 'm', 'e', 'a', 'i', 'p', 'l', 'n', 'd', 'w', 'b', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Añ", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'A', 'ñ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("FV", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'V', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Ev", new ProportionalProbability( new double[]{0.9715142428785607, 0.9730134932533733, 0.9745127436281859, 0.9760119940029984, 0.977511244377811, 0.9790104947526236, 0.9805097451274362, 0.9820089955022487, 0.9835082458770613, 0.9850074962518739, 0.9865067466266865, 0.988005997001499, 0.9895052473763116, 0.9910044977511242, 0.9925037481259368, 0.9940029985007494, 0.9955022488755619, 0.9970014992503745, 0.9985007496251871, 0.9999999999999997}, new char[]{'v', ' ', 'b', 't', 'e', 'n', 'a', 'o', 'h', 'c', 'l', 'i', 'r', 's', '-', 'm', 'í', '_', 'y', '.'}) );
        twoCharacterInputWithUnknownOutput.put("Ex", new ProportionalProbability( new double[]{0.9905782975958415, 0.99090318388564, 0.9912280701754386, 0.9915529564652371, 0.9918778427550357, 0.9922027290448342, 0.9925276153346327, 0.9928525016244313, 0.9931773879142298, 0.9935022742040284, 0.9938271604938269, 0.9941520467836255, 0.994476933073424, 0.9948018193632225, 0.9951267056530211, 0.9954515919428196, 0.9957764782326182, 0.9961013645224167, 0.9964262508122153, 0.9967511371020138, 0.9970760233918123, 0.9974009096816109, 0.9977257959714094, 0.998050682261208, 0.9983755685510065, 0.998700454840805, 0.9990253411306036, 0.9993502274204021, 0.9996751137102007, 0.9999999999999992}, new char[]{'r', 'x', 'l', 'e', ' ', 'a', 'n', 's', 'm', '5', 'd', 't', 'k', 'o', 'p', 'h', 'y', 'i', 'q', 'E', 'u', 'O', ',', 'c', 'S', '.', 'f', 'v', 'w', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("Ey", new ProportionalProbability( new double[]{0.9464285714285714, 0.9642857142857143, 0.9821428571428572, 1.0}, new char[]{' ', 'y', 'c', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("H ", new ProportionalProbability( new double[]{0.9444444444444444, 0.9467592592592592, 0.949074074074074, 0.9513888888888887, 0.9537037037037035, 0.9560185185185183, 0.958333333333333, 0.9606481481481478, 0.9629629629629626, 0.9652777777777773, 0.9675925925925921, 0.9699074074074069, 0.9722222222222217, 0.9745370370370364, 0.9768518518518512, 0.979166666666666, 0.9814814814814807, 0.9837962962962955, 0.9861111111111103, 0.988425925925925, 0.9907407407407398, 0.9930555555555546, 0.9953703703703694, 0.9976851851851841, 0.9999999999999989}, new char[]{'t', 'u', ' ', 'c', 'C', 'e', 'g', 'y', 's', 'm', 'h', 'i', 'E', 'F', '…', 'f', 'l', 'G', 'R', 'a', '.', 'n', 'p', 'b', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("F_", new ProportionalProbability( new double[]{0.9995942406767574, 0.99959833925578, 0.9996024378348026, 0.9996065364138252, 0.9996106349928479, 0.9996147335718705, 0.9996188321508931, 0.9996229307299157, 0.9996270293089383, 0.9996311278879609, 0.9996352264669836, 0.9996393250460062, 0.9996434236250288, 0.9996475222040514, 0.999651620783074, 0.9996557193620966, 0.9996598179411192, 0.9996639165201419, 0.9996680150991645, 0.9996721136781871, 0.9996762122572097, 0.9996803108362323, 0.9996844094152549, 0.9996885079942776, 0.9996926065733002, 0.9996967051523228, 0.9997008037313454, 0.999704902310368, 0.9997090008893906, 0.9997130994684132, 0.9997171980474359, 0.9997212966264585, 0.9997253952054811, 0.9997294937845037, 0.9997335923635263, 0.9997376909425489, 0.9997417895215716, 0.9997458881005942, 0.9997499866796168, 0.9997540852586394, 0.999758183837662, 0.9997622824166846, 0.9997663809957072, 0.9997704795747299, 0.9997745781537525, 0.9997786767327751, 0.9997827753117977, 0.9997868738908203, 0.9997909724698429, 0.9997950710488656, 0.9997991696278882, 0.9998032682069108, 0.9998073667859334, 0.999811465364956, 0.9998155639439786, 0.9998196625230013, 0.9998237611020239, 0.9998278596810465, 0.9998319582600691, 0.9998360568390917, 0.9998401554181143, 0.999844253997137, 0.9998483525761596, 0.9998524511551822, 0.9998565497342048, 0.9998606483132274, 0.99986474689225, 0.9998688454712726, 0.9998729440502953, 0.9998770426293179, 0.9998811412083405, 0.9998852397873631, 0.9998893383663857, 0.9998934369454083, 0.999897535524431, 0.9999016341034536, 0.9999057326824762, 0.9999098312614988, 0.9999139298405214, 0.999918028419544, 0.9999221269985666, 0.9999262255775893, 0.9999303241566119, 0.9999344227356345, 0.9999385213146571, 0.9999426198936797, 0.9999467184727023, 0.999950817051725, 0.9999549156307476, 0.9999590142097702, 0.9999631127887928, 0.9999672113678154, 0.999971309946838, 0.9999754085258606, 0.9999795071048833, 0.9999836056839059, 0.9999877042629285, 0.9999918028419511, 0.9999959014209737, 0.9999999999999963}, new char[]{'e', ' ', 't', 'w', 'a', 'o', 's', 'l', 'h', 'r', 'd', 'n', 'u', 'g', 'D', 'f', 'm', 'c', 'i', 'é', 'H', 'b', 'p', 'y', 'A', 'v', '’', '.', 'T', ',', '\'', 'C', 'x', ')', 'S', 'R', 'z', '6', ':', 'j', '+', 'Y', '?', 'k', 'O', '1', '/', '=', '!', '^', '-', '2', 'N', '\"', 'I', '4', '>', 'W', 'U', '(', 'è', 'P', '→', '8', '√', 'K', 'M', 'Φ', '&', 'E', 'q', 'G', '3', '0', '5', 'F', '∞', '7', 'L', 'Q', '<', 'π', '–', 'B', 'ω', '_', '9', 'ę', 'V', 'Δ', '*', 'ִ', 'θ', 'Z', '%', '[', 'ו', ';', '…', 'מ'}) );
        twoCharacterInputWithUnknownOutput.put("GA", new ProportionalProbability( new double[]{0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'A', 'L', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Fa", new ProportionalProbability( new double[]{0.9891566265060241, 0.989558232931727, 0.9899598393574298, 0.9903614457831327, 0.9907630522088355, 0.9911646586345384, 0.9915662650602413, 0.9919678714859441, 0.992369477911647, 0.9927710843373498, 0.9931726907630527, 0.9935742971887556, 0.9939759036144584, 0.9943775100401613, 0.9947791164658641, 0.995180722891567, 0.9955823293172699, 0.9959839357429727, 0.9963855421686756, 0.9967871485943784, 0.9971887550200813, 0.9975903614457842, 0.997991967871487, 0.9983935742971899, 0.9987951807228928, 0.9991967871485956, 0.9995983935742985, 1.0000000000000013}, new char[]{'a', 'c', 'f', ' ', 'm', 'F', 'l', 'o', 't', 'e', 'u', '•', 'b', 's', 'i', ',', 'n', '-', 'r', 'y', 'd', '%', 'G', 'w', 'g', 'I', 'A', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("GB", new ProportionalProbability( new double[]{0.9761904761904762, 1.0}, new char[]{'G', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("GC", new ProportionalProbability( new double[]{0.9607843137254902, 0.9803921568627452, 1.0}, new char[]{'C', ' ', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("GD", new ProportionalProbability( new double[]{0.9629629629629629, 0.9722222222222222, 0.9814814814814815, 0.9907407407407408, 1.0}, new char[]{'D', 'd', 'i', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("GE", new ProportionalProbability( new double[]{0.9103448275862069, 0.9172413793103449, 0.9241379310344828, 0.9310344827586208, 0.9379310344827587, 0.9448275862068967, 0.9517241379310346, 0.9586206896551726, 0.9655172413793105, 0.9724137931034484, 0.9793103448275864, 0.9862068965517243, 0.9931034482758623, 1.0000000000000002}, new char[]{'E', 's', 'a', 'M', 'o', 'A', 'R', 'u', 'y', 'i', 'r', ' ', 'e', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Fe", new ProportionalProbability( new double[]{0.9850074962518741, 0.9857571214392804, 0.9865067466266867, 0.987256371814093, 0.9880059970014993, 0.9887556221889056, 0.9895052473763118, 0.9902548725637181, 0.9910044977511244, 0.9917541229385307, 0.992503748125937, 0.9932533733133433, 0.9940029985007496, 0.9947526236881559, 0.9955022488755622, 0.9962518740629684, 0.9970014992503747, 0.997751124437781, 0.9985007496251873, 0.9992503748125936, 0.9999999999999999}, new char[]{'F', 'e', 'l', ' ', 'f', 't', 'm', 'v', 'i', 'r', 's', 'n', 'w', 'a', 'o', 'u', '.', 'd', 'V', 'y', ','}) );
        twoCharacterInputWithUnknownOutput.put("GG", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'\"', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("GH", new ProportionalProbability( new double[]{0.925, 0.9500000000000001, 0.9750000000000001, 1.0}, new char[]{'H', 'A', 'O', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("H)", new ProportionalProbability( new double[]{0.9863013698630136, 1.0}, new char[]{')', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Fg", new ProportionalProbability( new double[]{0.7777777777777778, 0.8888888888888888, 1.0}, new char[]{'f', 'a', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("GI", new ProportionalProbability( new double[]{0.9629629629629629, 0.9814814814814814, 0.9999999999999999}, new char[]{'I', ' ', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Bä", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'B', 'ä'}) );
        twoCharacterInputWithUnknownOutput.put("Fi", new ProportionalProbability( new double[]{0.9871858058156727, 0.9876786594381468, 0.9881715130606209, 0.988664366683095, 0.9891572203055691, 0.9896500739280432, 0.9901429275505172, 0.9906357811729913, 0.9911286347954654, 0.9916214884179395, 0.9921143420404136, 0.9926071956628877, 0.9931000492853618, 0.9935929029078359, 0.99408575653031, 0.994578610152784, 0.9950714637752581, 0.9955643173977322, 0.9960571710202063, 0.9965500246426804, 0.9970428782651545, 0.9975357318876286, 0.9980285855101027, 0.9985214391325767, 0.9990142927550508, 0.9995071463775249, 0.999999999999999}, new char[]{'d', 'R', 's', ' ', 'i', 'f', 'm', 'l', 't', 'a', 'o', 'F', 'u', 'e', 'C', 'p', 'n', 'w', '-', 'b', 'r', 'v', 'h', 'P', 'c', 'M', ','}) );
        twoCharacterInputWithUnknownOutput.put("H+", new ProportionalProbability( new double[]{0.9367088607594937, 0.9493670886075949, 0.9620253164556961, 0.9746835443037973, 0.9873417721518986, 0.9999999999999998}, new char[]{'A', '+', '–', ']', 'a', 't'}) );
        twoCharacterInputWithUnknownOutput.put("H,", new ProportionalProbability( new double[]{0.896551724137931, 0.9137931034482759, 0.9310344827586208, 0.9482758620689656, 0.9655172413793105, 0.9827586206896554, 1.0000000000000002}, new char[]{',', ' ', 'c', 'i', '-', 'd', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("GL", new ProportionalProbability( new double[]{0.92, 0.9600000000000001, 1.0}, new char[]{'r', 'L', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Fl", new ProportionalProbability( new double[]{0.9768339768339769, 0.9777992277992279, 0.9787644787644789, 0.9797297297297299, 0.980694980694981, 0.981660231660232, 0.982625482625483, 0.983590733590734, 0.984555984555985, 0.985521235521236, 0.9864864864864871, 0.9874517374517381, 0.9884169884169891, 0.9893822393822401, 0.9903474903474911, 0.9913127413127422, 0.9922779922779932, 0.9932432432432442, 0.9942084942084952, 0.9951737451737462, 0.9961389961389973, 0.9971042471042483, 0.9980694980694993, 0.9990347490347503, 1.0000000000000013}, new char[]{'l', 'a', 'i', ' ', 'r', 'f', 'F', 'e', 'm', 'o', '-', '/', 'R', 'U', 'd', 'D', 'g', 't', 'k', 'v', 'n', 'x', 'M', 'u', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("GM", new ProportionalProbability( new double[]{0.9285714285714286, 0.9428571428571428, 0.9571428571428571, 0.9714285714285713, 0.9857142857142855, 0.9999999999999998}, new char[]{'M', 'r', 'v', 'n', 'a', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Bé", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'B', 'é', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("GN", new ProportionalProbability( new double[]{0.9259259259259259, 0.962962962962963, 1.0}, new char[]{'N', 'i', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("H0", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'0', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("GO", new ProportionalProbability( new double[]{0.96, 0.98, 1.0}, new char[]{'s', 'O', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Bê", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'ê', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("Fn", new ProportionalProbability( new double[]{0.7777777777777778, 0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'e', 't', ' ', 'a', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Fo", new ProportionalProbability( new double[]{0.988476773496579, 0.9888368743248109, 0.9891969751530428, 0.9895570759812747, 0.9899171768095066, 0.9902772776377385, 0.9906373784659704, 0.9909974792942023, 0.9913575801224342, 0.9917176809506661, 0.992077781778898, 0.99243788260713, 0.9927979834353619, 0.9931580842635938, 0.9935181850918257, 0.9938782859200576, 0.9942383867482895, 0.9945984875765214, 0.9949585884047533, 0.9953186892329852, 0.9956787900612171, 0.996038890889449, 0.9963989917176809, 0.9967590925459128, 0.9971191933741447, 0.9974792942023766, 0.9978393950306085, 0.9981994958588404, 0.9985595966870723, 0.9989196975153042, 0.9992797983435361, 0.999639899171768, 0.9999999999999999}, new char[]{' ', 'o', 'm', 't', 'f', 'p', 'd', 'l', 'F', 'b', 'n', 'i', 'a', 'r', 's', 'c', 'e', 'H', 'P', 'w', 'h', '-', 'T', '.', 'u', 'B', '(', 'Z', 'k', ':', 'Q', '1', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("H1", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'1', 't'}) );
        twoCharacterInputWithUnknownOutput.put("GP", new ProportionalProbability( new double[]{0.9863013698630136, 1.0}, new char[]{'P', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("H2", new ProportionalProbability( new double[]{0.9585253456221198, 0.9631336405529953, 0.9677419354838709, 0.9723502304147464, 0.976958525345622, 0.9815668202764976, 0.9861751152073731, 0.9907834101382487, 0.9953917050691242, 0.9999999999999998}, new char[]{'2', 'O', '+', 'i', ' ', ',', 't', 'a', 'l', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("GR", new ProportionalProbability( new double[]{0.9090909090909091, 0.9242424242424242, 0.9393939393939393, 0.9545454545454545, 0.9696969696969696, 0.9848484848484848, 0.9999999999999999}, new char[]{' ', 'R', 'i', 'w', 'u', 's', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("H3", new ProportionalProbability( new double[]{0.9883720930232558, 1.0}, new char[]{'3', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Fr", new ProportionalProbability( new double[]{0.9921070693205216, 0.9924502402196294, 0.9927934111187371, 0.9931365820178448, 0.9934797529169526, 0.9938229238160603, 0.994166094715168, 0.9945092656142758, 0.9948524365133835, 0.9951956074124912, 0.995538778311599, 0.9958819492107067, 0.9962251201098145, 0.9965682910089222, 0.9969114619080299, 0.9972546328071377, 0.9975978037062454, 0.9979409746053531, 0.9982841455044609, 0.9986273164035686, 0.9989704873026763, 0.9993136582017841, 0.9996568291008918, 0.9999999999999996}, new char[]{'F', 'r', 'l', 'f', ' ', 'm', 'i', 't', 'u', 'o', 'n', 'd', 'a', 'e', 's', 'g', 'c', 'p', 'h', '.', 'v', 'k', '\'', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("GS", new ProportionalProbability( new double[]{0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'S', 'A', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("H4", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{'4', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("GT", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'T', 'f', ' '}) );
        twoCharacterInputWithUnknownOutput.put("H5", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'5', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("Fs", new ProportionalProbability( new double[]{0.7857142857142857, 0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'s', 'n', 'o', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("GU", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'U', ' '}) );
        twoCharacterInputWithUnknownOutput.put("H6", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'C', 'w', '6'}) );
        twoCharacterInputWithUnknownOutput.put("Fu", new ProportionalProbability( new double[]{0.9823788546255506, 0.9834801762114537, 0.9845814977973567, 0.9856828193832597, 0.9867841409691628, 0.9878854625550658, 0.9889867841409689, 0.9900881057268719, 0.9911894273127749, 0.992290748898678, 0.993392070484581, 0.994493392070484, 0.9955947136563871, 0.9966960352422901, 0.9977973568281931, 0.9988986784140962, 0.9999999999999992}, new char[]{'F', ' ', 'u', 'i', 'f', 'l', '(', 't', 'o', 'e', 'n', 'r', 's', 'O', 'm', 'a', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("GW", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'D', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Fw", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'w', ' '}) );
        twoCharacterInputWithUnknownOutput.put("GY", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'Y', ' '}) );
        twoCharacterInputWithUnknownOutput.put("H<", new ProportionalProbability( new double[]{0.9811320754716981, 0.9905660377358491, 1.0}, new char[]{' ', 'H', '<'}) );
        twoCharacterInputWithUnknownOutput.put("Bö", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'b', 'ö'}) );
        twoCharacterInputWithUnknownOutput.put("I ", new ProportionalProbability( new double[]{0.9783513738551207, 0.9791840133222315, 0.9800166527893422, 0.980849292256453, 0.9816819317235638, 0.9825145711906745, 0.9833472106577853, 0.9841798501248961, 0.9850124895920068, 0.9858451290591176, 0.9866777685262283, 0.9875104079933391, 0.9883430474604499, 0.9891756869275606, 0.9900083263946714, 0.9908409658617822, 0.9916736053288929, 0.9925062447960037, 0.9933388842631145, 0.9941715237302252, 0.995004163197336, 0.9958368026644467, 0.9966694421315575, 0.9975020815986683, 0.998334721065779, 0.9991673605328898, 1.0000000000000004}, new char[]{' ', 'h', 's', 't', 'l', 'u', '.', 'v', 'i', 'z', 'g', 'a', '(', 'e', 'w', 'd', 'p', 'o', 'c', 'k', 'n', ')', 'f', 'r', 'N', 'I', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("H?", new ProportionalProbability( new double[]{0.9846153846153847, 1.0}, new char[]{'?', ' '}) );
        twoCharacterInputWithUnknownOutput.put("HA", new ProportionalProbability( new double[]{0.9105691056910569, 0.9186991869918699, 0.926829268292683, 0.934959349593496, 0.9430894308943091, 0.9512195121951221, 0.9593495934959352, 0.9674796747967482, 0.9756097560975613, 0.9837398373983743, 0.9918699186991874, 1.0000000000000004}, new char[]{'-', 'A', 'i', 'e', ' ', 'E', 'y', 'w', 'D', 'P', '(', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("Ga", new ProportionalProbability( new double[]{0.9842584921292461, 0.9850869925434963, 0.9859154929577465, 0.9867439933719967, 0.9875724937862469, 0.9884009942004971, 0.9892294946147473, 0.9900579950289975, 0.9908864954432477, 0.9917149958574979, 0.9925434962717481, 0.9933719966859983, 0.9942004971002485, 0.9950289975144987, 0.9958574979287489, 0.9966859983429991, 0.9975144987572493, 0.9983429991714995, 0.9991714995857497, 0.9999999999999999}, new char[]{'a', 'g', 'l', 'm', ' ', 'G', 's', 'e', 'd', 'o', 'i', 'c', 't', 'p', 'B', 'v', ',', 'r', 'n', '-'}) );
        twoCharacterInputWithUnknownOutput.put("HB", new ProportionalProbability( new double[]{0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'r', '→', 'f', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("Bü", new ProportionalProbability( new double[]{0.9848484848484849, 1.0}, new char[]{'B', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("HC", new ProportionalProbability( new double[]{0.9272727272727272, 0.9454545454545454, 0.9636363636363636, 0.9818181818181818, 1.0}, new char[]{'C', 'b', ' ', 'f', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("HD", new ProportionalProbability( new double[]{0.9142857142857143, 0.9428571428571428, 0.9714285714285714, 1.0}, new char[]{' ', 'o', 'n', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("HE", new ProportionalProbability( new double[]{0.8888888888888888, 0.8974358974358974, 0.9059829059829059, 0.9145299145299144, 0.9230769230769229, 0.9316239316239314, 0.9401709401709399, 0.9487179487179485, 0.957264957264957, 0.9658119658119655, 0.974358974358974, 0.9829059829059825, 0.991452991452991, 0.9999999999999996}, new char[]{'\"', 'E', 'u', 'K', 'f', 't', ' ', 'F', '1', 'n', 'T', 'R', 'L', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("Ge", new ProportionalProbability( new double[]{0.9918444165621079, 0.9921580928481807, 0.9924717691342535, 0.9927854454203263, 0.9930991217063991, 0.993412797992472, 0.9937264742785448, 0.9940401505646176, 0.9943538268506904, 0.9946675031367632, 0.994981179422836, 0.9952948557089089, 0.9956085319949817, 0.9959222082810545, 0.9962358845671273, 0.9965495608532001, 0.9968632371392729, 0.9971769134253458, 0.9974905897114186, 0.9978042659974914, 0.9981179422835642, 0.998431618569637, 0.9987452948557098, 0.9990589711417827, 0.9993726474278555, 0.9996863237139283, 1.000000000000001}, new char[]{'e', ' ', 'g', 'G', 'i', 'v', 'r', 't', 'a', 'c', 'l', 'm', 'b', 'd', 'o', 'h', 'M', '\'', 'u', 'p', 'f', 'y', 'z', '-', 's', 'n', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("I\'", new ProportionalProbability( new double[]{0.9455782312925171, 0.9523809523809524, 0.9591836734693878, 0.9659863945578232, 0.9727891156462586, 0.979591836734694, 0.9863945578231293, 0.9931972789115647, 1.0}, new char[]{'\'', 's', ' ', 'd', 't', 'o', 'w', 'y', '.'}) );
        twoCharacterInputWithUnknownOutput.put("HF", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'F', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Cá", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'c', 'á'}) );
        twoCharacterInputWithUnknownOutput.put("I)", new ProportionalProbability( new double[]{0.9898477157360406, 0.9949238578680203, 1.0}, new char[]{')', 'n', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("Gh", new ProportionalProbability( new double[]{0.9540229885057471, 0.9655172413793103, 0.9770114942528735, 0.9885057471264367, 0.9999999999999999}, new char[]{'h', 'e', 's', ' ', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("HI", new ProportionalProbability( new double[]{0.9416666666666667, 0.95, 0.9583333333333333, 0.9666666666666666, 0.9749999999999999, 0.9833333333333332, 0.9916666666666665, 0.9999999999999998}, new char[]{'I', ' ', 'r', '\"', 'g', 'N', '+', '2'}) );
        twoCharacterInputWithUnknownOutput.put("Gi", new ProportionalProbability( new double[]{0.9672364672364673, 0.9686609686609687, 0.9700854700854702, 0.9715099715099716, 0.9729344729344731, 0.9743589743589746, 0.975783475783476, 0.9772079772079775, 0.9786324786324789, 0.9800569800569804, 0.9814814814814818, 0.9829059829059833, 0.9843304843304848, 0.9857549857549862, 0.9871794871794877, 0.9886039886039891, 0.9900284900284906, 0.991452991452992, 0.9928774928774935, 0.994301994301995, 0.9957264957264964, 0.9971509971509979, 0.9985754985754993, 1.0000000000000007}, new char[]{'h', 'n', ' ', 's', 'i', 'l', 'Q', 'g', 'x', 'G', 'e', 'w', 'p', 'v', 'a', 'o', 'd', 't', 'm', 'y', '.', 'u', 'f', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("I,", new ProportionalProbability( new double[]{0.9878048780487805, 1.0}, new char[]{',', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("I-", new ProportionalProbability( new double[]{0.9523809523809523, 1.0}, new char[]{'-', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Gl", new ProportionalProbability( new double[]{0.9737991266375546, 0.9752547307132461, 0.9767103347889375, 0.978165938864629, 0.9796215429403204, 0.9810771470160119, 0.9825327510917033, 0.9839883551673948, 0.9854439592430863, 0.9868995633187777, 0.9883551673944692, 0.9898107714701606, 0.9912663755458521, 0.9927219796215435, 0.994177583697235, 0.9956331877729264, 0.9970887918486179, 0.9985443959243093, 1.0000000000000007}, new char[]{'l', 'G', ' ', 'g', 'i', 'r', 'm', 'c', 'n', 's', 'w', 'a', '-', 'e', 'B', 't', 'b', 'o', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("HM", new ProportionalProbability( new double[]{0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{' ', 'M', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("I.", new ProportionalProbability( new double[]{0.9921875, 1.0}, new char[]{'.', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Cé", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'é', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("HN", new ProportionalProbability( new double[]{0.9629629629629629, 1.0}, new char[]{'N', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("HO", new ProportionalProbability( new double[]{0.9146341463414634, 0.926829268292683, 0.9390243902439025, 0.951219512195122, 0.9634146341463415, 0.9756097560975611, 0.9878048780487806, 1.0}, new char[]{'t', 'O', '\"', ' ', 'd', 'r', 'B', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Go", new ProportionalProbability( new double[]{0.9852420306965761, 0.9858323494687131, 0.9864226682408501, 0.9870129870129871, 0.9876033057851241, 0.9881936245572611, 0.9887839433293981, 0.9893742621015351, 0.9899645808736721, 0.9905548996458091, 0.9911452184179461, 0.9917355371900831, 0.9923258559622201, 0.9929161747343571, 0.9935064935064941, 0.9940968122786311, 0.9946871310507681, 0.9952774498229051, 0.9958677685950421, 0.9964580873671791, 0.9970484061393161, 0.9976387249114531, 0.9982290436835901, 0.9988193624557271, 0.9994096812278641, 1.000000000000001}, new char[]{'g', 'n', 'o', ' ', 'l', 'd', 'G', 'e', 'i', 't', 'b', 'r', 's', 'c', 'M', 'w', 'B', 'a', '-', 'x', 'f', 'h', 'p', 'y', ',', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("I2", new ProportionalProbability( new double[]{0.90625, 0.9375, 0.96875, 1.0}, new char[]{'2', 'H', 'l', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("Gr", new ProportionalProbability( new double[]{0.9880401234567902, 0.9884259259259259, 0.9888117283950617, 0.9891975308641975, 0.9895833333333333, 0.989969135802469, 0.9903549382716048, 0.9907407407407406, 0.9911265432098764, 0.9915123456790121, 0.9918981481481479, 0.9922839506172837, 0.9926697530864195, 0.9930555555555552, 0.993441358024691, 0.9938271604938268, 0.9942129629629626, 0.9945987654320984, 0.9949845679012341, 0.9953703703703699, 0.9957561728395057, 0.9961419753086415, 0.9965277777777772, 0.996913580246913, 0.9972993827160488, 0.9976851851851846, 0.9980709876543203, 0.9984567901234561, 0.9988425925925919, 0.9992283950617277, 0.9996141975308634, 0.9999999999999992}, new char[]{'r', 'm', ' ', 'G', 'c', 'a', 'g', 's', 'u', 'e', 'l', 'w', 'n', 'R', 'f', 'p', 't', '2', 'y', '7', 'b', 'N', 'S', 'i', 'o', 'd', ',', 'H', 'h', 'I', 'k', ')'}) );
        twoCharacterInputWithUnknownOutput.put("HS", new ProportionalProbability( new double[]{0.9166666666666666, 0.9375, 0.9583333333333334, 0.9791666666666667, 1.0}, new char[]{'h', 'S', 'a', 's', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("E°", new ProportionalProbability( new double[]{0.7916666666666666, 0.8333333333333333, 0.8749999999999999, 0.9166666666666665, 0.9583333333333331, 0.9999999999999998}, new char[]{'t', '°', 'n', 'r', 'l', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("HT", new ProportionalProbability( new double[]{0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'T', 'b', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("HU", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'U', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Gu", new ProportionalProbability( new double[]{0.969939879759519, 0.9719438877755511, 0.9739478957915831, 0.9759519038076152, 0.9779559118236473, 0.9799599198396793, 0.9819639278557114, 0.9839679358717435, 0.9859719438877755, 0.9879759519038076, 0.9899799599198397, 0.9919839679358717, 0.9939879759519038, 0.9959919839679359, 0.9979959919839679, 1.0}, new char[]{'g', 'G', 'u', ' ', 'i', 'l', 'p', 'k', 'h', 'I', 'r', 'c', 'o', 'm', 't', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Có", new ProportionalProbability( new double[]{0.896551724137931, 0.9310344827586207, 0.9655172413793103, 0.9999999999999999}, new char[]{'c', 'ó', 'C', ' '}) );
        twoCharacterInputWithUnknownOutput.put("HY", new ProportionalProbability( new double[]{0.8695652173913043, 0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'Y', 'T', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Gy", new ProportionalProbability( new double[]{0.9431818181818182, 0.9545454545454546, 0.9659090909090909, 0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{' ', 'y', 'm', 'g', 'l', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("I<", new ProportionalProbability( new double[]{0.9964664310954063, 1.0}, new char[]{' ', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("I=", new ProportionalProbability( new double[]{0.9696969696969697, 1.0}, new char[]{'=', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("J ", new ProportionalProbability( new double[]{0.9259259259259259, 0.9444444444444444, 0.9629629629629629, 0.9814814814814814, 0.9999999999999999}, new char[]{' ', 's', 'o', 'u', '.'}) );
        twoCharacterInputWithUnknownOutput.put("I?", new ProportionalProbability( new double[]{0.868421052631579, 0.8947368421052632, 0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'?', 'o', 'a', '8', ' ', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("IA", new ProportionalProbability( new double[]{0.9382716049382716, 0.9506172839506173, 0.962962962962963, 0.9753086419753088, 0.9876543209876545, 1.0000000000000002}, new char[]{'A', 'e', 'r', ' ', 'm', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("Ha", new ProportionalProbability( new double[]{0.9879834772812617, 0.9883589936162223, 0.9887345099511828, 0.9891100262861434, 0.989485542621104, 0.9898610589560646, 0.9902365752910252, 0.9906120916259857, 0.9909876079609463, 0.9913631242959069, 0.9917386406308675, 0.992114156965828, 0.9924896733007886, 0.9928651896357492, 0.9932407059707098, 0.9936162223056704, 0.993991738640631, 0.9943672549755915, 0.9947427713105521, 0.9951182876455127, 0.9954938039804733, 0.9958693203154338, 0.9962448366503944, 0.996620352985355, 0.9969958693203156, 0.9973713856552762, 0.9977469019902367, 0.9981224183251973, 0.9984979346601579, 0.9988734509951185, 0.9992489673300791, 0.9996244836650396, 1.0000000000000002}, new char[]{'H', 'a', ' ', 'h', 'l', 'm', ',', 's', 'e', 'v', 'u', 'g', 'c', 'R', 'd', 'G', '2', 'w', 'n', 't', 'r', '-', '(', 'b', 'i', 'o', '/', 'B', 'f', '&', '0', 'M', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("IB", new ProportionalProbability( new double[]{0.8333333333333334, 0.8666666666666667, 0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'s', 'B', 'O', 'A', 'E', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("IC", new ProportionalProbability( new double[]{0.9271844660194175, 0.9320388349514563, 0.9368932038834952, 0.941747572815534, 0.9466019417475728, 0.9514563106796117, 0.9563106796116505, 0.9611650485436893, 0.9660194174757282, 0.970873786407767, 0.9757281553398058, 0.9805825242718447, 0.9854368932038835, 0.9902912621359223, 0.9951456310679612, 1.0}, new char[]{'C', 'o', 'm', 'L', 'I', 'D', 'a', ' ', 'h', 'N', 'y', 'l', 'e', 'j', 'c', 't'}) );
        twoCharacterInputWithUnknownOutput.put("ID", new ProportionalProbability( new double[]{0.9375, 0.9464285714285714, 0.9553571428571428, 0.9642857142857142, 0.9732142857142856, 0.982142857142857, 0.9910714285714284, 0.9999999999999998}, new char[]{'D', '\"', 't', 'R', '\'', 'o', 'l', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("Hc", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'o', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("IE", new ProportionalProbability( new double[]{0.9191919191919192, 0.9292929292929293, 0.9393939393939393, 0.9494949494949494, 0.9595959595959594, 0.9696969696969695, 0.9797979797979796, 0.9898989898989896, 0.9999999999999997}, new char[]{' ', 'E', 'f', 'a', '\"', 'D', 'M', 'd', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("He", new ProportionalProbability( new double[]{0.9881588999236058, 0.9885408708938122, 0.9889228418640185, 0.9893048128342248, 0.9896867838044311, 0.9900687547746374, 0.9904507257448437, 0.99083269671505, 0.9912146676852563, 0.9915966386554627, 0.991978609625669, 0.9923605805958753, 0.9927425515660816, 0.9931245225362879, 0.9935064935064942, 0.9938884644767005, 0.9942704354469069, 0.9946524064171132, 0.9950343773873195, 0.9954163483575258, 0.9957983193277321, 0.9961802902979384, 0.9965622612681447, 0.996944232238351, 0.9973262032085574, 0.9977081741787637, 0.99809014514897, 0.9984721161191763, 0.9988540870893826, 0.9992360580595889, 0.9996180290297952, 1.0000000000000016}, new char[]{'c', 's', 'n', 'e', ' ', 'v', '1', 'l', 'H', 'u', 'r', 'h', 'm', 'f', 'w', '\'', 'g', 'i', 'a', 't', '(', 'D', 'b', ':', '-', 'd', 'o', 'p', '\\', ',', 'y', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("IF", new ProportionalProbability( new double[]{0.9120879120879121, 0.923076923076923, 0.934065934065934, 0.9450549450549449, 0.9560439560439559, 0.9670329670329668, 0.9780219780219778, 0.9890109890109887, 0.9999999999999997}, new char[]{'F', '?', 'e', 'N', ' ', 'r', 'n', 'y', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("IG", new ProportionalProbability( new double[]{0.9365079365079365, 0.9523809523809523, 0.9682539682539681, 0.984126984126984, 0.9999999999999998}, new char[]{'G', 's', ' ', 'o', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("Hf", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'e', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("J)", new ProportionalProbability( new double[]{0.9622641509433962, 0.9811320754716981, 1.0}, new char[]{')', 'a', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("Hg", new ProportionalProbability( new double[]{0.8723404255319149, 0.8936170212765958, 0.9148936170212767, 0.9361702127659576, 0.9574468085106385, 0.9787234042553193, 1.0000000000000002}, new char[]{'m', 'g', 'a', 'l', ' ', 'y', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("II", new ProportionalProbability( new double[]{0.9901356350184957, 0.9913686806411837, 0.9926017262638717, 0.9938347718865597, 0.9950678175092477, 0.9963008631319357, 0.9975339087546237, 0.9987669543773117, 0.9999999999999997}, new char[]{'I', 'l', 'm', '1', 'e', 't', ' ', 'n', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("Dä", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'D', 'ä'}) );
        twoCharacterInputWithUnknownOutput.put("Hi", new ProportionalProbability( new double[]{0.9871165644171779, 0.9877300613496932, 0.9883435582822085, 0.9889570552147239, 0.9895705521472392, 0.9901840490797545, 0.9907975460122699, 0.9914110429447852, 0.9920245398773005, 0.9926380368098159, 0.9932515337423312, 0.9938650306748466, 0.9944785276073619, 0.9950920245398772, 0.9957055214723926, 0.9963190184049079, 0.9969325153374232, 0.9975460122699386, 0.9981595092024539, 0.9987730061349692, 0.9993865030674846, 0.9999999999999999}, new char[]{'i', 'h', ' ', 'H', 'm', 'o', 'l', 'w', 'a', 't', 'e', 'A', 'r', 'd', 'p', 'G', 's', 'u', 'n', '9', ',', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("IL", new ProportionalProbability( new double[]{0.9024390243902439, 0.9146341463414634, 0.926829268292683, 0.9390243902439025, 0.951219512195122, 0.9634146341463415, 0.9756097560975611, 0.9878048780487806, 1.0}, new char[]{'L', 'e', 'p', '\"', 'b', 'E', 'd', 'l', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("IM", new ProportionalProbability( new double[]{0.9518072289156626, 0.963855421686747, 0.9759036144578314, 0.9879518072289157, 1.0}, new char[]{'M', '\"', 'v', 's', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("J.", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'.', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Dé", new ProportionalProbability( new double[]{0.991701244813278, 0.995850622406639, 1.0}, new char[]{'é', 'd', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("IN", new ProportionalProbability( new double[]{0.9369627507163324, 0.9398280802292264, 0.9426934097421203, 0.9455587392550143, 0.9484240687679083, 0.9512893982808023, 0.9541547277936963, 0.9570200573065902, 0.9598853868194842, 0.9627507163323782, 0.9656160458452722, 0.9684813753581661, 0.9713467048710601, 0.9742120343839541, 0.9770773638968481, 0.979942693409742, 0.982808022922636, 0.98567335243553, 0.988538681948424, 0.991404011461318, 0.9942693409742119, 0.9971346704871059, 0.9999999999999999}, new char[]{'N', ' ', '1', 'd', 'T', 'c', 'C', 'O', 'I', 'E', 'W', 'i', 'R', 't', 'D', 'e', 'L', '\"', 'S', 'r', 's', ',', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("J/", new ProportionalProbability( new double[]{0.9629629629629629, 1.0}, new char[]{'/', ' '}) );
        twoCharacterInputWithUnknownOutput.put("IO", new ProportionalProbability( new double[]{0.9325153374233128, 0.9386503067484662, 0.9447852760736195, 0.9509202453987728, 0.9570552147239262, 0.9631901840490795, 0.9693251533742329, 0.9754601226993862, 0.9815950920245395, 0.9877300613496929, 0.9938650306748462, 0.9999999999999996}, new char[]{'O', 'w', '-', 'i', 'e', 'd', 'l', 'o', 'n', 'T', ' ', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Ho", new ProportionalProbability( new double[]{0.9882706766917293, 0.9885714285714285, 0.9888721804511278, 0.989172932330827, 0.9894736842105263, 0.9897744360902255, 0.9900751879699248, 0.990375939849624, 0.9906766917293233, 0.9909774436090225, 0.9912781954887218, 0.991578947368421, 0.9918796992481203, 0.9921804511278195, 0.9924812030075187, 0.992781954887218, 0.9930827067669172, 0.9933834586466165, 0.9936842105263157, 0.993984962406015, 0.9942857142857142, 0.9945864661654135, 0.9948872180451127, 0.995187969924812, 0.9954887218045112, 0.9957894736842104, 0.9960902255639097, 0.9963909774436089, 0.9966917293233082, 0.9969924812030074, 0.9972932330827067, 0.9975939849624059, 0.9978947368421052, 0.9981954887218044, 0.9984962406015037, 0.9987969924812029, 0.9990977443609022, 0.9993984962406014, 0.9996992481203006, 0.9999999999999999}, new char[]{'o', 'c', 'h', ' ', 'i', 'e', 'w', 'H', 'a', 'u', 'O', 'l', 'm', 'T', 'f', 'r', 'n', 'y', 't', '\"', '(', 'd', 'b', 'g', 'A', 'R', 'C', 's', 'M', 'p', 'F', 'L', '-', 'x', '&', 'S', 'P', '1', 'v', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("IP", new ProportionalProbability( new double[]{0.9130434782608695, 0.9217391304347825, 0.9304347826086955, 0.9391304347826085, 0.9478260869565215, 0.9565217391304345, 0.9652173913043475, 0.9739130434782605, 0.9826086956521735, 0.9913043478260865, 0.9999999999999994}, new char[]{' ', 'P', 'e', 'p', 'b', 's', 'i', 'c', 'd', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("IR", new ProportionalProbability( new double[]{0.916083916083916, 0.923076923076923, 0.93006993006993, 0.937062937062937, 0.944055944055944, 0.9510489510489509, 0.9580419580419579, 0.9650349650349649, 0.9720279720279719, 0.9790209790209788, 0.9860139860139858, 0.9930069930069928, 0.9999999999999998}, new char[]{'R', 't', '\"', 'h', 'G', 'O', 'b', 'd', 'o', 'g', 'N', 'C', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("IS", new ProportionalProbability( new double[]{0.9465648854961832, 0.9541984732824428, 0.9618320610687023, 0.9694656488549619, 0.9770992366412214, 0.984732824427481, 0.9923664122137406, 1.0}, new char[]{'S', ' ', '\"', 'O', 't', 'i', 'o', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("IT", new ProportionalProbability( new double[]{0.9324324324324325, 0.9369369369369369, 0.9414414414414414, 0.9459459459459458, 0.9504504504504503, 0.9549549549549547, 0.9594594594594592, 0.9639639639639637, 0.9684684684684681, 0.9729729729729726, 0.977477477477477, 0.9819819819819815, 0.986486486486486, 0.9909909909909904, 0.9954954954954949, 0.9999999999999993}, new char[]{'T', 'g', 'M', ' ', 'n', 'R', 'a', 'A', 'm', 'O', 'l', 'K', '\"', 'o', 'E', 'B'}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart7(){
        twoCharacterInputWithUnknownOutput.put("IU", new ProportionalProbability( new double[]{0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'U', 'B', 'a', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("Hu", new ProportionalProbability( new double[]{0.9812138728323699, 0.9826589595375722, 0.9841040462427745, 0.9855491329479767, 0.986994219653179, 0.9884393063583813, 0.9898843930635836, 0.9913294797687858, 0.9927745664739881, 0.9942196531791904, 0.9956647398843926, 0.9971098265895949, 0.9985549132947972, 0.9999999999999994}, new char[]{'u', 'b', 'H', 'h', ' ', 't', '1', 'A', 's', 'o', 'e', 'l', 'y', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("IV", new ProportionalProbability( new double[]{0.9547038327526133, 0.9581881533101045, 0.9616724738675958, 0.9651567944250871, 0.9686411149825783, 0.9721254355400696, 0.9756097560975608, 0.9790940766550521, 0.9825783972125434, 0.9860627177700346, 0.9895470383275259, 0.9930313588850171, 0.9965156794425084, 0.9999999999999997}, new char[]{'V', '\"', 'i', 'e', 'A', 'f', '.', ' ', 'o', 'x', 't', 'I', 'n', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Dó", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'D', 'ó'}) );
        twoCharacterInputWithUnknownOutput.put("Hy", new ProportionalProbability( new double[]{0.969939879759519, 0.9719438877755511, 0.9739478957915831, 0.9759519038076152, 0.9779559118236473, 0.9799599198396793, 0.9819639278557114, 0.9839679358717435, 0.9859719438877755, 0.9879759519038076, 0.9899799599198397, 0.9919839679358717, 0.9939879759519038, 0.9959919839679359, 0.9979959919839679, 1.0}, new char[]{'y', 'l', 'p', 'w', '<', 'd', ' ', 'o', 'N', 'A', 's', 'x', 'r', 'i', '.', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("IZ", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'Z', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("K ", new ProportionalProbability( new double[]{0.9422382671480144, 0.9458483754512635, 0.9494584837545127, 0.9530685920577618, 0.956678700361011, 0.9602888086642601, 0.9638989169675093, 0.9675090252707584, 0.9711191335740076, 0.9747292418772567, 0.9783393501805059, 0.981949458483755, 0.9855595667870042, 0.9891696750902533, 0.9927797833935025, 0.9963898916967516, 1.0000000000000007}, new char[]{' ', 'e', 'r', 'w', 'n', 'a', 'x', 'd', 'c', 't', 'h', 'l', 'y', 'U', 'i', 'u', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("J?", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'a', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("Dü", new ProportionalProbability( new double[]{0.9, 0.9500000000000001, 1.0}, new char[]{'ü', 'D', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ib", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'b', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("JC", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{' ', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("Ic", new ProportionalProbability( new double[]{0.9696969696969697, 0.9757575757575758, 0.9818181818181819, 0.987878787878788, 0.9939393939393941, 1.0000000000000002}, new char[]{'c', ' ', 'i', 'B', 'h', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Id", new ProportionalProbability( new double[]{0.9721706864564007, 0.974025974025974, 0.9758812615955473, 0.9777365491651206, 0.979591836734694, 0.9814471243042673, 0.9833024118738406, 0.9851576994434139, 0.9870129870129872, 0.9888682745825605, 0.9907235621521339, 0.9925788497217072, 0.9944341372912805, 0.9962894248608538, 0.9981447124304271, 1.0000000000000004}, new char[]{'d', 'i', ' ', 'a', 'm', 'l', 'h', 't', '5', 'u', '.', 'z', 'e', 'n', 's', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("JE", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'E', 'e', ':'}) );
        twoCharacterInputWithUnknownOutput.put("Ie", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'i', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("If", new ProportionalProbability( new double[]{0.9780334728033473, 0.9790794979079498, 0.9801255230125523, 0.9811715481171548, 0.9822175732217573, 0.9832635983263598, 0.9843096234309623, 0.9853556485355648, 0.9864016736401673, 0.9874476987447698, 0.9884937238493723, 0.9895397489539748, 0.9905857740585773, 0.9916317991631798, 0.9926778242677823, 0.9937238493723848, 0.9947698744769873, 0.9958158995815898, 0.9968619246861923, 0.9979079497907948, 0.9989539748953973, 0.9999999999999998}, new char[]{'i', 'f', 'r', ' ', 's', 'e', 't', '.', 'd', 'o', 'p', '-', 'a', 'c', 'q', 'l', 'n', '(', 'u', 'v', 'm', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("K)", new ProportionalProbability( new double[]{0.96, 0.9733333333333333, 0.9866666666666666, 0.9999999999999999}, new char[]{')', '(', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Ig", new ProportionalProbability( new double[]{0.9375, 0.953125, 0.96875, 0.984375, 1.0}, new char[]{'g', ' ', 'y', 'i', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Ih", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'i', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("JI", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'I', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("K+", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'+', ' '}) );
        twoCharacterInputWithUnknownOutput.put("K,", new ProportionalProbability( new double[]{0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{',', 'F', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Ik", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'k', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("Il", new ProportionalProbability( new double[]{0.9942857142857143, 0.9954285714285714, 0.9965714285714286, 0.9977142857142857, 0.9988571428571428, 0.9999999999999999}, new char[]{'l', 'm', ' ', 'r', 'i', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("K.", new ProportionalProbability( new double[]{0.9428571428571428, 0.9714285714285714, 1.0}, new char[]{'r', '.', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Im", new ProportionalProbability( new double[]{0.9775171065493646, 0.978494623655914, 0.9794721407624634, 0.9804496578690127, 0.9814271749755621, 0.9824046920821115, 0.9833822091886608, 0.9843597262952102, 0.9853372434017595, 0.9863147605083089, 0.9872922776148583, 0.9882697947214076, 0.989247311827957, 0.9902248289345064, 0.9912023460410557, 0.9921798631476051, 0.9931573802541545, 0.9941348973607038, 0.9951124144672532, 0.9960899315738025, 0.9970674486803519, 0.9980449657869013, 0.9990224828934506, 1.0}, new char[]{'m', 'i', 'I', ' ', 'n', 'a', 'y', 'r', 'Z', 'e', 'u', 'v', 'o', 's', 'd', 't', 'p', 'l', ')', ',', 'k', 'c', 'b', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("In", new ProportionalProbability( new double[]{0.9951678535096643, 0.99529501525941, 0.9954221770091557, 0.9955493387589014, 0.9956765005086471, 0.9958036622583928, 0.9959308240081385, 0.9960579857578842, 0.9961851475076299, 0.9963123092573756, 0.9964394710071213, 0.996566632756867, 0.9966937945066127, 0.9968209562563584, 0.9969481180061041, 0.9970752797558498, 0.9972024415055954, 0.9973296032553411, 0.9974567650050868, 0.9975839267548325, 0.9977110885045782, 0.9978382502543239, 0.9979654120040696, 0.9980925737538153, 0.998219735503561, 0.9983468972533067, 0.9984740590030524, 0.9986012207527981, 0.9987283825025438, 0.9988555442522895, 0.9989827060020352, 0.9991098677517809, 0.9992370295015266, 0.9993641912512723, 0.999491353001018, 0.9996185147507637, 0.9997456765005094, 0.9998728382502551, 1.0000000000000007}, new char[]{'n', ' ', 'a', 'u', 'I', 'l', 'y', 't', 'o', 'i', 'e', 'm', 's', 'p', 'r', 'd', '.', 'c', 'h', 'f', '(', '3', 'W', ')', 'w', 'L', 'g', 'A', 'v', 'H', 'D', ',', 'b', 'J', 'S', 'k', '4', '0', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("/Δ", new ProportionalProbability( new double[]{0.7, 0.7999999999999999, 0.8999999999999999, 0.9999999999999999}, new char[]{'r', 't', 'Δ', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("Io", new ProportionalProbability( new double[]{0.9774774774774775, 0.9819819819819819, 0.9864864864864864, 0.9909909909909909, 0.9954954954954953, 0.9999999999999998}, new char[]{'o', ' ', 'l', 'a', 'r', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Ir", new ProportionalProbability( new double[]{0.969258589511754, 0.9710669077757685, 0.972875226039783, 0.9746835443037976, 0.9764918625678121, 0.9783001808318266, 0.9801084990958411, 0.9819168173598556, 0.9837251356238701, 0.9855334538878846, 0.9873417721518991, 0.9891500904159136, 0.9909584086799281, 0.9927667269439426, 0.9945750452079571, 0.9963833634719717, 0.9981916817359862, 1.0000000000000007}, new char[]{'i', ' ', 'r', 'n', 'I', 'e', 's', 'a', 'o', 'C', 'g', 'j', 'f', 'b', 'l', 'S', ')', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("Is", new ProportionalProbability( new double[]{0.9873873873873874, 0.9882882882882883, 0.9891891891891892, 0.9900900900900901, 0.990990990990991, 0.9918918918918919, 0.9927927927927928, 0.9936936936936936, 0.9945945945945945, 0.9954954954954954, 0.9963963963963963, 0.9972972972972972, 0.9981981981981981, 0.999099099099099, 0.9999999999999999}, new char[]{' ', 's', 'a', 'o', 'm', 'i', 'n', 'h', 'e', 't', 'c', 'l', 'r', 'f', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("It", new ProportionalProbability( new double[]{0.9880106571936057, 0.9884547069271759, 0.988898756660746, 0.9893428063943162, 0.9897868561278863, 0.9902309058614565, 0.9906749555950266, 0.9911190053285968, 0.9915630550621669, 0.9920071047957371, 0.9924511545293072, 0.9928952042628774, 0.9933392539964475, 0.9937833037300177, 0.9942273534635878, 0.994671403197158, 0.9951154529307281, 0.9955595026642983, 0.9960035523978684, 0.9964476021314386, 0.9968916518650087, 0.9973357015985789, 0.997779751332149, 0.9982238010657192, 0.9986678507992893, 0.9991119005328595, 0.9995559502664296, 0.9999999999999998}, new char[]{'t', 'a', 'g', 'e', 'm', ' ', 'n', 'b', 'i', 'r', 'l', 'h', 'p', 'd', 'I', 's', 'u', 'c', 'f', 'o', 'y', 'v', 'w', 'k', '0', 'q', '.', '\''}) );
        twoCharacterInputWithUnknownOutput.put("JU", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'U', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Iv", new ProportionalProbability( new double[]{0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'v', 't', 'e', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("Iw", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'w', ' '}) );
        twoCharacterInputWithUnknownOutput.put("L ", new ProportionalProbability( new double[]{0.9444444444444444, 0.9473684210526315, 0.9502923976608186, 0.9532163742690057, 0.9561403508771928, 0.95906432748538, 0.9619883040935671, 0.9649122807017542, 0.9678362573099413, 0.9707602339181284, 0.9736842105263155, 0.9766081871345026, 0.9795321637426897, 0.9824561403508768, 0.9853801169590639, 0.988304093567251, 0.9912280701754381, 0.9941520467836252, 0.9970760233918123, 0.9999999999999994}, new char[]{'d', 'f', ' ', 'a', 'o', 'M', 'A', 'T', 's', 'r', 'i', 'S', 'e', 'h', 'u', 't', 'L', 'E', 'm', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("K?", new ProportionalProbability( new double[]{0.8214285714285714, 0.8571428571428571, 0.8928571428571428, 0.9285714285714285, 0.9642857142857142, 0.9999999999999999}, new char[]{' ', '?', 'c', ',', '+', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("KA", new ProportionalProbability( new double[]{0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{'A', 'a', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("Ja", new ProportionalProbability( new double[]{0.9867986798679867, 0.9876237623762376, 0.9884488448844885, 0.9892739273927393, 0.9900990099009902, 0.9909240924092411, 0.9917491749174919, 0.9925742574257428, 0.9933993399339937, 0.9942244224422445, 0.9950495049504954, 0.9958745874587462, 0.9966996699669971, 0.997524752475248, 0.9983498349834988, 0.9991749174917497, 1.0000000000000004}, new char[]{'a', 'j', 'l', ' ', 'm', 'Q', 't', 'e', 'o', 'i', 'n', 'p', 's', 'J', 'w', 'v', 'ć'}) );
        twoCharacterInputWithUnknownOutput.put("KE", new ProportionalProbability( new double[]{0.9108910891089109, 0.9207920792079208, 0.9306930693069307, 0.9405940594059407, 0.9504950495049506, 0.9603960396039605, 0.9702970297029704, 0.9801980198019803, 0.9900990099009902, 1.0}, new char[]{'E', '^', ' ', 's', 'c', 'b', 'o', 'I', 'h', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Je", new ProportionalProbability( new double[]{0.9758883248730964, 0.9771573604060914, 0.9784263959390863, 0.9796954314720813, 0.9809644670050762, 0.9822335025380712, 0.9835025380710661, 0.9847715736040611, 0.986040609137056, 0.987309644670051, 0.988578680203046, 0.9898477157360409, 0.9911167512690359, 0.9923857868020308, 0.9936548223350258, 0.9949238578680207, 0.9961928934010157, 0.9974619289340106, 0.9987309644670056, 1.0000000000000004}, new char[]{'s', 'k', 'e', ' ', 'l', 'j', 'm', 'd', 'C', 'r', 'i', 'h', 'o', 'n', 'R', 'a', 'w', 't', 'u', '.'}) );
        twoCharacterInputWithUnknownOutput.put("Fá", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'f', ' '}) );
        twoCharacterInputWithUnknownOutput.put("L\'", new ProportionalProbability( new double[]{0.9512195121951219, 0.975609756097561, 1.0}, new char[]{'\'', 's', 'L'}) );
        twoCharacterInputWithUnknownOutput.put("Fâ", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'f', 'â'}) );
        twoCharacterInputWithUnknownOutput.put("L)", new ProportionalProbability( new double[]{0.96875, 0.984375, 1.0}, new char[]{')', 'i', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("KI", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'I', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Fä", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'ä', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("Ji", new ProportionalProbability( new double[]{0.8833333333333333, 0.9, 0.9166666666666667, 0.9333333333333335, 0.9500000000000002, 0.9666666666666669, 0.9833333333333336, 1.0000000000000002}, new char[]{'o', 'd', 'i', '3', ' ', 'r', 't', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("L.", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'.', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("Fé", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'é', 'f', ' '}) );
        twoCharacterInputWithUnknownOutput.put("KN", new ProportionalProbability( new double[]{0.7777777777777778, 0.8888888888888888, 1.0}, new char[]{' ', 'N', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("Fê", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'ê', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("KO", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'O', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Jo", new ProportionalProbability( new double[]{0.9835766423357665, 0.9844890510948906, 0.9854014598540147, 0.9863138686131389, 0.987226277372263, 0.9881386861313871, 0.9890510948905112, 0.9899635036496354, 0.9908759124087595, 0.9917883211678836, 0.9927007299270078, 0.9936131386861319, 0.994525547445256, 0.9954379562043801, 0.9963503649635043, 0.9972627737226284, 0.9981751824817525, 0.9990875912408766, 1.0000000000000007}, new char[]{'o', 'j', 'J', 'l', ' ', 'n', 'e', 'p', 'c', 't', 'm', 'i', 'r', 's', 'A', 'd', '1', 'a', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("L2", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'n', '_'}) );
        twoCharacterInputWithUnknownOutput.put("Fí", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'f', 'í', ' '}) );
        twoCharacterInputWithUnknownOutput.put("KR", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'h', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("KS", new ProportionalProbability( new double[]{0.9836065573770492, 1.0}, new char[]{'S', 's'}) );
        twoCharacterInputWithUnknownOutput.put("H°", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'°', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Ju", new ProportionalProbability( new double[]{0.9814814814814815, 0.982638888888889, 0.9837962962962964, 0.9849537037037038, 0.9861111111111113, 0.9872685185185187, 0.9884259259259262, 0.9895833333333336, 0.990740740740741, 0.9918981481481485, 0.9930555555555559, 0.9942129629629634, 0.9953703703703708, 0.9965277777777782, 0.9976851851851857, 0.9988425925925931, 1.0000000000000004}, new char[]{'u', 'o', 'j', 'J', ' ', 'l', '-', 'a', 'e', ')', 't', 'i', 'p', 's', 'd', 'h', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("KW", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'W', 'K'}) );
        twoCharacterInputWithUnknownOutput.put("L<", new ProportionalProbability( new double[]{0.9809523809523809, 0.9904761904761904, 0.9999999999999999}, new char[]{' ', '<', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("M ", new ProportionalProbability( new double[]{0.94, 0.9428571428571428, 0.9457142857142857, 0.9485714285714286, 0.9514285714285715, 0.9542857142857144, 0.9571428571428573, 0.9600000000000002, 0.9628571428571431, 0.965714285714286, 0.9685714285714289, 0.9714285714285718, 0.9742857142857146, 0.9771428571428575, 0.9800000000000004, 0.9828571428571433, 0.9857142857142862, 0.9885714285714291, 0.991428571428572, 0.9942857142857149, 0.9971428571428578, 1.0000000000000007}, new char[]{' ', 'r', 'e', 'n', 'l', 'a', 'M', 't', 'p', 'P', 'u', 'd', 'i', 'o', 'H', 's', '-', 'g', 'R', 'k', 'I', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("L?", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'i', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Fú", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'f', 'ú'}) );
        twoCharacterInputWithUnknownOutput.put("LA", new ProportionalProbability( new double[]{0.9635036496350365, 0.9708029197080292, 0.9781021897810219, 0.9854014598540146, 0.9927007299270073, 1.0}, new char[]{'A', '\"', 'F', 'e', 'D', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ka", new ProportionalProbability( new double[]{0.9865470852017937, 0.9880418535127055, 0.9895366218236172, 0.991031390134529, 0.9925261584454408, 0.9940209267563526, 0.9955156950672643, 0.9970104633781761, 0.9985052316890879, 0.9999999999999997}, new char[]{'a', 'K', 'g', 't', 'e', 'k', 'l', ')', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("LB", new ProportionalProbability( new double[]{0.8888888888888888, 0.9259259259259258, 0.9629629629629628, 0.9999999999999998}, new char[]{'B', ' ', 'n', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("Fü", new ProportionalProbability( new double[]{0.9782608695652174, 1.0}, new char[]{'f', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("LC", new ProportionalProbability( new double[]{0.9166666666666666, 0.9333333333333333, 0.9500000000000001, 0.9666666666666668, 0.9833333333333335, 1.0000000000000002}, new char[]{'C', ' ', 'o', 'd', 'c', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("LD", new ProportionalProbability( new double[]{0.8953488372093024, 0.9069767441860466, 0.9186046511627908, 0.930232558139535, 0.9418604651162792, 0.9534883720930234, 0.9651162790697676, 0.9767441860465118, 0.988372093023256, 1.0000000000000002}, new char[]{'D', 'H', 'o', 'n', 'y', 'T', 'I', 'U', 'L', ' '}) );
        twoCharacterInputWithUnknownOutput.put("LE", new ProportionalProbability( new double[]{0.926829268292683, 0.9317073170731708, 0.9365853658536586, 0.9414634146341464, 0.9463414634146342, 0.951219512195122, 0.9560975609756098, 0.9609756097560976, 0.9658536585365854, 0.9707317073170733, 0.9756097560975611, 0.9804878048780489, 0.9853658536585367, 0.9902439024390245, 0.9951219512195123, 1.0}, new char[]{'E', 'D', 'i', 'N', 'R', 'L', 'B', 'U', 'O', 'n', 'I', ' ', 'h', 'C', 'P', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("Ke", new ProportionalProbability( new double[]{0.9724919093851133, 0.9741100323624596, 0.975728155339806, 0.9773462783171523, 0.9789644012944986, 0.9805825242718449, 0.9822006472491912, 0.9838187702265375, 0.9854368932038838, 0.9870550161812301, 0.9886731391585765, 0.9902912621359228, 0.9919093851132691, 0.9935275080906154, 0.9951456310679617, 0.996763754045308, 0.9983818770226544, 1.0000000000000007}, new char[]{' ', 'e', 'd', 't', 'K', 'm', 'h', 'u', 'a', 'n', 'p', 'l', 'g', 'y', 'E', 'r', 'N', '.'}) );
        twoCharacterInputWithUnknownOutput.put("M\'", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'\'', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Gâ", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'â', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("LH", new ProportionalProbability( new double[]{0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'H', 'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put("M)", new ProportionalProbability( new double[]{0.9807692307692307, 1.0}, new char[]{')', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Kh", new ProportionalProbability( new double[]{0.9722222222222222, 0.986111111111111, 0.9999999999999999}, new char[]{'h', 'e', ','}) );
        twoCharacterInputWithUnknownOutput.put("LI", new ProportionalProbability( new double[]{0.9634146341463414, 0.975609756097561, 0.9878048780487805, 1.0}, new char[]{'I', 'v', 'n', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("Gä", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'ä', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("Ki", new ProportionalProbability( new double[]{0.975609756097561, 0.9769647696476964, 0.9783197831978319, 0.9796747967479673, 0.9810298102981028, 0.9823848238482382, 0.9837398373983737, 0.9850948509485091, 0.9864498644986446, 0.98780487804878, 0.9891598915989155, 0.9905149051490509, 0.9918699186991864, 0.9932249322493218, 0.9945799457994573, 0.9959349593495928, 0.9972899728997282, 0.9986449864498637, 0.9999999999999991}, new char[]{'t', ' ', 'c', 'i', 'K', 'l', 'k', 'e', '.', 'y', 'n', 'u', 'm', '-', 'C', 'a', 's', 'h', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("LK", new ProportionalProbability( new double[]{0.967741935483871, 1.0}, new char[]{'K', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("M,", new ProportionalProbability( new double[]{0.782608695652174, 0.8260869565217391, 0.8695652173913043, 0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{' ', ',', 'f', 'n', 'i', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("LL", new ProportionalProbability( new double[]{0.9285714285714286, 0.9404761904761905, 0.9523809523809523, 0.9642857142857142, 0.976190476190476, 0.9880952380952379, 0.9999999999999998}, new char[]{'L', 'A', ' ', 't', 'r', 'e', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Kl", new ProportionalProbability( new double[]{0.9892086330935251, 0.9928057553956834, 0.9964028776978416, 0.9999999999999999}, new char[]{'K', 'l', 'k', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("M.", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'e', '.'}) );
        twoCharacterInputWithUnknownOutput.put("M/", new ProportionalProbability( new double[]{0.9705882352941176, 1.0}, new char[]{'/', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("Gé", new ProportionalProbability( new double[]{0.9705882352941176, 1.0}, new char[]{'g', 'é'}) );
        twoCharacterInputWithUnknownOutput.put("Kn", new ProportionalProbability( new double[]{0.9626556016597511, 0.966804979253112, 0.970954356846473, 0.975103734439834, 0.979253112033195, 0.983402489626556, 0.987551867219917, 0.9917012448132779, 0.9958506224066389, 0.9999999999999999}, new char[]{'n', ' ', 'x', 'l', ':', 'i', 'u', 'K', 'm', 's'}) );
        twoCharacterInputWithUnknownOutput.put("LO", new ProportionalProbability( new double[]{0.9418604651162791, 0.9534883720930233, 0.9651162790697675, 0.9767441860465117, 0.9883720930232559, 1.0}, new char[]{'O', ' ', 'r', '-', 'W', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Ko", new ProportionalProbability( new double[]{0.9916083916083916, 0.993006993006993, 0.9944055944055944, 0.9958041958041958, 0.9972027972027971, 0.9986013986013985, 0.9999999999999999}, new char[]{'K', 'o', 'g', 'a', 'k', 'i', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("LP", new ProportionalProbability( new double[]{0.9661016949152542, 0.983050847457627, 0.9999999999999999}, new char[]{'P', 'd', ' '}) );
        twoCharacterInputWithUnknownOutput.put("M1", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'1', 't'}) );
        twoCharacterInputWithUnknownOutput.put("M2", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'2', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("LR", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'R', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("Kr", new ProportionalProbability( new double[]{0.9890710382513661, 0.9918032786885246, 0.994535519125683, 0.9972677595628415, 1.0}, new char[]{'r', 'K', 'h', 't', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("LS", new ProportionalProbability( new double[]{0.9130434782608695, 0.9275362318840579, 0.9420289855072462, 0.9565217391304346, 0.971014492753623, 0.9855072463768113, 0.9999999999999997}, new char[]{'S', 'F', ' ', 's', 'n', 'T', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("LT", new ProportionalProbability( new double[]{0.8947368421052632, 0.9052631578947369, 0.9157894736842106, 0.9263157894736843, 0.936842105263158, 0.9473684210526317, 0.9578947368421055, 0.9684210526315792, 0.9789473684210529, 0.9894736842105266, 1.0000000000000002}, new char[]{'h', 'T', 'w', 's', 'o', 'a', 'I', ' ', 'E', ':', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("LU", new ProportionalProbability( new double[]{0.8688524590163934, 0.8852459016393442, 0.9016393442622951, 0.9180327868852459, 0.9344262295081968, 0.9508196721311476, 0.9672131147540984, 0.9836065573770493, 1.0}, new char[]{'e', 'U', ' ', 't', 'u', 'r', 'S', ',', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Kt", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'h', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Ku", new ProportionalProbability( new double[]{0.9868421052631579, 0.9912280701754386, 0.9956140350877193, 1.0}, new char[]{'u', 'K', 'k', ' '}) );
        twoCharacterInputWithUnknownOutput.put("LW", new ProportionalProbability( new double[]{0.8235294117647058, 0.8823529411764706, 0.9411764705882353, 1.0}, new char[]{'e', 'i', 'W', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("LY", new ProportionalProbability( new double[]{0.9405940594059405, 0.9504950495049505, 0.9603960396039604, 0.9702970297029703, 0.9801980198019802, 0.9900990099009901, 1.0}, new char[]{'Y', 'F', 't', 'u', 'C', 'i', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("M:", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'n', ':'}) );
        twoCharacterInputWithUnknownOutput.put("Ky", new ProportionalProbability( new double[]{0.9090909090909091, 1.0}, new char[]{'y', 't'}) );
        twoCharacterInputWithUnknownOutput.put("M<", new ProportionalProbability( new double[]{0.984251968503937, 0.9921259842519685, 1.0}, new char[]{'n', ' ', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("M=", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'=', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("N ", new ProportionalProbability( new double[]{0.9455128205128205, 0.9487179487179487, 0.9519230769230769, 0.9551282051282051, 0.9583333333333333, 0.9615384615384615, 0.9647435897435896, 0.9679487179487178, 0.971153846153846, 0.9743589743589742, 0.9775641025641024, 0.9807692307692306, 0.9839743589743588, 0.987179487179487, 0.9903846153846152, 0.9935897435897434, 0.9967948717948716, 0.9999999999999998}, new char[]{' ', 'o', 'n', 'r', 'h', 'T', 't', 'e', 'c', 'E', '8', 'a', 'd', 'C', 'u', 's', ')', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("M?", new ProportionalProbability( new double[]{0.7857142857142857, 0.8095238095238095, 0.8333333333333334, 0.8571428571428572, 0.880952380952381, 0.9047619047619049, 0.9285714285714287, 0.9523809523809526, 0.9761904761904764, 1.0000000000000002}, new char[]{'p', 'a', '-', 'e', ' ', 't', 'S', 'f', 'i', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("MA", new ProportionalProbability( new double[]{0.9245283018867925, 0.929245283018868, 0.9339622641509435, 0.938679245283019, 0.9433962264150946, 0.9481132075471701, 0.9528301886792456, 0.9575471698113212, 0.9622641509433967, 0.9669811320754722, 0.9716981132075477, 0.9764150943396233, 0.9811320754716988, 0.9858490566037743, 0.9905660377358498, 0.9952830188679254, 1.0000000000000009}, new char[]{'A', 'M', 't', 's', 'h', 'S', 'B', 'e', ' ', 'L', 'u', 'o', 'l', 'r', 'c', 'R', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("La", new ProportionalProbability( new double[]{0.9950568462679189, 0.995180425111221, 0.995304003954523, 0.9954275827978251, 0.9955511616411271, 0.9956747404844292, 0.9957983193277312, 0.9959218981710333, 0.9960454770143353, 0.9961690558576374, 0.9962926347009394, 0.9964162135442415, 0.9965397923875435, 0.9966633712308456, 0.9967869500741476, 0.9969105289174497, 0.9970341077607517, 0.9971576866040538, 0.9972812654473558, 0.9974048442906579, 0.99752842313396, 0.997652001977262, 0.9977755808205641, 0.9978991596638661, 0.9980227385071682, 0.9981463173504702, 0.9982698961937723, 0.9983934750370743, 0.9985170538803764, 0.9986406327236784, 0.9987642115669805, 0.9988877904102825, 0.9990113692535846, 0.9991349480968866, 0.9992585269401887, 0.9993821057834907, 0.9995056846267928, 0.9996292634700948, 0.9997528423133969, 0.999876421156699, 1.0000000000000009}, new char[]{'a', 'l', 'u', 'i', 'L', 'W', ' ', '.', 'n', 'r', 'y', 'c', ',', 'h', 'm', 'd', 'g', '0', 't', '-', 's', 'f', 'o', 'M', '9', 'k', 'b', 'S', 'G', '=', 'E', 'v', 'C', 'e', 'N', 'x', '/', '%', '2', 'p', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("MB", new ProportionalProbability( new double[]{0.9591836734693877, 0.9795918367346939, 1.0}, new char[]{'B', 'c', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Gü", new ProportionalProbability( new double[]{0.9285714285714286, 0.9642857142857143, 1.0}, new char[]{'g', 'G', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("MC", new ProportionalProbability( new double[]{0.98, 1.0}, new char[]{'C', ' '}) );
        twoCharacterInputWithUnknownOutput.put("MD", new ProportionalProbability( new double[]{0.87, 0.88, 0.89, 0.9, 0.91, 0.92, 0.93, 0.9400000000000001, 0.9500000000000001, 0.9600000000000001, 0.9700000000000001, 0.9800000000000001, 0.9900000000000001, 1.0}, new char[]{'b', 'n', 'l', 'a', 'D', ' ', 'm', 'e', 'r', 'u', '&', 'd', 'o', ':'}) );
        twoCharacterInputWithUnknownOutput.put("ME", new ProportionalProbability( new double[]{0.9623655913978495, 0.967741935483871, 0.9731182795698925, 0.978494623655914, 0.9838709677419355, 0.989247311827957, 0.9946236559139785, 1.0}, new char[]{'E', 'e', 'F', 't', ' ', 'r', 'A', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("Le", new ProportionalProbability( new double[]{0.9940968122786304, 0.9942654747849553, 0.9944341372912802, 0.994602799797605, 0.9947714623039299, 0.9949401248102547, 0.9951087873165796, 0.9952774498229044, 0.9954461123292293, 0.9956147748355542, 0.995783437341879, 0.9959520998482039, 0.9961207623545287, 0.9962894248608536, 0.9964580873671784, 0.9966267498735033, 0.9967954123798282, 0.996964074886153, 0.9971327373924779, 0.9973013998988027, 0.9974700624051276, 0.9976387249114524, 0.9978073874177773, 0.9979760499241022, 0.998144712430427, 0.9983133749367519, 0.9984820374430767, 0.9986506999494016, 0.9988193624557264, 0.9989880249620513, 0.9991566874683762, 0.999325349974701, 0.9994940124810259, 0.9996626749873507, 0.9998313374936756, 1.0000000000000004}, new char[]{'e', 'l', ' ', 't', 'L', 'm', 'p', 'a', 'u', 'i', 'c', '.', 'd', 'g', 's', 'o', 'h', 'I', 'n', 'v', 'f', 'j', 'b', 'x', 'r', ',', 'w', 'C', 'y', '7', '-', 'P', 'D', 'E', '0', ':'}) );
        twoCharacterInputWithUnknownOutput.put("MF", new ProportionalProbability( new double[]{0.9142857142857143, 0.9428571428571428, 0.9714285714285714, 1.0}, new char[]{'F', 'i', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("N(", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{'A', 'd', '(', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("N)", new ProportionalProbability( new double[]{0.9651162790697675, 0.9767441860465117, 0.9883720930232559, 1.0}, new char[]{'a', ')', 'r', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Hä", new ProportionalProbability( new double[]{0.9615384615384616, 1.0}, new char[]{'ä', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("MI", new ProportionalProbability( new double[]{0.9405940594059405, 0.9504950495049505, 0.9603960396039604, 0.9702970297029703, 0.9801980198019802, 0.9900990099009901, 1.0}, new char[]{'I', ' ', 'o', 'g', 'E', 'i', ':'}) );
        twoCharacterInputWithUnknownOutput.put("Li", new ProportionalProbability( new double[]{0.9880323829637452, 0.9883843717001056, 0.9887363604364661, 0.9890883491728265, 0.989440337909187, 0.9897923266455474, 0.9901443153819078, 0.9904963041182683, 0.9908482928546287, 0.9912002815909892, 0.9915522703273496, 0.99190425906371, 0.9922562478000705, 0.9926082365364309, 0.9929602252727914, 0.9933122140091518, 0.9936642027455123, 0.9940161914818727, 0.9943681802182331, 0.9947201689545936, 0.995072157690954, 0.9954241464273145, 0.9957761351636749, 0.9961281239000354, 0.9964801126363958, 0.9968321013727562, 0.9971840901091167, 0.9975360788454771, 0.9978880675818376, 0.998240056318198, 0.9985920450545585, 0.9989440337909189, 0.9992960225272793, 0.9996480112636398, 1.0000000000000002}, new char[]{'i', 't', 'a', 'l', 'n', 'L', 'y', ' ', 'm', 'o', 'h', 'f', '.', 'u', 'H', 'b', 's', 'r', 'e', 'g', 'w', 'd', 'O', 'p', 'c', '1', 'T', 'C', '5', 'P', '(', ',', 'U', '-', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("N,", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{',', ' '}) );
        twoCharacterInputWithUnknownOutput.put("MK", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'G', ' ', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("ML", new ProportionalProbability( new double[]{0.9473684210526315, 1.0}, new char[]{'L', 's'}) );
        twoCharacterInputWithUnknownOutput.put("N-", new ProportionalProbability( new double[]{0.9393939393939394, 0.9696969696969697, 1.0}, new char[]{'O', '-', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ll", new ProportionalProbability( new double[]{0.9807692307692307, 1.0}, new char[]{'l', ' '}) );
        twoCharacterInputWithUnknownOutput.put("N.", new ProportionalProbability( new double[]{0.875, 0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'.', 'e', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put("MM", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'M', 't'}) );
        twoCharacterInputWithUnknownOutput.put("N/", new ProportionalProbability( new double[]{0.8787878787878788, 0.9090909090909091, 0.9393939393939393, 0.9696969696969696, 0.9999999999999999}, new char[]{'/', 'I', ' ', '=', 's'}) );
        twoCharacterInputWithUnknownOutput.put("MN", new ProportionalProbability( new double[]{0.9523809523809523, 1.0}, new char[]{'N', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Hé", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'é', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("MO", new ProportionalProbability( new double[]{0.9285714285714286, 0.9428571428571428, 0.9571428571428571, 0.9714285714285713, 0.9857142857142855, 0.9999999999999998}, new char[]{'O', 'I', ' ', 'c', 't', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("Ln", new ProportionalProbability( new double[]{0.9541284403669725, 0.963302752293578, 0.9724770642201834, 0.9816513761467889, 0.9908256880733943, 0.9999999999999998}, new char[]{'n', '0', ' ', 'c', '|', ')'}) );
        twoCharacterInputWithUnknownOutput.put("Lo", new ProportionalProbability( new double[]{0.9874730021598273, 0.9879049676025918, 0.9883369330453564, 0.988768898488121, 0.9892008639308856, 0.9896328293736502, 0.9900647948164147, 0.9904967602591793, 0.9909287257019439, 0.9913606911447085, 0.9917926565874731, 0.9922246220302376, 0.9926565874730022, 0.9930885529157668, 0.9935205183585314, 0.993952483801296, 0.9943844492440606, 0.9948164146868251, 0.9952483801295897, 0.9956803455723543, 0.9961123110151189, 0.9965442764578835, 0.996976241900648, 0.9974082073434126, 0.9978401727861772, 0.9982721382289418, 0.9987041036717064, 0.999136069114471, 0.9995680345572355, 1.0}, new char[]{'l', 'o', ' ', 'y', 'M', 'n', 's', 'd', 'g', 'e', 't', 'r', 'c', 'L', 'f', 'P', 'a', 'p', 'E', 'b', 'u', 'x', 'h', 'H', ',', 'i', '-', '4', 'm', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("MP", new ProportionalProbability( new double[]{0.9318181818181818, 0.9375, 0.9431818181818182, 0.9488636363636365, 0.9545454545454547, 0.9602272727272729, 0.9659090909090912, 0.9715909090909094, 0.9772727272727276, 0.9829545454545459, 0.9886363636363641, 0.9943181818181823, 1.0000000000000004}, new char[]{'P', 'd', 'u', ' ', 'r', 'n', 'i', 'e', 's', 't', 'a', 'h', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("N1", new ProportionalProbability( new double[]{0.9655172413793104, 0.9827586206896552, 1.0}, new char[]{'1', 'r', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("N2", new ProportionalProbability( new double[]{0.9420289855072463, 0.9565217391304347, 0.9710144927536231, 0.9855072463768114, 0.9999999999999998}, new char[]{'2', 'n', 'O', '5', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("MR", new ProportionalProbability( new double[]{0.9324324324324325, 0.9459459459459459, 0.9594594594594594, 0.9729729729729729, 0.9864864864864864, 0.9999999999999999}, new char[]{'R', 'r', 's', 'w', 'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put("MS", new ProportionalProbability( new double[]{0.9263157894736842, 0.9368421052631579, 0.9473684210526316, 0.9578947368421054, 0.9684210526315791, 0.9789473684210528, 0.9894736842105265, 1.0000000000000002}, new char[]{'S', ' ', 'n', 'w', 'M', 'i', 'e', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("MT", new ProportionalProbability( new double[]{0.85, 0.9, 0.9500000000000001, 1.0}, new char[]{'T', 's', 'M', ' '}) );
        twoCharacterInputWithUnknownOutput.put("MU", new ProportionalProbability( new double[]{0.975, 1.0}, new char[]{'U', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Lu", new ProportionalProbability( new double[]{0.9800498753117207, 0.9825436408977556, 0.9850374064837905, 0.9875311720698253, 0.9900249376558602, 0.9925187032418951, 0.9950124688279299, 0.9975062344139648, 0.9999999999999997}, new char[]{'u', 'a', 'l', 'L', ' ', 'm', 'C', 'o', '.'}) );
        twoCharacterInputWithUnknownOutput.put("MV", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'V', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Hô", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'ô', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Ly", new ProportionalProbability( new double[]{0.9622641509433962, 0.9811320754716981, 1.0}, new char[]{'y', 'l', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Hö", new ProportionalProbability( new double[]{0.9642857142857143, 1.0}, new char[]{'h', 'ö'}) );
        twoCharacterInputWithUnknownOutput.put("O ", new ProportionalProbability( new double[]{0.9565217391304348, 0.9604743083003953, 0.9644268774703557, 0.9683794466403162, 0.9723320158102766, 0.9762845849802371, 0.9802371541501975, 0.984189723320158, 0.9881422924901184, 0.9920948616600789, 0.9960474308300393, 0.9999999999999998}, new char[]{' ', 'N', 'e', 'h', 'o', '2', 'a', 't', 'C', 'n', 'c', 'y'}) );
        twoCharacterInputWithUnknownOutput.put(" ב", new ProportionalProbability( new double[]{0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'ב', 'e', 'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put("N?", new ProportionalProbability( new double[]{0.8235294117647058, 0.8823529411764706, 0.9411764705882353, 1.0}, new char[]{'a', '?', 'g', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Hú", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'h', 'ú'}) );
        twoCharacterInputWithUnknownOutput.put("NA", new ProportionalProbability( new double[]{0.9511400651465798, 0.9543973941368078, 0.9576547231270358, 0.9609120521172638, 0.9641693811074918, 0.9674267100977199, 0.9706840390879479, 0.9739413680781759, 0.9771986970684039, 0.9804560260586319, 0.9837133550488599, 0.9869706840390879, 0.990228013029316, 0.993485342019544, 0.996742671009772, 1.0}, new char[]{'A', ' ', 'o', 'v', 'h', 'p', 'c', 'i', 'T', 'a', 'l', 'b', 'y', 's', 'e', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("Ma", new ProportionalProbability( new double[]{0.9945900253592561, 0.9947590870667794, 0.9949281487743027, 0.995097210481826, 0.9952662721893493, 0.9954353338968726, 0.9956043956043958, 0.9957734573119191, 0.9959425190194424, 0.9961115807269657, 0.996280642434489, 0.9964497041420123, 0.9966187658495356, 0.9967878275570589, 0.9969568892645821, 0.9971259509721054, 0.9972950126796287, 0.997464074387152, 0.9976331360946753, 0.9978021978021986, 0.9979712595097219, 0.9981403212172452, 0.9983093829247685, 0.9984784446322917, 0.998647506339815, 0.9988165680473383, 0.9989856297548616, 0.9991546914623849, 0.9993237531699082, 0.9994928148774315, 0.9996618765849548, 0.999830938292478, 1.0000000000000013}, new char[]{'a', 'm', 'y', 'l', 'M', 't', ' ', 'g', 'x', ',', 'n', ':', 'u', 'r', 's', 'i', 'e', 'C', 'b', 'o', 'p', 'h', 'c', 'w', '\'', 'd', 'v', '-', '6', 'S', '/', 'F', ')'}) );
        twoCharacterInputWithUnknownOutput.put(" ה", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'ה', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Hü", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'H', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("NB", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'B', 't'}) );
        twoCharacterInputWithUnknownOutput.put("NC", new ProportionalProbability( new double[]{0.9404761904761905, 0.9464285714285714, 0.9523809523809523, 0.9583333333333333, 0.9642857142857142, 0.9702380952380951, 0.976190476190476, 0.982142857142857, 0.9880952380952379, 0.9940476190476188, 0.9999999999999998}, new char[]{'C', '\"', 't', 'G', ' ', 'a', 'i', 'o', 'u', 'U', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("ND", new ProportionalProbability( new double[]{0.9269662921348315, 0.9325842696629214, 0.9382022471910113, 0.9438202247191012, 0.9494382022471911, 0.955056179775281, 0.9606741573033709, 0.9662921348314608, 0.9719101123595507, 0.9775280898876406, 0.9831460674157305, 0.9887640449438204, 0.9943820224719103, 1.0000000000000002}, new char[]{'D', ' ', 'd', 'y', 'F', 'B', 'M', 'I', 'O', 'T', 'r', 'E', 'W', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("Mc", new ProportionalProbability( new double[]{0.9784172661870504, 0.9856115107913669, 0.9928057553956834, 0.9999999999999999}, new char[]{'c', '1', ')', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("NE", new ProportionalProbability( new double[]{0.9197080291970803, 0.927007299270073, 0.9343065693430657, 0.9416058394160584, 0.948905109489051, 0.9562043795620437, 0.9635036496350364, 0.9708029197080291, 0.9781021897810218, 0.9854014598540145, 0.9927007299270072, 0.9999999999999999}, new char[]{'E', '\"', 'F', 'm', 't', 'n', 'o', 'w', ' ', 'Y', 'O', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("Me", new ProportionalProbability( new double[]{0.989859339221459, 0.9901864573110893, 0.9905135754007197, 0.9908406934903501, 0.9911678115799805, 0.9914949296696108, 0.9918220477592412, 0.9921491658488716, 0.992476283938502, 0.9928034020281323, 0.9931305201177627, 0.9934576382073931, 0.9937847562970235, 0.9941118743866538, 0.9944389924762842, 0.9947661105659146, 0.995093228655545, 0.9954203467451753, 0.9957474648348057, 0.9960745829244361, 0.9964017010140664, 0.9967288191036968, 0.9970559371933272, 0.9973830552829576, 0.9977101733725879, 0.9980372914622183, 0.9983644095518487, 0.9986915276414791, 0.9990186457311094, 0.9993457638207398, 0.9996728819103702, 1.0000000000000004}, new char[]{'e', 'm', ' ', 'l', 'o', 'r', 'a', 'M', 't', ':', 'h', 'i', 's', 'c', 'u', 'd', 'n', '0', 'B', 'p', '-', 'x', 'w', ')', 'f', 'F', '\'', 'v', 'g', 'b', 'S', ','}) );
        twoCharacterInputWithUnknownOutput.put("NF", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'N', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("NG", new ProportionalProbability( new double[]{0.9385474860335196, 0.9441340782122906, 0.9497206703910616, 0.9553072625698326, 0.9608938547486036, 0.9664804469273746, 0.9720670391061456, 0.9776536312849166, 0.9832402234636876, 0.9888268156424586, 0.9944134078212296, 1.0000000000000004}, new char[]{'G', 'i', 'N', 'R', 'S', 'H', ' ', 'b', 'D', 'm', 'O', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("NH", new ProportionalProbability( new double[]{0.9861111111111112, 1.0}, new char[]{'H', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Mg", new ProportionalProbability( new double[]{0.9295774647887324, 0.9436619718309859, 0.9577464788732394, 0.9718309859154929, 0.9859154929577464, 0.9999999999999999}, new char[]{'g', 'm', 'y', 'u', 'a', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("O)", new ProportionalProbability( new double[]{0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{')', 'a', 's', ' '}) );
        twoCharacterInputWithUnknownOutput.put("NI", new ProportionalProbability( new double[]{0.9224137931034483, 0.9310344827586207, 0.939655172413793, 0.9482758620689654, 0.9568965517241378, 0.9655172413793102, 0.9741379310344825, 0.9827586206896549, 0.9913793103448273, 0.9999999999999997}, new char[]{'I', 'V', 'c', ' ', 'r', 'w', 'A', 's', 'R', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Mi", new ProportionalProbability( new double[]{0.9863142991977348, 0.9867862199150543, 0.9872581406323738, 0.9877300613496933, 0.9882019820670128, 0.9886739027843323, 0.9891458235016518, 0.9896177442189713, 0.9900896649362908, 0.9905615856536103, 0.9910335063709298, 0.9915054270882493, 0.9919773478055688, 0.9924492685228883, 0.9929211892402078, 0.9933931099575273, 0.9938650306748468, 0.9943369513921663, 0.9948088721094858, 0.9952807928268053, 0.9957527135441248, 0.9962246342614443, 0.9966965549787637, 0.9971684756960832, 0.9976403964134027, 0.9981123171307222, 0.9985842378480417, 0.9990561585653612, 0.9995280792826807, 1.0000000000000002}, new char[]{'i', 'm', 'M', ' ', 'f', 'a', 'l', 'd', 'p', 'o', 'e', 's', 'n', 'R', 't', '-', '/', 'r', 'A', '1', 'W', '(', 'S', 'H', '8', 'x', 'u', 'I', 'g', 'w'}) );
        twoCharacterInputWithUnknownOutput.put(" ל", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'ל', ' '}) );
        twoCharacterInputWithUnknownOutput.put("NK", new ProportionalProbability( new double[]{0.9032258064516129, 0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{'K', 'R', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("O,", new ProportionalProbability( new double[]{0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{',', 'c', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("O-", new ProportionalProbability( new double[]{0.9583333333333334, 0.9791666666666667, 1.0}, new char[]{'-', 'c', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("NL", new ProportionalProbability( new double[]{0.9545454545454546, 0.9772727272727273, 1.0}, new char[]{'L', 'S', 'E'}) );
        twoCharacterInputWithUnknownOutput.put(" מ", new ProportionalProbability( new double[]{0.9795918367346939, 1.0}, new char[]{'מ', 'ר'}) );
        twoCharacterInputWithUnknownOutput.put("O.", new ProportionalProbability( new double[]{0.9090909090909091, 0.9393939393939393, 0.9696969696969696, 0.9999999999999999}, new char[]{'.', 'l', ' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("NM", new ProportionalProbability( new double[]{0.8333333333333334, 0.8571428571428572, 0.880952380952381, 0.9047619047619049, 0.9285714285714287, 0.9523809523809526, 0.9761904761904764, 1.0000000000000002}, new char[]{'M', 's', 'P', 'N', 'l', 'o', 'u', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("Mm", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'m', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("NN", new ProportionalProbability( new double[]{0.8928571428571429, 0.9285714285714286, 0.9642857142857143, 1.0}, new char[]{'N', 'f', 't', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("NO", new ProportionalProbability( new double[]{0.9561643835616438, 0.958904109589041, 0.9616438356164383, 0.9643835616438355, 0.9671232876712328, 0.96986301369863, 0.9726027397260273, 0.9753424657534245, 0.9780821917808218, 0.980821917808219, 0.9835616438356163, 0.9863013698630135, 0.9890410958904108, 0.991780821917808, 0.9945205479452053, 0.9972602739726025, 0.9999999999999998}, new char[]{'O', 'y', 'd', 'n', 'e', 'v', 'M', 'u', 'i', 'p', 'h', 'c', 'b', 'g', 'H', '\"', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Mo", new ProportionalProbability( new double[]{0.991664351208669, 0.99194220616838, 0.992220061128091, 0.992497916087802, 0.992775771047513, 0.993053626007224, 0.993331480966935, 0.993609335926646, 0.993887190886357, 0.994165045846068, 0.994442900805779, 0.99472075576549, 0.994998610725201, 0.995276465684912, 0.995554320644623, 0.995832175604334, 0.996110030564045, 0.996387885523756, 0.996665740483467, 0.996943595443178, 0.997221450402889, 0.9974993053626, 0.997777160322311, 0.998055015282022, 0.998332870241733, 0.998610725201444, 0.998888580161155, 0.999166435120866, 0.999444290080577, 0.999722145040288, 0.999999999999999}, new char[]{'o', 'D', ' ', 'M', 'u', 'l', 'm', 'i', 'a', 't', 's', 'e', '2', 'g', 'n', 'c', '/', 'h', 'p', 'w', 'P', '1', 'd', 'r', '0', '6', 'S', '.', '&', 'f', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("O1", new ProportionalProbability( new double[]{0.9090909090909091, 1.0}, new char[]{'1', 'o'}) );
        twoCharacterInputWithUnknownOutput.put(" ע", new ProportionalProbability( new double[]{0.9473684210526315, 1.0}, new char[]{'ע', ' '}) );
        twoCharacterInputWithUnknownOutput.put("NP", new ProportionalProbability( new double[]{0.9298245614035088, 0.9473684210526316, 0.9649122807017545, 0.9824561403508774, 1.0000000000000002}, new char[]{'P', 't', 'e', 'r', '1'}) );
        twoCharacterInputWithUnknownOutput.put("O2", new ProportionalProbability( new double[]{0.9407407407407408, 0.9444444444444444, 0.9481481481481481, 0.9518518518518517, 0.9555555555555554, 0.959259259259259, 0.9629629629629627, 0.9666666666666663, 0.97037037037037, 0.9740740740740736, 0.9777777777777773, 0.981481481481481, 0.9851851851851846, 0.9888888888888883, 0.9925925925925919, 0.9962962962962956, 0.9999999999999992}, new char[]{'2', 'c', 's', 'm', 'n', 'P', ' ', 'a', 'b', 'o', 'i', 'e', 'p', 'v', 'I', 'A', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("Mp", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'m', ' ', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("O3", new ProportionalProbability( new double[]{0.9866071428571429, 0.9910714285714286, 0.9955357142857143, 1.0}, new char[]{'n', '3', 'e', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("NS", new ProportionalProbability( new double[]{0.9602649006622517, 0.9668874172185431, 0.9735099337748345, 0.980132450331126, 0.9867549668874174, 0.9933774834437088, 1.0000000000000002}, new char[]{'S', 't', 'd', ' ', 'o', 'F', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("O4", new ProportionalProbability( new double[]{0.9690265486725663, 0.9734513274336283, 0.9778761061946902, 0.9823008849557522, 0.9867256637168141, 0.9911504424778761, 0.995575221238938, 1.0}, new char[]{'4', '+', 'n', 'O', 's', 'y', 'l', '2'}) );
        twoCharacterInputWithUnknownOutput.put("Mr", new ProportionalProbability( new double[]{0.9240506329113924, 0.9367088607594937, 0.9493670886075949, 0.9620253164556961, 0.9746835443037973, 0.9873417721518986, 0.9999999999999998}, new char[]{'r', '/', 'm', ' ', 'n', 'e', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("NT", new ProportionalProbability( new double[]{0.925, 0.93125, 0.9375, 0.94375, 0.95, 0.9562499999999999, 0.9624999999999999, 0.9687499999999999, 0.9749999999999999, 0.9812499999999998, 0.9874999999999998, 0.9937499999999998, 0.9999999999999998}, new char[]{'T', ' ', 'I', 'i', '-', 't', 'D', 'E', 'e', 'n', 's', 'f', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("Ms", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'t', 's'}) );
        twoCharacterInputWithUnknownOutput.put("NU", new ProportionalProbability( new double[]{0.9523809523809523, 1.0}, new char[]{'U', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("Mu", new ProportionalProbability( new double[]{0.9823788546255506, 0.9832599118942731, 0.9841409691629955, 0.985022026431718, 0.9859030837004404, 0.9867841409691629, 0.9876651982378853, 0.9885462555066078, 0.9894273127753302, 0.9903083700440527, 0.9911894273127752, 0.9920704845814976, 0.99295154185022, 0.9938325991189425, 0.994713656387665, 0.9955947136563874, 0.9964757709251099, 0.9973568281938323, 0.9982378854625548, 0.9991189427312772, 0.9999999999999997}, new char[]{'u', 'M', 'm', 's', 'n', 'e', 'i', ' ', 'a', 'l', 'o', 'w', 'r', 'k', 'y', '\"', 'O', 'd', ',', '(', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("NV", new ProportionalProbability( new double[]{0.95, 0.975, 1.0}, new char[]{'V', 'O', 'i'}) );
        twoCharacterInputWithUnknownOutput.put(" ש", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'ש', ' '}) );
        twoCharacterInputWithUnknownOutput.put("NY", new ProportionalProbability( new double[]{0.9523809523809523, 0.9682539682539681, 0.984126984126984, 0.9999999999999998}, new char[]{'Y', 'p', ' ', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("My", new ProportionalProbability( new double[]{0.9367088607594937, 0.9430379746835443, 0.949367088607595, 0.9556962025316457, 0.9620253164556963, 0.968354430379747, 0.9746835443037977, 0.9810126582278483, 0.987341772151899, 0.9936708860759497, 1.0000000000000002}, new char[]{'y', '.', 'i', 'D', '(', 'f', 'u', 'n', ' ', 'c', '0'}) );
        twoCharacterInputWithUnknownOutput.put("2π", new ProportionalProbability( new double[]{0.9765625, 0.984375, 0.9921875, 1.0}, new char[]{'π', '^', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("P ", new ProportionalProbability( new double[]{0.9613259668508287, 0.9631675874769797, 0.9650092081031307, 0.9668508287292817, 0.9686924493554327, 0.9705340699815838, 0.9723756906077348, 0.9742173112338858, 0.9760589318600368, 0.9779005524861878, 0.9797421731123388, 0.9815837937384898, 0.9834254143646408, 0.9852670349907918, 0.9871086556169428, 0.9889502762430938, 0.9907918968692448, 0.9926335174953959, 0.9944751381215469, 0.9963167587476979, 0.9981583793738489, 0.9999999999999999}, new char[]{' ', 'i', 'f', 'g', ',', 'm', 't', 'r', 's', '-', 'd', 'n', 'o', 'e', 'k', 'b', 'u', 'a', 'h', 'y', 'l', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("O?", new ProportionalProbability( new double[]{0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{' ', '?', 'I', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("OA", new ProportionalProbability( new double[]{0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1.0}, new char[]{'A', 't', ' ', 'a', 's', 'N', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Na", new ProportionalProbability( new double[]{0.9885632594710507, 0.9889206576125804, 0.9892780557541101, 0.9896354538956398, 0.9899928520371695, 0.9903502501786992, 0.9907076483202288, 0.9910650464617585, 0.9914224446032882, 0.9917798427448179, 0.9921372408863476, 0.9924946390278773, 0.992852037169407, 0.9932094353109366, 0.9935668334524663, 0.993924231593996, 0.9942816297355257, 0.9946390278770554, 0.9949964260185851, 0.9953538241601148, 0.9957112223016444, 0.9960686204431741, 0.9964260185847038, 0.9967834167262335, 0.9971408148677632, 0.9974982130092929, 0.9978556111508226, 0.9982130092923522, 0.9985704074338819, 0.9989278055754116, 0.9992852037169413, 0.999642601858471, 1.0000000000000007}, new char[]{'a', 'o', ' ', 'i', 'n', 'm', 'e', 'N', 'c', 'S', '?', 'w', 'h', 'd', 'r', 's', 'u', 'g', 'H', 't', 'l', 'f', 'p', 'C', 'O', '→', 'M', 'b', '8', 'G', 'P', ',', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("OB", new ProportionalProbability( new double[]{0.9428571428571428, 0.9714285714285714, 1.0}, new char[]{'B', 'p', ' '}) );
        twoCharacterInputWithUnknownOutput.put("OC", new ProportionalProbability( new double[]{0.9459459459459459, 0.9594594594594594, 0.9729729729729729, 0.9864864864864864, 0.9999999999999999}, new char[]{'C', ' ', 'o', 'W', '2'}) );
        twoCharacterInputWithUnknownOutput.put("OD", new ProportionalProbability( new double[]{0.8955223880597015, 0.9104477611940299, 0.9253731343283583, 0.9402985074626867, 0.9552238805970151, 0.9701492537313435, 0.9850746268656719, 1.0000000000000002}, new char[]{'D', 'O', ' ', 'b', 'M', 'l', 's', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("OE", new ProportionalProbability( new double[]{0.8888888888888888, 0.9166666666666666, 0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{' ', 'a', 'e', 'E', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Ne", new ProportionalProbability( new double[]{0.9869358669833729, 0.9873317498020585, 0.9877276326207441, 0.9881235154394298, 0.9885193982581154, 0.988915281076801, 0.9893111638954867, 0.9897070467141723, 0.990102929532858, 0.9904988123515436, 0.9908946951702292, 0.9912905779889148, 0.9916864608076005, 0.9920823436262861, 0.9924782264449717, 0.9928741092636574, 0.993269992082343, 0.9936658749010286, 0.9940617577197143, 0.9944576405383999, 0.9948535233570855, 0.9952494061757712, 0.9956452889944568, 0.9960411718131424, 0.9964370546318281, 0.9968329374505137, 0.9972288202691993, 0.997624703087885, 0.9980205859065706, 0.9984164687252562, 0.9988123515439419, 0.9992082343626275, 0.9996041171813131, 0.9999999999999988}, new char[]{'e', ' ', 't', 'n', 'o', 'y', 'r', 'd', 's', 'N', 'a', 'i', 'l', '\'', 'w', 'h', 'b', 'S', '.', 'g', 'V', '2', ',', 'u', 'c', 'f', 'm', '-', 'x', 'A', '3', 'I', 'T', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("OF", new ProportionalProbability( new double[]{0.9538461538461539, 0.9692307692307693, 0.9846153846153847, 1.0}, new char[]{'F', 'E', ' ', ':'}) );
        twoCharacterInputWithUnknownOutput.put("P\'", new ProportionalProbability( new double[]{0.8974358974358975, 0.9230769230769231, 0.9487179487179488, 0.9743589743589745, 1.0}, new char[]{'u', '\'', 'e', '(', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("OG", new ProportionalProbability( new double[]{0.9454545454545454, 0.9636363636363636, 0.9818181818181818, 1.0}, new char[]{'G', 'n', 'S', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("P(", new ProportionalProbability( new double[]{0.9866666666666667, 1.0}, new char[]{'(', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("P)", new ProportionalProbability( new double[]{0.9134615384615384, 0.923076923076923, 0.9326923076923076, 0.9423076923076922, 0.9519230769230768, 0.9615384615384613, 0.9711538461538459, 0.9807692307692305, 0.9903846153846151, 0.9999999999999997}, new char[]{'r', ')', 'y', ' ', 'o', 'p', 's', 'i', 'm', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("OH", new ProportionalProbability( new double[]{0.9739776951672863, 0.9776951672862454, 0.9814126394052045, 0.9851301115241636, 0.9888475836431228, 0.9925650557620819, 0.996282527881041, 1.0}, new char[]{'H', 'o', 'a', 'c', '/', ' ', 'e', '5'}) );
        twoCharacterInputWithUnknownOutput.put("OI", new ProportionalProbability( new double[]{0.967741935483871, 1.0}, new char[]{'I', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Ni", new ProportionalProbability( new double[]{0.986013986013986, 0.9871794871794872, 0.9883449883449884, 0.9895104895104896, 0.9906759906759908, 0.991841491841492, 0.9930069930069931, 0.9941724941724943, 0.9953379953379955, 0.9965034965034967, 0.9976689976689979, 0.998834498834499, 1.0000000000000002}, new char[]{'i', ' ', 'a', 'm', 'N', 'l', 'n', 'o', 'u', 'd', 'r', 'h', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("P,", new ProportionalProbability( new double[]{0.8545454545454545, 0.8727272727272727, 0.8909090909090909, 0.9090909090909091, 0.9272727272727272, 0.9454545454545454, 0.9636363636363636, 0.9818181818181818, 1.0}, new char[]{'o', ' ', 'i', 'D', ',', 'c', 'g', 'n', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("OK", new ProportionalProbability( new double[]{0.9259259259259259, 0.962962962962963, 1.0}, new char[]{'c', 'K', ' '}) );
        twoCharacterInputWithUnknownOutput.put("P-", new ProportionalProbability( new double[]{0.9512195121951219, 0.975609756097561, 1.0}, new char[]{'-', 'n', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("OL", new ProportionalProbability( new double[]{0.9466666666666667, 0.96, 0.9733333333333333, 0.9866666666666666, 0.9999999999999999}, new char[]{'L', 'N', 'c', 'e', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("Nk", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'t', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("OM", new ProportionalProbability( new double[]{0.9263803680981595, 0.9325153374233128, 0.9386503067484662, 0.9447852760736195, 0.9509202453987728, 0.9570552147239262, 0.9631901840490795, 0.9693251533742329, 0.9754601226993862, 0.9815950920245395, 0.9877300613496929, 0.9938650306748462, 0.9999999999999996}, new char[]{'M', ' ', '\"', 'a', 'O', '-', 'r', 'W', 'o', 'L', 'D', 'N', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("P.", new ProportionalProbability( new double[]{0.9473684210526315, 0.9605263157894737, 0.9736842105263158, 0.986842105263158, 1.0}, new char[]{'t', '.', ' ', '=', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("ON", new ProportionalProbability( new double[]{0.9644808743169399, 0.9672131147540983, 0.9699453551912568, 0.9726775956284153, 0.9754098360655737, 0.9781420765027322, 0.9808743169398907, 0.9836065573770492, 0.9863387978142076, 0.9890710382513661, 0.9918032786885246, 0.994535519125683, 0.9972677595628415, 1.0}, new char[]{'N', 'h', ' ', 's', 'w', 'a', 'I', 't', 'e', 'd', 'm', 'S', 'u', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("P/", new ProportionalProbability( new double[]{0.9795918367346939, 1.0}, new char[]{'/', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Nm", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'m', 'y', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("OO", new ProportionalProbability( new double[]{0.9210526315789473, 0.9298245614035088, 0.9385964912280702, 0.9473684210526316, 0.9561403508771931, 0.9649122807017545, 0.9736842105263159, 0.9824561403508774, 0.9912280701754388, 1.0000000000000002}, new char[]{'O', 'c', 'A', ' ', 'F', 'o', '\"', 'i', 'a', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("No", new ProportionalProbability( new double[]{0.9898270600203459, 0.9901661580196678, 0.9905052560189896, 0.9908443540183115, 0.9911834520176334, 0.9915225500169552, 0.9918616480162771, 0.9922007460155989, 0.9925398440149208, 0.9928789420142426, 0.9932180400135645, 0.9935571380128864, 0.9938962360122082, 0.9942353340115301, 0.9945744320108519, 0.9949135300101738, 0.9952526280094957, 0.9955917260088175, 0.9959308240081394, 0.9962699220074612, 0.9966090200067831, 0.9969481180061049, 0.9972872160054268, 0.9976263140047487, 0.9979654120040705, 0.9983045100033924, 0.9986436080027142, 0.9989827060020361, 0.999321804001358, 0.9996609020006798, 1.0000000000000016}, new char[]{'o', 't', ' ', 'n', 's', 'm', 'e', 'g', 'i', 'N', 'v', 'd', '.', 'l', 'r', 'h', 'u', 'C', 'c', ',', 'y', ':', 'a', 'b', '9', 'A', 'O', 'w', 'f', 'D', 'L'}) );
        twoCharacterInputWithUnknownOutput.put("P1", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'1', '2'}) );
        twoCharacterInputWithUnknownOutput.put("OP", new ProportionalProbability( new double[]{0.9285714285714286, 0.9464285714285715, 0.9642857142857144, 0.9821428571428573, 1.0000000000000002}, new char[]{'P', 't', 'f', 'O', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("OQ", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'r', 'Q'}) );
        twoCharacterInputWithUnknownOutput.put("OR", new ProportionalProbability( new double[]{0.9467680608365019, 0.9505703422053232, 0.9543726235741445, 0.9581749049429659, 0.9619771863117872, 0.9657794676806085, 0.9695817490494298, 0.9733840304182512, 0.9771863117870725, 0.9809885931558938, 0.9847908745247151, 0.9885931558935365, 0.9923954372623578, 0.9961977186311791, 1.0000000000000004}, new char[]{'R', 'u', 's', ' ', 'O', 't', 'E', '\"', 'K', 'd', 'h', 'f', 'a', 'I', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("P3", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'d', '3'}) );
        twoCharacterInputWithUnknownOutput.put("OS", new ProportionalProbability( new double[]{0.9746835443037974, 0.9873417721518987, 0.9999999999999999}, new char[]{'S', 'H', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("P4", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'a', ' '}) );
        twoCharacterInputWithUnknownOutput.put("OT", new ProportionalProbability( new double[]{0.9578059071729957, 0.9620253164556961, 0.9662447257383965, 0.9704641350210969, 0.9746835443037972, 0.9789029535864976, 0.983122362869198, 0.9873417721518983, 0.9915611814345987, 0.9957805907172991, 0.9999999999999994}, new char[]{' ', 'T', 't', 'd', 'e', 'X', 's', 'c', 'r', 'o', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("OU", new ProportionalProbability( new double[]{0.956989247311828, 0.967741935483871, 0.978494623655914, 0.989247311827957, 1.0}, new char[]{'U', 'e', '\"', 'h', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("Nt", new ProportionalProbability( new double[]{0.7777777777777778, 0.8888888888888888, 1.0}, new char[]{'t', 's', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Nu", new ProportionalProbability( new double[]{0.9775280898876404, 0.978776529338327, 0.9800249687890137, 0.9812734082397003, 0.982521847690387, 0.9837702871410736, 0.9850187265917603, 0.9862671660424469, 0.9875156054931336, 0.9887640449438202, 0.9900124843945068, 0.9912609238451935, 0.9925093632958801, 0.9937578027465668, 0.9950062421972534, 0.9962546816479401, 0.9975031210986267, 0.9987515605493134, 1.0}, new char[]{'u', 'N', ' ', 'n', 'l', 'm', 't', 'r', 'y', 's', ')', '?', 'O', 'a', 'c', 'd', 'e', 'f', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("OV", new ProportionalProbability( new double[]{0.9411764705882353, 0.9607843137254902, 0.9803921568627452, 1.0}, new char[]{'V', 'e', '\"', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("OW", new ProportionalProbability( new double[]{0.9466666666666667, 0.96, 0.9733333333333333, 0.9866666666666666, 0.9999999999999999}, new char[]{'W', 'A', 'r', '.', ' '}) );
        twoCharacterInputWithUnknownOutput.put("OX", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'X', 'b', 's'}) );
        twoCharacterInputWithUnknownOutput.put("P:", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'o', ':'}) );
        twoCharacterInputWithUnknownOutput.put("OY", new ProportionalProbability( new double[]{0.8947368421052632, 0.9473684210526316, 1.0}, new char[]{'Y', '\"', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Nx", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{'x', ' '}) );
        twoCharacterInputWithUnknownOutput.put("P<", new ProportionalProbability( new double[]{0.9803921568627451, 0.9901960784313725, 0.9999999999999999}, new char[]{'I', ' ', '<'}) );
        twoCharacterInputWithUnknownOutput.put("P=", new ProportionalProbability( new double[]{0.9705882352941176, 1.0}, new char[]{'=', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("3π", new ProportionalProbability( new double[]{0.9782608695652174, 1.0}, new char[]{'π', ','}) );
        twoCharacterInputWithUnknownOutput.put("Q ", new ProportionalProbability( new double[]{0.9541284403669725, 0.963302752293578, 0.9724770642201834, 0.9816513761467889, 0.9908256880733943, 0.9999999999999998}, new char[]{' ', 'f', 'e', 'd', 't', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("P?", new ProportionalProbability( new double[]{0.875, 0.8928571428571429, 0.9107142857142858, 0.9285714285714287, 0.9464285714285716, 0.9642857142857145, 0.9821428571428574, 1.0000000000000002}, new char[]{'e', ' ', 'm', '?', 'T', 's', 'n', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("PA", new ProportionalProbability( new double[]{0.944, 0.952, 0.96, 0.968, 0.976, 0.984, 0.992, 1.0}, new char[]{'A', 'a', ' ', 'o', 'N', 'W', 'C', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("Oa", new ProportionalProbability( new double[]{0.8771929824561403, 0.894736842105263, 0.9122807017543859, 0.9298245614035088, 0.9473684210526316, 0.9649122807017545, 0.9824561403508774, 1.0000000000000002}, new char[]{'m', 'a', ' ', 'c', 'e', '.', 'n', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Jü", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'j', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("Ob", new ProportionalProbability( new double[]{0.9761904761904762, 0.9781746031746031, 0.9801587301587301, 0.9821428571428571, 0.9841269841269841, 0.986111111111111, 0.988095238095238, 0.990079365079365, 0.992063492063492, 0.994047619047619, 0.9960317460317459, 0.9980158730158729, 0.9999999999999999}, new char[]{'b', ' ', 'o', 's', 'i', 'x', 'O', 'y', 'c', 'e', 'n', 'm', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("PC", new ProportionalProbability( new double[]{0.927536231884058, 0.9420289855072463, 0.9565217391304347, 0.9710144927536231, 0.9855072463768114, 0.9999999999999998}, new char[]{'C', 'n', 'u', 't', 'f', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("Oc", new ProportionalProbability( new double[]{0.982532751091703, 0.9847161572052401, 0.9868995633187772, 0.9890829694323142, 0.9912663755458513, 0.9934497816593884, 0.9956331877729254, 0.9978165938864625, 0.9999999999999996}, new char[]{'c', 'o', ' ', '7', 'd', 'u', 'l', 't', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("PD", new ProportionalProbability( new double[]{0.9104477611940298, 0.9253731343283582, 0.9402985074626866, 0.955223880597015, 0.9701492537313434, 0.9850746268656718, 1.0000000000000002}, new char[]{'D', 'n', '1', '=', ' ', 't', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Od", new ProportionalProbability( new double[]{0.9793103448275862, 0.9862068965517241, 0.993103448275862, 1.0}, new char[]{'d', 'o', 'p', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("PE", new ProportionalProbability( new double[]{0.916030534351145, 0.9198473282442747, 0.9236641221374045, 0.9274809160305342, 0.9312977099236639, 0.9351145038167936, 0.9389312977099233, 0.9427480916030531, 0.9465648854961828, 0.9503816793893125, 0.9541984732824422, 0.958015267175572, 0.9618320610687017, 0.9656488549618314, 0.9694656488549611, 0.9732824427480908, 0.9770992366412206, 0.9809160305343503, 0.98473282442748, 0.9885496183206097, 0.9923664122137394, 0.9961832061068692, 0.9999999999999989}, new char[]{'E', 'P', 'i', 'y', 'w', 'n', ' ', 'D', 'L', 'e', 't', 'v', 'a', 's', 'T', 'u', 'o', 'f', 'l', '>', 'S', 'd', ','}) );
        twoCharacterInputWithUnknownOutput.put("Oe", new ProportionalProbability( new double[]{0.9655172413793104, 1.0}, new char[]{'o', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("PF", new ProportionalProbability( new double[]{0.9230769230769231, 0.9615384615384616, 1.0}, new char[]{' ', 'i', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("Of", new ProportionalProbability( new double[]{0.966796875, 0.96875, 0.970703125, 0.97265625, 0.974609375, 0.9765625, 0.978515625, 0.98046875, 0.982421875, 0.984375, 0.986328125, 0.98828125, 0.990234375, 0.9921875, 0.994140625, 0.99609375, 0.998046875, 1.0}, new char[]{'f', 't', ' ', 'u', 'a', 'o', 'c', 'm', 's', 'h', 'b', 'e', 'i', 'l', 'O', 'g', '.', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("PG", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{' ', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("PH", new ProportionalProbability( new double[]{0.8627450980392157, 0.8823529411764707, 0.9019607843137256, 0.9215686274509806, 0.9411764705882355, 0.9607843137254904, 0.9803921568627454, 1.0000000000000002}, new char[]{'H', 'C', ' ', 't', 'u', 'e', 'z', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Oh", new ProportionalProbability( new double[]{0.9645390070921985, 0.9716312056737588, 0.9787234042553191, 0.9858156028368794, 0.9929078014184397, 1.0}, new char[]{'O', 'h', 'e', 'a', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put("PI", new ProportionalProbability( new double[]{0.9156626506024096, 0.927710843373494, 0.9397590361445783, 0.9518072289156627, 0.9638554216867471, 0.9759036144578315, 0.9879518072289158, 1.0000000000000002}, new char[]{'I', 'o', ' ', '2', 'l', 'R', 's', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("Kä", new ProportionalProbability( new double[]{0.9782608695652174, 1.0}, new char[]{'K', 'ä'}) );
        twoCharacterInputWithUnknownOutput.put("Oi", new ProportionalProbability( new double[]{0.9294117647058824, 0.9411764705882353, 0.9529411764705882, 0.9647058823529411, 0.976470588235294, 0.9882352941176469, 0.9999999999999998}, new char[]{'s', 'i', ' ', 'u', 'l', 'o', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("Ok", new ProportionalProbability( new double[]{0.9473684210526315, 0.9605263157894737, 0.9736842105263158, 0.986842105263158, 1.0}, new char[]{'O', ' ', 'k', 'o', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("PL", new ProportionalProbability( new double[]{0.9120879120879121, 0.923076923076923, 0.934065934065934, 0.9450549450549449, 0.9560439560439559, 0.9670329670329668, 0.9780219780219778, 0.9890109890109887, 0.9999999999999997}, new char[]{'L', 'U', 'O', 'j', 'a', 'I', ' ', 's', 'u'}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart8(){
        twoCharacterInputWithUnknownOutput.put("Ol", new ProportionalProbability( new double[]{0.9769585253456221, 0.9815668202764977, 0.9861751152073732, 0.9907834101382488, 0.9953917050691243, 0.9999999999999999}, new char[]{'l', 'o', ' ', 'm', 'O', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("PM", new ProportionalProbability( new double[]{0.9302325581395349, 0.9534883720930233, 0.9767441860465117, 1.0}, new char[]{'M', ' ', 's', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("Om", new ProportionalProbability( new double[]{0.9557522123893806, 0.9646017699115045, 0.9734513274336284, 0.9823008849557523, 0.9911504424778762, 1.0}, new char[]{'m', 'u', 'O', ' ', 's', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Q/", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'e', '/'}) );
        twoCharacterInputWithUnknownOutput.put("On", new ProportionalProbability( new double[]{0.9818676337262012, 0.9827742520398912, 0.9836808703535812, 0.9845874886672712, 0.9854941069809612, 0.9864007252946512, 0.9873073436083412, 0.9882139619220311, 0.9891205802357211, 0.9900271985494111, 0.9909338168631011, 0.9918404351767911, 0.9927470534904811, 0.9936536718041711, 0.9945602901178611, 0.9954669084315511, 0.996373526745241, 0.997280145058931, 0.998186763372621, 0.999093381686311, 1.0000000000000009}, new char[]{'n', 't', 'i', 'd', ',', ' ', 'a', 'o', 'm', 'O', 'l', 'c', 'ב', 's', 'e', 'p', 'h', '.', 'r', 'f', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("PO", new ProportionalProbability( new double[]{0.9702380952380952, 0.9761904761904762, 0.9821428571428571, 0.988095238095238, 0.994047619047619, 0.9999999999999999}, new char[]{'O', 'I', 'e', 'h', 'p', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Q0", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'e', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("PP", new ProportionalProbability( new double[]{0.9104477611940298, 0.917910447761194, 0.9253731343283582, 0.9328358208955224, 0.9402985074626866, 0.9477611940298508, 0.955223880597015, 0.9626865671641792, 0.9701492537313434, 0.9776119402985076, 0.9850746268656718, 0.992537313432836, 1.0000000000000002}, new char[]{'e', 'g', 'P', 'w', 'l', 'i', 't', ' ', '\"', 'A', 'r', 'T', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Op", new ProportionalProbability( new double[]{0.9766899766899767, 0.9778554778554779, 0.9790209790209791, 0.9801864801864802, 0.9813519813519814, 0.9825174825174826, 0.9836829836829838, 0.984848484848485, 0.9860139860139862, 0.9871794871794873, 0.9883449883449885, 0.9895104895104897, 0.9906759906759909, 0.9918414918414921, 0.9930069930069932, 0.9941724941724944, 0.9953379953379956, 0.9965034965034968, 0.997668997668998, 0.9988344988344992, 1.0000000000000002}, new char[]{'p', 'n', '\"', 'O', ' ', 'o', 'i', 'l', 'm', 'e', 'y', 'c', 'd', 'S', 'C', 'r', 'u', 's', ',', 't', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("PR", new ProportionalProbability( new double[]{0.98, 0.9866666666666667, 0.9933333333333334, 1.0}, new char[]{'R', ' ', 't', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("Or", new ProportionalProbability( new double[]{0.9854955680902499, 0.9863013698630138, 0.9871071716357777, 0.9879129734085416, 0.9887187751813055, 0.9895245769540694, 0.9903303787268333, 0.9911361804995972, 0.9919419822723611, 0.992747784045125, 0.9935535858178889, 0.9943593875906528, 0.9951651893634167, 0.9959709911361806, 0.9967767929089445, 0.9975825946817084, 0.9983883964544723, 0.9991941982272362, 1.0}, new char[]{'r', 'o', 'e', ' ', 's', 'O', 'n', 'm', 'a', 'i', 'c', 'd', 'l', 't', '.', 'v', ',', 'w', '('}) );
        twoCharacterInputWithUnknownOutput.put("PS", new ProportionalProbability( new double[]{0.9230769230769231, 0.9326923076923077, 0.9423076923076923, 0.9519230769230769, 0.9615384615384615, 0.971153846153846, 0.9807692307692306, 0.9903846153846152, 0.9999999999999998}, new char[]{'S', 'c', 'r', 'w', 'o', 'e', 'i', 't', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("Os", new ProportionalProbability( new double[]{0.9680365296803652, 0.9726027397260273, 0.9771689497716893, 0.9817351598173514, 0.9863013698630134, 0.9908675799086755, 0.9954337899543375, 0.9999999999999996}, new char[]{'s', ' ', 'h', 'O', 'o', 't', 'g', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("PT", new ProportionalProbability( new double[]{0.8771929824561403, 0.894736842105263, 0.9122807017543859, 0.9298245614035088, 0.9473684210526316, 0.9649122807017545, 0.9824561403508774, 1.0000000000000002}, new char[]{'T', ')', ' ', 'd', 'm', 'u', 'a', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("PU", new ProportionalProbability( new double[]{0.9021739130434783, 0.9130434782608696, 0.923913043478261, 0.9347826086956523, 0.9456521739130437, 0.956521739130435, 0.9673913043478264, 0.9782608695652177, 0.9891304347826091, 1.0000000000000004}, new char[]{'p', 'U', 'n', 'i', ' ', 'r', 's', 'o', 'l', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Ot", new ProportionalProbability( new double[]{0.9751243781094527, 0.9800995024875622, 0.9850746268656716, 0.990049751243781, 0.9950248756218905, 0.9999999999999999}, new char[]{'t', 'o', 'e', ' ', 'r', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Ou", new ProportionalProbability( new double[]{0.9810924369747899, 0.9831932773109243, 0.9852941176470588, 0.9873949579831932, 0.9894957983193277, 0.9915966386554621, 0.9936974789915966, 0.995798319327731, 0.9978991596638654, 0.9999999999999999}, new char[]{'u', ' ', 'm', 'r', 'l', 'o', 'n', 'a', 'i', '0'}) );
        twoCharacterInputWithUnknownOutput.put("PV", new ProportionalProbability( new double[]{0.8970588235294118, 0.9117647058823529, 0.926470588235294, 0.9411764705882352, 0.9558823529411763, 0.9705882352941174, 0.9852941176470585, 0.9999999999999997}, new char[]{'V', 'y', 'r', 'p', 's', 't', 'o', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Ov", new ProportionalProbability( new double[]{0.9616519174041298, 0.9646017699115045, 0.9675516224188792, 0.9705014749262538, 0.9734513274336285, 0.9764011799410032, 0.9793510324483778, 0.9823008849557525, 0.9852507374631272, 0.9882005899705019, 0.9911504424778765, 0.9941002949852512, 0.9970501474926259, 1.0000000000000004}, new char[]{'v', ' ', 'l', 'r', 'u', 'm', 'c', 'k', 't', 'a', 'e', 'w', 'h', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("PW", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'W', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Ow", new ProportionalProbability( new double[]{0.9411764705882353, 0.9529411764705882, 0.9647058823529411, 0.976470588235294, 0.9882352941176469, 0.9999999999999998}, new char[]{' ', 'w', 'r', 'M', 'l', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("Ox", new ProportionalProbability( new double[]{0.9383886255924171, 0.9431279620853081, 0.9478672985781992, 0.9526066350710902, 0.9573459715639813, 0.9620853080568723, 0.9668246445497634, 0.9715639810426544, 0.9763033175355454, 0.9810426540284365, 0.9857819905213275, 0.9905213270142186, 0.9952606635071096, 1.0000000000000007}, new char[]{'x', 'u', 'r', ' ', 't', 'o', 'f', 'a', 'i', 'C', 'd', 'n', ',', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Oy", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{'y', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("Oz", new ProportionalProbability( new double[]{0.9375, 0.9583333333333334, 0.9791666666666667, 1.0}, new char[]{'z', ',', '0', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Kö", new ProportionalProbability( new double[]{0.96, 0.98, 1.0}, new char[]{'k', 'ö', 'K'}) );
        twoCharacterInputWithUnknownOutput.put("R ", new ProportionalProbability( new double[]{0.9708333333333333, 0.9729166666666667, 0.975, 0.9770833333333333, 0.9791666666666666, 0.98125, 0.9833333333333333, 0.9854166666666666, 0.9874999999999999, 0.9895833333333333, 0.9916666666666666, 0.9937499999999999, 0.9958333333333332, 0.9979166666666666, 0.9999999999999999}, new char[]{' ', 'r', 'z', 't', 'l', 's', 'S', 'i', 'a', 'A', 'e', 'd', 'h', 'R', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("P_", new ProportionalProbability( new double[]{0.75, 0.875, 1.0}, new char[]{'_', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("QA", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'A', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("Pa", new ProportionalProbability( new double[]{0.9927842746951978, 0.9930330928091565, 0.9932819109231152, 0.993530729037074, 0.9937795471510327, 0.9940283652649914, 0.9942771833789501, 0.9945260014929088, 0.9947748196068675, 0.9950236377208262, 0.995272455834785, 0.9955212739487437, 0.9957700920627024, 0.9960189101766611, 0.9962677282906198, 0.9965165464045785, 0.9967653645185373, 0.997014182632496, 0.9972630007464547, 0.9975118188604134, 0.9977606369743721, 0.9980094550883308, 0.9982582732022895, 0.9985070913162483, 0.998755909430207, 0.9990047275441657, 0.9992535456581244, 0.9995023637720831, 0.9997511818860418, 1.0000000000000004}, new char[]{'a', 'n', ' ', 'l', 'p', 'T', 'P', 's', 'o', 'r', 'i', 't', 'e', ')', 'u', 'w', 'm', 'v', ',', 'd', 'R', 'h', 'g', '-', '.', 'f', 'G', 'k', 'L', '5'}) );
        twoCharacterInputWithUnknownOutput.put("Kü", new ProportionalProbability( new double[]{0.98, 0.99, 1.0}, new char[]{'ü', 'K', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("Pb", new ProportionalProbability( new double[]{0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'b', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("QC", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'l', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("Pd", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'d', 's'}) );
        twoCharacterInputWithUnknownOutput.put("R&", new ProportionalProbability( new double[]{0.88, 0.92, 0.9600000000000001, 1.0}, new char[]{'&', ' ', 'r', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Pe", new ProportionalProbability( new double[]{0.9895470383275261, 0.9898954703832752, 0.9902439024390243, 0.9905923344947734, 0.9909407665505224, 0.9912891986062715, 0.9916376306620206, 0.9919860627177697, 0.9923344947735188, 0.9926829268292678, 0.9930313588850169, 0.993379790940766, 0.9937282229965151, 0.9940766550522642, 0.9944250871080133, 0.9947735191637623, 0.9951219512195114, 0.9954703832752605, 0.9958188153310096, 0.9961672473867587, 0.9965156794425077, 0.9968641114982568, 0.9972125435540059, 0.997560975609755, 0.9979094076655041, 0.9982578397212531, 0.9986062717770022, 0.9989547038327513, 0.9993031358885004, 0.9996515679442495, 0.9999999999999986}, new char[]{'l', 'e', 'p', ' ', 'm', ':', 't', 'y', 'i', 'h', 'T', 'P', 'r', 'o', 'k', 'n', '-', 'd', 'f', 'v', '1', 'u', 'a', 'c', 'F', 'S', 'w', 's', 'b', 'C', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("Pf", new ProportionalProbability( new double[]{0.9927536231884058, 1.0}, new char[]{'P', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("R)", new ProportionalProbability( new double[]{0.9230769230769231, 0.9358974358974359, 0.9487179487179487, 0.9615384615384615, 0.9743589743589742, 0.987179487179487, 0.9999999999999998}, new char[]{')', 'c', 's', 'r', 'e', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Pg", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'g', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Ph", new ProportionalProbability( new double[]{0.9788557213930348, 0.9800995024875622, 0.9813432835820896, 0.9825870646766169, 0.9838308457711443, 0.9850746268656717, 0.9863184079601991, 0.9875621890547265, 0.9888059701492539, 0.9900497512437813, 0.9912935323383086, 0.992537313432836, 0.9937810945273634, 0.9950248756218908, 0.9962686567164182, 0.9975124378109456, 0.998756218905473, 1.0000000000000002}, new char[]{'h', ' ', 'r', 'P', 'd', 'm', 'e', 't', 'c', 'E', 'a', 's', 'p', 'v', 'o', 'n', 'i', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("Lä", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'L', 'ä'}) );
        twoCharacterInputWithUnknownOutput.put("Pi", new ProportionalProbability( new double[]{0.9783653846153846, 0.9795673076923077, 0.9807692307692308, 0.981971153846154, 0.9831730769230771, 0.9843750000000002, 0.9855769230769234, 0.9867788461538465, 0.9879807692307696, 0.9891826923076927, 0.9903846153846159, 0.991586538461539, 0.9927884615384621, 0.9939903846153852, 0.9951923076923084, 0.9963942307692315, 0.9975961538461546, 0.9987980769230778, 1.0000000000000009}, new char[]{'i', 'u', 'P', 'e', ' ', 'p', 's', 'm', 'd', 'h', 'k', 'c', 't', 'r', 'l', 'q', 'o', ')', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("R,", new ProportionalProbability( new double[]{0.9629629629629629, 0.9814814814814814, 0.9999999999999999}, new char[]{',', 'r', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("QL", new ProportionalProbability( new double[]{0.8695652173913043, 0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'t', 'w', 'L', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("R-", new ProportionalProbability( new double[]{0.9487179487179487, 0.9743589743589743, 1.0}, new char[]{'-', 'u', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Pl", new ProportionalProbability( new double[]{0.9846517119244392, 0.9852420306965762, 0.9858323494687132, 0.9864226682408502, 0.9870129870129872, 0.9876033057851242, 0.9881936245572612, 0.9887839433293982, 0.9893742621015352, 0.9899645808736722, 0.9905548996458092, 0.9911452184179462, 0.9917355371900832, 0.9923258559622202, 0.9929161747343572, 0.9935064935064942, 0.9940968122786312, 0.9946871310507682, 0.9952774498229052, 0.9958677685950422, 0.9964580873671792, 0.9970484061393162, 0.9976387249114532, 0.9982290436835902, 0.9988193624557272, 0.9994096812278642, 1.000000000000001}, new char[]{'n', 'l', ' ', 't', 'p', 'c', 'o', 'r', 'a', 'u', 'd', 'P', 'm', 'M', 'i', 'w', ':', 'v', 'e', 'J', 'h', 'y', 's', '.', 'O', 'b', ','}) );
        twoCharacterInputWithUnknownOutput.put("R.", new ProportionalProbability( new double[]{0.9827586206896551, 1.0}, new char[]{'.', ' '}) );
        twoCharacterInputWithUnknownOutput.put("QM", new ProportionalProbability( new double[]{0.8666666666666667, 0.9333333333333333, 1.0}, new char[]{'M', ' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Pm", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'m', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("R/", new ProportionalProbability( new double[]{0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'/', '.', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Lé", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'é', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("Po", new ProportionalProbability( new double[]{0.9915966386554622, 0.991851285968933, 0.9921059332824038, 0.9923605805958746, 0.9926152279093454, 0.9928698752228162, 0.993124522536287, 0.9933791698497578, 0.9936338171632286, 0.9938884644766994, 0.9941431117901702, 0.994397759103641, 0.9946524064171118, 0.9949070537305826, 0.9951617010440534, 0.9954163483575242, 0.995670995670995, 0.9959256429844658, 0.9961802902979366, 0.9964349376114074, 0.9966895849248782, 0.996944232238349, 0.9971988795518199, 0.9974535268652907, 0.9977081741787615, 0.9979628214922323, 0.9982174688057031, 0.9984721161191739, 0.9987267634326447, 0.9989814107461155, 0.9992360580595863, 0.9994907053730571, 0.9997453526865279, 0.9999999999999987}, new char[]{'o', 'p', 'n', ' ', 'l', 'u', 'm', 'a', 'r', 's', 'P', 'R', 'd', 'S', 'f', '.', 'M', '4', 'g', 'h', 't', 'b', 'e', ',', 'y', 'v', 'C', 'c', 'i', 'F', '\"', '(', 'B', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("R2", new ProportionalProbability( new double[]{0.8666666666666667, 0.9333333333333333, 1.0}, new char[]{'2', '_', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Lí", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{'í', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("Pr", new ProportionalProbability( new double[]{0.9943302622253721, 0.9944720056697378, 0.9946137491141035, 0.9947554925584692, 0.9948972360028349, 0.9950389794472005, 0.9951807228915662, 0.9953224663359319, 0.9954642097802976, 0.9956059532246633, 0.995747696669029, 0.9958894401133946, 0.9960311835577603, 0.996172927002126, 0.9963146704464917, 0.9964564138908574, 0.9965981573352231, 0.9967399007795887, 0.9968816442239544, 0.9970233876683201, 0.9971651311126858, 0.9973068745570515, 0.9974486180014172, 0.9975903614457828, 0.9977321048901485, 0.9978738483345142, 0.9980155917788799, 0.9981573352232456, 0.9982990786676113, 0.9984408221119769, 0.9985825655563426, 0.9987243090007083, 0.998866052445074, 0.9990077958894397, 0.9991495393338053, 0.999291282778171, 0.9994330262225367, 0.9995747696669024, 0.9997165131112681, 0.9998582565556338, 0.9999999999999994}, new char[]{'r', 'l', 'a', '.', ' ', 'p', 'P', 'u', 'g', 'd', 'm', 'n', '\'', 's', 'e', 'B', 'o', 'v', 'h', 't', ',', 'i', 'b', 'c', '-', 'y', ')', 'w', 'C', 'W', 'A', '6', 'f', 'x', 'D', 'O', 'I', 'H', 'S', '(', '3'}) );
        twoCharacterInputWithUnknownOutput.put("Ps", new ProportionalProbability( new double[]{0.9540816326530612, 0.9591836734693877, 0.9642857142857142, 0.9693877551020407, 0.9744897959183672, 0.9795918367346936, 0.9846938775510201, 0.9897959183673466, 0.9948979591836731, 0.9999999999999996}, new char[]{'r', 's', 'a', 'y', ' ', 'i', 'l', 't', 'd', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("QU", new ProportionalProbability( new double[]{0.975, 1.0}, new char[]{'U', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Pu", new ProportionalProbability( new double[]{0.9795709908069459, 0.9805924412665986, 0.9816138917262514, 0.9826353421859041, 0.9836567926455568, 0.9846782431052096, 0.9856996935648623, 0.986721144024515, 0.9877425944841678, 0.9887640449438205, 0.9897854954034733, 0.990806945863126, 0.9918283963227787, 0.9928498467824315, 0.9938712972420842, 0.994892747701737, 0.9959141981613897, 0.9969356486210424, 0.9979570990806952, 0.9989785495403479, 1.0000000000000007}, new char[]{'p', 'u', ' ', 'P', 'l', 'c', 'i', '&', 'o', 'a', 'f', 'h', 'G', 't', 'n', 'M', 'e', 'S', 'm', 'y', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Pv", new ProportionalProbability( new double[]{0.6666666666666666, 0.7777777777777777, 0.8888888888888888, 1.0}, new char[]{'s', 'i', 'v', ' '}) );
        twoCharacterInputWithUnknownOutput.put("QW", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'a', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Py", new ProportionalProbability( new double[]{0.9716981132075472, 0.9811320754716981, 0.9905660377358491, 1.0}, new char[]{' ', 'y', 'e', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("R<", new ProportionalProbability( new double[]{0.9902912621359223, 1.0}, new char[]{' ', '<'}) );
        twoCharacterInputWithUnknownOutput.put("Lö", new ProportionalProbability( new double[]{0.9705882352941176, 1.0}, new char[]{'ö', 'L'}) );
        twoCharacterInputWithUnknownOutput.put("R>", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'e', '>'}) );
        twoCharacterInputWithUnknownOutput.put("S ", new ProportionalProbability( new double[]{0.9725420726306466, 0.9734278122232064, 0.9743135518157662, 0.975199291408326, 0.9760850310008857, 0.9769707705934455, 0.9778565101860053, 0.978742249778565, 0.9796279893711248, 0.9805137289636846, 0.9813994685562444, 0.9822852081488042, 0.9831709477413639, 0.9840566873339237, 0.9849424269264835, 0.9858281665190433, 0.986713906111603, 0.9875996457041628, 0.9884853852967226, 0.9893711248892824, 0.9902568644818421, 0.9911426040744019, 0.9920283436669617, 0.9929140832595215, 0.9937998228520812, 0.994685562444641, 0.9955713020372008, 0.9964570416297606, 0.9973427812223203, 0.9982285208148801, 0.9991142604074399, 0.9999999999999997}, new char[]{' ', 't', 'm', 'y', 'p', 'o', 'n', 'a', 'i', 'r', 's', 'U', 'h', 'S', 'd', 'e', '-', 'g', 'u', 'M', 'W', 'I', 'l', 'b', 'C', '>', '9', 'L', 'O', 'F', 'E', '2'}) );
        twoCharacterInputWithUnknownOutput.put("R?", new ProportionalProbability( new double[]{0.75, 0.8125, 0.875, 0.9375, 1.0}, new char[]{'r', '?', 'o', 'T', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("RA", new ProportionalProbability( new double[]{0.9380952380952381, 0.9428571428571428, 0.9476190476190476, 0.9523809523809523, 0.9571428571428571, 0.9619047619047618, 0.9666666666666666, 0.9714285714285713, 0.976190476190476, 0.9809523809523808, 0.9857142857142855, 0.9904761904761903, 0.995238095238095, 0.9999999999999998}, new char[]{'A', '\"', ' ', 'i', 'm', 'e', 'n', 't', 'r', 'd', 'k', 'M', 'o', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("RB", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'B', 's'}) );
        twoCharacterInputWithUnknownOutput.put("RC", new ProportionalProbability( new double[]{0.9428571428571428, 0.9571428571428571, 0.9714285714285713, 0.9857142857142855, 0.9999999999999998}, new char[]{'C', ' ', 's', 'a', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("RD", new ProportionalProbability( new double[]{0.945054945054945, 0.956043956043956, 0.9670329670329669, 0.9780219780219779, 0.9890109890109888, 0.9999999999999998}, new char[]{'D', 'w', 'a', 'b', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("RE", new ProportionalProbability( new double[]{0.9526462395543176, 0.9554317548746518, 0.958217270194986, 0.9610027855153203, 0.9637883008356545, 0.9665738161559887, 0.9693593314763229, 0.9721448467966571, 0.9749303621169914, 0.9777158774373256, 0.9805013927576598, 0.983286908077994, 0.9860724233983282, 0.9888579387186625, 0.9916434540389967, 0.9944289693593309, 0.9972144846796651, 0.9999999999999993}, new char[]{'E', 'R', 'u', 'a', 'N', 'i', 'n', '\"', 'o', 'e', ' ', 'G', 't', 'r', 'b', 'f', 'B', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("RF", new ProportionalProbability( new double[]{0.8947368421052632, 0.9210526315789473, 0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'F', 'u', 't', 'n', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Má", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'m', 'á', ' '}) );
        twoCharacterInputWithUnknownOutput.put("S)", new ProportionalProbability( new double[]{0.9473684210526315, 0.9539473684210525, 0.9605263157894736, 0.9671052631578946, 0.9736842105263156, 0.9802631578947366, 0.9868421052631576, 0.9934210526315786, 0.9999999999999997}, new char[]{'t', ')', 'l', 'n', 's', 'r', ' ', 'u', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("RI", new ProportionalProbability( new double[]{0.9476744186046512, 0.9534883720930233, 0.9593023255813954, 0.9651162790697675, 0.9709302325581396, 0.9767441860465117, 0.9825581395348838, 0.9883720930232559, 0.994186046511628, 1.0}, new char[]{'I', '\"', 'a', ' ', 'f', 'N', 'T', 'H', 'w', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("Mä", new ProportionalProbability( new double[]{0.9642857142857143, 1.0}, new char[]{'M', 'ä'}) );
        twoCharacterInputWithUnknownOutput.put("S+", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'+', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put("S,", new ProportionalProbability( new double[]{0.9736842105263158, 0.9824561403508772, 0.9912280701754387, 1.0}, new char[]{',', 'e', 'i', ' '}) );
        twoCharacterInputWithUnknownOutput.put("RK", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'K', ' '}) );
        twoCharacterInputWithUnknownOutput.put("RL", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'g', 'L'}) );
        twoCharacterInputWithUnknownOutput.put("S.", new ProportionalProbability( new double[]{0.9808027923211169, 0.9825479930191972, 0.9842931937172774, 0.9860383944153577, 0.9877835951134379, 0.9895287958115182, 0.9912739965095985, 0.9930191972076787, 0.994764397905759, 0.9965095986038393, 0.9982547993019195, 0.9999999999999998}, new char[]{'.', 'b', 't', 'l', 'n', '-', 'C', 'r', ' ', 'e', 'u', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("RM", new ProportionalProbability( new double[]{0.9436619718309859, 0.9577464788732394, 0.9718309859154929, 0.9859154929577464, 0.9999999999999999}, new char[]{'M', 'd', ' ', 'N', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Mè", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'è', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("Mé", new ProportionalProbability( new double[]{0.9882352941176471, 1.0}, new char[]{'m', 'é'}) );
        twoCharacterInputWithUnknownOutput.put("RN", new ProportionalProbability( new double[]{0.9166666666666666, 0.9305555555555555, 0.9444444444444443, 0.9583333333333331, 0.972222222222222, 0.9861111111111108, 0.9999999999999997}, new char[]{'N', 'o', '.', 'M', 'i', 'E', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("S/", new ProportionalProbability( new double[]{0.9615384615384616, 1.0}, new char[]{'/', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("RO", new ProportionalProbability( new double[]{0.9330855018587361, 0.9368029739776952, 0.9405204460966543, 0.9442379182156134, 0.9479553903345725, 0.9516728624535317, 0.9553903345724908, 0.9591078066914499, 0.962825278810409, 0.9665427509293681, 0.9702602230483273, 0.9739776951672864, 0.9776951672862455, 0.9814126394052046, 0.9851301115241637, 0.9888475836431229, 0.992565055762082, 0.9962825278810411, 1.0000000000000002}, new char[]{'O', 'l', 'm', 'b', '\"', 'R', 'D', 'A', '3', ' ', 'i', 'f', 'Y', 'S', 'U', 'I', 'M', 'H', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Mê", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'ê', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("RP", new ProportionalProbability( new double[]{0.8409090909090909, 0.8522727272727273, 0.8636363636363636, 0.875, 0.8863636363636364, 0.8977272727272727, 0.9090909090909091, 0.9204545454545454, 0.9318181818181818, 0.9431818181818181, 0.9545454545454545, 0.9659090909090908, 0.9772727272727272, 0.9886363636363635, 0.9999999999999999}, new char[]{'b', '5', 'c', 'P', 'g', 'p', 'n', 'a', 's', 'm', 'i', 't', 'G', 'l', '='}) );
        twoCharacterInputWithUnknownOutput.put("RR", new ProportionalProbability( new double[]{0.9696969696969697, 1.0}, new char[]{'R', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Mí", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'m', ' ', 'í'}) );
        twoCharacterInputWithUnknownOutput.put("RS", new ProportionalProbability( new double[]{0.9361702127659575, 0.9468085106382979, 0.9574468085106382, 0.9680851063829786, 0.978723404255319, 0.9893617021276594, 0.9999999999999998}, new char[]{'S', ' ', 'H', 'a', 'm', '.', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("RT", new ProportionalProbability( new double[]{0.9053254437869822, 0.9112426035502958, 0.9171597633136095, 0.9230769230769231, 0.9289940828402368, 0.9349112426035504, 0.940828402366864, 0.9467455621301777, 0.9526627218934913, 0.958579881656805, 0.9644970414201186, 0.9704142011834322, 0.9763313609467459, 0.9822485207100595, 0.9881656804733732, 0.9940828402366868, 1.0000000000000004}, new char[]{'T', 'l', 'g', 'd', 'E', 'o', 'f', ' ', 'C', 'e', 'i', 't', 'O', 'm', 'a', 'L', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Qu", new ProportionalProbability( new double[]{0.9827242524916944, 0.9833887043189369, 0.9840531561461794, 0.9847176079734219, 0.9853820598006644, 0.9860465116279069, 0.9867109634551494, 0.9873754152823919, 0.9880398671096344, 0.9887043189368769, 0.9893687707641194, 0.990033222591362, 0.9906976744186045, 0.991362126245847, 0.9920265780730895, 0.992691029900332, 0.9933554817275745, 0.994019933554817, 0.9946843853820595, 0.995348837209302, 0.9960132890365445, 0.996677740863787, 0.9973421926910295, 0.998006644518272, 0.9986710963455145, 0.999335548172757, 0.9999999999999996}, new char[]{'u', ' ', '\'', 'Q', 'q', 'y', 'm', 'b', 'l', 't', 'i', 'e', 'a', 'r', 'h', 'n', 'f', '’', 'o', 'd', 'c', 's', 'p', 'g', 'w', 'A', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("S:", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{':', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("RY", new ProportionalProbability( new double[]{0.9782608695652174, 1.0}, new char[]{'Y', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("S<", new ProportionalProbability( new double[]{0.986784140969163, 0.9911894273127754, 0.9955947136563877, 1.0}, new char[]{' ', 'R', 's', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Mö", new ProportionalProbability( new double[]{0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'m', 'ö', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("S>", new ProportionalProbability( new double[]{0.9996099091293582, 0.9996140153490491, 0.9996181215687401, 0.999622227788431, 0.999626334008122, 0.9996304402278129, 0.9996345464475038, 0.9996386526671948, 0.9996427588868857, 0.9996468651065766, 0.9996509713262676, 0.9996550775459585, 0.9996591837656494, 0.9996632899853404, 0.9996673962050313, 0.9996715024247222, 0.9996756086444132, 0.9996797148641041, 0.999683821083795, 0.999687927303486, 0.9996920335231769, 0.9996961397428679, 0.9997002459625588, 0.9997043521822497, 0.9997084584019407, 0.9997125646216316, 0.9997166708413225, 0.9997207770610135, 0.9997248832807044, 0.9997289895003953, 0.9997330957200863, 0.9997372019397772, 0.9997413081594682, 0.9997454143791591, 0.99974952059885, 0.999753626818541, 0.9997577330382319, 0.9997618392579228, 0.9997659454776138, 0.9997700516973047, 0.9997741579169956, 0.9997782641366866, 0.9997823703563775, 0.9997864765760685, 0.9997905827957594, 0.9997946890154503, 0.9997987952351413, 0.9998029014548322, 0.9998070076745231, 0.9998111138942141, 0.999815220113905, 0.9998193263335959, 0.9998234325532869, 0.9998275387729778, 0.9998316449926687, 0.9998357512123597, 0.9998398574320506, 0.9998439636517416, 0.9998480698714325, 0.9998521760911234, 0.9998562823108144, 0.9998603885305053, 0.9998644947501962, 0.9998686009698872, 0.9998727071895781, 0.999876813409269, 0.99988091962896, 0.9998850258486509, 0.9998891320683418, 0.9998932382880328, 0.9998973445077237, 0.9999014507274147, 0.9999055569471056, 0.9999096631667965, 0.9999137693864875, 0.9999178756061784, 0.9999219818258693, 0.9999260880455603, 0.9999301942652512, 0.9999343004849421, 0.9999384067046331, 0.999942512924324, 0.999946619144015, 0.9999507253637059, 0.9999548315833968, 0.9999589378030878, 0.9999630440227787, 0.9999671502424696, 0.9999712564621606, 0.9999753626818515, 0.9999794689015424, 0.9999835751212334, 0.9999876813409243, 0.9999917875606152, 0.9999958937803062, 0.9999999999999971}, new char[]{' ', 'o', 'n', 'm', 'i', 'l', 'f', 't', 'c', 'r', 'e', 'x', 'a', 'h', 'F', '1', 'p', 'b', 's', '\"', 'd', '-', 'y', 'v', 'q', 'g', 'u', ',', 'w', '5', '6', 'T', 'O', '.', '3', '2', 'D', 'j', 'M', '0', '\'', 'k', 'S', '&', 'E', 'C', '+', '√', '¿', 'W', 'A', '(', 'L', '/', 'R', '∞', ')', '|', 'K', 'H', 'Δ', ';', 'B', 'I', '[', '*', 'G', 'P', '9', 'z', '•', '4', '=', 'Y', 'X', '8', '^', '²', 'V', ':', ']', 'ω', 'N', 'U', 'Z', 'ט', '→', 'é', 'ת', 'α', '7', 'í', 'J', 'מ', 'á', '∫'}) );
        twoCharacterInputWithUnknownOutput.put("T ", new ProportionalProbability( new double[]{0.9481361426256077, 0.9497568881685575, 0.9513776337115073, 0.9529983792544571, 0.9546191247974068, 0.9562398703403566, 0.9578606158833064, 0.9594813614262562, 0.961102106969206, 0.9627228525121557, 0.9643435980551055, 0.9659643435980553, 0.967585089141005, 0.9692058346839548, 0.9708265802269046, 0.9724473257698544, 0.9740680713128042, 0.9756888168557539, 0.9773095623987037, 0.9789303079416535, 0.9805510534846033, 0.982171799027553, 0.9837925445705028, 0.9854132901134526, 0.9870340356564024, 0.9886547811993521, 0.9902755267423019, 0.9918962722852517, 0.9935170178282015, 0.9951377633711512, 0.996758508914101, 0.9983792544570508, 1.0000000000000004}, new char[]{' ', 'e', 'b', 'a', 'o', 'i', 'r', 's', 'd', 'H', 't', 'g', 'y', 'm', 'R', 'c', 'L', 'p', '=', '.', 'h', 'n', 'F', 'x', '\"', 'f', 'A', 'T', ')', 'C', 'l', 'U', '¹'}) );
        twoCharacterInputWithUnknownOutput.put("S?", new ProportionalProbability( new double[]{0.9074074074074074, 0.9259259259259259, 0.9444444444444444, 0.9629629629629629, 0.9814814814814814, 0.9999999999999999}, new char[]{'?', 'e', 't', 'r', 'i', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("R^", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'^', 'j'}) );
        twoCharacterInputWithUnknownOutput.put("SA", new ProportionalProbability( new double[]{0.9484126984126984, 0.9523809523809523, 0.9563492063492063, 0.9603174603174602, 0.9642857142857142, 0.9682539682539681, 0.9722222222222221, 0.976190476190476, 0.98015873015873, 0.984126984126984, 0.9880952380952379, 0.9920634920634919, 0.9960317460317458, 0.9999999999999998}, new char[]{'A', 'S', '\"', 't', 'e', ' ', 'M', 'r', 's', 'a', 'c', 'd', 'y', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Ra", new ProportionalProbability( new double[]{0.9878921298844249, 0.988442487616951, 0.9889928453494771, 0.9895432030820032, 0.9900935608145293, 0.9906439185470554, 0.9911942762795815, 0.9917446340121076, 0.9922949917446336, 0.9928453494771597, 0.9933957072096858, 0.9939460649422119, 0.994496422674738, 0.9950467804072641, 0.9955971381397902, 0.9961474958723163, 0.9966978536048424, 0.9972482113373685, 0.9977985690698946, 0.9983489268024207, 0.9988992845349468, 0.9994496422674729, 0.999999999999999}, new char[]{'l', 'r', ' ', 'a', 'c', 'R', 'e', 't', 's', 'p', 'd', 'm', 'o', 'w', '%', 'I', 'n', 'i', 'Z', 'u', 'z', '(', '['}) );
        twoCharacterInputWithUnknownOutput.put("SB", new ProportionalProbability( new double[]{0.9302325581395349, 0.9534883720930233, 0.9767441860465117, 1.0}, new char[]{'B', 'h', 'l', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Mü", new ProportionalProbability( new double[]{0.9791666666666666, 0.9895833333333333, 0.9999999999999999}, new char[]{'m', 'ü', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("SC", new ProportionalProbability( new double[]{0.963855421686747, 0.9759036144578314, 0.9879518072289157, 1.0}, new char[]{'C', ',', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("SD", new ProportionalProbability( new double[]{0.972972972972973, 1.0}, new char[]{'D', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("SE", new ProportionalProbability( new double[]{0.9201680672268907, 0.9243697478991596, 0.9285714285714285, 0.9327731092436974, 0.9369747899159663, 0.9411764705882352, 0.9453781512605041, 0.949579831932773, 0.9537815126050418, 0.9579831932773107, 0.9621848739495796, 0.9663865546218485, 0.9705882352941174, 0.9747899159663863, 0.9789915966386552, 0.9831932773109241, 0.987394957983193, 0.9915966386554619, 0.9957983193277308, 0.9999999999999997}, new char[]{'E', 'a', 'e', 'O', 'A', ' ', 'l', 'N', '\'', ')', ',', 't', 'g', 'm', 'r', 'P', 'i', 'M', 'V', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Re", new ProportionalProbability( new double[]{0.9944275582573455, 0.9945542046605876, 0.9946808510638298, 0.9948074974670719, 0.994934143870314, 0.9950607902735561, 0.9951874366767982, 0.9953140830800403, 0.9954407294832824, 0.9955673758865246, 0.9956940222897667, 0.9958206686930088, 0.9959473150962509, 0.996073961499493, 0.9962006079027351, 0.9963272543059772, 0.9964539007092194, 0.9965805471124615, 0.9967071935157036, 0.9968338399189457, 0.9969604863221878, 0.9970871327254299, 0.997213779128672, 0.9973404255319142, 0.9974670719351563, 0.9975937183383984, 0.9977203647416405, 0.9978470111448826, 0.9979736575481247, 0.9981003039513668, 0.998226950354609, 0.9983535967578511, 0.9984802431610932, 0.9986068895643353, 0.9987335359675774, 0.9988601823708195, 0.9989868287740616, 0.9991134751773038, 0.9992401215805459, 0.999366767983788, 0.9994934143870301, 0.9996200607902722, 0.9997467071935143, 0.9998733535967564, 0.9999999999999986}, new char[]{'R', 'v', 'h', 'x', 'r', 'e', 'l', ' ', 'i', 'a', 'n', ')', 'c', 'm', '(', 'o', '/', 'd', 't', 's', 'b', 'V', 'S', 'g', '7', 'u', 'p', '_', '8', '5', 'f', 'T', '\'', 'w', 'D', 'A', 'k', 'q', '3', '!', 'z', 'P', 'y', 'I', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("SF", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'F', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("T)", new ProportionalProbability( new double[]{0.94375, 0.95, 0.9562499999999999, 0.9624999999999999, 0.9687499999999999, 0.9749999999999999, 0.9812499999999998, 0.9874999999999998, 0.9937499999999998, 0.9999999999999998}, new char[]{')', 'Δ', 'e', 'n', ' ', 'c', 'r', 'm', 'k', 't'}) );
        twoCharacterInputWithUnknownOutput.put("SH", new ProportionalProbability( new double[]{0.9264705882352942, 0.9338235294117647, 0.9411764705882353, 0.9485294117647058, 0.9558823529411764, 0.963235294117647, 0.9705882352941175, 0.9779411764705881, 0.9852941176470587, 0.9926470588235292, 0.9999999999999998}, new char[]{'e', 'm', 'H', 'f', 's', 'l', 'E', ' ', 'A', 'q', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Rh", new ProportionalProbability( new double[]{0.9585798816568047, 0.9644970414201184, 0.970414201183432, 0.9763313609467457, 0.9822485207100593, 0.9881656804733729, 0.9940828402366866, 1.0000000000000002}, new char[]{'h', 'g', 'k', 'u', 'r', 'a', 'm', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("SI", new ProportionalProbability( new double[]{0.9481865284974094, 0.9533678756476685, 0.9585492227979275, 0.9637305699481866, 0.9689119170984457, 0.9740932642487048, 0.9792746113989639, 0.984455958549223, 0.989637305699482, 0.9948186528497411, 1.0000000000000002}, new char[]{'I', 'A', 'n', 'a', 's', 't', 'h', 'e', 'F', 'u', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("Nä", new ProportionalProbability( new double[]{0.96875, 1.0}, new char[]{'ä', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Ri", new ProportionalProbability( new double[]{0.9816, 0.9824, 0.9832000000000001, 0.9840000000000001, 0.9848000000000001, 0.9856000000000001, 0.9864000000000002, 0.9872000000000002, 0.9880000000000002, 0.9888000000000002, 0.9896000000000003, 0.9904000000000003, 0.9912000000000003, 0.9920000000000003, 0.9928000000000003, 0.9936000000000004, 0.9944000000000004, 0.9952000000000004, 0.9960000000000004, 0.9968000000000005, 0.9976000000000005, 0.9984000000000005, 0.9992000000000005, 1.0000000000000004}, new char[]{' ', 'i', 'r', 'l', 't', 'n', 's', 'v', 'e', 'g', 'c', 'a', 'p', 'z', 'm', 'C', 'd', 'R', '8', 'h', 'o', 'w', 'u', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("T,", new ProportionalProbability( new double[]{0.9375, 0.96875, 1.0}, new char[]{',', 'p', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("SL", new ProportionalProbability( new double[]{0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'t', 'L', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("T-", new ProportionalProbability( new double[]{0.96875, 0.984375, 1.0}, new char[]{'m', '-', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("SM", new ProportionalProbability( new double[]{0.8780487804878049, 0.8902439024390244, 0.9024390243902439, 0.9146341463414634, 0.926829268292683, 0.9390243902439025, 0.951219512195122, 0.9634146341463415, 0.9756097560975611, 0.9878048780487806, 1.0}, new char[]{'g', 'o', 'n', 'M', 'S', 's', 'c', 'e', 'i', 'F', ' '}) );
        twoCharacterInputWithUnknownOutput.put("T.", new ProportionalProbability( new double[]{0.9411764705882353, 0.9558823529411764, 0.9705882352941175, 0.9852941176470587, 0.9999999999999998}, new char[]{'.', 's', ' ', 'i', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("Né", new ProportionalProbability( new double[]{0.9523809523809523, 1.0}, new char[]{'n', 'é'}) );
        twoCharacterInputWithUnknownOutput.put("SN", new ProportionalProbability( new double[]{0.9602649006622517, 0.9668874172185431, 0.9735099337748345, 0.980132450331126, 0.9867549668874174, 0.9933774834437088, 1.0000000000000002}, new char[]{'N', ' ', 'o', '.', 'a', '2', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("SO", new ProportionalProbability( new double[]{0.953307392996109, 0.9571984435797666, 0.9610894941634242, 0.9649805447470817, 0.9688715953307393, 0.9727626459143969, 0.9766536964980544, 0.980544747081712, 0.9844357976653696, 0.9883268482490272, 0.9922178988326847, 0.9961089494163423, 0.9999999999999999}, new char[]{'O', ' ', 'e', 'S', 'i', 'u', 'l', 'a', 'o', 't', 'E', 'h', '3'}) );
        twoCharacterInputWithUnknownOutput.put("Ro", new ProportionalProbability( new double[]{0.987093690248566, 0.9875717017208413, 0.9880497131931166, 0.988527724665392, 0.9890057361376673, 0.9894837476099426, 0.989961759082218, 0.9904397705544933, 0.9909177820267686, 0.9913957934990439, 0.9918738049713193, 0.9923518164435946, 0.9928298279158699, 0.9933078393881453, 0.9937858508604206, 0.9942638623326959, 0.9947418738049713, 0.9952198852772466, 0.9956978967495219, 0.9961759082217972, 0.9966539196940726, 0.9971319311663479, 0.9976099426386232, 0.9980879541108986, 0.9985659655831739, 0.9990439770554492, 0.9995219885277246, 0.9999999999999999}, new char[]{'o', ' ', 'e', 'l', 'r', 'u', 'h', 's', 'n', 'f', 'w', 'a', 'i', 'p', 'J', 'c', 'C', 't', 'd', 'R', '0', 'm', 'B', 'F', 'S', 'x', 'g', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("SP", new ProportionalProbability( new double[]{0.9021739130434783, 0.9130434782608696, 0.923913043478261, 0.9347826086956523, 0.9456521739130437, 0.956521739130435, 0.9673913043478264, 0.9782608695652177, 0.9891304347826091, 1.0000000000000004}, new char[]{'P', 't', 'A', 'q', 'E', ',', 'o', 'c', 'e', 's'}) );
        twoCharacterInputWithUnknownOutput.put("T1", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'1', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("SQ", new ProportionalProbability( new double[]{0.88, 0.92, 0.9600000000000001, 1.0}, new char[]{'n', 'y', 'Q', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("SR", new ProportionalProbability( new double[]{0.9618320610687023, 0.9694656488549619, 0.9770992366412214, 0.984732824427481, 0.9923664122137406, 1.0}, new char[]{'R', 'u', ' ', 'a', 's', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("SS", new ProportionalProbability( new double[]{0.9449152542372882, 0.9491525423728814, 0.9533898305084746, 0.9576271186440678, 0.961864406779661, 0.9661016949152542, 0.9703389830508474, 0.9745762711864406, 0.9788135593220338, 0.983050847457627, 0.9872881355932203, 0.9915254237288135, 0.9957627118644067, 0.9999999999999999}, new char[]{'S', 'i', 't', 'r', 'd', 'e', ' ', 'o', 's', '2', 'l', 'E', 'U', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Rs", new ProportionalProbability( new double[]{0.918918918918919, 0.945945945945946, 0.972972972972973, 1.0}, new char[]{'s', ' ', 'c', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("ST", new ProportionalProbability( new double[]{0.9491525423728814, 0.9525423728813559, 0.9559322033898304, 0.959322033898305, 0.9627118644067795, 0.966101694915254, 0.9694915254237285, 0.972881355932203, 0.9762711864406776, 0.9796610169491521, 0.9830508474576266, 0.9864406779661011, 0.9898305084745757, 0.9932203389830502, 0.9966101694915247, 0.9999999999999992}, new char[]{'T', 'H', 'h', 'm', 'a', ' ', 'E', 'r', 'e', 'f', 't', 'S', 'I', 'u', 'M', '²'}) );
        twoCharacterInputWithUnknownOutput.put("SU", new ProportionalProbability( new double[]{0.9361702127659575, 0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{'U', 'L', ' ', ','}) );
        twoCharacterInputWithUnknownOutput.put("Ru", new ProportionalProbability( new double[]{0.984884645982498, 0.9856801909307876, 0.9864757358790772, 0.9872712808273668, 0.9880668257756564, 0.988862370723946, 0.9896579156722356, 0.9904534606205252, 0.9912490055688148, 0.9920445505171044, 0.992840095465394, 0.9936356404136836, 0.9944311853619732, 0.9952267303102628, 0.9960222752585524, 0.996817820206842, 0.9976133651551315, 0.9984089101034211, 0.9992044550517107, 1.0000000000000002}, new char[]{'u', 'r', 'm', 'i', ' ', 'c', 'R', 'e', 'l', 'h', 's', 'd', 'o', 't', 'f', 'n', '3', 'a', 'b', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("SV", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{' ', 'V'}) );
        twoCharacterInputWithUnknownOutput.put("SW", new ProportionalProbability( new double[]{0.9117647058823529, 0.9411764705882353, 0.9705882352941176, 1.0}, new char[]{'W', 'l', ' ', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Rw", new ProportionalProbability( new double[]{0.9285714285714286, 0.9642857142857143, 1.0}, new char[]{'w', 'e', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Rx", new ProportionalProbability( new double[]{0.8837209302325582, 0.9069767441860466, 0.930232558139535, 0.9534883720930234, 0.9767441860465118, 1.0000000000000002}, new char[]{'r', ' ', 'p', 'x', 'a', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("T:", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'o', ':'}) );
        twoCharacterInputWithUnknownOutput.put("T<", new ProportionalProbability( new double[]{0.9912280701754386, 1.0}, new char[]{' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Nö", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'ö', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("T=", new ProportionalProbability( new double[]{0.95, 0.975, 1.0}, new char[]{'=', 'd', ' '}) );
        twoCharacterInputWithUnknownOutput.put("U ", new ProportionalProbability( new double[]{0.9627906976744186, 0.9674418604651163, 0.9720930232558139, 0.9767441860465116, 0.9813953488372092, 0.9860465116279069, 0.9906976744186046, 0.9953488372093022, 0.9999999999999999}, new char[]{' ', 't', '(', 'e', 'u', 's', 'r', 'U', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("T?", new ProportionalProbability( new double[]{0.8157894736842105, 0.8421052631578947, 0.8684210526315789, 0.894736842105263, 0.9210526315789472, 0.9473684210526314, 0.9736842105263156, 0.9999999999999998}, new char[]{'C', ' ', 'e', 'i', 'r', 't', '?', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("TA", new ProportionalProbability( new double[]{0.93048128342246, 0.9358288770053477, 0.9411764705882354, 0.9465240641711231, 0.9518716577540108, 0.9572192513368986, 0.9625668449197863, 0.967914438502674, 0.9732620320855617, 0.9786096256684494, 0.9839572192513372, 0.9893048128342249, 0.9946524064171126, 1.0000000000000002}, new char[]{'A', 'U', 'E', 'R', ',', ' ', 't', 'o', 'e', 'S', 'r', 'c', '\"', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("Sa", new ProportionalProbability( new double[]{0.9898049645390071, 0.9902482269503546, 0.9906914893617021, 0.9911347517730497, 0.9915780141843972, 0.9920212765957447, 0.9924645390070922, 0.9929078014184397, 0.9933510638297872, 0.9937943262411347, 0.9942375886524822, 0.9946808510638298, 0.9951241134751773, 0.9955673758865248, 0.9960106382978723, 0.9964539007092198, 0.9968971631205673, 0.9973404255319148, 0.9977836879432623, 0.9982269503546098, 0.9986702127659574, 0.9991134751773049, 0.9995567375886524, 0.9999999999999999}, new char[]{' ', 'a', 's', 'r', 'S', 'v', 'm', '&', 'e', 'l', 'P', 'i', 'p', 't', 'd', 'n', 'g', ',', 'u', '1', 'o', 'y', 'c', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("TC", new ProportionalProbability( new double[]{0.9130434782608695, 0.9239130434782609, 0.9347826086956522, 0.9456521739130436, 0.9565217391304349, 0.9673913043478263, 0.9782608695652176, 0.989130434782609, 1.0000000000000002}, new char[]{'C', ' ', 'u', 'k', 't', 'e', 'h', 's', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Sc", new ProportionalProbability( new double[]{0.99079754601227, 0.9912357581069238, 0.9916739702015775, 0.9921121822962313, 0.9925503943908851, 0.9929886064855389, 0.9934268185801927, 0.9938650306748464, 0.9943032427695002, 0.994741454864154, 0.9951796669588078, 0.9956178790534616, 0.9960560911481153, 0.9964943032427691, 0.9969325153374229, 0.9973707274320767, 0.9978089395267304, 0.9982471516213842, 0.998685363716038, 0.9991235758106918, 0.9995617879053456, 0.9999999999999993}, new char[]{'c', 'S', ' ', 'h', 's', 'b', 'm', ')', 'l', 'i', 'o', 'e', 't', 'M', 'w', 'n', 'p', 'd', 'r', 'a', 'v', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("TD", new ProportionalProbability( new double[]{0.8695652173913043, 0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'a', 'D', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("TE", new ProportionalProbability( new double[]{0.9302325581395349, 0.9341085271317829, 0.937984496124031, 0.9418604651162791, 0.9457364341085271, 0.9496124031007752, 0.9534883720930233, 0.9573643410852714, 0.9612403100775194, 0.9651162790697675, 0.9689922480620156, 0.9728682170542636, 0.9767441860465117, 0.9806201550387598, 0.9844961240310078, 0.9883720930232559, 0.992248062015504, 0.996124031007752, 1.0}, new char[]{'E', 'o', 'O', 't', 'i', 'A', ' ', 'G', 'c', 'a', 'k', 'T', 'D', 'N', 'H', 'I', 'F', 'S', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Se", new ProportionalProbability( new double[]{0.9927264195213514, 0.9929610511496949, 0.9931956827780384, 0.9934303144063819, 0.9936649460347253, 0.9938995776630688, 0.9941342092914123, 0.9943688409197557, 0.9946034725480992, 0.9948381041764427, 0.9950727358047862, 0.9953073674331296, 0.9955419990614731, 0.9957766306898166, 0.9960112623181601, 0.9962458939465035, 0.996480525574847, 0.9967151572031905, 0.996949788831534, 0.9971844204598774, 0.9974190520882209, 0.9976536837165644, 0.9978883153449079, 0.9981229469732513, 0.9983575786015948, 0.9985922102299383, 0.9988268418582817, 0.9990614734866252, 0.9992961051149687, 0.9995307367433122, 0.9997653683716556, 0.9999999999999991}, new char[]{'e', 'i', 's', 'S', 'm', 't', 'n', 'l', ' ', 'h', 'c', 'u', 'W', 'd', '3', 'a', 'b', 'R', 'T', 'J', 'g', 'o', 'w', ':', ',', 'r', 'C', 'q', '-', 'y', 'f', '5'}) );
        twoCharacterInputWithUnknownOutput.put("TG", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'G', ' '}) );
        twoCharacterInputWithUnknownOutput.put("TH", new ProportionalProbability( new double[]{0.9153846153846154, 0.923076923076923, 0.9307692307692307, 0.9384615384615383, 0.946153846153846, 0.9538461538461537, 0.9615384615384613, 0.969230769230769, 0.9769230769230767, 0.9846153846153843, 0.992307692307692, 0.9999999999999997}, new char[]{'H', 'N', 'n', 'e', 'O', 'L', 'F', 'R', ' ', 'T', 'E', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("Sh", new ProportionalProbability( new double[]{0.986144578313253, 0.9867469879518072, 0.9873493975903613, 0.9879518072289155, 0.9885542168674697, 0.9891566265060239, 0.989759036144578, 0.9903614457831322, 0.9909638554216864, 0.9915662650602406, 0.9921686746987948, 0.992771084337349, 0.9933734939759031, 0.9939759036144573, 0.9945783132530115, 0.9951807228915657, 0.9957831325301199, 0.996385542168674, 0.9969879518072282, 0.9975903614457824, 0.9981927710843366, 0.9987951807228908, 0.9993975903614449, 0.9999999999999991}, new char[]{'m', ' ', 'l', 'h', 't', 'e', 'a', 'S', 'B', 's', 'r', 'p', 'u', 'd', 'o', 'i', '(', 'w', '&', 'n', '1', 'f', 'v', '9'}) );
        twoCharacterInputWithUnknownOutput.put("TI", new ProportionalProbability( new double[]{0.96, 0.9633333333333333, 0.9666666666666666, 0.9699999999999999, 0.9733333333333332, 0.9766666666666665, 0.9799999999999998, 0.9833333333333331, 0.9866666666666664, 0.9899999999999997, 0.993333333333333, 0.9966666666666663, 0.9999999999999996}, new char[]{'I', ' ', 'N', 'n', 'e', 'v', 'a', 'h', 'f', 's', 'F', 'c', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Si", new ProportionalProbability( new double[]{0.9889643463497453, 0.9893887945670627, 0.9898132427843802, 0.9902376910016977, 0.9906621392190151, 0.9910865874363326, 0.9915110356536501, 0.9919354838709675, 0.992359932088285, 0.9927843803056025, 0.9932088285229199, 0.9936332767402374, 0.9940577249575548, 0.9944821731748723, 0.9949066213921898, 0.9953310696095072, 0.9957555178268247, 0.9961799660441422, 0.9966044142614596, 0.9970288624787771, 0.9974533106960946, 0.997877758913412, 0.9983022071307295, 0.9987266553480469, 0.9991511035653644, 0.9995755517826819, 0.9999999999999993}, new char[]{'n', ' ', 's', 'i', 'd', 'm', 'l', 'b', 'p', 'c', 'r', '.', '/', 'C', 'a', 'S', ']', 'B', 'o', 'h', 'f', 'G', 'e', ',', 'u', 't', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("U,", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{',', ' '}) );
        twoCharacterInputWithUnknownOutput.put("U-", new ProportionalProbability( new double[]{0.9333333333333333, 0.9555555555555556, 0.9777777777777779, 1.0}, new char[]{'-', '3', 'i', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Sk", new ProportionalProbability( new double[]{0.9692307692307692, 0.9723076923076923, 0.9753846153846154, 0.9784615384615385, 0.9815384615384616, 0.9846153846153847, 0.9876923076923078, 0.9907692307692308, 0.9938461538461539, 0.996923076923077, 1.0}, new char[]{'k', 'l', 'S', 'u', ' ', 't', 's', 'g', 'i', 'm', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Sl", new ProportionalProbability( new double[]{0.9714285714285714, 0.9738095238095238, 0.9761904761904762, 0.9785714285714285, 0.9809523809523809, 0.9833333333333333, 0.9857142857142857, 0.988095238095238, 0.9904761904761904, 0.9928571428571428, 0.9952380952380951, 0.9976190476190475, 0.9999999999999999}, new char[]{'l', ' ', 'o', 'i', 'a', 's', 'n', 'm', 'c', 'h', 'w', 't', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("U.", new ProportionalProbability( new double[]{0.9780876494023905, 0.9800796812749004, 0.9820717131474104, 0.9840637450199203, 0.9860557768924303, 0.9880478087649402, 0.9900398406374502, 0.9920318725099602, 0.9940239043824701, 0.9960159362549801, 0.99800796812749, 1.0}, new char[]{'.', 'r', 'd', ' ', 'p', 'm', 's', 'a', 'U', '-', 't', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("TM", new ProportionalProbability( new double[]{0.9253731343283582, 0.9402985074626866, 0.955223880597015, 0.9701492537313434, 0.9850746268656718, 1.0000000000000002}, new char[]{'M', 'i', 'T', 't', 'a', '4'}) );
        twoCharacterInputWithUnknownOutput.put("Sm", new ProportionalProbability( new double[]{0.9626373626373627, 0.9648351648351648, 0.967032967032967, 0.9692307692307692, 0.9714285714285714, 0.9736263736263736, 0.9758241758241758, 0.978021978021978, 0.9802197802197802, 0.9824175824175824, 0.9846153846153846, 0.9868131868131867, 0.9890109890109889, 0.9912087912087911, 0.9934065934065933, 0.9956043956043955, 0.9978021978021977, 0.9999999999999999}, new char[]{'m', 'b', ' ', 'r', 't', 'c', 'i', ')', 'l', 'o', 'e', 'k', 'a', 's', 'w', 'P', 'n', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("TN", new ProportionalProbability( new double[]{0.9615384615384616, 1.0}, new char[]{'N', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Sn", new ProportionalProbability( new double[]{0.9502762430939227, 0.9558011049723757, 0.9613259668508287, 0.9668508287292817, 0.9723756906077348, 0.9779005524861878, 0.9834254143646408, 0.9889502762430938, 0.9944751381215469, 0.9999999999999999}, new char[]{'c', 'n', ' ', 'l', 'o', 'u', 's', 'i', 'm', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("TO", new ProportionalProbability( new double[]{0.9611111111111111, 0.9666666666666667, 0.9722222222222222, 0.9777777777777777, 0.9833333333333333, 0.9888888888888888, 0.9944444444444444, 0.9999999999999999}, new char[]{'O', '(', ' ', 'M', 'n', 'a', 'U', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("So", new ProportionalProbability( new double[]{0.9917475728155339, 0.9919902912621359, 0.9922330097087378, 0.9924757281553398, 0.9927184466019418, 0.9929611650485437, 0.9932038834951457, 0.9934466019417476, 0.9936893203883496, 0.9939320388349515, 0.9941747572815535, 0.9944174757281554, 0.9946601941747574, 0.9949029126213593, 0.9951456310679613, 0.9953883495145632, 0.9956310679611652, 0.9958737864077671, 0.9961165048543691, 0.996359223300971, 0.996601941747573, 0.996844660194175, 0.9970873786407769, 0.9973300970873789, 0.9975728155339808, 0.9978155339805828, 0.9980582524271847, 0.9983009708737867, 0.9985436893203886, 0.9987864077669906, 0.9990291262135925, 0.9992718446601945, 0.9995145631067964, 0.9997572815533984, 1.0000000000000002}, new char[]{'l', 'o', ' ', 'p', 'i', 'a', 'S', 'm', 's', 't', 'n', 'f', 'b', 'e', 'r', 'h', 'u', '.', ',', 'O', 'y', 'd', '-', 'w', 'c', 'W', ':', 'g', 'z', '?', 'C', '=', 'L', '(', '0'}) );
        twoCharacterInputWithUnknownOutput.put("TP", new ProportionalProbability( new double[]{0.8762886597938144, 0.8865979381443299, 0.8969072164948453, 0.9072164948453607, 0.9175257731958761, 0.9278350515463916, 0.938144329896907, 0.9484536082474224, 0.9587628865979378, 0.9690721649484533, 0.9793814432989687, 0.9896907216494841, 0.9999999999999996}, new char[]{'P', ' ', 'a', 'p', 'o', 'l', 's', 'c', 'n', 'A', 't', 'R', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Sp", new ProportionalProbability( new double[]{0.9903926482873852, 0.9908103592314119, 0.9912280701754387, 0.9916457811194654, 0.9920634920634922, 0.992481203007519, 0.9928989139515457, 0.9933166248955725, 0.9937343358395992, 0.994152046783626, 0.9945697577276528, 0.9949874686716795, 0.9954051796157063, 0.995822890559733, 0.9962406015037598, 0.9966583124477866, 0.9970760233918133, 0.9974937343358401, 0.9979114452798669, 0.9983291562238936, 0.9987468671679204, 0.9991645781119471, 0.9995822890559739, 1.0000000000000007}, new char[]{'p', 'm', ' ', 'a', 'S', 'l', 'e', 's', 'f', 'r', 'i', 'M', 'n', 'u', 'y', 'v', 'd', 'A', 't', 'c', 'x', 'o', '.', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("TQ", new ProportionalProbability( new double[]{0.8181818181818182, 0.9090909090909092, 1.0}, new char[]{'Q', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("TR", new ProportionalProbability( new double[]{0.9513888888888888, 0.9583333333333333, 0.9652777777777777, 0.9722222222222221, 0.9791666666666665, 0.9861111111111109, 0.9930555555555554, 0.9999999999999998}, new char[]{'R', ' ', '.', '/', 'h', 'c', 'i', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Sq", new ProportionalProbability( new double[]{0.9380530973451328, 0.9469026548672567, 0.9557522123893806, 0.9646017699115045, 0.9734513274336284, 0.9823008849557523, 0.9911504424778762, 1.0}, new char[]{'q', ' ', 's', 'r', 'i', 'e', 'm', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("TS", new ProportionalProbability( new double[]{0.9310344827586207, 0.9425287356321839, 0.9540229885057471, 0.9655172413793103, 0.9770114942528735, 0.9885057471264367, 0.9999999999999999}, new char[]{'S', 'o', ' ', 'R', 'f', 'e', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("Sr", new ProportionalProbability( new double[]{0.9772727272727273, 1.0}, new char[]{'S', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("TT", new ProportionalProbability( new double[]{0.9354838709677419, 0.9516129032258064, 0.9677419354838709, 0.9838709677419354, 0.9999999999999999}, new char[]{'o', 'T', 'g', 'e', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("St", new ProportionalProbability( new double[]{0.9938421649651596, 0.9940042132555502, 0.9941662615459408, 0.9943283098363314, 0.9944903581267219, 0.9946524064171125, 0.9948144547075031, 0.9949765029978936, 0.9951385512882842, 0.9953005995786748, 0.9954626478690654, 0.9956246961594559, 0.9957867444498465, 0.9959487927402371, 0.9961108410306276, 0.9962728893210182, 0.9964349376114088, 0.9965969859017993, 0.9967590341921899, 0.9969210824825805, 0.9970831307729711, 0.9972451790633616, 0.9974072273537522, 0.9975692756441428, 0.9977313239345333, 0.9978933722249239, 0.9980554205153145, 0.998217468805705, 0.9983795170960956, 0.9985415653864862, 0.9987036136768768, 0.9988656619672673, 0.9990277102576579, 0.9991897585480485, 0.999351806838439, 0.9995138551288296, 0.9996759034192202, 0.9998379517096108, 1.0000000000000013}, new char[]{' ', 't', 'S', 'o', 'l', 'c', 'm', 'h', 'n', 'r', 'f', 's', 'b', 'e', 'd', 'a', 'u', ':', 'i', 'p', 'k', '3', 'B', ',', 'I', 'g', 'x', 'D', 'C', 'v', 'w', 'P', 'y', '-', 'M', 'T', '(', 'A', 'Y'}) );
        twoCharacterInputWithUnknownOutput.put("TU", new ProportionalProbability( new double[]{0.8857142857142857, 0.8999999999999999, 0.9142857142857141, 0.9285714285714284, 0.9428571428571426, 0.9571428571428569, 0.9714285714285711, 0.9857142857142853, 0.9999999999999996}, new char[]{'U', 'O', '\"', 'T', 'y', ' ', 'I', 'o', ':'}) );
        twoCharacterInputWithUnknownOutput.put("Su", new ProportionalProbability( new double[]{0.9887247278382582, 0.9891135303265941, 0.98950233281493, 0.989891135303266, 0.990279937791602, 0.9906687402799379, 0.9910575427682738, 0.9914463452566098, 0.9918351477449457, 0.9922239502332817, 0.9926127527216176, 0.9930015552099536, 0.9933903576982895, 0.9937791601866255, 0.9941679626749614, 0.9945567651632974, 0.9949455676516333, 0.9953343701399693, 0.9957231726283052, 0.9961119751166412, 0.9965007776049771, 0.9968895800933131, 0.997278382581649, 0.997667185069985, 0.9980559875583209, 0.9984447900466569, 0.9988335925349928, 0.9992223950233288, 0.9996111975116647, 1.0000000000000007}, new char[]{'u', ' ', 's', 'n', 'l', 'm', 'r', 'e', 'a', 'o', 'h', 't', 'i', 'S', 'A', 'f', 'c', 'P', 'j', 'L', 'w', ':', 'p', ',', 'C', 'v', 'd', '=', '.', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("TV", new ProportionalProbability( new double[]{0.9768339768339769, 0.9806949806949807, 0.9845559845559846, 0.9884169884169884, 0.9922779922779923, 0.9961389961389961, 1.0}, new char[]{'V', 'e', 'u', 'h', 't', 's', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("TW", new ProportionalProbability( new double[]{0.9375, 0.96875, 1.0}, new char[]{'W', 'k', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Sw", new ProportionalProbability( new double[]{0.9785202863961814, 0.9809069212410502, 0.983293556085919, 0.9856801909307877, 0.9880668257756565, 0.9904534606205253, 0.9928400954653941, 0.9952267303102629, 0.9976133651551317, 1.0000000000000004}, new char[]{'l', 's', 'w', ' ', 'k', 'm', 'o', 'u', 'e', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("TY", new ProportionalProbability( new double[]{0.9230769230769231, 0.9423076923076924, 0.9615384615384617, 0.980769230769231, 1.0000000000000002}, new char[]{'Y', 'I', 'S', 'E', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("Sy", new ProportionalProbability( new double[]{0.976303317535545, 0.9778830963665087, 0.9794628751974724, 0.9810426540284362, 0.9826224328593999, 0.9842022116903636, 0.9857819905213273, 0.987361769352291, 0.9889415481832547, 0.9905213270142185, 0.9921011058451822, 0.9936808846761459, 0.9952606635071096, 0.9968404423380733, 0.9984202211690371, 1.0000000000000007}, new char[]{'y', ' ', 's', 't', 'f', 'R', 'L', 'c', 'p', 'm', 'd', 'a', 'r', 'e', ')', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("U<", new ProportionalProbability( new double[]{0.9655172413793104, 1.0}, new char[]{' ', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("U?", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'r', '?', ' '}) );
        twoCharacterInputWithUnknownOutput.put("V ", new ProportionalProbability( new double[]{0.9637305699481865, 0.966321243523316, 0.9689119170984456, 0.9715025906735751, 0.9740932642487047, 0.9766839378238342, 0.9792746113989638, 0.9818652849740933, 0.9844559585492229, 0.9870466321243524, 0.9896373056994819, 0.9922279792746115, 0.994818652849741, 0.9974093264248706, 1.0}, new char[]{'e', ' ', 't', 'p', 's', '-', 'd', 'r', 'c', 'a', 'f', 'h', 'y', 'V', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Où", new ProportionalProbability( new double[]{0.9, 0.9500000000000001, 1.0}, new char[]{'ù', 'o', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("T_", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'_', 'n', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("UA", new ProportionalProbability( new double[]{0.9027777777777778, 0.9166666666666666, 0.9305555555555555, 0.9444444444444443, 0.9583333333333331, 0.972222222222222, 0.9861111111111108, 0.9999999999999997}, new char[]{'C', 'A', 'r', 'd', 'I', 'e', ' ', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("Ta", new ProportionalProbability( new double[]{0.9882100750267953, 0.9887459807073955, 0.9892818863879957, 0.989817792068596, 0.9903536977491962, 0.9908896034297965, 0.9914255091103967, 0.991961414790997, 0.9924973204715972, 0.9930332261521975, 0.9935691318327977, 0.994105037513398, 0.9946409431939982, 0.9951768488745985, 0.9957127545551987, 0.9962486602357989, 0.9967845659163992, 0.9973204715969994, 0.9978563772775997, 0.9983922829581999, 0.9989281886388002, 0.9994640943194004, 1.0000000000000007}, new char[]{'a', 't', 'm', ' ', 'l', 'T', 'e', 'd', '.', 'C', 'c', 'n', 'p', 'P', 'u', 'i', 's', 'o', 'g', 'f', 'w', '+', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("UB", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'B', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("Tb", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'b', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("UC", new ProportionalProbability( new double[]{0.855072463768116, 0.8695652173913043, 0.8840579710144927, 0.898550724637681, 0.9130434782608694, 0.9275362318840578, 0.9420289855072461, 0.9565217391304345, 0.9710144927536228, 0.9855072463768112, 0.9999999999999996}, new char[]{'C', 'r', 'g', 'm', ' ', 'D', 'h', 's', 'd', 't', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("UD", new ProportionalProbability( new double[]{0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{'D', 's', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("UE", new ProportionalProbability( new double[]{0.9705882352941176, 1.0}, new char[]{' ', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Te", new ProportionalProbability( new double[]{0.9893575088687426, 0.9897516752069373, 0.990145841545132, 0.9905400078833266, 0.9909341742215213, 0.991328340559716, 0.9917225068979106, 0.9921166732361053, 0.9925108395743, 0.9929050059124946, 0.9932991722506893, 0.993693338588884, 0.9940875049270786, 0.9944816712652733, 0.994875837603468, 0.9952700039416627, 0.9956641702798573, 0.996058336618052, 0.9964525029562467, 0.9968466692944413, 0.997240835632636, 0.9976350019708307, 0.9980291683090253, 0.99842333464722, 0.9988175009854147, 0.9992116673236093, 0.999605833661804, 0.9999999999999987}, new char[]{'e', 'l', ' ', 't', 'r', 'b', 'T', 'h', 'm', 'o', 'L', 'w', 'c', 'n', 'i', 'u', ',', 'f', 'a', ')', 'p', 'd', 'S', 'y', 'E', 's', '\'', '('}) );
        twoCharacterInputWithUnknownOutput.put("UF", new ProportionalProbability( new double[]{0.8235294117647058, 0.8823529411764706, 0.9411764705882353, 1.0}, new char[]{'F', 'w', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Pá", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'p', 'á'}) );
        twoCharacterInputWithUnknownOutput.put("V\'", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'a', '\''}) );
        twoCharacterInputWithUnknownOutput.put("UG", new ProportionalProbability( new double[]{0.9130434782608695, 0.9565217391304347, 0.9999999999999999}, new char[]{'G', 'd', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("Pâ", new ProportionalProbability( new double[]{0.90625, 0.9375, 0.96875, 1.0}, new char[]{'p', 'â', 'P', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("V)", new ProportionalProbability( new double[]{0.9588235294117647, 0.9647058823529412, 0.9705882352941176, 0.9764705882352941, 0.9823529411764705, 0.988235294117647, 0.9941176470588234, 0.9999999999999999}, new char[]{')', 'a', 't', '/', ' ', 'p', 'l', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Th", new ProportionalProbability( new double[]{0.9981717011128776, 0.9982114467408585, 0.9982511923688394, 0.9982909379968203, 0.9983306836248013, 0.9983704292527822, 0.9984101748807631, 0.998449920508744, 0.998489666136725, 0.9985294117647059, 0.9985691573926868, 0.9986089030206677, 0.9986486486486487, 0.9986883942766296, 0.9987281399046105, 0.9987678855325914, 0.9988076311605724, 0.9988473767885533, 0.9988871224165342, 0.9989268680445151, 0.9989666136724961, 0.999006359300477, 0.9990461049284579, 0.9990858505564388, 0.9991255961844198, 0.9991653418124007, 0.9992050874403816, 0.9992448330683625, 0.9992845786963435, 0.9993243243243244, 0.9993640699523053, 0.9994038155802862, 0.9994435612082672, 0.9994833068362481, 0.999523052464229, 0.9995627980922099, 0.9996025437201909, 0.9996422893481718, 0.9996820349761527, 0.9997217806041336, 0.9997615262321146, 0.9998012718600955, 0.9998410174880764, 0.9998807631160573, 0.9999205087440383, 0.9999602543720192, 1.0}, new char[]{'h', 'c', 's', ' ', 'b', 't', 'u', 'n', 'a', 'q', 'l', 'f', 'w', 'o', 'r', 'i', 'e', 'g', 'p', 'd', 'v', 'm', 'y', 'E', 'T', '4', '-', 'B', 'k', '.', 'A', '\"', 'S', 'x', 'z', ':', 'C', 'W', 'P', 'L', ',', '…', 'D', 'J', 'I', 'V', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("Pä", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'P', 'ä'}) );
        twoCharacterInputWithUnknownOutput.put("UI", new ProportionalProbability( new double[]{0.8666666666666667, 0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'\"', 'E', 'I', 'F', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("Ti", new ProportionalProbability( new double[]{0.9793174767321613, 0.9803516028955532, 0.9813857290589452, 0.9824198552223371, 0.983453981385729, 0.984488107549121, 0.9855222337125129, 0.9865563598759048, 0.9875904860392968, 0.9886246122026887, 0.9896587383660806, 0.9906928645294726, 0.9917269906928645, 0.9927611168562565, 0.9937952430196484, 0.9948293691830403, 0.9958634953464323, 0.9968976215098242, 0.9979317476732161, 0.9989658738366081, 1.0}, new char[]{'i', 't', 'u', ' ', 'T', 's', 'p', 'm', 'd', 'l', 'N', 'e', 'n', 'r', 'a', 'o', 'h', 'x', 'y', ')', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("V+", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'+', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("UK", new ProportionalProbability( new double[]{0.9439252336448598, 0.9485981308411214, 0.9532710280373831, 0.9579439252336447, 0.9626168224299063, 0.9672897196261679, 0.9719626168224296, 0.9766355140186912, 0.9813084112149528, 0.9859813084112145, 0.9906542056074761, 0.9953271028037377, 0.9999999999999993}, new char[]{'K', 'e', 'g', 'h', 's', ' ', 'i', 't', 'l', 'm', 'f', '(', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Tj", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'y', 'j'}) );
        twoCharacterInputWithUnknownOutput.put("UL", new ProportionalProbability( new double[]{0.9661016949152542, 0.983050847457627, 0.9999999999999999}, new char[]{'L', 'l', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("V-", new ProportionalProbability( new double[]{0.9310344827586207, 0.9655172413793103, 0.9999999999999999}, new char[]{'i', '-', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("V.", new ProportionalProbability( new double[]{0.8333333333333334, 0.8611111111111112, 0.888888888888889, 0.9166666666666667, 0.9444444444444445, 0.9722222222222223, 1.0}, new char[]{'.', 'V', 'n', 'p', 'r', '0', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("UM", new ProportionalProbability( new double[]{0.8837209302325582, 0.9069767441860466, 0.930232558139535, 0.9534883720930234, 0.9767441860465118, 1.0000000000000002}, new char[]{'M', 'U', 'L', 'r', 'S', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("UN", new ProportionalProbability( new double[]{0.9699248120300752, 0.9774436090225564, 0.9849624060150377, 0.992481203007519, 1.0000000000000002}, new char[]{'N', ' ', 'e', 'y', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("Pé", new ProportionalProbability( new double[]{0.9629629629629629, 1.0}, new char[]{'p', 'é'}) );
        twoCharacterInputWithUnknownOutput.put("V/", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'/', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Pê", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'ê', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("To", new ProportionalProbability( new double[]{0.996565540927304, 0.9966609425682122, 0.9967563442091205, 0.9968517458500288, 0.996947147490937, 0.9970425491318453, 0.9971379507727536, 0.9972333524136618, 0.9973287540545701, 0.9974241556954784, 0.9975195573363866, 0.9976149589772949, 0.9977103606182032, 0.9978057622591114, 0.9979011639000197, 0.997996565540928, 0.9980919671818362, 0.9981873688227445, 0.9982827704636528, 0.998378172104561, 0.9984735737454693, 0.9985689753863776, 0.9986643770272858, 0.9987597786681941, 0.9988551803091024, 0.9989505819500106, 0.9990459835909189, 0.9991413852318272, 0.9992367868727354, 0.9993321885136437, 0.999427590154552, 0.9995229917954602, 0.9996183934363685, 0.9997137950772768, 0.999809196718185, 0.9999045983590933, 1.0000000000000016}, new char[]{'o', ' ', 'k', 'l', 'n', 's', 'a', 'e', 't', 'm', ',', 'r', 'u', 'T', 'd', 'g', 'f', '(', 'c', 'i', 'G', 'p', 'F', 'b', '.', 'h', 'w', 'A', '3', 'י', 'z', 'J', 'v', 'y', 'L', '…', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("UP", new ProportionalProbability( new double[]{0.8846153846153846, 0.923076923076923, 0.9615384615384615, 0.9999999999999999}, new char[]{'P', 'c', 'e', 's'}) );
        twoCharacterInputWithUnknownOutput.put("V1", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'1', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("UR", new ProportionalProbability( new double[]{0.9325842696629213, 0.9438202247191011, 0.9550561797752809, 0.9662921348314607, 0.9775280898876405, 0.9887640449438203, 1.0}, new char[]{'\"', 'R', ' ', 'N', 'C', 'T', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("Nī", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{' ', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Tr", new ProportionalProbability( new double[]{0.9896494156928214, 0.989983305509182, 0.9903171953255426, 0.9906510851419033, 0.9909849749582639, 0.9913188647746245, 0.9916527545909851, 0.9919866444073457, 0.9923205342237064, 0.992654424040067, 0.9929883138564276, 0.9933222036727882, 0.9936560934891489, 0.9939899833055095, 0.9943238731218701, 0.9946577629382307, 0.9949916527545913, 0.995325542570952, 0.9956594323873126, 0.9959933222036732, 0.9963272120200338, 0.9966611018363944, 0.9969949916527551, 0.9973288814691157, 0.9976627712854763, 0.9979966611018369, 0.9983305509181976, 0.9986644407345582, 0.9989983305509188, 0.9993322203672794, 0.99966611018364, 1.0000000000000007}, new char[]{'o', 'r', ' ', 't', 'm', 'f', 'n', 'l', 's', 'h', 'T', 'M', 'a', 'P', 'c', 'G', 'N', 'e', 'd', 'w', 'S', 'i', ',', 'y', '&', 'u', 'g', 'p', ':', 'B', 'R', '/'}) );
        twoCharacterInputWithUnknownOutput.put("US", new ProportionalProbability( new double[]{0.978110599078341, 0.9792626728110598, 0.9804147465437787, 0.9815668202764976, 0.9827188940092164, 0.9838709677419353, 0.9850230414746541, 0.986175115207373, 0.9873271889400919, 0.9884792626728107, 0.9896313364055296, 0.9907834101382484, 0.9919354838709673, 0.9930875576036862, 0.994239631336405, 0.9953917050691239, 0.9965437788018428, 0.9976958525345616, 0.9988479262672805, 0.9999999999999993}, new char[]{'S', 'u', 'U', ' ', 'c', 'e', 'k', 's', 'a', '\"', 'h', 'E', ')', '1', 'm', 'o', 'i', 'r', 'w', 't'}) );
        twoCharacterInputWithUnknownOutput.put("UT", new ProportionalProbability( new double[]{0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1.0}, new char[]{'r', 'T', ' ', 'o', 'e', 'm', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Ts", new ProportionalProbability( new double[]{0.9859154929577465, 1.0}, new char[]{'s', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Tt", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'e', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Tu", new ProportionalProbability( new double[]{0.9710669077757685, 0.972875226039783, 0.9746835443037976, 0.9764918625678121, 0.9783001808318266, 0.9801084990958411, 0.9819168173598556, 0.9837251356238701, 0.9855334538878846, 0.9873417721518991, 0.9891500904159136, 0.9909584086799281, 0.9927667269439426, 0.9945750452079571, 0.9963833634719717, 0.9981916817359862, 1.0000000000000007}, new char[]{'a', 'u', 'e', 'T', ' ', 't', 'o', 'n', 'i', 'm', '2', 'l', 'd', 'B', 'b', '-', ','}) );
        twoCharacterInputWithUnknownOutput.put("UV", new ProportionalProbability( new double[]{0.8478260869565217, 0.8695652173913043, 0.8913043478260869, 0.9130434782608695, 0.9347826086956521, 0.9565217391304347, 0.9782608695652173, 0.9999999999999999}, new char[]{'V', 'o', 's', 'l', 'i', 'e', 'k', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Tw", new ProportionalProbability( new double[]{0.970873786407767, 0.9733009708737864, 0.9757281553398058, 0.9781553398058253, 0.9805825242718447, 0.9830097087378641, 0.9854368932038835, 0.9878640776699029, 0.9902912621359223, 0.9927184466019418, 0.9951456310679612, 0.9975728155339806, 1.0}, new char[]{'w', ' ', 's', 'n', 'o', 'M', 'g', 'e', 'm', 'd', 'l', 'r', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("Pó", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'ó', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("Ty", new ProportionalProbability( new double[]{0.954954954954955, 0.957957957957958, 0.9609609609609611, 0.9639639639639641, 0.9669669669669672, 0.9699699699699702, 0.9729729729729732, 0.9759759759759763, 0.9789789789789793, 0.9819819819819824, 0.9849849849849854, 0.9879879879879885, 0.9909909909909915, 0.9939939939939946, 0.9969969969969976, 1.0000000000000007}, new char[]{'y', ' ', 'l', 'g', 'T', 'm', 't', '\"', 'r', 'h', 'c', 'i', 'D', 'o', 'p', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("V=", new ProportionalProbability( new double[]{0.967032967032967, 0.978021978021978, 0.9890109890109889, 0.9999999999999999}, new char[]{'=', 'n', ' ', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("W ", new ProportionalProbability( new double[]{0.9431818181818182, 0.9545454545454546, 0.9659090909090909, 0.9772727272727273, 0.9886363636363636, 1.0}, new char[]{' ', 't', 'n', 'A', 'T', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("Pú", new ProportionalProbability( new double[]{0.8, 0.9, 1.0}, new char[]{'ú', 'p', ' '}) );
        twoCharacterInputWithUnknownOutput.put("VA", new ProportionalProbability( new double[]{0.9010989010989011, 0.9120879120879121, 0.923076923076923, 0.934065934065934, 0.9450549450549449, 0.9560439560439559, 0.9670329670329668, 0.9780219780219778, 0.9890109890109887, 0.9999999999999997}, new char[]{'t', 'A', ')', 'a', 's', ' ', 'S', 'V', '-', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("Pü", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'p', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("VB", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'B', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("VC", new ProportionalProbability( new double[]{0.859375, 0.875, 0.890625, 0.90625, 0.921875, 0.9375, 0.953125, 0.96875, 0.984375, 1.0}, new char[]{'C', 'l', 'a', 'r', 'w', 'n', 's', 'o', 'e', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("VE", new ProportionalProbability( new double[]{0.9650655021834061, 0.9694323144104804, 0.9737991266375546, 0.9781659388646289, 0.9825327510917031, 0.9868995633187774, 0.9912663755458516, 0.9956331877729259, 1.0}, new char[]{'E', 'C', 'M', 'L', '\"', 's', 'U', 'm', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("VF", new ProportionalProbability( new double[]{0.8823529411764706, 0.9411764705882353, 1.0}, new char[]{' ', 'F', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("W\'", new ProportionalProbability( new double[]{0.8, 1.0}, new char[]{' ', '\''}) );
        twoCharacterInputWithUnknownOutput.put("W)", new ProportionalProbability( new double[]{0.9591836734693877, 0.9795918367346939, 1.0}, new char[]{')', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ug", new ProportionalProbability( new double[]{0.9354838709677419, 0.9677419354838709, 0.9999999999999999}, new char[]{' ', 'g', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("VI", new ProportionalProbability( new double[]{0.9803921568627451, 0.9869281045751633, 0.9934640522875816, 0.9999999999999999}, new char[]{'I', ' ', 'N', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("Uh", new ProportionalProbability( new double[]{0.9310344827586207, 0.9655172413793103, 0.9999999999999999}, new char[]{'h', 't', 'U'}) );
        twoCharacterInputWithUnknownOutput.put("Uk", new ProportionalProbability( new double[]{0.9473684210526315, 1.0}, new char[]{'k', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Ul", new ProportionalProbability( new double[]{0.967741935483871, 0.978494623655914, 0.989247311827957, 1.0}, new char[]{'l', 'i', 'T', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Um", new ProportionalProbability( new double[]{0.967948717948718, 0.9743589743589743, 0.9807692307692307, 0.9871794871794871, 0.9935897435897435, 0.9999999999999999}, new char[]{'u', 'm', 'U', ' ', 'h', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("W/", new ProportionalProbability( new double[]{0.9090909090909091, 1.0}, new char[]{'i', '/'}) );
        twoCharacterInputWithUnknownOutput.put("Un", new ProportionalProbability( new double[]{0.992401717872481, 0.9927320779649819, 0.9930624380574827, 0.9933927981499836, 0.9937231582424845, 0.9940535183349853, 0.9943838784274862, 0.9947142385199871, 0.995044598612488, 0.9953749587049888, 0.9957053187974897, 0.9960356788899906, 0.9963660389824914, 0.9966963990749923, 0.9970267591674932, 0.997357119259994, 0.9976874793524949, 0.9980178394449958, 0.9983481995374967, 0.9986785596299975, 0.9990089197224984, 0.9993392798149993, 0.9996696399075001, 1.0000000000000009}, new char[]{'u', 'n', 'm', 'l', ' ', 's', 'U', 'h', 'e', '1', 'f', 't', 'o', 'r', 'i', '^', 'd', '0', '3', 'y', 'a', ',', 'c', '.'}) );
        twoCharacterInputWithUnknownOutput.put("W1", new ProportionalProbability( new double[]{0.8461538461538461, 0.9230769230769231, 1.0}, new char[]{'1', 'n', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("Up", new ProportionalProbability( new double[]{0.9640287769784173, 0.9712230215827338, 0.9784172661870503, 0.9856115107913668, 0.9928057553956833, 0.9999999999999998}, new char[]{'p', ' ', 't', 'd', 'a', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("W2", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'2', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Ur", new ProportionalProbability( new double[]{0.95, 0.9562499999999999, 0.9624999999999999, 0.9687499999999999, 0.9749999999999999, 0.9812499999999998, 0.9874999999999998, 0.9937499999999998, 0.9999999999999998}, new char[]{'r', 'u', ' ', 'l', 'e', 'U', 'g', ',', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("VS", new ProportionalProbability( new double[]{0.9565217391304348, 1.0}, new char[]{'S', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Us", new ProportionalProbability( new double[]{0.9698857736240913, 0.9709241952232606, 0.9719626168224298, 0.973001038421599, 0.9740394600207682, 0.9750778816199375, 0.9761163032191067, 0.9771547248182759, 0.9781931464174451, 0.9792315680166144, 0.9802699896157836, 0.9813084112149528, 0.982346832814122, 0.9833852544132913, 0.9844236760124605, 0.9854620976116297, 0.986500519210799, 0.9875389408099682, 0.9885773624091374, 0.9896157840083066, 0.9906542056074759, 0.9916926272066451, 0.9927310488058143, 0.9937694704049835, 0.9948078920041528, 0.995846313603322, 0.9968847352024912, 0.9979231568016604, 0.9989615784008297, 0.9999999999999989}, new char[]{'s', '5', ' ', 'v', 'M', 'r', 'e', 'y', 'i', ',', 't', 'd', 'c', 'p', ')', 'f', 'K', 'm', 'l', 'g', 'n', '/', 'o', 'I', 'P', 'b', 'u', 'a', 'h', 'G'}) );
        twoCharacterInputWithUnknownOutput.put("VT", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'T', ')'}) );
        twoCharacterInputWithUnknownOutput.put("Ut", new ProportionalProbability( new double[]{0.92, 0.928, 0.936, 0.9440000000000001, 0.9520000000000001, 0.9600000000000001, 0.9680000000000001, 0.9760000000000001, 0.9840000000000001, 0.9920000000000001, 1.0}, new char[]{'t', 'e', '-', 'o', 's', ' ', 'G', 'd', 'r', 'w', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("Uv", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'u', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("X ", new ProportionalProbability( new double[]{0.9681528662420382, 0.9745222929936306, 0.9808917197452229, 0.9872611464968153, 0.9936305732484076, 1.0}, new char[]{' ', 'u', 'e', 'b', 'V', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Qù", new ProportionalProbability( new double[]{0.8, 1.0}, new char[]{'ù', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("WA", new ProportionalProbability( new double[]{0.9222222222222223, 0.9333333333333333, 0.9444444444444444, 0.9555555555555555, 0.9666666666666666, 0.9777777777777776, 0.9888888888888887, 0.9999999999999998}, new char[]{'A', 'c', 'n', 'F', ' ', 'k', 'm', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Va", new ProportionalProbability( new double[]{0.9818181818181818, 0.9827272727272727, 0.9836363636363635, 0.9845454545454544, 0.9854545454545452, 0.9863636363636361, 0.987272727272727, 0.9881818181818178, 0.9890909090909087, 0.9899999999999995, 0.9909090909090904, 0.9918181818181813, 0.9927272727272721, 0.993636363636363, 0.9945454545454538, 0.9954545454545447, 0.9963636363636356, 0.9972727272727264, 0.9981818181818173, 0.9990909090909081, 0.999999999999999}, new char[]{'o', ' ', 'a', 'd', 't', 'v', 'V', 'm', 'l', 'n', 'f', '-', '=', 'i', '(', 'p', 'r', 'e', 's', 'b', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("WC", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'W', 'u', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("WD", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'D', ' '}) );
        twoCharacterInputWithUnknownOutput.put("WE", new ProportionalProbability( new double[]{0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'E', ' ', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("Ve", new ProportionalProbability( new double[]{0.9887507400828893, 0.9893428063943162, 0.989934872705743, 0.9905269390171698, 0.9911190053285966, 0.9917110716400235, 0.9923031379514503, 0.9928952042628771, 0.993487270574304, 0.9940793368857308, 0.9946714031971576, 0.9952634695085845, 0.9958555358200113, 0.9964476021314381, 0.997039668442865, 0.9976317347542918, 0.9982238010657186, 0.9988158673771454, 0.9994079336885723, 0.9999999999999991}, new char[]{'e', 't', 'V', ' ', 'l', 'v', 'h', 's', 'o', 'p', 'r', 'd', 'i', 'a', 'w', 'g', 'n', 'y', 'B', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("Rá", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'r', 'á'}) );
        twoCharacterInputWithUnknownOutput.put("WH", new ProportionalProbability( new double[]{0.8297872340425532, 0.851063829787234, 0.8723404255319149, 0.8936170212765958, 0.9148936170212767, 0.9361702127659576, 0.9574468085106385, 0.9787234042553193, 1.0000000000000002}, new char[]{'H', '=', ' ', 'h', 'y', 'A', 'l', 'o', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("X)", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{')', '.'}) );
        twoCharacterInputWithUnknownOutput.put("WI", new ProportionalProbability( new double[]{0.9683794466403162, 0.9723320158102766, 0.9762845849802371, 0.9802371541501975, 0.984189723320158, 0.9881422924901184, 0.9920948616600789, 0.9960474308300393, 0.9999999999999998}, new char[]{'I', '\"', 'd', 'r', 'a', 's', 'v', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Vi", new ProportionalProbability( new double[]{0.9826030927835051, 0.9832474226804123, 0.9838917525773195, 0.9845360824742267, 0.985180412371134, 0.9858247422680412, 0.9864690721649484, 0.9871134020618556, 0.9877577319587628, 0.98840206185567, 0.9890463917525772, 0.9896907216494845, 0.9903350515463917, 0.9909793814432989, 0.9916237113402061, 0.9922680412371133, 0.9929123711340205, 0.9935567010309277, 0.994201030927835, 0.9948453608247422, 0.9954896907216494, 0.9961340206185566, 0.9967783505154638, 0.997422680412371, 0.9980670103092782, 0.9987113402061855, 0.9993556701030927, 0.9999999999999999}, new char[]{'i', 'n', 'v', ' ', 'V', 'l', 'B', 'u', 'o', 'm', 't', 'a', 's', 'd', '1', 'r', 'P', 'p', 'M', 'b', 'D', 'x', 'h', 'G', 'T', 'S', 'e', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("X,", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{',', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("X-", new ProportionalProbability( new double[]{0.9827586206896551, 1.0}, new char[]{'-', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("WL", new ProportionalProbability( new double[]{0.7857142857142857, 0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'l', 'r', 'p', 'L'}) );
        twoCharacterInputWithUnknownOutput.put("Rè", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'r', 'è'}) );
        twoCharacterInputWithUnknownOutput.put("Vl", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'P', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("Ré", new ProportionalProbability( new double[]{0.9937888198757764, 1.0}, new char[]{'r', 'é'}) );
        twoCharacterInputWithUnknownOutput.put("X/", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'/', 'o'}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart9(){
        twoCharacterInputWithUnknownOutput.put("WO", new ProportionalProbability( new double[]{0.9038461538461539, 0.9230769230769231, 0.9423076923076924, 0.9615384615384617, 0.980769230769231, 1.0000000000000002}, new char[]{'y', 'O', ' ', 'i', 't', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Vn", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'w', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Vo", new ProportionalProbability( new double[]{0.9858012170385395, 0.986815415821501, 0.9878296146044625, 0.988843813387424, 0.9898580121703855, 0.990872210953347, 0.9918864097363085, 0.99290060851927, 0.9939148073022315, 0.994929006085193, 0.9959432048681545, 0.996957403651116, 0.9979716024340775, 0.998985801217039, 1.0000000000000004}, new char[]{' ', 'o', 'V', 'r', 's', 't', 'v', 'i', 'e', 'P', 'l', 'a', 'z', 'm', '-'}) );
        twoCharacterInputWithUnknownOutput.put("WP", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'P', 'i', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("Vr", new ProportionalProbability( new double[]{0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'r', 'c', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("WS", new ProportionalProbability( new double[]{0.3333333333333333, 0.6666666666666666, 1.0}, new char[]{'n', 'C', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Vs", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{'s', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("WT", new ProportionalProbability( new double[]{0.9259259259259259, 0.962962962962963, 1.0}, new char[]{'T', 't', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Vu", new ProportionalProbability( new double[]{0.967741935483871, 1.0}, new char[]{'u', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("WW", new ProportionalProbability( new double[]{0.9787985865724381, 0.9823321554770318, 0.9858657243816255, 0.9893992932862191, 0.9929328621908128, 0.9964664310954064, 1.0}, new char[]{'W', 'I', 'o', 't', 'a', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Rô", new ProportionalProbability( new double[]{0.8571428571428571, 1.0}, new char[]{'r', 'ô'}) );
        twoCharacterInputWithUnknownOutput.put("X:", new ProportionalProbability( new double[]{0.9857142857142858, 1.0}, new char[]{':', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("X<", new ProportionalProbability( new double[]{0.9736842105263158, 0.986842105263158, 1.0}, new char[]{' ', '<', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Y ", new ProportionalProbability( new double[]{0.956140350877193, 0.9605263157894737, 0.9649122807017544, 0.9692982456140351, 0.9736842105263158, 0.9780701754385965, 0.9824561403508772, 0.986842105263158, 0.9912280701754387, 0.9956140350877194, 1.0}, new char[]{' ', 'd', 'E', 'C', '(', 't', 'u', 'A', 'l', 'R', '.'}) );
        twoCharacterInputWithUnknownOutput.put("Wa", new ProportionalProbability( new double[]{0.9877722583110432, 0.9881543752388231, 0.988536492166603, 0.9889186090943829, 0.9893007260221628, 0.9896828429499427, 0.9900649598777226, 0.9904470768055025, 0.9908291937332824, 0.9912113106610623, 0.9915934275888422, 0.9919755445166221, 0.992357661444402, 0.9927397783721819, 0.9931218952999618, 0.9935040122277417, 0.9938861291555215, 0.9942682460833014, 0.9946503630110813, 0.9950324799388612, 0.9954145968666411, 0.995796713794421, 0.9961788307222009, 0.9965609476499808, 0.9969430645777607, 0.9973251815055406, 0.9977072984333205, 0.9980894153611004, 0.9984715322888803, 0.9988536492166602, 0.9992357661444401, 0.99961788307222, 0.9999999999999999}, new char[]{' ', 'a', 'e', '1', 'c', 'W', 'w', 'm', 'n', 'f', 'i', 's', '2', 'l', 't', 'A', 'd', 'S', 'u', 'r', 'o', '\'', 'P', 'y', 'h', ',', 'p', '8', 'G', '?', '4', '…', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("Rü", new ProportionalProbability( new double[]{0.9285714285714286, 0.9642857142857143, 1.0}, new char[]{'ü', 'r', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("We", new ProportionalProbability( new double[]{0.9883333333333333, 0.9888888888888888, 0.9894444444444443, 0.9899999999999999, 0.9905555555555554, 0.9911111111111109, 0.9916666666666665, 0.992222222222222, 0.9927777777777775, 0.9933333333333331, 0.9938888888888886, 0.9944444444444441, 0.9949999999999997, 0.9955555555555552, 0.9961111111111107, 0.9966666666666663, 0.9972222222222218, 0.9977777777777773, 0.9983333333333329, 0.9988888888888884, 0.9994444444444439, 0.9999999999999994}, new char[]{'e', 'W', ' ', 'l', 's', 'b', 'm', 'w', 't', 'h', 'y', 'i', 'c', 'n', 'u', 'g', 'f', 'a', '.', 'o', 'd', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Y)", new ProportionalProbability( new double[]{0.9230769230769231, 0.9615384615384616, 1.0}, new char[]{')', 't', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Wh", new ProportionalProbability( new double[]{0.9949537426408747, 0.9950302010857099, 0.9951066595305452, 0.9951831179753805, 0.9952595764202158, 0.9953360348650511, 0.9954124933098863, 0.9954889517547216, 0.9955654101995569, 0.9956418686443922, 0.9957183270892275, 0.9957947855340628, 0.995871243978898, 0.9959477024237333, 0.9960241608685686, 0.9961006193134039, 0.9961770777582392, 0.9962535362030744, 0.9963299946479097, 0.996406453092745, 0.9964829115375803, 0.9965593699824156, 0.9966358284272508, 0.9967122868720861, 0.9967887453169214, 0.9968652037617567, 0.996941662206592, 0.9970181206514273, 0.9970945790962625, 0.9971710375410978, 0.9972474959859331, 0.9973239544307684, 0.9974004128756037, 0.9974768713204389, 0.9975533297652742, 0.9976297882101095, 0.9977062466549448, 0.9977827050997801, 0.9978591635446153, 0.9979356219894506, 0.9980120804342859, 0.9980885388791212, 0.9981649973239565, 0.9982414557687918, 0.998317914213627, 0.9983943726584623, 0.9984708311032976, 0.9985472895481329, 0.9986237479929682, 0.9987002064378034, 0.9987766648826387, 0.998853123327474, 0.9989295817723093, 0.9990060402171446, 0.9990824986619798, 0.9991589571068151, 0.9992354155516504, 0.9993118739964857, 0.999388332441321, 0.9994647908861563, 0.9995412493309915, 0.9996177077758268, 0.9996941662206621, 0.9997706246654974, 0.9998470831103327, 0.9999235415551679, 1.000000000000003}, new char[]{'h', 'e', 'i', ' ', 'o', 'u', 'a', 'v', 't', 'n', 'r', 's', 'g', 'k', 'b', 'L', 'w', 'l', '-', 'p', 'x', 'D', 'E', 'c', 'M', 'm', 'T', 'z', 'I', '0', '6', 'y', '1', '\"', 'R', '(', 'A', 'f', '?', '.', 'Q', '2', 'Δ', 'd', 'ה', 'N', 'S', 'B', 'P', 'C', 'H', 'O', 'V', 'q', '8', 'W', '3', ',', '/', '_', 'F', '=', '7', 'π', 'Y', '\'', '’'}) );
        twoCharacterInputWithUnknownOutput.put("Sä", new ProportionalProbability( new double[]{0.9545454545454546, 1.0}, new char[]{'ä', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("XI", new ProportionalProbability( new double[]{0.9, 0.92, 0.9400000000000001, 0.9600000000000001, 0.9800000000000001, 1.0}, new char[]{' ', 'I', 'e', 'W', 'M', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("Wi", new ProportionalProbability( new double[]{0.9873134328358208, 0.9880597014925373, 0.9888059701492538, 0.9895522388059702, 0.9902985074626867, 0.9910447761194031, 0.9917910447761196, 0.992537313432836, 0.9932835820895525, 0.9940298507462689, 0.9947761194029854, 0.9955223880597018, 0.9962686567164183, 0.9970149253731347, 0.9977611940298512, 0.9985074626865676, 0.9992537313432841, 1.0000000000000004}, new char[]{'i', ' ', 'w', 'W', 's', 'l', 'r', 'm', 'o', 'N', 't', 'e', 'n', 'a', '(', 'g', '.', ']'}) );
        twoCharacterInputWithUnknownOutput.put("Y,", new ProportionalProbability( new double[]{0.9642857142857143, 1.0}, new char[]{',', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("Sé", new ProportionalProbability( new double[]{0.9818181818181818, 1.0}, new char[]{'é', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Wo", new ProportionalProbability( new double[]{0.9847522236340533, 0.9853875476493011, 0.9860228716645489, 0.9866581956797967, 0.9872935196950445, 0.9879288437102923, 0.9885641677255401, 0.9891994917407879, 0.9898348157560357, 0.9904701397712835, 0.9911054637865313, 0.9917407878017791, 0.9923761118170269, 0.9930114358322747, 0.9936467598475225, 0.9942820838627703, 0.9949174078780181, 0.9955527318932659, 0.9961880559085137, 0.9968233799237615, 0.9974587039390093, 0.9980940279542571, 0.9987293519695049, 0.9993646759847526, 1.0000000000000004}, new char[]{'o', 'l', ' ', 'c', 's', 'm', 'e', 'n', '-', 'W', 'r', 'w', 't', 'h', 'k', 'x', 'a', 'F', 'y', 'i', 'L', 'd', 'I', 'T', '2'}) );
        twoCharacterInputWithUnknownOutput.put("<δ", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'f', 'δ'}) );
        twoCharacterInputWithUnknownOutput.put("Sí", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'í', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("Wr", new ProportionalProbability( new double[]{0.9587155963302753, 0.963302752293578, 0.9678899082568807, 0.9724770642201834, 0.9770642201834862, 0.9816513761467889, 0.9862385321100916, 0.9908256880733943, 0.995412844036697, 0.9999999999999998}, new char[]{'r', '=', 'i', 't', ' ', 'a', 'n', 'o', 's', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("Ws", new ProportionalProbability( new double[]{0.9722222222222222, 1.0}, new char[]{'s', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("XV", new ProportionalProbability( new double[]{0.9811320754716981, 1.0}, new char[]{'V', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Wu", new ProportionalProbability( new double[]{0.9491525423728814, 0.9661016949152542, 0.983050847457627, 0.9999999999999999}, new char[]{'w', 'u', 'o', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("XX", new ProportionalProbability( new double[]{0.9090909090909091, 1.0}, new char[]{'X', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Só", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'ó', 's'}) );
        twoCharacterInputWithUnknownOutput.put("XY", new ProportionalProbability( new double[]{0.9090909090909091, 0.9545454545454545, 0.9999999999999999}, new char[]{' ', 'Y', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("Wy", new ProportionalProbability( new double[]{0.9901960784313726, 1.0}, new char[]{'y', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Z ", new ProportionalProbability( new double[]{0.95, 0.975, 1.0}, new char[]{' ', 'b', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("Y?", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'t', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("YA", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'A', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Sü", new ProportionalProbability( new double[]{0.9545454545454546, 0.9772727272727273, 1.0}, new char[]{'s', 'S', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("YC", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'f', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("YE", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'\"', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Xe", new ProportionalProbability( new double[]{0.9634146341463414, 0.975609756097561, 0.9878048780487805, 1.0}, new char[]{'e', 'h', 'd', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("Z)", new ProportionalProbability( new double[]{0.9615384615384616, 1.0}, new char[]{')', '^'}) );
        twoCharacterInputWithUnknownOutput.put("Tä", new ProportionalProbability( new double[]{0.95, 1.0}, new char[]{'ä', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("Xi", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'i', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Xl", new ProportionalProbability( new double[]{0.6666666666666666, 1.0}, new char[]{'l', ' '}) );
        twoCharacterInputWithUnknownOutput.put("YM", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'M', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Té", new ProportionalProbability( new double[]{0.9777777777777777, 1.0}, new char[]{'t', 'é'}) );
        twoCharacterInputWithUnknownOutput.put("Tê", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'t', 'ê'}) );
        twoCharacterInputWithUnknownOutput.put("YO", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'O', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Tí", new ProportionalProbability( new double[]{0.8888888888888888, 0.9444444444444444, 1.0}, new char[]{'t', 'í', ' '}) );
        twoCharacterInputWithUnknownOutput.put("YS", new ProportionalProbability( new double[]{0.9024390243902439, 0.926829268292683, 0.951219512195122, 0.9756097560975611, 1.0}, new char[]{' ', 'a', 'U', 'S', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("YW", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'i', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Tó", new ProportionalProbability( new double[]{0.8, 1.0}, new char[]{'ó', 't'}) );
        twoCharacterInputWithUnknownOutput.put("Xy", new ProportionalProbability( new double[]{0.7857142857142857, 0.8571428571428571, 0.9285714285714285, 0.9999999999999999}, new char[]{'e', 'h', 'y', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("YZ", new ProportionalProbability( new double[]{0.75, 0.875, 1.0}, new char[]{'a', 'w', 'Z'}) );
        twoCharacterInputWithUnknownOutput.put("[ ", new ProportionalProbability( new double[]{0.9696969696969697, 1.0}, new char[]{' ', '('}) );
        twoCharacterInputWithUnknownOutput.put("Ya", new ProportionalProbability( new double[]{0.9529411764705882, 0.9647058823529411, 0.976470588235294, 0.9882352941176469, 0.9999999999999998}, new char[]{'y', 'a', 'o', 'u', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("ZE", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{' ', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("Ye", new ProportionalProbability( new double[]{0.9806094182825484, 0.9833795013850415, 0.9861495844875345, 0.9889196675900276, 0.9916897506925206, 0.9944598337950137, 0.9972299168975067, 0.9999999999999998}, new char[]{'w', 'e', 'l', ' ', 'o', 'R', 'a', 't'}) );
        twoCharacterInputWithUnknownOutput.put("[(", new ProportionalProbability( new double[]{0.9767441860465116, 1.0}, new char[]{'(', ')'}) );
        twoCharacterInputWithUnknownOutput.put("Yi", new ProportionalProbability( new double[]{0.9555555555555556, 0.9777777777777779, 1.0}, new char[]{'i', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("[.", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{' ', '.'}) );
        twoCharacterInputWithUnknownOutput.put("Yo", new ProportionalProbability( new double[]{0.9812568908489526, 0.9823594266813672, 0.9834619625137818, 0.9845644983461964, 0.985667034178611, 0.9867695700110256, 0.9878721058434402, 0.9889746416758548, 0.9900771775082694, 0.991179713340684, 0.9922822491730986, 0.9933847850055132, 0.9944873208379278, 0.9955898566703424, 0.996692392502757, 0.9977949283351716, 0.9988974641675862, 1.0000000000000007}, new char[]{'o', ' ', 'l', 'd', 'r', 'e', 'n', 's', 'F', 'm', '=', 'h', 'Y', 'B', 'a', 'E', 'u', 'v'}) );
        twoCharacterInputWithUnknownOutput.put("[1", new ProportionalProbability( new double[]{0.9464285714285714, 0.9642857142857143, 0.9821428571428572, 1.0}, new char[]{'1', 's', 'e', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("[2", new ProportionalProbability( new double[]{0.6666666666666666, 0.75, 0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'s', 'O', 't', 'R', '2'}) );
        twoCharacterInputWithUnknownOutput.put("[3", new ProportionalProbability( new double[]{0.5833333333333334, 0.6666666666666667, 0.7500000000000001, 0.8333333333333335, 0.9166666666666669, 1.0000000000000002}, new char[]{'t', 's', '-', 'E', 'r', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("[4", new ProportionalProbability( new double[]{0.7222222222222222, 0.7777777777777778, 0.8333333333333334, 0.888888888888889, 0.9444444444444445, 1.0}, new char[]{'O', 'I', '4', 'C', 'F', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("[5", new ProportionalProbability( new double[]{0.625, 0.75, 0.875, 1.0}, new char[]{'r', 'D', 'l', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("[7", new ProportionalProbability( new double[]{0.6666666666666666, 0.8333333333333333, 0.9999999999999999}, new char[]{'N', 'b', 'I'}) );
        twoCharacterInputWithUnknownOutput.put("[8", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'b', '8'}) );
        twoCharacterInputWithUnknownOutput.put("[A", new ProportionalProbability( new double[]{0.9829059829059829, 0.9914529914529914, 0.9999999999999999}, new char[]{'A', 't', ' '}) );
        twoCharacterInputWithUnknownOutput.put("Za", new ProportionalProbability( new double[]{0.977859778597786, 0.9815498154981549, 0.9852398523985239, 0.9889298892988928, 0.9926199261992618, 0.9963099630996307, 0.9999999999999997}, new char[]{'Z', 'a', 'l', ' ', 'z', '6', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("[C", new ProportionalProbability( new double[]{0.9444444444444444, 1.0}, new char[]{'C', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("Ze", new ProportionalProbability( new double[]{0.978021978021978, 0.9802197802197802, 0.9824175824175824, 0.9846153846153846, 0.9868131868131867, 0.9890109890109889, 0.9912087912087911, 0.9934065934065933, 0.9956043956043955, 0.9978021978021977, 0.9999999999999999}, new char[]{'e', 'Z', 'z', 'u', 'o', ',', ' ', 's', 'r', 'k', '('}) );
        twoCharacterInputWithUnknownOutput.put("[H", new ProportionalProbability( new double[]{0.9230769230769231, 0.9423076923076924, 0.9615384615384617, 0.980769230769231, 1.0000000000000002}, new char[]{'H', ')', 'K', '-', '('}) );
        twoCharacterInputWithUnknownOutput.put("Zi", new ProportionalProbability( new double[]{0.9629629629629629, 0.9682539682539681, 0.9735449735449735, 0.9788359788359788, 0.9841269841269842, 0.9894179894179895, 0.9947089947089949, 1.0000000000000002}, new char[]{'Z', 'i', 'z', ' ', 'e', 'n', 't', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("Vé", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{'v', 'é'}) );
        twoCharacterInputWithUnknownOutput.put("Zn", new ProportionalProbability( new double[]{0.9166666666666666, 0.9333333333333333, 0.9500000000000001, 0.9666666666666668, 0.9833333333333335, 1.0000000000000002}, new char[]{'n', 'r', 'a', ')', '-', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("Zo", new ProportionalProbability( new double[]{0.9398496240601504, 0.9473684210526316, 0.9548872180451129, 0.9624060150375942, 0.9699248120300754, 0.9774436090225567, 0.9849624060150379, 0.9924812030075192, 1.0000000000000004}, new char[]{'Z', 'l', 'o', ' ', 'z', 'n', 'A', 'a', 's'}) );
        twoCharacterInputWithUnknownOutput.put("Zu", new ProportionalProbability( new double[]{0.9933110367892977, 0.9966555183946488, 1.0}, new char[]{'u', 'z', 'Z'}) );
        twoCharacterInputWithUnknownOutput.put("Zw", new ProportionalProbability( new double[]{0.9830508474576272, 0.9915254237288136, 1.0}, new char[]{'Z', 'w', 'z'}) );
        twoCharacterInputWithUnknownOutput.put("Vö", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'v', 'ö'}) );
        twoCharacterInputWithUnknownOutput.put("] ", new ProportionalProbability( new double[]{0.971677559912854, 0.9738562091503268, 0.9760348583877996, 0.9782135076252724, 0.9803921568627452, 0.982570806100218, 0.9847494553376908, 0.9869281045751636, 0.9891067538126364, 0.9912854030501091, 0.993464052287582, 0.9956427015250547, 0.9978213507625275, 1.0000000000000002}, new char[]{'n', 'f', ' ', 'i', 's', 't', '?', 'm', '−', 'A', '+', 'c', 'd', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("[a", new ProportionalProbability( new double[]{0.9701492537313433, 0.9850746268656717, 1.0}, new char[]{'i', 'h', 'a'}) );
        twoCharacterInputWithUnknownOutput.put(".ו", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'d', 't'}) );
        twoCharacterInputWithUnknownOutput.put("]\'", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'i', '\''}) );
        twoCharacterInputWithUnknownOutput.put("[f", new ProportionalProbability( new double[]{0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'f', 'r', '^'}) );
        twoCharacterInputWithUnknownOutput.put("[g", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'g', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Wä", new ProportionalProbability( new double[]{0.9444444444444444, 0.9722222222222222, 1.0}, new char[]{'ä', 'w', 'W'}) );
        twoCharacterInputWithUnknownOutput.put("],", new ProportionalProbability( new double[]{0.9642857142857143, 1.0}, new char[]{',', 't'}) );
        twoCharacterInputWithUnknownOutput.put("[l", new ProportionalProbability( new double[]{0.8666666666666667, 0.9, 0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'l', 'g', ' ', 'a', 's'}) );
        twoCharacterInputWithUnknownOutput.put("].", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'.', ' '}) );
        twoCharacterInputWithUnknownOutput.put("]/", new ProportionalProbability( new double[]{0.9473684210526315, 0.9736842105263157, 0.9999999999999999}, new char[]{'/', 's', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("[s", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'s', '/'}) );
        twoCharacterInputWithUnknownOutput.put("[t", new ProportionalProbability( new double[]{0.96, 1.0}, new char[]{'t', ' '}) );
        twoCharacterInputWithUnknownOutput.put("]<", new ProportionalProbability( new double[]{0.8827586206896552, 0.8896551724137931, 0.896551724137931, 0.903448275862069, 0.9103448275862069, 0.9172413793103449, 0.9241379310344828, 0.9310344827586208, 0.9379310344827587, 0.9448275862068967, 0.9517241379310346, 0.9586206896551726, 0.9655172413793105, 0.9724137931034484, 0.9793103448275864, 0.9862068965517243, 0.9931034482758623, 1.0000000000000002}, new char[]{'a', 's', ' ', 'c', 'p', 'e', 't', 'i', '0', 'M', 'o', 'k', 'm', 'r', 'd', 'u', 'b', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("Wö", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'W', 'ö'}) );
        twoCharacterInputWithUnknownOutput.put("^ ", new ProportionalProbability( new double[]{0.9807692307692307, 1.0}, new char[]{' ', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("Wü", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'w', 'ü'}) );
        twoCharacterInputWithUnknownOutput.put("^(", new ProportionalProbability( new double[]{0.9367816091954023, 0.942528735632184, 0.9482758620689656, 0.9540229885057473, 0.959770114942529, 0.9655172413793106, 0.9712643678160923, 0.9770114942528739, 0.9827586206896556, 0.9885057471264372, 0.9942528735632189, 1.0000000000000004}, new char[]{'(', ' ', 'i', ')', '^', 's', 'e', '/', 'l', 'n', '!', ':'}) );
        twoCharacterInputWithUnknownOutput.put("^0", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'0', '^'}) );
        twoCharacterInputWithUnknownOutput.put("^1", new ProportionalProbability( new double[]{0.9915966386554622, 1.0}, new char[]{'1', ')'}) );
        twoCharacterInputWithUnknownOutput.put("^2", new ProportionalProbability( new double[]{0.984984984984985, 0.985985985985986, 0.986986986986987, 0.9879879879879879, 0.9889889889889889, 0.9899899899899899, 0.9909909909909909, 0.9919919919919918, 0.9929929929929928, 0.9939939939939938, 0.9949949949949948, 0.9959959959959958, 0.9969969969969967, 0.9979979979979977, 0.9989989989989987, 0.9999999999999997}, new char[]{'2', 'x', ' ', ')', 'i', '=', '-', 'y', '+', 'd', 'e', 'n', 'f', '^', '8', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("^3", new ProportionalProbability( new double[]{0.9923076923076923, 1.0}, new char[]{'3', '='}) );
        twoCharacterInputWithUnknownOutput.put("^4", new ProportionalProbability( new double[]{0.975, 1.0}, new char[]{'4', '3'}) );
        twoCharacterInputWithUnknownOutput.put("][", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'[', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("_ ", new ProportionalProbability( new double[]{0.9895165987186954, 0.9900990099009901, 0.9906814210832848, 0.9912638322655796, 0.9918462434478743, 0.992428654630169, 0.9930110658124638, 0.9935934769947585, 0.9941758881770533, 0.994758299359348, 0.9953407105416427, 0.9959231217239375, 0.9965055329062322, 0.997087944088527, 0.9976703552708217, 0.9982527664531164, 0.9988351776354112, 0.9994175888177059, 1.0000000000000007}, new char[]{' ', 'a', 'c', 'u', 'm', 'l', 'i', 'n', 'T', 'h', 't', 'r', 'p', 'y', 'G', 'f', '_', ',', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("]^", new ProportionalProbability( new double[]{0.9615384615384616, 1.0}, new char[]{'^', '*'}) );
        twoCharacterInputWithUnknownOutput.put("^?", new ProportionalProbability( new double[]{0.8333333333333334, 1.0}, new char[]{'?', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("_,", new ProportionalProbability( new double[]{0.9609375, 0.96875, 0.9765625, 0.984375, 0.9921875, 1.0}, new char[]{',', 'd', 'o', 'z', 's', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("_.", new ProportionalProbability( new double[]{0.9970588235294118, 1.0}, new char[]{'.', ' '}) );
        twoCharacterInputWithUnknownOutput.put("_1", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'1', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("_2", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'2', ' ', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("_B", new ProportionalProbability( new double[]{0.9996474037022611, 0.9996515036592116, 0.9996556036161621, 0.9996597035731126, 0.9996638035300631, 0.9996679034870136, 0.9996720034439641, 0.9996761034009146, 0.9996802033578651, 0.9996843033148156, 0.9996884032717661, 0.9996925032287166, 0.9996966031856671, 0.9997007031426176, 0.9997048030995681, 0.9997089030565186, 0.9997130030134691, 0.9997171029704196, 0.9997212029273701, 0.9997253028843206, 0.9997294028412711, 0.9997335027982216, 0.9997376027551721, 0.9997417027121226, 0.9997458026690731, 0.9997499026260236, 0.9997540025829741, 0.9997581025399246, 0.9997622024968751, 0.9997663024538256, 0.9997704024107761, 0.9997745023677266, 0.9997786023246771, 0.9997827022816276, 0.9997868022385781, 0.9997909021955286, 0.9997950021524791, 0.9997991021094296, 0.9998032020663801, 0.9998073020233306, 0.9998114019802811, 0.9998155019372316, 0.9998196018941821, 0.9998237018511326, 0.9998278018080831, 0.9998319017650336, 0.9998360017219841, 0.9998401016789346, 0.999844201635885, 0.9998483015928356, 0.999852401549786, 0.9998565015067366, 0.999860601463687, 0.9998647014206375, 0.999868801377588, 0.9998729013345385, 0.999877001291489, 0.9998811012484395, 0.99988520120539, 0.9998893011623405, 0.999893401119291, 0.9998975010762415, 0.999901601033192, 0.9999057009901425, 0.999909800947093, 0.9999139009040435, 0.999918000860994, 0.9999221008179445, 0.999926200774895, 0.9999303007318455, 0.999934400688796, 0.9999385006457465, 0.999942600602697, 0.9999467005596475, 0.999950800516598, 0.9999549004735485, 0.999959000430499, 0.9999631003874495, 0.9999672003444, 0.9999713003013505, 0.999975400258301, 0.9999795002152515, 0.999983600172202, 0.9999877001291525, 0.999991800086103, 0.9999959000430535, 1.000000000000004}, new char[]{'a', ' ', 'm', 'h', 'e', 'n', 'o', 'r', 'v', 'i', 'l', 'V', 's', 'y', 'c', 'u', 'd', 'b', 't', 'L', 'f', '2', 'g', '-', 'p', 'R', 'P', '|', '\'', 'H', 'A', ',', ':', 'k', 'C', '=', 'x', 'S', '^', 'w', '.', '(', 'q', 'Q', '1', ')', '0', 'W', 'T', '+', 'E', '\"', '%', '∞', '/', 'M', '?', '7', 'j', '[', '{', 'O', '¼', '5', 'z', '3', 'Δ', 'D', 'N', '4', 'G', ';', 'K', 'J', '#', 'F', '*', 'B', 'ł', '→', 'י', 'π', 'I', 'U', 'ֹ', '•', '>'}) );
        twoCharacterInputWithUnknownOutput.put("^m", new ProportionalProbability( new double[]{0.9583333333333334, 0.9791666666666667, 1.0}, new char[]{'m', 'b', '/'}) );
        twoCharacterInputWithUnknownOutput.put("^n", new ProportionalProbability( new double[]{0.9696969696969697, 0.9757575757575758, 0.9818181818181819, 0.987878787878788, 0.9939393939393941, 1.0000000000000002}, new char[]{'n', 'r', 'P', 'e', ' ', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("_S", new ProportionalProbability( new double[]{0.9996265609546907, 0.9996306646804634, 0.999634768406236, 0.9996388721320086, 0.9996429758577813, 0.9996470795835539, 0.9996511833093266, 0.9996552870350992, 0.9996593907608718, 0.9996634944866445, 0.9996675982124171, 0.9996717019381898, 0.9996758056639624, 0.999679909389735, 0.9996840131155077, 0.9996881168412803, 0.999692220567053, 0.9996963242928256, 0.9997004280185983, 0.9997045317443709, 0.9997086354701435, 0.9997127391959162, 0.9997168429216888, 0.9997209466474615, 0.9997250503732341, 0.9997291540990068, 0.9997332578247794, 0.999737361550552, 0.9997414652763247, 0.9997455690020973, 0.99974967272787, 0.9997537764536426, 0.9997578801794152, 0.9997619839051879, 0.9997660876309605, 0.9997701913567332, 0.9997742950825058, 0.9997783988082785, 0.9997825025340511, 0.9997866062598237, 0.9997907099855964, 0.999794813711369, 0.9997989174371417, 0.9998030211629143, 0.999807124888687, 0.9998112286144596, 0.9998153323402322, 0.9998194360660049, 0.9998235397917775, 0.9998276435175502, 0.9998317472433228, 0.9998358509690954, 0.9998399546948681, 0.9998440584206407, 0.9998481621464134, 0.999852265872186, 0.9998563695979586, 0.9998604733237313, 0.9998645770495039, 0.9998686807752766, 0.9998727845010492, 0.9998768882268219, 0.9998809919525945, 0.9998850956783671, 0.9998891994041398, 0.9998933031299124, 0.9998974068556851, 0.9999015105814577, 0.9999056143072304, 0.999909718033003, 0.9999138217587756, 0.9999179254845483, 0.9999220292103209, 0.9999261329360936, 0.9999302366618662, 0.9999343403876388, 0.9999384441134115, 0.9999425478391841, 0.9999466515649568, 0.9999507552907294, 0.999954859016502, 0.9999589627422747, 0.9999630664680473, 0.99996717019382, 0.9999712739195926, 0.9999753776453653, 0.9999794813711379, 0.9999835850969105, 0.9999876888226832, 0.9999917925484558, 0.9999958962742285, 1.000000000000001}, new char[]{'s', 'l', 'a', ' ', 'k', 'i', 'o', ':', 'h', 'c', 'n', 't', '=', 'r', 'm', 'd', 'e', 'g', 'u', 'p', 'v', 'f', 'b', '(', 'q', 'N', '\"', '2', '|', '/', '.', 'S', 'w', 'M', 'y', 'I', 'C', 'z', 'A', 'H', '0', '-', '1', 'D', 'B', '6', 'L', ',', '*', '^', '+', 'R', 'X', 'V', '√', 'E', 'x', 'T', ')', 'Z', '\'', '[', '4', 'P', 'W', 'θ', '5', 'é', '?', 'j', '3', 'G', 'O', '>', '9', 'F', '↔', 'K', 'Δ', 'ְ', '!', '…', 'α', ';', '&', 'Y', '8', '$', 'U', '<', '∆', '7'}) );
        twoCharacterInputWithUnknownOutput.put("^x", new ProportionalProbability( new double[]{0.9440993788819876, 0.9503105590062112, 0.9565217391304348, 0.9627329192546584, 0.968944099378882, 0.9751552795031057, 0.9813664596273293, 0.9875776397515529, 0.9937888198757765, 1.0}, new char[]{'x', 'a', 's', ' ', '(', '-', 'e', '∞', 'y', 't'}) );
        twoCharacterInputWithUnknownOutput.put("^y", new ProportionalProbability( new double[]{0.9, 1.0}, new char[]{'y', 'x'}) );
        twoCharacterInputWithUnknownOutput.put("a ", new ProportionalProbability( new double[]{0.9991079766401383, 0.9991219145051361, 0.9991358523701339, 0.9991497902351317, 0.9991637281001295, 0.9991776659651274, 0.9991916038301252, 0.999205541695123, 0.9992194795601208, 0.9992334174251186, 0.9992473552901164, 0.9992612931551142, 0.9992752310201121, 0.9992891688851099, 0.9993031067501077, 0.9993170446151055, 0.9993309824801033, 0.9993449203451011, 0.999358858210099, 0.9993727960750968, 0.9993867339400946, 0.9994006718050924, 0.9994146096700902, 0.999428547535088, 0.9994424854000858, 0.9994564232650837, 0.9994703611300815, 0.9994842989950793, 0.9994982368600771, 0.9995121747250749, 0.9995261125900727, 0.9995400504550706, 0.9995539883200684, 0.9995679261850662, 0.999581864050064, 0.9995958019150618, 0.9996097397800596, 0.9996236776450574, 0.9996376155100553, 0.9996515533750531, 0.9996654912400509, 0.9996794291050487, 0.9996933669700465, 0.9997073048350443, 0.9997212427000421, 0.99973518056504, 0.9997491184300378, 0.9997630562950356, 0.9997769941600334, 0.9997909320250312, 0.999804869890029, 0.9998188077550269, 0.9998327456200247, 0.9998466834850225, 0.9998606213500203, 0.9998745592150181, 0.9998884970800159, 0.9999024349450137, 0.9999163728100116, 0.9999303106750094, 0.9999442485400072, 0.999958186405005, 0.9999721242700028, 0.9999860621350006, 0.9999999999999984}, new char[]{'a', ' ', 'k', 's', 'r', 'c', 'o', 't', 'i', 'n', 'e', 'f', 'w', 'l', '0', 'u', 'd', 'g', 'b', 'y', 'h', 'p', '1', 'I', 'v', '-', 'm', ')', 'M', 'S', 'x', '\"', ',', 'L', 'N', 'A', ':', 'E', '.', 'T', '2', '=', 'D', '\'', '4', '(', 'q', 'Q', 'C', 'W', '/', ';', 'P', '>', '≠', '<', '6', 'V', '’', ']', 'R', 'B', 'G', '8', '_'}) );
        twoCharacterInputWithUnknownOutput.put("__", new ProportionalProbability( new double[]{0.9976550144516552, 0.9977095489992911, 0.997764083546927, 0.997818618094563, 0.9978731526421989, 0.9979276871898348, 0.9979822217374708, 0.9980367562851067, 0.9980912908327426, 0.9981458253803785, 0.9982003599280145, 0.9982548944756504, 0.9983094290232863, 0.9983639635709223, 0.9984184981185582, 0.9984730326661941, 0.9985275672138301, 0.998582101761466, 0.9986366363091019, 0.9986911708567379, 0.9987457054043738, 0.9988002399520097, 0.9988547744996457, 0.9989093090472816, 0.9989638435949175, 0.9990183781425535, 0.9990729126901894, 0.9991274472378253, 0.9991819817854612, 0.9992365163330972, 0.9992910508807331, 0.999345585428369, 0.999400119976005, 0.9994546545236409, 0.9995091890712768, 0.9995637236189128, 0.9996182581665487, 0.9996727927141846, 0.9997273272618206, 0.9997818618094565, 0.9998363963570924, 0.9998909309047284, 0.9999454654523643, 1.0000000000000002}, new char[]{'_', 'i', 'v', 'e', ' ', 'c', 'h', 'd', 't', 'o', 'a', 'b', 's', 'm', 'f', ',', 'n', 'u', 'l', 'g', 'x', '1', '0', 'M', '2', 'O', 'T', 'R', 'y', 'p', '.', 'r', ')', 'U', 'L', 'I', 'P', 'Y', 'N', 'w', 'B', 'A', 'k', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("a!", new ProportionalProbability( new double[]{0.9883720930232558, 1.0}, new char[]{'!', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("a\"", new ProportionalProbability( new double[]{0.9861111111111112, 1.0}, new char[]{'\"', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("_a", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'t', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("a\'", new ProportionalProbability( new double[]{0.9613733905579399, 0.9656652360515021, 0.9699570815450643, 0.9742489270386265, 0.9785407725321887, 0.982832618025751, 0.9871244635193132, 0.9914163090128754, 0.9957081545064376, 0.9999999999999998}, new char[]{'s', '\'', 'm', 'A', 'o', ' ', ':', 'u', 'r', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("a(", new ProportionalProbability( new double[]{0.9862068965517241, 0.993103448275862, 1.0}, new char[]{'(', 'r', 's'}) );
        twoCharacterInputWithUnknownOutput.put("a)", new ProportionalProbability( new double[]{0.9811764705882353, 0.9823529411764707, 0.983529411764706, 0.9847058823529413, 0.9858823529411767, 0.987058823529412, 0.9882352941176473, 0.9894117647058827, 0.990588235294118, 0.9917647058823533, 0.9929411764705887, 0.994117647058824, 0.9952941176470593, 0.9964705882352947, 0.99764705882353, 0.9988235294117653, 1.0000000000000007}, new char[]{')', ' ', 'a', 's', '-', 'n', 'r', 'm', 'v', 'o', 't', 'R', 'x', 'i', 'e', 'L', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("a+", new ProportionalProbability( new double[]{0.9724137931034482, 0.9793103448275862, 0.9862068965517241, 0.993103448275862, 1.0}, new char[]{'+', 'r', ' ', 'h', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("a,", new ProportionalProbability( new double[]{0.9807407407407407, 0.9814814814814814, 0.9822222222222221, 0.9829629629629628, 0.9837037037037035, 0.9844444444444442, 0.9851851851851849, 0.9859259259259257, 0.9866666666666664, 0.9874074074074071, 0.9881481481481478, 0.9888888888888885, 0.9896296296296292, 0.9903703703703699, 0.9911111111111106, 0.9918518518518513, 0.992592592592592, 0.9933333333333327, 0.9940740740740734, 0.9948148148148142, 0.9955555555555549, 0.9962962962962956, 0.9970370370370363, 0.997777777777777, 0.9985185185185177, 0.9992592592592584, 0.9999999999999991}, new char[]{'a', 's', ',', 'o', 't', 'S', ' ', 'd', 'n', 'f', 'i', 'I', 'w', 'r', 'e', 'y', 'N', 'c', 'M', 'l', 'u', 'H', 'R', 'h', 'k', 'b', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("a-", new ProportionalProbability( new double[]{0.9822064056939501, 0.9857651245551601, 0.98932384341637, 0.99288256227758, 0.9964412811387899, 0.9999999999999999}, new char[]{'-', 's', 'e', '.', 'd', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("a.", new ProportionalProbability( new double[]{0.9863301787592008, 0.9873817034700315, 0.9884332281808622, 0.9894847528916929, 0.9905362776025236, 0.9915878023133543, 0.992639327024185, 0.9936908517350157, 0.9947423764458464, 0.9957939011566771, 0.9968454258675078, 0.9978969505783385, 0.9989484752891692, 0.9999999999999999}, new char[]{' ', '.', 'a', 'u', 'e', 'n', 'o', 'O', 'l', 'g', 'c', 't', 's', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("a/", new ProportionalProbability( new double[]{0.9850746268656716, 0.990049751243781, 0.9950248756218905, 0.9999999999999999}, new char[]{'/', 'a', ' ', 'h'}) );
        twoCharacterInputWithUnknownOutput.put("_n", new ProportionalProbability( new double[]{0.9333333333333333, 0.9666666666666667, 1.0}, new char[]{'n', 'w', ' '}) );
        twoCharacterInputWithUnknownOutput.put("_p", new ProportionalProbability( new double[]{0.9411764705882353, 1.0}, new char[]{'p', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("a:", new ProportionalProbability( new double[]{0.9789473684210527, 0.9894736842105264, 1.0}, new char[]{':', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("a;", new ProportionalProbability( new double[]{0.9945652173913043, 1.0}, new char[]{';', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("a<", new ProportionalProbability( new double[]{0.9981792045999042, 0.9982750359367513, 0.9983708672735984, 0.9984666986104455, 0.9985625299472926, 0.9986583612841397, 0.9987541926209867, 0.9988500239578338, 0.9989458552946809, 0.999041686631528, 0.9991375179683751, 0.9992333493052222, 0.9993291806420693, 0.9994250119789164, 0.9995208433157635, 0.9996166746526106, 0.9997125059894577, 0.9998083373263048, 0.9999041686631519, 0.999999999999999}, new char[]{' ', 'a', 'e', 'c', 'i', '<', 's', 'g', 'ż', 'd', 'T', 'o', '=', 'x', '6', 'w', 'n', 'r', 'l', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("a=", new ProportionalProbability( new double[]{0.9880952380952381, 1.0}, new char[]{'=', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("b ", new ProportionalProbability( new double[]{0.9852631578947368, 0.9857894736842105, 0.9863157894736843, 0.986842105263158, 0.9873684210526317, 0.9878947368421054, 0.9884210526315791, 0.9889473684210528, 0.9894736842105265, 0.9900000000000002, 0.9905263157894739, 0.9910526315789476, 0.9915789473684213, 0.992105263157895, 0.9926315789473688, 0.9931578947368425, 0.9936842105263162, 0.9942105263157899, 0.9947368421052636, 0.9952631578947373, 0.995789473684211, 0.9963157894736847, 0.9968421052631584, 0.9973684210526321, 0.9978947368421058, 0.9984210526315795, 0.9989473684210533, 0.999473684210527, 1.0000000000000007}, new char[]{'b', 's', ' ', 'e', 'D', 'i', 't', 'n', 'o', 'c', 'a', 'm', 'g', 'l', 'r', 'd', 'u', 'A', '.', 'p', 'P', 'I', 'h', 'E', 'q', 'v', 'y', 'w', ':'}) );
        twoCharacterInputWithUnknownOutput.put("a?", new ProportionalProbability( new double[]{0.9532520325203252, 0.9552845528455285, 0.9573170731707318, 0.9593495934959351, 0.9613821138211384, 0.9634146341463417, 0.9654471544715449, 0.9674796747967482, 0.9695121951219515, 0.9715447154471548, 0.9735772357723581, 0.9756097560975614, 0.9776422764227647, 0.979674796747968, 0.9817073170731713, 0.9837398373983746, 0.9857723577235779, 0.9878048780487811, 0.9898373983739844, 0.9918699186991877, 0.993902439024391, 0.9959349593495943, 0.9979674796747976, 1.0000000000000009}, new char[]{' ', '?', 's', 'i', 'n', 'a', 'e', 'f', 'r', 'u', 'd', ')', 'm', '(', 'c', 'o', 't', 'T', ':', 'b', 'p', 'w', 'g', '+'}) );
        twoCharacterInputWithUnknownOutput.put("aB", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'→', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("aC", new ProportionalProbability( new double[]{0.9166666666666666, 0.9333333333333333, 0.9500000000000001, 0.9666666666666668, 0.9833333333333335, 1.0000000000000002}, new char[]{'+', '0', 'C', 'a', 'e', ' '}) );
        twoCharacterInputWithUnknownOutput.put("b\'", new ProportionalProbability( new double[]{0.9333333333333333, 1.0}, new char[]{'\'', 's'}) );
        twoCharacterInputWithUnknownOutput.put("aF", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'F', ' '}) );
        twoCharacterInputWithUnknownOutput.put("b)", new ProportionalProbability( new double[]{0.977366255144033, 0.9794238683127573, 0.9814814814814816, 0.983539094650206, 0.9855967078189303, 0.9876543209876546, 0.9897119341563789, 0.9917695473251033, 0.9938271604938276, 0.9958847736625519, 0.9979423868312762, 1.0000000000000004}, new char[]{'r', ')', 'a', '(', 'u', 'c', 'b', 'x', 'n', 'm', 'i', 's'}) );
        twoCharacterInputWithUnknownOutput.put("aH", new ProportionalProbability( new double[]{0.8823529411764706, 0.9117647058823529, 0.9411764705882353, 0.9705882352941176, 1.0}, new char[]{'t', 'H', ' ', 'i', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("aI", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'I', ' '}) );
        twoCharacterInputWithUnknownOutput.put("b,", new ProportionalProbability( new double[]{0.976, 0.98, 0.984, 0.988, 0.992, 0.996, 1.0}, new char[]{',', 'r', ' ', 'c', 'a', 'n', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("b-", new ProportionalProbability( new double[]{0.9513513513513514, 0.9567567567567568, 0.9621621621621621, 0.9675675675675675, 0.9729729729729728, 0.9783783783783782, 0.9837837837837835, 0.9891891891891889, 0.9945945945945942, 0.9999999999999996}, new char[]{'-', ' ', 'o', 'n', 'a', 'b', 'f', 'l', 'i', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("b.", new ProportionalProbability( new double[]{0.9653179190751445, 0.9710982658959538, 0.9768786127167631, 0.9826589595375724, 0.9884393063583817, 0.994219653179191, 1.0000000000000002}, new char[]{'o', ' ', '.', 'w', 'e', 'c', 't'}) );
        twoCharacterInputWithUnknownOutput.put("aN", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'N', ' '}) );
        twoCharacterInputWithUnknownOutput.put("b/", new ProportionalProbability( new double[]{0.9340659340659341, 0.945054945054945, 0.956043956043956, 0.9670329670329669, 0.9780219780219779, 0.9890109890109888, 0.9999999999999998}, new char[]{'/', ' ', 'a', 'b', '2', '^', '='}) );
        twoCharacterInputWithUnknownOutput.put("aO", new ProportionalProbability( new double[]{0.9230769230769231, 0.9615384615384616, 1.0}, new char[]{'O', 'N', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("b1", new ProportionalProbability( new double[]{0.9642857142857143, 1.0}, new char[]{'1', ','}) );
    }

    private void initialiseTwoCharacterInputToUnknownOutputPart10(){
        twoCharacterInputWithUnknownOutput.put("b2", new ProportionalProbability( new double[]{0.95, 0.975, 1.0}, new char[]{'2', 'P', ','}) );
        twoCharacterInputWithUnknownOutput.put("b3", new ProportionalProbability( new double[]{0.875, 1.0}, new char[]{'3', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("aS", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'S', ' '}) );
        twoCharacterInputWithUnknownOutput.put("b;", new ProportionalProbability( new double[]{0.9736842105263158, 1.0}, new char[]{';', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("b<", new ProportionalProbability( new double[]{0.9949066213921901, 0.9966044142614601, 0.99830220713073, 1.0}, new char[]{' ', 'b', 'e', '<'}) );
        twoCharacterInputWithUnknownOutput.put("b=", new ProportionalProbability( new double[]{0.9836065573770492, 1.0}, new char[]{'=', '('}) );
        twoCharacterInputWithUnknownOutput.put("c ", new ProportionalProbability( new double[]{0.9966371338032723, 0.9967018043070556, 0.9967664748108388, 0.996831145314622, 0.9968958158184053, 0.9969604863221885, 0.9970251568259717, 0.9970898273297549, 0.9971544978335382, 0.9972191683373214, 0.9972838388411046, 0.9973485093448878, 0.9974131798486711, 0.9974778503524543, 0.9975425208562375, 0.9976071913600207, 0.997671861863804, 0.9977365323675872, 0.9978012028713704, 0.9978658733751536, 0.9979305438789369, 0.9979952143827201, 0.9980598848865033, 0.9981245553902865, 0.9981892258940698, 0.998253896397853, 0.9983185669016362, 0.9983832374054195, 0.9984479079092027, 0.9985125784129859, 0.9985772489167691, 0.9986419194205524, 0.9987065899243356, 0.9987712604281188, 0.998835930931902, 0.9989006014356853, 0.9989652719394685, 0.9990299424432517, 0.9990946129470349, 0.9991592834508182, 0.9992239539546014, 0.9992886244583846, 0.9993532949621678, 0.9994179654659511, 0.9994826359697343, 0.9995473064735175, 0.9996119769773008, 0.999676647481084, 0.9997413179848672, 0.9998059884886504, 0.9998706589924337, 0.9999353294962169, 1.0}, new char[]{' ', 'u', 'c', 'r', '(', 'i', 'f', 'v', 'o', 'n', 'e', ':', 'I', '.', 's', '\'', 'm', 'a', 't', '?', 'l', 'b', '^', '0', 'p', 'h', 'd', 'x', ',', 'g', 'F', 'q', 'y', 'M', 'w', '-', '&', '=', 'C', 'L', ']', 'k', '2', 'H', '7', '\"', ')', '4', '/', 'O', 'B', '²', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("a^", new ProportionalProbability( new double[]{0.9759036144578314, 0.9819277108433735, 0.9879518072289156, 0.9939759036144578, 0.9999999999999999}, new char[]{'^', 'm', '\"', 'v', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("b?", new ProportionalProbability( new double[]{0.9230769230769231, 0.9615384615384616, 1.0}, new char[]{'c', '?', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("aa", new ProportionalProbability( new double[]{0.9647058823529412, 0.9686274509803922, 0.9725490196078431, 0.9764705882352941, 0.9803921568627451, 0.984313725490196, 0.988235294117647, 0.992156862745098, 0.9960784313725489, 0.9999999999999999}, new char[]{'a', 'h', 'i', 'e', 'f', 's', 't', 'b', 'r', 'E'}) );
        twoCharacterInputWithUnknownOutput.put("ab", new ProportionalProbability( new double[]{0.9972650064776163, 0.9973129888201142, 0.9973609711626121, 0.99740895350511, 0.997456935847608, 0.9975049181901059, 0.9975529005326038, 0.9976008828751017, 0.9976488652175997, 0.9976968475600976, 0.9977448299025955, 0.9977928122450934, 0.9978407945875913, 0.9978887769300893, 0.9979367592725872, 0.9979847416150851, 0.998032723957583, 0.9980807063000809, 0.9981286886425789, 0.9981766709850768, 0.9982246533275747, 0.9982726356700726, 0.9983206180125705, 0.9983686003550685, 0.9984165826975664, 0.9984645650400643, 0.9985125473825622, 0.9985605297250602, 0.9986085120675581, 0.998656494410056, 0.9987044767525539, 0.9987524590950518, 0.9988004414375498, 0.9988484237800477, 0.9988964061225456, 0.9989443884650435, 0.9989923708075414, 0.9990403531500394, 0.9990883354925373, 0.9991363178350352, 0.9991843001775331, 0.999232282520031, 0.999280264862529, 0.9993282472050269, 0.9993762295475248, 0.9994242118900227, 0.9994721942325206, 0.9995201765750186, 0.9995681589175165, 0.9996161412600144, 0.9996641236025123, 0.9997121059450103, 0.9997600882875082, 0.9998080706300061, 0.999856052972504, 0.9999040353150019, 0.9999520176574999, 0.9999999999999978}, new char[]{'b', 'a', 'd', 'w', 'n', 'r', ' ', '\"', 'A', 't', 'l', 'f', 'e', 'i', 'v', 'c', '(', 'y', '.', 'g', 'u', 'k', 'm', 'h', 'o', 's', 'p', '\'', '1', 'C', 'S', ':', 'D', ')', 'T', 'M', 'H', '=', ',', '3', '2', 'U', ';', 'J', 'z', '-', 'I', 'G', 'E', 'à', 'F', 'j', 'L', 'x', '/', 'B', '¿', '%'}) );
        twoCharacterInputWithUnknownOutput.put("ac", new ProportionalProbability( new double[]{0.998702742772424, 0.9987233341569887, 0.9987439255415533, 0.998764516926118, 0.9987851083106827, 0.9988056996952474, 0.998826291079812, 0.9988468824643767, 0.9988674738489414, 0.998888065233506, 0.9989086566180707, 0.9989292480026354, 0.9989498393872001, 0.9989704307717647, 0.9989910221563294, 0.9990116135408941, 0.9990322049254587, 0.9990527963100234, 0.9990733876945881, 0.9990939790791528, 0.9991145704637174, 0.9991351618482821, 0.9991557532328468, 0.9991763446174114, 0.9991969360019761, 0.9992175273865408, 0.9992381187711055, 0.9992587101556701, 0.9992793015402348, 0.9992998929247995, 0.9993204843093642, 0.9993410756939288, 0.9993616670784935, 0.9993822584630582, 0.9994028498476228, 0.9994234412321875, 0.9994440326167522, 0.9994646240013169, 0.9994852153858815, 0.9995058067704462, 0.9995263981550109, 0.9995469895395755, 0.9995675809241402, 0.9995881723087049, 0.9996087636932696, 0.9996293550778342, 0.9996499464623989, 0.9996705378469636, 0.9996911292315283, 0.9997117206160929, 0.9997323120006576, 0.9997529033852223, 0.9997734947697869, 0.9997940861543516, 0.9998146775389163, 0.999835268923481, 0.9998558603080456, 0.9998764516926103, 0.999897043077175, 0.9999176344617396, 0.9999382258463043, 0.999958817230869, 0.9999794086154337, 0.9999999999999983}, new char[]{'c', 'i', 'a', ' ', 'p', 't', 's', 'o', 'e', 'u', 'H', 'h', 'm', 'd', 'D', 'r', 'l', 'b', '\"', 'v', ',', 'y', 'A', 'n', 'k', '.', 'w', '0', 'f', 'x', 'g', '9', 'S', '-', ')', 'T', 'G', 'z', '6', ':', '(', 'q', '%', '_', 'B', '7', 'I', 'F', '/', 'P', 'C', '…', '=', 'E', '2', '+', '1', 'U', '4', '5', '&', 'M', 'Q', '\''}) );
        twoCharacterInputWithUnknownOutput.put("ad", new ProportionalProbability( new double[]{0.9976494960360145, 0.9976893350862516, 0.9977291741364887, 0.9977690131867257, 0.9978088522369628, 0.9978486912871999, 0.997888530337437, 0.997928369387674, 0.9979682084379111, 0.9980080474881482, 0.9980478865383853, 0.9980877255886224, 0.9981275646388594, 0.9981674036890965, 0.9982072427393336, 0.9982470817895707, 0.9982869208398077, 0.9983267598900448, 0.9983665989402819, 0.998406437990519, 0.9984462770407561, 0.9984861160909931, 0.9985259551412302, 0.9985657941914673, 0.9986056332417044, 0.9986454722919414, 0.9986853113421785, 0.9987251503924156, 0.9987649894426527, 0.9988048284928898, 0.9988446675431268, 0.9988845065933639, 0.998924345643601, 0.9989641846938381, 0.9990040237440752, 0.9990438627943122, 0.9990837018445493, 0.9991235408947864, 0.9991633799450235, 0.9992032189952605, 0.9992430580454976, 0.9992828970957347, 0.9993227361459718, 0.9993625751962089, 0.9994024142464459, 0.999442253296683, 0.9994820923469201, 0.9995219313971572, 0.9995617704473942, 0.9996016094976313, 0.9996414485478684, 0.9996812875981055, 0.9997211266483426, 0.9997609656985796, 0.9998008047488167, 0.9998406437990538, 0.9998804828492909, 0.999920321899528, 0.999960160949765, 1.000000000000002}, new char[]{'d', 'a', ' ', 'r', '\"', 't', 'N', 'C', 'g', 'o', 'h', 'e', 'y', 'n', 's', '+', 'i', 'w', 'l', 'c', 'f', '.', 'u', ':', 'p', 'G', '1', '\'', 'm', 'b', 'L', ',', 'k', 'R', '4', 'T', 'I', 'v', 'M', 'B', '’', 'x', '-', 'A', '0', 'O', 'D', 'W', '%', ')', 'E', 'q', 'j', '(', '3', 'S', 'U', 'P', 'H', '/'}) );
        twoCharacterInputWithUnknownOutput.put("ae", new ProportionalProbability( new double[]{0.9803921568627451, 0.9814814814814814, 0.9825708061002177, 0.9836601307189541, 0.9847494553376904, 0.9858387799564268, 0.9869281045751631, 0.9880174291938995, 0.9891067538126358, 0.9901960784313721, 0.9912854030501085, 0.9923747276688448, 0.9934640522875812, 0.9945533769063175, 0.9956427015250539, 0.9967320261437902, 0.9978213507625265, 0.9989106753812629, 0.9999999999999992}, new char[]{'e', ' ', 'a', 'o', 'l', 'y', 'h', 'i', 'n', 's', '(', 'm', 'c', '\"', 'p', 't', 'r', 'g', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("c\'", new ProportionalProbability( new double[]{0.9565217391304348, 0.9673913043478262, 0.9782608695652175, 0.9891304347826089, 1.0000000000000002}, new char[]{'\'', 'e', ' ', 's', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("af", new ProportionalProbability( new double[]{0.9948727687048994, 0.9950626661602735, 0.9952525636156476, 0.9954424610710217, 0.9956323585263959, 0.99582225598177, 0.9960121534371441, 0.9962020508925182, 0.9963919483478924, 0.9965818458032665, 0.9967717432586406, 0.9969616407140147, 0.9971515381693888, 0.997341435624763, 0.9975313330801371, 0.9977212305355112, 0.9979111279908853, 0.9981010254462594, 0.9982909229016336, 0.9984808203570077, 0.9986707178123818, 0.9988606152677559, 0.9990505127231301, 0.9992404101785042, 0.9994303076338783, 0.9996202050892524, 0.9998101025446265, 1.0000000000000007}, new char[]{'f', 'a', 'v', 'u', ' ', 'm', 'd', 'i', 'c', 'g', 'b', 's', '\"', '-', 'o', 'l', 'n', 'e', 'h', 't', 'r', ',', 'y', 'w', 'p', '.', 'x', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("c(", new ProportionalProbability( new double[]{0.9904761904761905, 0.9936507936507937, 0.9968253968253968, 1.0}, new char[]{'(', 's', 'c', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("ag", new ProportionalProbability( new double[]{0.9976284584980237, 0.997674959311788, 0.9977214601255522, 0.9977679609393164, 0.9978144617530806, 0.9978609625668449, 0.9979074633806091, 0.9979539641943733, 0.9980004650081375, 0.9980469658219018, 0.998093466635666, 0.9981399674494302, 0.9981864682631945, 0.9982329690769587, 0.9982794698907229, 0.9983259707044871, 0.9983724715182514, 0.9984189723320156, 0.9984654731457798, 0.998511973959544, 0.9985584747733083, 0.9986049755870725, 0.9986514764008367, 0.998697977214601, 0.9987444780283652, 0.9987909788421294, 0.9988374796558936, 0.9988839804696579, 0.9989304812834221, 0.9989769820971863, 0.9990234829109506, 0.9990699837247148, 0.999116484538479, 0.9991629853522432, 0.9992094861660075, 0.9992559869797717, 0.9993024877935359, 0.9993489886073001, 0.9993954894210644, 0.9994419902348286, 0.9994884910485928, 0.9995349918623571, 0.9995814926761213, 0.9996279934898855, 0.9996744943036497, 0.999720995117414, 0.9997674959311782, 0.9998139967449424, 0.9998604975587067, 0.9999069983724709, 0.9999534991862351, 0.9999999999999993}, new char[]{'g', 'v', ' ', 't', 'w', 'e', 'i', 'o', 'a', 'S', 'r', 'c', 'm', 'u', 'n', 'd', '\"', 'T', 'l', 'E', 'f', 's', 'M', 'k', 'b', 'x', 'h', 'p', 'y', ',', '(', '.', '∑', 'W', 'N', 'Q', 'z', 'B', '4', '-', 'U', 'D', 'P', ')', ':', '0', 'O', '1', 'C', 'q', 'j', '5'}) );
        twoCharacterInputWithUnknownOutput.put("c)", new ProportionalProbability( new double[]{0.9745762711864406, 0.9766949152542372, 0.9788135593220338, 0.9809322033898304, 0.983050847457627, 0.9851694915254237, 0.9872881355932203, 0.9894067796610169, 0.9915254237288135, 0.9936440677966101, 0.9957627118644067, 0.9978813559322033, 0.9999999999999999}, new char[]{')', 'n', 'l', 't', 'e', ' ', 's', 'y', 'o', '/', 'm', 'u', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("ah", new ProportionalProbability( new double[]{0.9888751545117429, 0.9894932014833128, 0.9901112484548826, 0.9907292954264525, 0.9913473423980224, 0.9919653893695922, 0.9925834363411621, 0.993201483312732, 0.9938195302843018, 0.9944375772558717, 0.9950556242274415, 0.9956736711990114, 0.9962917181705813, 0.9969097651421511, 0.997527812113721, 0.9981458590852909, 0.9987639060568607, 0.9993819530284306, 1.0000000000000004}, new char[]{'h', 'a', 'o', 'y', ' ', '-', 't', 'e', 'f', '1', ';', 'n', 'u', 'i', 'm', 'K', 'G', 'l', ')'}) );
        twoCharacterInputWithUnknownOutput.put("c*", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'*', 't'}) );
        twoCharacterInputWithUnknownOutput.put("ai", new ProportionalProbability( new double[]{0.9981055867319584, 0.9981413303785251, 0.9981770740250919, 0.9982128176716587, 0.9982485613182255, 0.9982843049647923, 0.998320048611359, 0.9983557922579258, 0.9983915359044926, 0.9984272795510594, 0.9984630231976261, 0.9984987668441929, 0.9985345104907597, 0.9985702541373265, 0.9986059977838933, 0.99864174143046, 0.9986774850770268, 0.9987132287235936, 0.9987489723701604, 0.9987847160167271, 0.9988204596632939, 0.9988562033098607, 0.9988919469564275, 0.9989276906029942, 0.998963434249561, 0.9989991778961278, 0.9990349215426946, 0.9990706651892614, 0.9991064088358281, 0.9991421524823949, 0.9991778961289617, 0.9992136397755285, 0.9992493834220952, 0.999285127068662, 0.9993208707152288, 0.9993566143617956, 0.9993923580083623, 0.9994281016549291, 0.9994638453014959, 0.9994995889480627, 0.9995353325946295, 0.9995710762411962, 0.999606819887763, 0.9996425635343298, 0.9996783071808966, 0.9997140508274633, 0.9997497944740301, 0.9997855381205969, 0.9998212817671637, 0.9998570254137304, 0.9998927690602972, 0.999928512706864, 0.9999642563534308, 0.9999999999999976}, new char[]{'i', 't', 'y', 'e', 'u', '\"', ' ', '/', 'l', 'a', 'n', 'o', 'h', 's', 'd', 'r', '.', 'c', ',', 'w', 'f', 'b', 'v', 'm', 'p', 'x', 'z', '5', 'C', 'j', '\'', 'O', '-', 'W', 'g', 'B', 'S', 'k', '&', '?', '(', 'F', '%', 'D', 'G', 'T', '1', 'E', '2', ';', '9', 'L', ')', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("aj", new ProportionalProbability( new double[]{0.9842622950819672, 0.9849180327868852, 0.9855737704918032, 0.9862295081967212, 0.9868852459016392, 0.9875409836065572, 0.9881967213114752, 0.9888524590163932, 0.9895081967213112, 0.9901639344262292, 0.9908196721311472, 0.9914754098360652, 0.9921311475409832, 0.9927868852459012, 0.9934426229508192, 0.9940983606557372, 0.9947540983606552, 0.9954098360655732, 0.9960655737704912, 0.9967213114754092, 0.9973770491803272, 0.9980327868852452, 0.9986885245901632, 0.9993442622950812, 0.9999999999999992}, new char[]{'j', 'a', 'n', 'b', 'c', 's', '\"', 'm', 't', 'i', 'o', 'd', 'v', 'l', ' ', 'h', 'g', 'e', 'f', 'r', 'k', 'y', ':', 'p', ','}) );
        twoCharacterInputWithUnknownOutput.put("c,", new ProportionalProbability( new double[]{0.9619238476953907, 0.9639278557114228, 0.9659318637274549, 0.9679358717434869, 0.969939879759519, 0.9719438877755511, 0.9739478957915831, 0.9759519038076152, 0.9779559118236473, 0.9799599198396793, 0.9819639278557114, 0.9839679358717435, 0.9859719438877755, 0.9879759519038076, 0.9899799599198397, 0.9919839679358717, 0.9939879759519038, 0.9959919839679359, 0.9979959919839679, 1.0}, new char[]{',', 'e', 'c', 'r', ' ', 'h', 'i', 'd', 's', 'l', 't', 'v', '.', 'u', 'S', 'g', 'n', 'a', 'b', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("ak", new ProportionalProbability( new double[]{0.996420704845815, 0.9965124816446402, 0.9966042584434655, 0.9966960352422907, 0.9967878120411159, 0.9968795888399411, 0.9969713656387663, 0.9970631424375915, 0.9971549192364167, 0.997246696035242, 0.9973384728340672, 0.9974302496328924, 0.9975220264317176, 0.9976138032305428, 0.997705580029368, 0.9977973568281933, 0.9978891336270185, 0.9979809104258437, 0.9980726872246689, 0.9981644640234941, 0.9982562408223193, 0.9983480176211446, 0.9984397944199698, 0.998531571218795, 0.9986233480176202, 0.9987151248164454, 0.9988069016152706, 0.9988986784140959, 0.9989904552129211, 0.9990822320117463, 0.9991740088105715, 0.9992657856093967, 0.9993575624082219, 0.9994493392070471, 0.9995411160058724, 0.9996328928046976, 0.9997246696035228, 0.999816446402348, 0.9999082232011732, 0.9999999999999984}, new char[]{'u', 'k', 'm', 'i', 'r', ' ', 'h', '\"', 's', 'e', 'o', 'c', 'w', 't', 'y', 'l', 'a', 'n', 'f', 'g', 'd', 'b', 'A', '.', ',', 'j', 'p', ':', 'q', '\'', 'S', 'C', 'T', ')', 'E', 'v', 'K', 'L', '(', 'J'}) );
        twoCharacterInputWithUnknownOutput.put("c-", new ProportionalProbability( new double[]{0.9027777777777778, 0.9166666666666666, 0.9305555555555555, 0.9444444444444443, 0.9583333333333331, 0.972222222222222, 0.9861111111111108, 0.9999999999999997}, new char[]{'-', 'o', ' ', 'u', 'e', 'a', 'c', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("al", new ProportionalProbability( new double[]{0.9993128596034742, 0.9993220214754278, 0.9993311833473815, 0.9993403452193351, 0.9993495070912888, 0.9993586689632424, 0.9993678308351961, 0.9993769927071497, 0.9993861545791034, 0.9993953164510571, 0.9994044783230107, 0.9994136401949644, 0.999422802066918, 0.9994319639388717, 0.9994411258108253, 0.999450287682779, 0.9994594495547326, 0.9994686114266863, 0.99947777329864, 0.9994869351705936, 0.9994960970425473, 0.9995052589145009, 0.9995144207864546, 0.9995235826584082, 0.9995327445303619, 0.9995419064023155, 0.9995510682742692, 0.9995602301462229, 0.9995693920181765, 0.9995785538901302, 0.9995877157620838, 0.9995968776340375, 0.9996060395059911, 0.9996152013779448, 0.9996243632498985, 0.9996335251218521, 0.9996426869938058, 0.9996518488657594, 0.9996610107377131, 0.9996701726096667, 0.9996793344816204, 0.999688496353574, 0.9996976582255277, 0.9997068200974814, 0.999715981969435, 0.9997251438413887, 0.9997343057133423, 0.999743467585296, 0.9997526294572496, 0.9997617913292033, 0.9997709532011569, 0.9997801150731106, 0.9997892769450643, 0.9997984388170179, 0.9998076006889716, 0.9998167625609252, 0.9998259244328789, 0.9998350863048325, 0.9998442481767862, 0.9998534100487398, 0.9998625719206935, 0.9998717337926472, 0.9998808956646008, 0.9998900575365545, 0.9998992194085081, 0.9999083812804618, 0.9999175431524154, 0.9999267050243691, 0.9999358668963227, 0.9999450287682764, 0.9999541906402301, 0.9999633525121837, 0.9999725143841374, 0.999981676256091, 0.9999908381280447, 0.9999999999999983}, new char[]{'l', 'a', ' ', 'r', 't', 'e', 'h', 'i', 's', 'm', 'o', 'n', '\"', ',', 'f', 'y', 'b', 'c', 'g', '-', 'q', '.', 'u', 'v', 'S', 'w', 'p', ')', 'R', '/', 'x', 'A', 'C', ';', '’', 'd', 'j', 'M', 'U', 'k', 'G', '(', 'z', 'L', 'Y', 'N', '•', '2', ':', 'I', 'B', 'O', '4', '0', 'P', '&', '5', '6', 'F', 'E', '\'', 'T', '[', 'H', 'D', '?', '+', '9', '3', '=', '1', '_', ']', '>', 'μ', 'K'}) );
        twoCharacterInputWithUnknownOutput.put("c.", new ProportionalProbability( new double[]{0.9730820995962315, 0.9744279946164199, 0.9757738896366084, 0.9771197846567968, 0.9784656796769853, 0.9798115746971737, 0.9811574697173622, 0.9825033647375506, 0.9838492597577391, 0.9851951547779275, 0.986541049798116, 0.9878869448183044, 0.9892328398384929, 0.9905787348586813, 0.9919246298788698, 0.9932705248990582, 0.9946164199192467, 0.9959623149394351, 0.9973082099596235, 0.998654104979812, 1.0000000000000004}, new char[]{'.', 'e', 'r', 'n', 'm', 'i', ' ', 'a', 'D', 'c', 'y', ')', 's', 'l', 'o', 'f', 'v', 't', 'z', 'u', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("am", new ProportionalProbability( new double[]{0.9977559187642593, 0.9977933201181883, 0.9978307214721174, 0.9978681228260464, 0.9979055241799755, 0.9979429255339045, 0.9979803268878336, 0.9980177282417626, 0.9980551295956916, 0.9980925309496207, 0.9981299323035497, 0.9981673336574788, 0.9982047350114078, 0.9982421363653369, 0.9982795377192659, 0.998316939073195, 0.998354340427124, 0.998391741781053, 0.9984291431349821, 0.9984665444889111, 0.9985039458428402, 0.9985413471967692, 0.9985787485506983, 0.9986161499046273, 0.9986535512585564, 0.9986909526124854, 0.9987283539664145, 0.9987657553203435, 0.9988031566742726, 0.9988405580282016, 0.9988779593821306, 0.9989153607360597, 0.9989527620899887, 0.9989901634439178, 0.9990275647978468, 0.9990649661517759, 0.9991023675057049, 0.999139768859634, 0.999177170213563, 0.999214571567492, 0.9992519729214211, 0.9992893742753501, 0.9993267756292792, 0.9993641769832082, 0.9994015783371373, 0.9994389796910663, 0.9994763810449954, 0.9995137823989244, 0.9995511837528535, 0.9995885851067825, 0.9996259864607115, 0.9996633878146406, 0.9997007891685696, 0.9997381905224987, 0.9997755918764277, 0.9998129932303568, 0.9998503945842858, 0.9998877959382149, 0.9999251972921439, 0.999962598646073, 1.000000000000002}, new char[]{'m', 'o', 'i', 'a', 'n', 'r', 'f', 'c', 't', 's', 'h', ',', 'k', 'e', '\"', 'g', 'l', ' ', 'w', 'T', 'd', 'y', 'p', 'u', '/', 'b', '÷', 'z', 'A', 'S', 'v', 'P', 'D', '.', 'L', 'W', '\'', 'j', '7', 'F', 'I', 'C', ')', '-', 'B', 'x', '2', 'E', 'Y', '5', ':', 'M', '*', '3', '1', 'X', 'q', 'R', 'U', 'N', '+'}) );
        twoCharacterInputWithUnknownOutput.put("c/", new ProportionalProbability( new double[]{0.957983193277311, 0.9663865546218487, 0.9747899159663865, 0.9831932773109243, 0.9915966386554621, 0.9999999999999999}, new char[]{'c', '/', 'l', ' ', 'x', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("an", new ProportionalProbability( new double[]{0.9995091593293056, 0.9995152190906722, 0.9995212788520388, 0.9995273386134054, 0.999533398374772, 0.9995394581361385, 0.9995455178975051, 0.9995515776588717, 0.9995576374202383, 0.9995636971816049, 0.9995697569429715, 0.999575816704338, 0.9995818764657046, 0.9995879362270712, 0.9995939959884378, 0.9996000557498044, 0.999606115511171, 0.9996121752725375, 0.9996182350339041, 0.9996242947952707, 0.9996303545566373, 0.9996364143180039, 0.9996424740793705, 0.999648533840737, 0.9996545936021036, 0.9996606533634702, 0.9996667131248368, 0.9996727728862034, 0.99967883264757, 0.9996848924089365, 0.9996909521703031, 0.9996970119316697, 0.9997030716930363, 0.9997091314544029, 0.9997151912157695, 0.999721250977136, 0.9997273107385026, 0.9997333704998692, 0.9997394302612358, 0.9997454900226024, 0.999751549783969, 0.9997576095453355, 0.9997636693067021, 0.9997697290680687, 0.9997757888294353, 0.9997818485908019, 0.9997879083521685, 0.999793968113535, 0.9998000278749016, 0.9998060876362682, 0.9998121473976348, 0.9998182071590014, 0.999824266920368, 0.9998303266817345, 0.9998363864431011, 0.9998424462044677, 0.9998485059658343, 0.9998545657272009, 0.9998606254885675, 0.999866685249934, 0.9998727450113006, 0.9998788047726672, 0.9998848645340338, 0.9998909242954004, 0.999896984056767, 0.9999030438181336, 0.9999091035795001, 0.9999151633408667, 0.9999212231022333, 0.9999272828635999, 0.9999333426249665, 0.999939402386333, 0.9999454621476996, 0.9999515219090662, 0.9999575816704328, 0.9999636414317994, 0.999969701193166, 0.9999757609545326, 0.9999818207158991, 0.9999878804772657, 0.9999939402386323, 0.9999999999999989}, new char[]{'n', 'i', 'y', 's', 'r', 'a', '\"', 'h', ' ', 'e', 'm', 'p', 'x', 'o', 'f', 'g', 'D', 't', 'c', 'd', 'J', 'P', 'S', 'u', '.', 'v', 'l', 'b', 'R', 'O', 'w', 'T', 'k', 'A', '-', '!', ')', ',', ';', 'K', 'E', '0', '1', '(', ':', 'G', 'C', 'Y', '2', 'q', '/', '6', '\'', 'I', 'F', 'M', 'H', 'B', '=', '?', 'j', '3', 'z', 'N', 'U', '9', '&', '8', 'ż', 'Q', ']', 'W', '4', '…', '5', '’', 'α', 'V', '*', '÷', '^', '+'}) );
        twoCharacterInputWithUnknownOutput.put("ao", new ProportionalProbability( new double[]{0.9904458598726115, 0.9936305732484076, 0.9968152866242038, 1.0}, new char[]{'o', 'a', 's', 't'}) );
        twoCharacterInputWithUnknownOutput.put("ap", new ProportionalProbability( new double[]{0.9970813370780329, 0.9971364061897682, 0.9971914753015034, 0.9972465444132387, 0.9973016135249739, 0.9973566826367092, 0.9974117517484444, 0.9974668208601797, 0.9975218899719149, 0.9975769590836502, 0.9976320281953854, 0.9976870973071207, 0.9977421664188559, 0.9977972355305912, 0.9978523046423264, 0.9979073737540617, 0.9979624428657969, 0.9980175119775322, 0.9980725810892674, 0.9981276502010027, 0.9981827193127379, 0.9982377884244732, 0.9982928575362084, 0.9983479266479437, 0.998402995759679, 0.9984580648714142, 0.9985131339831494, 0.9985682030948847, 0.99862327220662, 0.9986783413183552, 0.9987334104300905, 0.9987884795418257, 0.998843548653561, 0.9988986177652962, 0.9989536868770315, 0.9990087559887667, 0.999063825100502, 0.9991188942122372, 0.9991739633239725, 0.9992290324357077, 0.999284101547443, 0.9993391706591782, 0.9993942397709135, 0.9994493088826487, 0.999504377994384, 0.9995594471061192, 0.9996145162178545, 0.9996695853295897, 0.999724654441325, 0.9997797235530602, 0.9998347926647955, 0.9998898617765307, 0.999944930888266, 1.000000000000001}, new char[]{'p', ' ', 't', 'l', 'r', 'a', 'n', '\"', 'o', 'y', 'e', 'u', 'P', 'i', 'w', 'c', 'g', 'f', 'b', 's', 'm', 'd', 'A', 'h', 'L', 'C', '.', ',', 'N', 'q', ')', 'T', '-', 'v', 'D', 'k', 'G', 'x', ':', 'H', '1', 'z', '/', 'F', '(', 'I', 'B', 'R', 'S', 'ֹ', '3', 'O', 'E', '\''}) );
        twoCharacterInputWithUnknownOutput.put("aq", new ProportionalProbability( new double[]{0.9675925925925926, 0.9699074074074073, 0.9722222222222221, 0.9745370370370369, 0.9768518518518516, 0.9791666666666664, 0.9814814814814812, 0.983796296296296, 0.9861111111111107, 0.9884259259259255, 0.9907407407407403, 0.993055555555555, 0.9953703703703698, 0.9976851851851846, 0.9999999999999993}, new char[]{'+', 'q', ' ', 'a', 'u', 's', 'n', 'y', '(', 'i', 'c', 'h', ')', ']', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("ar", new ProportionalProbability( new double[]{0.9993312900529395, 0.9993405776910932, 0.9993498653292469, 0.9993591529674005, 0.9993684406055542, 0.9993777282437079, 0.9993870158818615, 0.9993963035200152, 0.9994055911581688, 0.9994148787963225, 0.9994241664344762, 0.9994334540726298, 0.9994427417107835, 0.9994520293489372, 0.9994613169870908, 0.9994706046252445, 0.9994798922633982, 0.9994891799015518, 0.9994984675397055, 0.9995077551778592, 0.9995170428160128, 0.9995263304541665, 0.9995356180923202, 0.9995449057304738, 0.9995541933686275, 0.9995634810067812, 0.9995727686449348, 0.9995820562830885, 0.9995913439212422, 0.9996006315593958, 0.9996099191975495, 0.9996192068357032, 0.9996284944738568, 0.9996377821120105, 0.9996470697501642, 0.9996563573883178, 0.9996656450264715, 0.9996749326646251, 0.9996842203027788, 0.9996935079409325, 0.9997027955790861, 0.9997120832172398, 0.9997213708553935, 0.9997306584935471, 0.9997399461317008, 0.9997492337698545, 0.9997585214080081, 0.9997678090461618, 0.9997770966843155, 0.9997863843224691, 0.9997956719606228, 0.9998049595987765, 0.9998142472369301, 0.9998235348750838, 0.9998328225132375, 0.9998421101513911, 0.9998513977895448, 0.9998606854276985, 0.9998699730658521, 0.9998792607040058, 0.9998885483421595, 0.9998978359803131, 0.9999071236184668, 0.9999164112566205, 0.9999256988947741, 0.9999349865329278, 0.9999442741710814, 0.9999535618092351, 0.9999628494473888, 0.9999721370855424, 0.9999814247236961, 0.9999907123618498, 1.0000000000000033}, new char[]{'r', 's', 't', 'T', 'p', 'y', 'f', ' ', 'o', 'm', 'a', '\"', 'g', 'n', 'c', 'i', 'u', 'l', '.', ',', 'x', 'e', 'd', 'b', 'v', 'h', 'q', '3', '1', 'k', 'w', 'Y', '-', '8', 'A', ':', 'O', '/', 'G', ')', 'M', '?', 'H', 'F', '(', '\'', 'S', 'D', 'B', '9', 'C', 'R', 'W', '…', 'j', 'K', 'z', 'I', 'E', '2', 'P', '7', 'U', '&', 'L', 'V', 'N', '0', '5', '²', '4', ';', '='}) );
        twoCharacterInputWithUnknownOutput.put("as", new ProportionalProbability( new double[]{0.998874331634408, 0.9988899659172634, 0.9989056002001189, 0.9989212344829743, 0.9989368687658298, 0.9989525030486852, 0.9989681373315407, 0.9989837716143961, 0.9989994058972516, 0.999015040180107, 0.9990306744629625, 0.9990463087458179, 0.9990619430286733, 0.9990775773115288, 0.9990932115943842, 0.9991088458772397, 0.9991244801600951, 0.9991401144429506, 0.999155748725806, 0.9991713830086615, 0.9991870172915169, 0.9992026515743724, 0.9992182858572278, 0.9992339201400833, 0.9992495544229387, 0.9992651887057942, 0.9992808229886496, 0.9992964572715051, 0.9993120915543605, 0.999327725837216, 0.9993433601200714, 0.9993589944029269, 0.9993746286857823, 0.9993902629686378, 0.9994058972514932, 0.9994215315343487, 0.9994371658172041, 0.9994528001000595, 0.999468434382915, 0.9994840686657704, 0.9994997029486259, 0.9995153372314813, 0.9995309715143368, 0.9995466057971922, 0.9995622400800477, 0.9995778743629031, 0.9995935086457586, 0.999609142928614, 0.9996247772114695, 0.9996404114943249, 0.9996560457771804, 0.9996716800600358, 0.9996873143428913, 0.9997029486257467, 0.9997185829086022, 0.9997342171914576, 0.9997498514743131, 0.9997654857571685, 0.999781120040024, 0.9997967543228794, 0.9998123886057348, 0.9998280228885903, 0.9998436571714457, 0.9998592914543012, 0.9998749257371566, 0.9998905600200121, 0.9999061943028675, 0.999921828585723, 0.9999374628685784, 0.9999530971514339, 0.9999687314342893, 0.9999843657171448, 1.0000000000000002}, new char[]{'s', '\"', 'a', 'e', 'u', ' ', 'c', 'o', 'n', 't', 'm', 'd', ':', 'i', 'h', 'r', 'f', 'p', 'l', 'k', 'g', 'w', '\'', 'v', '.', 'b', 'y', ',', 'E', '(', '3', '=', '[', '-', 'J', 'L', 'O', 'H', 'D', 'j', '_', 'T', ')', '2', '1', '0', 'C', 'U', '?', 'F', 'A', 'R', 'W', 'V', 'z', 'x', '8', 'B', 'G', 'N', 'q', 'S', 'M', '∞', '%', 'I', 'P', 'K', 'ä', '…', ';', '7', '6'}) );
        twoCharacterInputWithUnknownOutput.put("at", new ProportionalProbability( new double[]{0.999482679098989, 0.9994889118809289, 0.9994951446628688, 0.9995013774448087, 0.9995076102267486, 0.9995138430086885, 0.9995200757906284, 0.9995263085725683, 0.9995325413545082, 0.9995387741364481, 0.999545006918388, 0.9995512397003279, 0.9995574724822678, 0.9995637052642077, 0.9995699380461476, 0.9995761708280875, 0.9995824036100274, 0.9995886363919673, 0.9995948691739072, 0.9996011019558471, 0.999607334737787, 0.9996135675197269, 0.9996198003016667, 0.9996260330836066, 0.9996322658655465, 0.9996384986474864, 0.9996447314294263, 0.9996509642113662, 0.9996571969933061, 0.999663429775246, 0.9996696625571859, 0.9996758953391258, 0.9996821281210657, 0.9996883609030056, 0.9996945936849455, 0.9997008264668854, 0.9997070592488253, 0.9997132920307652, 0.9997195248127051, 0.999725757594645, 0.9997319903765849, 0.9997382231585248, 0.9997444559404647, 0.9997506887224046, 0.9997569215043445, 0.9997631542862844, 0.9997693870682243, 0.9997756198501642, 0.9997818526321041, 0.999788085414044, 0.9997943181959839, 0.9998005509779238, 0.9998067837598636, 0.9998130165418035, 0.9998192493237434, 0.9998254821056833, 0.9998317148876232, 0.9998379476695631, 0.999844180451503, 0.9998504132334429, 0.9998566460153828, 0.9998628787973227, 0.9998691115792626, 0.9998753443612025, 0.9998815771431424, 0.9998878099250823, 0.9998940427070222, 0.9999002754889621, 0.999906508270902, 0.9999127410528419, 0.9999189738347818, 0.9999252066167217, 0.9999314393986616, 0.9999376721806015, 0.9999439049625414, 0.9999501377444813, 0.9999563705264212, 0.9999626033083611, 0.999968836090301, 0.9999750688722409, 0.9999813016541808, 0.9999875344361207, 0.9999937672180605, 1.0000000000000004}, new char[]{'t', 'R', 'c', ' ', 'a', '\"', '-', 'b', 'e', 'u', 'r', 'm', 's', 'n', 'p', ',', 'l', 'd', 'i', 'g', 'y', 'o', 'P', '=', 'h', 'w', 'A', '\'', 'v', 'S', '5', '3', '2', 'E', 'X', '.', 'f', 'k', 'T', '…', '/', 'W', 'M', 'L', 'C', 'q', '1', 'í', 'x', '+', 'U', '(', '?', 'K', ':', 'O', 'V', ')', '4', 'D', 'G', 'I', 'j', '7', 'H', '&', 'é', 'B', 'Z', 'α', ';', 'ה', '<', 'z', 'N', 'F', '°', 'J', '∆', '²', '0', '*', '_', '%'}) );
        twoCharacterInputWithUnknownOutput.put("au", new ProportionalProbability( new double[]{0.9964470010997377, 0.9965315963116487, 0.9966161915235596, 0.9967007867354706, 0.9967853819473815, 0.9968699771592925, 0.9969545723712034, 0.9970391675831144, 0.9971237627950253, 0.9972083580069363, 0.9972929532188473, 0.9973775484307582, 0.9974621436426692, 0.9975467388545801, 0.9976313340664911, 0.997715929278402, 0.997800524490313, 0.9978851197022239, 0.9979697149141349, 0.9980543101260458, 0.9981389053379568, 0.9982235005498677, 0.9983080957617787, 0.9983926909736897, 0.9984772861856006, 0.9985618813975116, 0.9986464766094225, 0.9987310718213335, 0.9988156670332444, 0.9989002622451554, 0.9989848574570663, 0.9990694526689773, 0.9991540478808882, 0.9992386430927992, 0.9993232383047101, 0.9994078335166211, 0.9994924287285321, 0.999577023940443, 0.999661619152354, 0.9997462143642649, 0.9998308095761759, 0.9999154047880868, 0.9999999999999978}, new char[]{'u', 'a', 'l', 'o', 'h', ' ', 's', 't', 'm', 'A', 'b', 'y', 'n', 'v', '\"', 'e', 'r', 'i', 'g', '.', 'f', 'd', 'w', 'c', 'C', 'p', '-', '+', '3', '\'', ',', 'U', '>', 'V', ')', '*', 'x', '(', 'j', 'M', 'W', 'k', 'ś'}) );
        twoCharacterInputWithUnknownOutput.put("av", new ProportionalProbability( new double[]{0.9974499315835302, 0.9975121283741758, 0.9975743251648214, 0.9976365219554669, 0.9976987187461125, 0.997760915536758, 0.9978231123274036, 0.9978853091180492, 0.9979475059086947, 0.9980097026993403, 0.9980718994899859, 0.9981340962806314, 0.998196293071277, 0.9982584898619226, 0.9983206866525681, 0.9983828834432137, 0.9984450802338593, 0.9985072770245048, 0.9985694738151504, 0.9986316706057959, 0.9986938673964415, 0.9987560641870871, 0.9988182609777326, 0.9988804577683782, 0.9989426545590238, 0.9990048513496693, 0.9990670481403149, 0.9991292449309604, 0.999191441721606, 0.9992536385122516, 0.9993158353028971, 0.9993780320935427, 0.9994402288841883, 0.9995024256748338, 0.9995646224654794, 0.999626819256125, 0.9996890160467705, 0.9997512128374161, 0.9998134096280616, 0.9998756064187072, 0.9999378032093528, 0.9999999999999983}, new char[]{'v', 'a', 'b', ' ', 'c', 'm', 'p', 'o', 'r', 'i', 'e', 'd', 'l', 'n', '\"', 'g', 'J', 'f', 'h', 't', 'u', 'w', 'y', 's', '.', 'I', 'x', 'B', '(', 'j', '-', ',', 'q', 'E', '/', 'W', 'S', 'L', ':', 'P', '\'', 'A'}) );
        twoCharacterInputWithUnknownOutput.put("aw", new ProportionalProbability( new double[]{0.9938228026826685, 0.9939992940345923, 0.9941757853865161, 0.9943522767384398, 0.9945287680903636, 0.9947052594422874, 0.9948817507942112, 0.9950582421461349, 0.9952347334980587, 0.9954112248499825, 0.9955877162019062, 0.99576420755383, 0.9959406989057538, 0.9961171902576775, 0.9962936816096013, 0.9964701729615251, 0.9966466643134488, 0.9968231556653726, 0.9969996470172964, 0.9971761383692201, 0.9973526297211439, 0.9975291210730677, 0.9977056124249915, 0.9978821037769152, 0.998058595128839, 0.9982350864807628, 0.9984115778326865, 0.9985880691846103, 0.9987645605365341, 0.9989410518884578, 0.9991175432403816, 0.9992940345923054, 0.9994705259442291, 0.9996470172961529, 0.9998235086480767, 1.0000000000000004}, new char[]{'l', 'w', ' ', 's', 'd', '\"', 'r', 'f', '-', 'h', 'i', 'y', 'e', 't', 'c', 'o', 'n', 'a', '(', 'b', 'T', 'g', 'p', 'm', ',', '&', 'L', 'u', 'v', 'z', '1', '2', 'k', ')', '.', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("ax", new ProportionalProbability( new double[]{0.990642545227698, 0.9909544603867747, 0.9912663755458514, 0.9915782907049281, 0.9918902058640048, 0.9922021210230815, 0.9925140361821582, 0.9928259513412349, 0.9931378665003116, 0.9934497816593882, 0.9937616968184649, 0.9940736119775416, 0.9943855271366183, 0.994697442295695, 0.9950093574547717, 0.9953212726138484, 0.9956331877729251, 0.9959451029320018, 0.9962570180910785, 0.9965689332501552, 0.9968808484092319, 0.9971927635683085, 0.9975046787273852, 0.9978165938864619, 0.9981285090455386, 0.9984404242046153, 0.998752339363692, 0.9990642545227687, 0.9993761696818454, 0.9996880848409221, 0.9999999999999988}, new char[]{'c', 'x', 'e', 'l', 'a', '\"', 'r', '+', 'g', 's', 'o', 'y', ' ', 'd', '4', 'i', 'u', 'n', 'b', 'f', 't', '2', '/', ':', ',', 'w', 'z', 'v', 'm', ')', '1'}) );
        twoCharacterInputWithUnknownOutput.put("c:", new ProportionalProbability( new double[]{0.9814814814814815, 1.0}, new char[]{':', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("ay", new ProportionalProbability( new double[]{0.9964851929404727, 0.9965599760693987, 0.9966347591983248, 0.9967095423272508, 0.9967843254561769, 0.996859108585103, 0.996933891714029, 0.9970086748429551, 0.9970834579718811, 0.9971582411008072, 0.9972330242297333, 0.9973078073586593, 0.9973825904875854, 0.9974573736165114, 0.9975321567454375, 0.9976069398743636, 0.9976817230032896, 0.9977565061322157, 0.9978312892611417, 0.9979060723900678, 0.9979808555189938, 0.9980556386479199, 0.998130421776846, 0.998205204905772, 0.9982799880346981, 0.9983547711636241, 0.9984295542925502, 0.9985043374214763, 0.9985791205504023, 0.9986539036793284, 0.9987286868082544, 0.9988034699371805, 0.9988782530661066, 0.9989530361950326, 0.9990278193239587, 0.9991026024528847, 0.9991773855818108, 0.9992521687107369, 0.9993269518396629, 0.999401734968589, 0.999476518097515, 0.9995513012264411, 0.9996260843553672, 0.9997008674842932, 0.9997756506132193, 0.9998504337421453, 0.9999252168710714, 0.9999999999999974}, new char[]{'y', 'r', 't', 'n', 'a', 'o', ' ', 's', 'v', 'm', 'd', 'e', 'p', 'l', 'i', 'u', 'c', '[', '\"', 'b', ':', 'h', 'w', 'x', 'k', 'q', 'g', 'f', '5', 'G', '.', 'T', '-', '6', '?', ',', 'E', '…', 'S', '7', 'λ', 'L', '1', 'B', '4', ']', '\'', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("c;", new ProportionalProbability( new double[]{0.9888888888888889, 1.0}, new char[]{';', ' '}) );
        twoCharacterInputWithUnknownOutput.put("c<", new ProportionalProbability( new double[]{0.9972844534962662, 0.9979633401221997, 0.9986422267481332, 0.9993211133740667, 1.0000000000000002}, new char[]{' ', 'c', 't', 's', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("az", new ProportionalProbability( new double[]{0.9833795013850416, 0.9840720221606649, 0.9847645429362882, 0.9854570637119116, 0.9861495844875349, 0.9868421052631582, 0.9875346260387815, 0.9882271468144048, 0.9889196675900281, 0.9896121883656515, 0.9903047091412748, 0.9909972299168981, 0.9916897506925214, 0.9923822714681447, 0.993074792243768, 0.9937673130193914, 0.9944598337950147, 0.995152354570638, 0.9958448753462613, 0.9965373961218846, 0.997229916897508, 0.9979224376731313, 0.9986149584487546, 0.9993074792243779, 1.000000000000001}, new char[]{'z', ' ', 's', 'h', '+', 'a', '\"', 'l', 'e', 'n', 'r', 'o', 'p', 'i', 'c', 'd', 'm', 'g', 'b', 'y', 'v', ',', 't', 'w', 'u'}) );
        twoCharacterInputWithUnknownOutput.put("c=", new ProportionalProbability( new double[]{0.9565217391304348, 0.9782608695652174, 1.0}, new char[]{'=', '3', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("b]", new ProportionalProbability( new double[]{0.9607843137254902, 0.9803921568627452, 1.0}, new char[]{'a', ' ', ']'}) );
        twoCharacterInputWithUnknownOutput.put("a|", new ProportionalProbability( new double[]{0.9761904761904762, 1.0}, new char[]{'|', ' '}) );
        twoCharacterInputWithUnknownOutput.put("d ", new ProportionalProbability( new double[]{0.9993888268493647, 0.9993963721969034, 0.999403917544442, 0.9994114628919807, 0.9994190082395193, 0.999426553587058, 0.9994340989345967, 0.9994416442821353, 0.999449189629674, 0.9994567349772127, 0.9994642803247513, 0.99947182567229, 0.9994793710198286, 0.9994869163673673, 0.999494461714906, 0.9995020070624446, 0.9995095524099833, 0.999517097757522, 0.9995246431050606, 0.9995321884525993, 0.9995397338001379, 0.9995472791476766, 0.9995548244952153, 0.9995623698427539, 0.9995699151902926, 0.9995774605378313, 0.9995850058853699, 0.9995925512329086, 0.9996000965804472, 0.9996076419279859, 0.9996151872755246, 0.9996227326230632, 0.9996302779706019, 0.9996378233181406, 0.9996453686656792, 0.9996529140132179, 0.9996604593607565, 0.9996680047082952, 0.9996755500558339, 0.9996830954033725, 0.9996906407509112, 0.9996981860984498, 0.9997057314459885, 0.9997132767935272, 0.9997208221410658, 0.9997283674886045, 0.9997359128361432, 0.9997434581836818, 0.9997510035312205, 0.9997585488787591, 0.9997660942262978, 0.9997736395738365, 0.9997811849213751, 0.9997887302689138, 0.9997962756164525, 0.9998038209639911, 0.9998113663115298, 0.9998189116590684, 0.9998264570066071, 0.9998340023541458, 0.9998415477016844, 0.9998490930492231, 0.9998566383967618, 0.9998641837443004, 0.9998717290918391, 0.9998792744393777, 0.9998868197869164, 0.9998943651344551, 0.9999019104819937, 0.9999094558295324, 0.999917001177071, 0.9999245465246097, 0.9999320918721484, 0.999939637219687, 0.9999471825672257, 0.9999547279147644, 0.999962273262303, 0.9999698186098417, 0.9999773639573803, 0.999984909304919, 0.9999924546524577, 0.9999999999999963}, new char[]{' ', 'r', 'y', 'o', 'e', 'i', 's', 'a', 'u', 'd', 't', '8', 'h', 'n', ',', 'p', 'c', 'm', 'g', 'l', 'w', 'k', 'x', 'f', 'b', '?', 'v', 'W', 'C', 'M', '.', 'T', '\'', ')', 'Q', '&', '(', 'N', 'L', 'q', '=', 'B', '-', 'P', '\"', 'A', 'S', '6', 'I', '1', ':', '9', '0', '/', 'R', 'z', 'O', '2', '4', 'F', '3', 'E', 'D', 'V', 'G', '^', '5', 'H', '{', 'Z', '*', 'U', '+', 'j', '_', '…', ';', 'λ', '>', 'J', 'K', '!'}) );
        twoCharacterInputWithUnknownOutput.put("b^", new ProportionalProbability( new double[]{0.95, 0.9583333333333333, 0.9666666666666666, 0.9749999999999999, 0.9833333333333332, 0.9916666666666665, 0.9999999999999998}, new char[]{'^', 'v', 'h', '(', 'a', 'f', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("c?", new ProportionalProbability( new double[]{0.923728813559322, 0.9322033898305084, 0.9406779661016949, 0.9491525423728813, 0.9576271186440677, 0.9661016949152541, 0.9745762711864405, 0.9830508474576269, 0.9915254237288134, 0.9999999999999998}, new char[]{'t', ' ', '?', 'e', 'n', 'm', 's', 'b', 'u', '-'}) );
        twoCharacterInputWithUnknownOutput.put("d!", new ProportionalProbability( new double[]{0.9852941176470589, 1.0}, new char[]{'!', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("d\"", new ProportionalProbability( new double[]{0.9673202614379085, 0.9738562091503268, 0.9803921568627451, 0.9869281045751633, 0.9934640522875816, 0.9999999999999999}, new char[]{'\"', 't', 'h', 'a', ' ', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("ba", new ProportionalProbability( new double[]{0.9967300224810954, 0.9967981470127393, 0.9968662715443831, 0.996934396076027, 0.9970025206076708, 0.9970706451393146, 0.9971387696709585, 0.9972068942026023, 0.9972750187342462, 0.99734314326589, 0.9974112677975339, 0.9974793923291777, 0.9975475168608215, 0.9976156413924654, 0.9976837659241092, 0.9977518904557531, 0.9978200149873969, 0.9978881395190408, 0.9979562640506846, 0.9980243885823284, 0.9980925131139723, 0.9981606376456161, 0.99822876217726, 0.9982968867089038, 0.9983650112405477, 0.9984331357721915, 0.9985012603038353, 0.9985693848354792, 0.998637509367123, 0.9987056338987669, 0.9987737584304107, 0.9988418829620546, 0.9989100074936984, 0.9989781320253422, 0.9990462565569861, 0.9991143810886299, 0.9991825056202738, 0.9992506301519176, 0.9993187546835615, 0.9993868792152053, 0.9994550037468491, 0.999523128278493, 0.9995912528101368, 0.9996593773417807, 0.9997275018734245, 0.9997956264050684, 0.9998637509367122, 0.999931875468356, 0.9999999999999999}, new char[]{'a', ' ', 'b', 's', '\"', 'l', 'B', 'u', 'r', 'w', 'n', '.', 'd', 'e', 'o', 'h', ')', 't', 'c', 'm', '…', 'p', 'i', ':', 'g', 'y', '\'', '9', 'v', '0', 'P', 'k', '&', ',', 'E', 'D', 'S', '6', 'f', 'A', 'G', 'q', 'U', 'C', '-', 'H', '4', '3', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("bb", new ProportionalProbability( new double[]{0.9836852207293666, 0.9846449136276392, 0.9856046065259118, 0.9865642994241843, 0.9875239923224569, 0.9884836852207295, 0.9894433781190021, 0.9904030710172746, 0.9913627639155472, 0.9923224568138198, 0.9932821497120924, 0.994241842610365, 0.9952015355086375, 0.9961612284069101, 0.9971209213051827, 0.9980806142034553, 0.9990403071017279, 1.0000000000000004}, new char[]{'t', 'b', 'n', ' ', 'a', 'l', 'r', 'o', 's', 'g', 'e', 'f', 'B', 'w', 'M', '.', 'i', ','}) );
        twoCharacterInputWithUnknownOutput.put("cC", new ProportionalProbability( new double[]{0.9736842105263158, 0.986842105263158, 1.0}, new char[]{'C', '/', '^'}) );
        twoCharacterInputWithUnknownOutput.put("bc", new ProportionalProbability( new double[]{0.9711538461538461, 0.9759615384615384, 0.9807692307692307, 0.985576923076923, 0.9903846153846153, 0.9951923076923076, 0.9999999999999999}, new char[]{'c', 'e', 't', 'i', 'm', 's', ')'}) );
        twoCharacterInputWithUnknownOutput.put("bd", new ProportionalProbability( new double[]{0.9545454545454546, 0.9602272727272728, 0.965909090909091, 0.9715909090909093, 0.9772727272727275, 0.9829545454545457, 0.988636363636364, 0.9943181818181822, 1.0000000000000004}, new char[]{'d', 'o', 'n', 'a', 'g', 'i', 'r', 's', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("be", new ProportionalProbability( new double[]{0.9984180735101466, 0.9984427911115505, 0.9984675087129545, 0.9984922263143585, 0.9985169439157625, 0.9985416615171665, 0.9985663791185705, 0.9985910967199745, 0.9986158143213785, 0.9986405319227825, 0.9986652495241864, 0.9986899671255904, 0.9987146847269944, 0.9987394023283984, 0.9987641199298024, 0.9987888375312064, 0.9988135551326104, 0.9988382727340144, 0.9988629903354184, 0.9988877079368224, 0.9989124255382263, 0.9989371431396303, 0.9989618607410343, 0.9989865783424383, 0.9990112959438423, 0.9990360135452463, 0.9990607311466503, 0.9990854487480543, 0.9991101663494583, 0.9991348839508623, 0.9991596015522662, 0.9991843191536702, 0.9992090367550742, 0.9992337543564782, 0.9992584719578822, 0.9992831895592862, 0.9993079071606902, 0.9993326247620942, 0.9993573423634982, 0.9993820599649021, 0.9994067775663061, 0.9994314951677101, 0.9994562127691141, 0.9994809303705181, 0.9995056479719221, 0.9995303655733261, 0.9995550831747301, 0.9995798007761341, 0.999604518377538, 0.999629235978942, 0.999653953580346, 0.99967867118175, 0.999703388783154, 0.999728106384558, 0.999752823985962, 0.999777541587366, 0.99980225918877, 0.999826976790174, 0.999851694391578, 0.9998764119929819, 0.9999011295943859, 0.9999258471957899, 0.9999505647971939, 0.9999752823985979, 1.0000000000000018}, new char[]{'e', ' ', 'f', 'b', 's', 'm', 'n', 'w', 'i', 'a', 't', 'o', 'p', '.', 'c', 'l', '3', 'h', 'z', 'r', 'v', 'u', 'k', 'g', 'd', 'T', 'y', 'B', 'C', '7', 'é', 'S', 'ö', '0', 'P', 'M', ',', 'A', '\"', '=', '(', '-', 'x', '2', 'G', '\'', '1', ')', ':', 'E', 'O', 'L', 'H', 'D', '^', '9', 'I', 'N', 'V', 'q', 'U', 'j', 'á', ';', 'ו'}) );
        twoCharacterInputWithUnknownOutput.put("d\'", new ProportionalProbability( new double[]{0.9735915492957746, 0.9753521126760564, 0.9771126760563381, 0.9788732394366199, 0.9806338028169016, 0.9823943661971833, 0.9841549295774651, 0.9859154929577468, 0.9876760563380286, 0.9894366197183103, 0.9911971830985921, 0.9929577464788738, 0.9947183098591555, 0.9964788732394373, 0.998239436619719, 1.0000000000000007}, new char[]{'\'', 'd', 'm', 'n', 'a', ' ', 'o', 'l', 'e', 'z', 't', 'B', 'i', 's', 'g', ','}) );
        twoCharacterInputWithUnknownOutput.put("bf", new ProportionalProbability( new double[]{0.9841269841269841, 1.0}, new char[]{'b', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("d(", new ProportionalProbability( new double[]{0.9454545454545454, 0.9545454545454545, 0.9636363636363635, 0.9727272727272726, 0.9818181818181816, 0.9909090909090906, 0.9999999999999997}, new char[]{'b', '(', ' ', ')', 'e', 'r', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("d)", new ProportionalProbability( new double[]{0.9814126394052045, 0.9826517967781909, 0.9838909541511773, 0.9851301115241637, 0.9863692688971502, 0.9876084262701366, 0.988847583643123, 0.9900867410161094, 0.9913258983890958, 0.9925650557620822, 0.9938042131350686, 0.995043370508055, 0.9962825278810414, 0.9975216852540278, 0.9987608426270143, 1.0000000000000007}, new char[]{')', 't', ' ', 'l', '0', '.', 'r', '(', ':', 'n', 'i', 'C', 's', 'o', 'w', 'H'}) );
        twoCharacterInputWithUnknownOutput.put("bg", new ProportionalProbability( new double[]{0.9555555555555556, 0.9666666666666667, 0.9777777777777777, 0.9888888888888888, 0.9999999999999999}, new char[]{'g', 'a', 'b', 't', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("bh", new ProportionalProbability( new double[]{0.9724137931034482, 0.9793103448275862, 0.9862068965517241, 0.993103448275862, 1.0}, new char[]{'h', 'b', ' ', 's', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("d*", new ProportionalProbability( new double[]{0.9666666666666667, 1.0}, new char[]{'*', ' '}) );
        twoCharacterInputWithUnknownOutput.put("bi", new ProportionalProbability( new double[]{0.9967611975669484, 0.9968401927482423, 0.9969191879295363, 0.9969981831108302, 0.9970771782921242, 0.9971561734734181, 0.9972351686547121, 0.997314163836006, 0.9973931590173, 0.9974721541985939, 0.9975511493798879, 0.9976301445611818, 0.9977091397424758, 0.9977881349237697, 0.9978671301050637, 0.9979461252863576, 0.9980251204676516, 0.9981041156489455, 0.9981831108302395, 0.9982621060115334, 0.9983411011928274, 0.9984200963741213, 0.9984990915554153, 0.9985780867367092, 0.9986570819180032, 0.9987360770992971, 0.9988150722805911, 0.998894067461885, 0.998973062643179, 0.9990520578244729, 0.9991310530057669, 0.9992100481870608, 0.9992890433683548, 0.9993680385496487, 0.9994470337309427, 0.9995260289122366, 0.9996050240935306, 0.9996840192748245, 0.9997630144561185, 0.9998420096374124, 0.9999210048187064, 1.0000000000000002}, new char[]{'i', 'a', 'b', 't', 'f', ' ', 'w', 'e', 'h', 'p', ',', 'm', 'g', 'r', 'n', 'l', 'o', 'B', 'c', 's', 'k', ':', 'q', 'u', '0', '(', '.', 'y', 'L', 'd', 'v', 'C', 'x', 'N', ')', '\'', '/', 'P', '\"', 'F', '-', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("d,", new ProportionalProbability( new double[]{0.9918869405914682, 0.9921486521852918, 0.9924103637791154, 0.992672075372939, 0.9929337869667626, 0.9931954985605862, 0.9934572101544098, 0.9937189217482334, 0.993980633342057, 0.9942423449358806, 0.9945040565297042, 0.9947657681235278, 0.9950274797173514, 0.995289191311175, 0.9955509029049986, 0.9958126144988222, 0.9960743260926458, 0.9963360376864694, 0.996597749280293, 0.9968594608741166, 0.9971211724679402, 0.9973828840617638, 0.9976445956555874, 0.997906307249411, 0.9981680188432346, 0.9984297304370582, 0.9986914420308818, 0.9989531536247054, 0.999214865218529, 0.9994765768123526, 0.9997382884061762, 0.9999999999999998}, new char[]{'h', 'w', '3', 'p', 'i', ',', ' ', 's', 'g', 't', 'o', 'n', 'l', 'b', 'e', 'm', 'r', '.', 'f', 'E', 'k', 'y', 'v', 'a', 'c', 'd', 'S', ')', 'q', 'u', 'x', 'D'}) );
        twoCharacterInputWithUnknownOutput.put("bj", new ProportionalProbability( new double[]{0.9923619271445359, 0.9926556991774383, 0.9929494712103408, 0.9932432432432433, 0.9935370152761458, 0.9938307873090483, 0.9941245593419508, 0.9944183313748532, 0.9947121034077557, 0.9950058754406582, 0.9952996474735607, 0.9955934195064632, 0.9958871915393657, 0.9961809635722682, 0.9964747356051706, 0.9967685076380731, 0.9970622796709756, 0.9973560517038781, 0.9976498237367806, 0.9979435957696831, 0.9982373678025855, 0.998531139835488, 0.9988249118683905, 0.999118683901293, 0.9994124559341955, 0.999706227967098, 1.0000000000000004}, new char[]{'j', 's', 'S', 'h', 't', ' ', 'g', 'n', 'v', 'r', 'e', 'o', 'i', 'c', 'l', ')', 'y', 'a', 'p', 'd', 'm', 'u', '=', 'b', '(', 'f', '.'}) );
        twoCharacterInputWithUnknownOutput.put("d-", new ProportionalProbability( new double[]{0.981, 0.982, 0.983, 0.984, 0.985, 0.986, 0.987, 0.988, 0.989, 0.99, 0.991, 0.992, 0.993, 0.994, 0.995, 0.996, 0.997, 0.998, 0.999, 1.0}, new char[]{'-', 'o', 'l', 'd', 'n', ' ', 'm', 'h', ':', 'c', 'e', 'v', 'g', 'a', 't', 'b', 'i', 'r', 's', '\''}) );
        twoCharacterInputWithUnknownOutput.put("bk", new ProportionalProbability( new double[]{0.9814814814814815, 1.0}, new char[]{'k', 's'}) );
        twoCharacterInputWithUnknownOutput.put("cL", new ProportionalProbability( new double[]{0.75, 0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'L', 'o', ' ', '.'}) );
        twoCharacterInputWithUnknownOutput.put("bl", new ProportionalProbability( new double[]{0.9974094554874707, 0.9974592736511733, 0.9975090918148758, 0.9975589099785783, 0.9976087281422809, 0.9976585463059834, 0.9977083644696859, 0.9977581826333884, 0.997808000797091, 0.9978578189607935, 0.997907637124496, 0.9979574552881986, 0.9980072734519011, 0.9980570916156036, 0.9981069097793062, 0.9981567279430087, 0.9982065461067112, 0.9982563642704138, 0.9983061824341163, 0.9983560005978188, 0.9984058187615213, 0.9984556369252239, 0.9985054550889264, 0.9985552732526289, 0.9986050914163315, 0.998654909580034, 0.9987047277437365, 0.9987545459074391, 0.9988043640711416, 0.9988541822348441, 0.9989040003985467, 0.9989538185622492, 0.9990036367259517, 0.9990534548896542, 0.9991032730533568, 0.9991530912170593, 0.9992029093807618, 0.9992527275444644, 0.9993025457081669, 0.9993523638718694, 0.999402182035572, 0.9994520001992745, 0.999501818362977, 0.9995516365266796, 0.9996014546903821, 0.9996512728540846, 0.9997010910177871, 0.9997509091814897, 0.9998007273451922, 0.9998505455088947, 0.9999003636725973, 0.9999501818362998, 1.0000000000000022}, new char[]{'s', 'l', '\'', 'b', ' ', 'B', 'm', 'i', 'o', 'r', 'a', 'h', 'P', 'e', 'c', 'v', 'n', 't', 'w', '3', ')', '\"', 'x', 'f', '&', 'y', 'g', 'u', 'd', 'p', 'L', '-', 'R', ':', 'k', '5', '1', '.', 'S', 'T', 'D', ',', 'C', 'A', 'q', 'V', '*', 'F', '(', 'M', 'O', 'E', '2'}) );
        twoCharacterInputWithUnknownOutput.put("d.", new ProportionalProbability( new double[]{0.9897769516728625, 0.990086741016109, 0.9903965303593556, 0.9907063197026021, 0.9910161090458487, 0.9913258983890952, 0.9916356877323418, 0.9919454770755883, 0.9922552664188349, 0.9925650557620814, 0.992874845105328, 0.9931846344485745, 0.9934944237918211, 0.9938042131350676, 0.9941140024783142, 0.9944237918215607, 0.9947335811648073, 0.9950433705080538, 0.9953531598513004, 0.9956629491945469, 0.9959727385377934, 0.99628252788104, 0.9965923172242865, 0.9969021065675331, 0.9972118959107796, 0.9975216852540262, 0.9978314745972727, 0.9981412639405193, 0.9984510532837658, 0.9987608426270124, 0.9990706319702589, 0.9993804213135055, 0.999690210656752, 0.9999999999999986}, new char[]{'a', '.', 'i', 'D', ' ', 's', 'r', '-', 'T', 'c', 'y', 'x', 'e', 'd', 'g', 'w', 'n', 't', ')', 'v', 'u', 'l', 'p', 'm', 'h', 'b', '2', 'P', ' ', 'o', '&', 'f', 'S', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("d/", new ProportionalProbability( new double[]{0.9795918367346939, 0.9807256235827664, 0.9818594104308389, 0.9829931972789114, 0.984126984126984, 0.9852607709750565, 0.986394557823129, 0.9875283446712015, 0.9886621315192741, 0.9897959183673466, 0.9909297052154191, 0.9920634920634916, 0.9931972789115642, 0.9943310657596367, 0.9954648526077092, 0.9965986394557818, 0.9977324263038543, 0.9988662131519268, 0.9999999999999993}, new char[]{'/', 'r', 'u', 'd', ' ', 't', 'i', 'D', '.', 'l', 'h', 's', 'm', 'o', 'e', 'a', 'g', 'c', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("bm", new ProportionalProbability( new double[]{0.9897959183673469, 1.0}, new char[]{'m', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("cN", new ProportionalProbability( new double[]{0.9375, 1.0}, new char[]{'e', 'N'}) );
        twoCharacterInputWithUnknownOutput.put("bn", new ProportionalProbability( new double[]{0.9603960396039604, 0.9653465346534653, 0.9702970297029703, 0.9752475247524752, 0.9801980198019802, 0.9851485148514851, 0.9900990099009901, 0.995049504950495, 1.0}, new char[]{'n', 't', 'b', 'e', 'L', 'i', ' ', 's', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("bo", new ProportionalProbability( new double[]{0.9970740490659464, 0.9971303173531397, 0.997186585640333, 0.9972428539275263, 0.9972991222147196, 0.9973553905019129, 0.9974116587891062, 0.9974679270762995, 0.9975241953634928, 0.9975804636506861, 0.9976367319378794, 0.9976930002250727, 0.997749268512266, 0.9978055367994593, 0.9978618050866526, 0.9979180733738459, 0.9979743416610392, 0.9980306099482325, 0.9980868782354257, 0.998143146522619, 0.9981994148098123, 0.9982556830970056, 0.9983119513841989, 0.9983682196713922, 0.9984244879585855, 0.9984807562457788, 0.9985370245329721, 0.9985932928201654, 0.9986495611073587, 0.998705829394552, 0.9987620976817453, 0.9988183659689386, 0.9988746342561319, 0.9989309025433252, 0.9989871708305185, 0.9990434391177118, 0.9990997074049051, 0.9991559756920984, 0.9992122439792916, 0.9992685122664849, 0.9993247805536782, 0.9993810488408715, 0.9994373171280648, 0.9994935854152581, 0.9995498537024514, 0.9996061219896447, 0.999662390276838, 0.9997186585640313, 0.9997749268512246, 0.9998311951384179, 0.9998874634256112, 0.9999437317128045, 0.9999999999999978}, new char[]{'s', 'o', 'c', 'b', 'p', 'e', 'm', 'd', ' ', 'l', 'g', 'n', '\"', 'a', 'f', 'h', 'y', 'B', 't', 'r', 'i', '.', 'u', 'E', 'F', '3', '0', '±', '%', 'v', 'w', '~', 'x', 'D', 'k', 'H', '7', 'S', ':', ',', 'G', '/', '•', '-', '2', '\'', 'A', 'P', 'W', 'C', 'M', 'T', 'V'}) );
        twoCharacterInputWithUnknownOutput.put("bp", new ProportionalProbability( new double[]{0.8918918918918919, 0.9189189189189189, 0.9459459459459458, 0.9729729729729728, 0.9999999999999998}, new char[]{'p', '-', 'b', ' ', 'a'}) );
        twoCharacterInputWithUnknownOutput.put("br", new ProportionalProbability( new double[]{0.9956984378537469, 0.9958116368575957, 0.9959248358614444, 0.9960380348652932, 0.996151233869142, 0.9962644328729907, 0.9963776318768395, 0.9964908308806882, 0.996604029884537, 0.9967172288883858, 0.9968304278922345, 0.9969436268960833, 0.997056825899932, 0.9971700249037808, 0.9972832239076296, 0.9973964229114783, 0.9975096219153271, 0.9976228209191759, 0.9977360199230246, 0.9978492189268734, 0.9979624179307222, 0.9980756169345709, 0.9981888159384197, 0.9983020149422684, 0.9984152139461172, 0.998528412949966, 0.9986416119538147, 0.9987548109576635, 0.9988680099615123, 0.998981208965361, 0.9990944079692098, 0.9992076069730585, 0.9993208059769073, 0.9994340049807561, 0.9995472039846048, 0.9996604029884536, 0.9997736019923024, 0.9998868009961511, 0.9999999999999999}, new char[]{'(', ' ', 'v', 'r', 'i', 'u', 'a', 'p', 'b', 'm', '.', '\"', 'e', 'w', 'F', 't', 'l', 'o', 'n', 'h', 's', 'k', 'B', ':', 'd', ',', 'f', 'S', 'y', 'A', 'g', 'c', 'q', '2', '-', 'x', ')', '5', '4'}) );
        twoCharacterInputWithUnknownOutput.put("bs", new ProportionalProbability( new double[]{0.993560606060606, 0.99375, 0.993939393939394, 0.994128787878788, 0.994318181818182, 0.994507575757576, 0.99469696969697, 0.994886363636364, 0.995075757575758, 0.9952651515151519, 0.9954545454545459, 0.9956439393939399, 0.9958333333333339, 0.9960227272727279, 0.9962121212121219, 0.9964015151515159, 0.9965909090909099, 0.9967803030303038, 0.9969696969696978, 0.9971590909090918, 0.9973484848484858, 0.9975378787878798, 0.9977272727272738, 0.9979166666666678, 0.9981060606060618, 0.9982954545454558, 0.9984848484848498, 0.9986742424242437, 0.9988636363636377, 0.9990530303030317, 0.9992424242424257, 0.9994318181818197, 0.9996212121212137, 0.9998106060606077, 1.0000000000000016}, new char[]{'b', ' ', 'a', 's', ',', 'e', '\"', 'u', 'i', 'c', 'f', 'y', 'n', 'w', 'm', 't', 'o', '&', 'd', 'r', 'k', 'p', 'x', 'Z', '.', 'h', 'P', '\'', 'g', 'l', 'j', 'v', 'H', '/', '('}) );
        twoCharacterInputWithUnknownOutput.put("d5", new ProportionalProbability( new double[]{0.9230769230769231, 1.0}, new char[]{'5', 'S'}) );
        twoCharacterInputWithUnknownOutput.put("bt", new ProportionalProbability( new double[]{0.9850958126330731, 0.985805535841022, 0.986515259048971, 0.9872249822569199, 0.9879347054648688, 0.9886444286728178, 0.9893541518807667, 0.9900638750887156, 0.9907735982966646, 0.9914833215046135, 0.9921930447125624, 0.9929027679205114, 0.9936124911284603, 0.9943222143364092, 0.9950319375443581, 0.9957416607523071, 0.996451383960256, 0.9971611071682049, 0.9978708303761539, 0.9985805535841028, 0.9992902767920517, 1.0000000000000007}, new char[]{'t', 'b', ' ', 'g', 'l', 'i', 'P', 'f', 'p', 'o', 's', 'c', 'y', 'u', 'a', 'e', 'r', 'n', '5', 'h', '*', '…'}) );
        twoCharacterInputWithUnknownOutput.put("bu", new ProportionalProbability( new double[]{0.9970641568085657, 0.9971505051377256, 0.9972368534668855, 0.9973232017960454, 0.9974095501252053, 0.9974958984543651, 0.997582246783525, 0.9976685951126849, 0.9977549434418448, 0.9978412917710047, 0.9979276401001645, 0.9980139884293244, 0.9981003367584843, 0.9981866850876442, 0.9982730334168041, 0.998359381745964, 0.9984457300751238, 0.9985320784042837, 0.9986184267334436, 0.9987047750626035, 0.9987911233917633, 0.9988774717209232, 0.9989638200500831, 0.999050168379243, 0.9991365167084029, 0.9992228650375627, 0.9993092133667226, 0.9993955616958825, 0.9994819100250424, 0.9995682583542023, 0.9996546066833621, 0.999740955012522, 0.9998273033416819, 0.9999136516708418, 1.0000000000000016}, new char[]{'u', 'i', 'b', 'm', 's', 'e', ' ', 'n', 'a', 't', '\"', 'l', 'o', ':', 'g', 'c', 'p', 'y', 'r', 'k', 'h', 'B', 'd', 'w', '.', 'f', 'v', 'M', '\'', 'K', '2', 'C', ')', 'x', ','}) );
        twoCharacterInputWithUnknownOutput.put("bv", new ProportionalProbability( new double[]{0.9537037037037037, 0.962962962962963, 0.9722222222222223, 0.9814814814814816, 0.9907407407407409, 1.0000000000000002}, new char[]{'i', 'v', 'a', 's', ' ', 't'}) );
        twoCharacterInputWithUnknownOutput.put("bw", new ProportionalProbability( new double[]{0.975, 0.9874999999999999, 0.9999999999999999}, new char[]{'w', 'r', 't'}) );
        twoCharacterInputWithUnknownOutput.put("d:", new ProportionalProbability( new double[]{0.9121621621621622, 0.918918918918919, 0.9256756756756758, 0.9324324324324326, 0.9391891891891894, 0.9459459459459462, 0.952702702702703, 0.9594594594594598, 0.9662162162162166, 0.9729729729729734, 0.9797297297297302, 0.986486486486487, 0.9932432432432438, 1.0000000000000004}, new char[]{':', ' ', 'M', 'c', 'e', '&', 'k', 'F', 't', 'n', 'g', 'i', 'G', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("bx", new ProportionalProbability( new double[]{0.9574468085106383, 0.9787234042553192, 1.0}, new char[]{'x', 'b', 'y'}) );
        twoCharacterInputWithUnknownOutput.put("by", new ProportionalProbability( new double[]{0.9970592670788719, 0.997134670487106, 0.9972100738953401, 0.9972854773035742, 0.9973608807118083, 0.9974362841200424, 0.9975116875282765, 0.9975870909365105, 0.9976624943447446, 0.9977378977529787, 0.9978133011612128, 0.9978887045694469, 0.997964107977681, 0.9980395113859151, 0.9981149147941492, 0.9981903182023832, 0.9982657216106173, 0.9983411250188514, 0.9984165284270855, 0.9984919318353196, 0.9985673352435537, 0.9986427386517878, 0.9987181420600219, 0.9987935454682559, 0.99886894887649, 0.9989443522847241, 0.9990197556929582, 0.9990951591011923, 0.9991705625094264, 0.9992459659176605, 0.9993213693258945, 0.9993967727341286, 0.9994721761423627, 0.9995475795505968, 0.9996229829588309, 0.999698386367065, 0.9997737897752991, 0.9998491931835332, 0.9999245965917672, 1.0000000000000013}, new char[]{'b', 'y', 'n', 'o', ' ', 'a', 't', 'r', 'x', 'π', 'g', 'M', 'm', 'i', 'e', 'h', 'l', '(', 'd', 'c', 'u', 'p', 'T', 'k', '.', 'w', 's', '\'', '1', 'S', 'v', 'z', 'f', '0', ',', '6', 'j', 'W', '…', 'P'}) );
        twoCharacterInputWithUnknownOutput.put("d;", new ProportionalProbability( new double[]{0.9912790697674418, 0.9927325581395349, 0.9941860465116279, 0.9956395348837209, 0.997093023255814, 0.998546511627907, 1.0}, new char[]{';', 'o', 'b', 'h', 'a', 't', 'd'}) );
        twoCharacterInputWithUnknownOutput.put("d<", new ProportionalProbability( new double[]{0.9966804979253112, 0.9968464730290456, 0.99701244813278, 0.9971784232365144, 0.9973443983402488, 0.9975103734439832, 0.9976763485477176, 0.997842323651452, 0.9980082987551864, 0.9981742738589208, 0.9983402489626552, 0.9985062240663896, 0.998672199170124, 0.9988381742738583, 0.9990041493775927, 0.9991701244813271, 0.9993360995850615, 0.9995020746887959, 0.9996680497925303, 0.9998340248962647, 0.9999999999999991}, new char[]{' ', 'd', 'c', 'e', 't', 'r', 'v', 'u', 'i', 'a', 's', 'p', 'l', 'h', 'o', 'x', 'S', 'm', '<', '0', ','}) );
        twoCharacterInputWithUnknownOutput.put("bz", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'b', '(', 'z'}) );
        twoCharacterInputWithUnknownOutput.put("d=", new ProportionalProbability( new double[]{0.9512195121951219, 0.975609756097561, 1.0}, new char[]{'=', 'l', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("e ", new ProportionalProbability( new double[]{0.9997332705289472, 0.9997361080765116, 0.999738945624076, 0.9997417831716403, 0.9997446207192047, 0.999747458266769, 0.9997502958143334, 0.9997531333618978, 0.9997559709094621, 0.9997588084570265, 0.9997616460045908, 0.9997644835521552, 0.9997673210997196, 0.9997701586472839, 0.9997729961948483, 0.9997758337424126, 0.999778671289977, 0.9997815088375414, 0.9997843463851057, 0.9997871839326701, 0.9997900214802344, 0.9997928590277988, 0.9997956965753632, 0.9997985341229275, 0.9998013716704919, 0.9998042092180562, 0.9998070467656206, 0.999809884313185, 0.9998127218607493, 0.9998155594083137, 0.999818396955878, 0.9998212345034424, 0.9998240720510068, 0.9998269095985711, 0.9998297471461355, 0.9998325846936998, 0.9998354222412642, 0.9998382597888286, 0.9998410973363929, 0.9998439348839573, 0.9998467724315216, 0.999849609979086, 0.9998524475266504, 0.9998552850742147, 0.9998581226217791, 0.9998609601693434, 0.9998637977169078, 0.9998666352644722, 0.9998694728120365, 0.9998723103596009, 0.9998751479071653, 0.9998779854547296, 0.999880823002294, 0.9998836605498583, 0.9998864980974227, 0.999889335644987, 0.9998921731925514, 0.9998950107401158, 0.9998978482876801, 0.9999006858352445, 0.9999035233828089, 0.9999063609303732, 0.9999091984779376, 0.9999120360255019, 0.9999148735730663, 0.9999177111206307, 0.999920548668195, 0.9999233862157594, 0.9999262237633237, 0.9999290613108881, 0.9999318988584525, 0.9999347364060168, 0.9999375739535812, 0.9999404115011455, 0.9999432490487099, 0.9999460865962743, 0.9999489241438386, 0.999951761691403, 0.9999545992389673, 0.9999574367865317, 0.9999602743340961, 0.9999631118816604, 0.9999659494292248, 0.9999687869767891, 0.9999716245243535, 0.9999744620719179, 0.9999772996194822, 0.9999801371670466, 0.999982974714611, 0.9999858122621753, 0.9999886498097397, 0.999991487357304, 0.9999943249048684, 0.9999971624524328, 0.9999999999999971}, new char[]{' ', 's', 'e', 't', 'b', 'i', 'd', 'a', 'r', 'h', 'n', 'x', 'f', 'P', 'o', 'c', 'm', ',', 'u', 'K', 'O', '(', 'k', 'g', 'l', '-', '.', 'D', 'v', 'p', 'q', 'w', 'y', 'N', 'E', 'M', 'z', 'L', '\"', ')', 'S', '/', 'V', '0', 'B', '?', '\'', 'W', 'A', 'H', 'C', ':', 'J', '&', '2', 'j', 'F', 'U', '3', '!', 'Q', '{', ';', 'R', 'X', 'G', 'I', '4', '1', '>', '7', '8', 'T', '}', '5', '…', '_', 'ó', 'Y', '6', '•', 'ש', 'ב', '=', '’', '<', 'é', '^', '*', '9', '[', '—', '%', '+', ''}) );
        twoCharacterInputWithUnknownOutput.put("c^", new ProportionalProbability( new double[]{0.991869918699187, 1.0}, new char[]{'^', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("d?", new ProportionalProbability( new double[]{0.9743795036028823, 0.9751801441152922, 0.9759807846277021, 0.976781425140112, 0.9775820656525219, 0.9783827061649318, 0.9791833466773417, 0.9799839871897517, 0.9807846277021616, 0.9815852682145715, 0.9823859087269814, 0.9831865492393913, 0.9839871897518012, 0.9847878302642111, 0.985588470776621, 0.986389111289031, 0.9871897518014409, 0.9879903923138508, 0.9887910328262607, 0.9895916733386706, 0.9903923138510805, 0.9911929543634904, 0.9919935948759003, 0.9927942353883102, 0.9935948759007202, 0.9943955164131301, 0.99519615692554, 0.9959967974379499, 0.9967974379503598, 0.9975980784627697, 0.9983987189751796, 0.9991993594875895, 0.9999999999999994}, new char[]{'?', 'i', 'o', 'e', 'a', 't', 'g', 'y', 'v', 'w', 'd', 's', 'h', 'c', ' ', 'r', 'f', 'n', 'b', 'l', 'H', 'm', 'u', 'p', 'x', ')', '2', 'B', 'C', 'M', 'I', 'k', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("e!", new ProportionalProbability( new double[]{0.9769736842105263, 0.9802631578947368, 0.9835526315789473, 0.9868421052631579, 0.9901315789473684, 0.9934210526315789, 0.9967105263157894, 0.9999999999999999}, new char[]{'!', ' ', 'r', '*', 'e', 'a', 'o', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("b~", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'~', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("e\"", new ProportionalProbability( new double[]{0.9717948717948718, 0.9743589743589743, 0.9769230769230769, 0.9794871794871794, 0.982051282051282, 0.9846153846153846, 0.9871794871794871, 0.9897435897435897, 0.9923076923076922, 0.9948717948717948, 0.9974358974358973, 0.9999999999999999}, new char[]{'l', '\"', 'r', 'n', 'f', 'y', 't', 'a', ' ', 'e', 'R', 'o'}) );
        twoCharacterInputWithUnknownOutput.put("ca", new ProportionalProbability( new double[]{0.9988063739630374, 0.9988262677303201, 0.9988461614976029, 0.9988660552648856, 0.9988859490321683, 0.998905842799451, 0.9989257365667338, 0.9989456303340165, 0.9989655241012992, 0.998985417868582, 0.9990053116358647, 0.9990252054031474, 0.9990450991704302, 0.9990649929377129, 0.9990848867049956, 0.9991047804722784, 0.9991246742395611, 0.9991445680068438, 0.9991644617741265, 0.9991843555414093, 0.999204249308692, 0.9992241430759747, 0.9992440368432575, 0.9992639306105402, 0.9992838243778229, 0.9993037181451057, 0.9993236119123884, 0.9993435056796711, 0.9993633994469538, 0.9993832932142366, 0.9994031869815193, 0.999423080748802, 0.9994429745160848, 0.9994628682833675, 0.9994827620506502, 0.999502655817933, 0.9995225495852157, 0.9995424433524984, 0.9995623371197812, 0.9995822308870639, 0.9996021246543466, 0.9996220184216293, 0.9996419121889121, 0.9996618059561948, 0.9996816997234775, 0.9997015934907603, 0.999721487258043, 0.9997413810253257, 0.9997612747926085, 0.9997811685598912, 0.9998010623271739, 0.9998209560944566, 0.9998408498617394, 0.9998607436290221, 0.9998806373963048, 0.9999005311635876, 0.9999204249308703, 0.999940318698153, 0.9999602124654358, 0.9999801062327185, 1.000000000000001}, new char[]{'a', 'l', 'n', 'c', 's', 't', ' ', 'e', 'p', 'o', '\"', 'm', 'r', 'i', 'w', 'A', ':', 'h', 'b', '.', ',', 'd', 'u', 'v', 'y', 'g', 'f', '(', 'D', '=', 'C', 'è', 'z', 'x', '_', '\'', 'R', 'I', '4', 'F', '-', '[', 'k', 'T', 'E', ')', '5', '3', 'W', '2', 'j', 'U', 'S', 'q', 'Y', 'P', '8', '0', '1', '²', 'J'}) );
        twoCharacterInputWithUnknownOutput.put("cc", new ProportionalProbability( new double[]{0.9955992751747347, 0.9957287082578307, 0.9958581413409267, 0.9959875744240226, 0.9961170075071186, 0.9962464405902146, 0.9963758736733106, 0.9965053067564066, 0.9966347398395026, 0.9967641729225986, 0.9968936060056945, 0.9970230390887905, 0.9971524721718865, 0.9972819052549825, 0.9974113383380785, 0.9975407714211745, 0.9976702045042705, 0.9977996375873665, 0.9979290706704624, 0.9980585037535584, 0.9981879368366544, 0.9983173699197504, 0.9984468030028464, 0.9985762360859424, 0.9987056691690384, 0.9988351022521343, 0.9989645353352303, 0.9990939684183263, 0.9992234015014223, 0.9993528345845183, 0.9994822676676143, 0.9996117007507103, 0.9997411338338063, 0.9998705669169022, 0.9999999999999982}, new char[]{'c', '\"', 'i', 'e', 'a', ' ', 'h', 't', 'K', 'w', 'd', 'n', 'o', 'm', 'r', 'l', 'f', 'u', 'y', 'v', 's', '.', '\'', 'q', 'p', 'A', 'b', 'g', 'C', ',', 'F', '&', ':', 'B', '/'}) );
        twoCharacterInputWithUnknownOutput.put("cd", new ProportionalProbability( new double[]{0.9861111111111112, 1.0}, new char[]{'d', ':'}) );
        twoCharacterInputWithUnknownOutput.put("e&", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{'c', 'o', ' '}) );
        twoCharacterInputWithUnknownOutput.put("ce", new ProportionalProbability( new double[]{0.9990060414045877, 0.9990215720076411, 0.9990371026106944, 0.9990526332137478, 0.9990681638168012, 0.9990836944198546, 0.9990992250229079, 0.9991147556259613, 0.9991302862290147, 0.999145816832068, 0.9991613474351214, 0.9991768780381748, 0.9991924086412282, 0.9992079392442815, 0.9992234698473349, 0.9992390004503883, 0.9992545310534416, 0.999270061656495, 0.9992855922595484, 0.9993011228626018, 0.9993166534656551, 0.9993321840687085, 0.9993477146717619, 0.9993632452748152, 0.9993787758778686, 0.999394306480922, 0.9994098370839753, 0.9994253676870287, 0.9994408982900821, 0.9994564288931355, 0.9994719594961888, 0.9994874900992422, 0.9995030207022956, 0.999518551305349, 0.9995340819084023, 0.9995496125114557, 0.9995651431145091, 0.9995806737175624, 0.9995962043206158, 0.9996117349236692, 0.9996272655267225, 0.9996427961297759, 0.9996583267328293, 0.9996738573358827, 0.999689387938936, 0.9997049185419894, 0.9997204491450428, 0.9997359797480961, 0.9997515103511495, 0.9997670409542029, 0.9997825715572562, 0.9997981021603096, 0.999813632763363, 0.9998291633664164, 0.9998446939694697, 0.9998602245725231, 0.9998757551755765, 0.9998912857786298, 0.9999068163816832, 0.9999223469847366, 0.99993787758779, 0.9999534081908433, 0.9999689387938967, 0.9999844693969501, 1.0000000000000033}, new char[]{'e', 'i', 'a', 'c', 't', '.', 'm', ' ', 's', ',', 'l', 'b', 'v', 'g', 'o', 'h', 'w', 'd', 'p', 'n', 'y', 'x', 'u', 'f', 'r', ')', 'C', '-', '0', '\"', 'j', '?', 'A', '*', 'D', 'k', 'Q', 'q', '\'', '=', 'E', 'T', 'P', 'B', ':', 'W', 'S', '/', 'I', '2', 'L', '&', '(', 'O', 'M', 'z', 'Y', 'F', '4', 'U', 'N', 'H', '_', '5', '1'}) );
        twoCharacterInputWithUnknownOutput.put("e\'", new ProportionalProbability( new double[]{0.9801980198019802, 0.981023102310231, 0.9818481848184819, 0.9826732673267328, 0.9834983498349836, 0.9843234323432345, 0.9851485148514854, 0.9859735973597362, 0.9867986798679871, 0.987623762376238, 0.9884488448844888, 0.9892739273927397, 0.9900990099009905, 0.9909240924092414, 0.9917491749174923, 0.9925742574257431, 0.993399339933994, 0.9942244224422448, 0.9950495049504957, 0.9958745874587466, 0.9966996699669974, 0.9975247524752483, 0.9983498349834992, 0.99917491749175, 1.0000000000000009}, new char[]{'\'', 'e', ' ', 'u', 'n', 't', 'c', 'f', 'g', 'a', 'i', 'l', 'h', 's', 'm', 'r', 'w', 'o', ':', 'j', '=', '(', '-', 'p', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("e(", new ProportionalProbability( new double[]{0.9824561403508771, 0.9853801169590642, 0.9883040935672514, 0.9912280701754385, 0.9941520467836256, 0.9970760233918127, 0.9999999999999998}, new char[]{'(', 'e', 'i', ',', 'n', 'H', ')'}) );
        twoCharacterInputWithUnknownOutput.put("e)", new ProportionalProbability( new double[]{0.9921119592875318, 0.9923664122137404, 0.9926208651399491, 0.9928753180661577, 0.9931297709923663, 0.993384223918575, 0.9936386768447836, 0.9938931297709922, 0.9941475826972008, 0.9944020356234095, 0.9946564885496181, 0.9949109414758267, 0.9951653944020353, 0.995419847328244, 0.9956743002544526, 0.9959287531806612, 0.9961832061068698, 0.9964376590330785, 0.9966921119592871, 0.9969465648854957, 0.9972010178117043, 0.997455470737913, 0.9977099236641216, 0.9979643765903302, 0.9982188295165388, 0.9984732824427475, 0.9987277353689561, 0.9989821882951647, 0.9992366412213733, 0.999491094147582, 0.9997455470737906, 0.9999999999999992}, new char[]{')', ' ', 'l', 'e', 'a', 'i', 'p', 'J', 'f', 't', 'o', '+', 'n', 'S', 'u', '.', 's', 'r', 'h', 'j', '/', 'y', '-', 'F', 'c', 'm', 'd', 'q', '2', '(', 'g', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("ch", new ProportionalProbability( new double[]{0.9989157047918853, 0.9989331934242742, 0.9989506820566632, 0.9989681706890521, 0.998985659321441, 0.9990031479538299, 0.9990206365862189, 0.9990381252186078, 0.9990556138509967, 0.9990731024833857, 0.9990905911157746, 0.9991080797481635, 0.9991255683805524, 0.9991430570129414, 0.9991605456453303, 0.9991780342777192, 0.9991955229101082, 0.9992130115424971, 0.999230500174886, 0.999247988807275, 0.9992654774396639, 0.9992829660720528, 0.9993004547044417, 0.9993179433368307, 0.9993354319692196, 0.9993529206016085, 0.9993704092339974, 0.9993878978663864, 0.9994053864987753, 0.9994228751311642, 0.9994403637635532, 0.9994578523959421, 0.999475341028331, 0.99949282966072, 0.9995103182931089, 0.9995278069254978, 0.9995452955578867, 0.9995627841902757, 0.9995802728226646, 0.9995977614550535, 0.9996152500874425, 0.9996327387198314, 0.9996502273522203, 0.9996677159846092, 0.9996852046169982, 0.9997026932493871, 0.999720181881776, 0.999737670514165, 0.9997551591465539, 0.9997726477789428, 0.9997901364113317, 0.9998076250437207, 0.9998251136761096, 0.9998426023084985, 0.9998600909408875, 0.9998775795732764, 0.9998950682056653, 0.9999125568380542, 0.9999300454704432, 0.9999475341028321, 0.999965022735221, 0.99998251136761, 0.9999999999999989}, new char[]{'d', 'h', 's', 'y', '=', 'c', 'n', ' ', 'e', 'a', 'm', 'i', 'l', 't', 'r', 'o', 'v', 'u', '\"', 'g', '?', 'k', 'C', '-', '\'', 'w', 'p', 'f', 'S', '/', 'F', 'b', ')', 'L', 'x', ',', '.', 'O', '(', 'z', 'R', '2', 'A', 'q', ':', 'U', 'B', 'W', 'Y', '[', '1', 'D', 'V', '*', 'T', '+', 'I', 'j', 'í', 'P', 'H', 'ß', 'M'}) );
        twoCharacterInputWithUnknownOutput.put("e*", new ProportionalProbability( new double[]{0.9047619047619048, 0.9285714285714286, 0.9523809523809524, 0.9761904761904763, 1.0}, new char[]{'*', 'i', ' ', 'a', 's'}) );
        twoCharacterInputWithUnknownOutput.put("ci", new ProportionalProbability( new double[]{0.9982248520710059, 0.9982559950171286, 0.9982871379632513, 0.998318280909374, 0.9983494238554967, 0.9983805668016195, 0.9984117097477422, 0.9984428526938649, 0.9984739956399876, 0.9985051385861103, 0.9985362815322331, 0.9985674244783558, 0.9985985674244785, 0.9986297103706012, 0.9986608533167239, 0.9986919962628467, 0.9987231392089694, 0.9987542821550921, 0.9987854251012148, 0.9988165680473375, 0.9988477109934603, 0.998878853939583, 0.9989099968857057, 0.9989411398318284, 0.9989722827779511, 0.9990034257240739, 0.9990345686701966, 0.9990657116163193, 0.999096854562442, 0.9991279975085647, 0.9991591404546875, 0.9991902834008102, 0.9992214263469329, 0.9992525692930556, 0.9992837122391783, 0.999314855185301, 0.9993459981314238, 0.9993771410775465, 0.9994082840236692, 0.9994394269697919, 0.9994705699159147, 0.9995017128620374, 0.9995328558081601, 0.9995639987542828, 0.9995951417004055, 0.9996262846465283, 0.999657427592651, 0.9996885705387737, 0.9997197134848964, 0.9997508564310191, 0.9997819993771419, 0.9998131423232646, 0.9998442852693873, 0.99987542821551, 0.9999065711616327, 0.9999377141077554, 0.9999688570538782, 1.0000000000000009}, new char[]{'i', 'b', 'e', 'c', 'o', ' ', 'a', 'f', 'p', 'g', 'h', 'm', 'l', 't', 'n', 'u', 'w', '.', 's', 'y', 'd', 'x', 'r', '\"', '\'', 'I', 'E', '-', 'j', 'L', 'v', ')', 'R', 'k', 'T', 'q', 'P', 'D', 'S', ',', '3', '(', '5', 'C', 'M', ':', 'G', 'H', 'A', '%', 'J', 'O', '2', 'B', '…', '/', '!', 'z'}) );
        twoCharacterInputWithUnknownOutput.put("e,", new ProportionalProbability( new double[]{0.9958489419864331, 0.9959501873038372, 0.9960514326212413, 0.9961526779386454, 0.9962539232560494, 0.9963551685734535, 0.9964564138908576, 0.9965576592082617, 0.9966589045256657, 0.9967601498430698, 0.9968613951604739, 0.996962640477878, 0.997063885795282, 0.9971651311126861, 0.9972663764300902, 0.9973676217474943, 0.9974688670648983, 0.9975701123823024, 0.9976713576997065, 0.9977726030171106, 0.9978738483345146, 0.9979750936519187, 0.9980763389693228, 0.9981775842867269, 0.998278829604131, 0.998380074921535, 0.9984813202389391, 0.9985825655563432, 0.9986838108737472, 0.9987850561911513, 0.9988863015085554, 0.9989875468259595, 0.9990887921433635, 0.9991900374607676, 0.9992912827781717, 0.9993925280955758, 0.9994937734129798, 0.9995950187303839, 0.999696264047788, 0.9997975093651921, 0.9998987546825961, 1.0000000000000002}, new char[]{',', ' ', 'r', 'p', 'b', 'i', 'n', 'g', 'd', '/', 'e', 'a', 'k', 'o', 'c', 'v', 't', 's', 'm', 'u', 'l', 'h', 'y', 'f', 'w', 'q', '.', '(', 'X', 'E', '5', 'C', 'L', '1', 'S', 'R', 'U', ')', 'B', '-', 'D', 'F'}) );
        twoCharacterInputWithUnknownOutput.put("ck", new ProportionalProbability( new double[]{0.9965444584913612, 0.9966287399915719, 0.9967130214917825, 0.9967973029919932, 0.9968815844922039, 0.9969658659924145, 0.9970501474926252, 0.9971344289928359, 0.9972187104930466, 0.9973029919932572, 0.9973872734934679, 0.9974715549936786, 0.9975558364938892, 0.9976401179940999, 0.9977243994943106, 0.9978086809945212, 0.9978929624947319, 0.9979772439949426, 0.9980615254951533, 0.9981458069953639, 0.9982300884955746, 0.9983143699957853, 0.9983986514959959, 0.9984829329962066, 0.9985672144964173, 0.998651495996628, 0.9987357774968386, 0.9988200589970493, 0.99890434049726, 0.9989886219974706, 0.9990729034976813, 0.999157184997892, 0.9992414664981026, 0.9993257479983133, 0.999410029498524, 0.9994943109987346, 0.9995785924989453, 0.999662873999156, 0.9997471554993667, 0.9998314369995773, 0.999915718499788, 0.9999999999999987}, new char[]{'k', 'c', 'l', 'r', 'h', 'e', 'u', 'a', 'n', 't', 'd', 'o', 's', 'w', 'i', '9', ' ', 'b', 'f', 'v', 'P', ')', 'g', 'y', 'x', '7', '.', 'p', ',', 'D', 'q', 'm', 'J', '°', '\'', 'U', '…', '=', 'E', '0', '%', '\"'}) );
        twoCharacterInputWithUnknownOutput.put("e-", new ProportionalProbability( new double[]{0.9899234179766223, 0.9903264812575574, 0.9907295445384925, 0.9911326078194276, 0.9915356711003627, 0.9919387343812978, 0.9923417976622328, 0.9927448609431679, 0.993147924224103, 0.9935509875050381, 0.9939540507859732, 0.9943571140669083, 0.9947601773478434, 0.9951632406287785, 0.9955663039097136, 0.9959693671906487, 0.9963724304715837, 0.9967754937525188, 0.9971785570334539, 0.997581620314389, 0.9979846835953241, 0.9983877468762592, 0.9987908101571943, 0.9991938734381294, 0.9995969367190645, 0.9999999999999996}, new char[]{'-', ' ', 'd', 'm', 'i', 'u', 'e', 'r', 'b', 'n', 'h', 'c', '.', 't', 'a', 'g', 'l', 'o', 'p', 'y', 'f', 'W', '&', ',', 'x', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("dL", new ProportionalProbability( new double[]{0.8888888888888888, 1.0}, new char[]{'L', 'i'}) );
        twoCharacterInputWithUnknownOutput.put("cl", new ProportionalProbability( new double[]{0.9962784588441331, 0.9963514302393462, 0.9964244016345594, 0.9964973730297725, 0.9965703444249856, 0.9966433158201987, 0.9967162872154118, 0.996789258610625, 0.9968622300058381, 0.9969352014010512, 0.9970081727962643, 0.9970811441914774, 0.9971541155866905, 0.9972270869819037, 0.9973000583771168, 0.9973730297723299, 0.997446001167543, 0.9975189725627561, 0.9975919439579692, 0.9976649153531824, 0.9977378867483955, 0.9978108581436086, 0.9978838295388217, 0.9979568009340348, 0.9980297723292479, 0.9981027437244611, 0.9981757151196742, 0.9982486865148873, 0.9983216579101004, 0.9983946293053135, 0.9984676007005266, 0.9985405720957398, 0.9986135434909529, 0.998686514886166, 0.9987594862813791, 0.9988324576765922, 0.9989054290718054, 0.9989784004670185, 0.9990513718622316, 0.9991243432574447, 0.9991973146526578, 0.9992702860478709, 0.999343257443084, 0.9994162288382972, 0.9994892002335103, 0.9995621716287234, 0.9996351430239365, 0.9997081144191496, 0.9997810858143628, 0.9998540572095759, 0.999927028604789, 1.000000000000002}, new char[]{'l', 'v', ' ', 'e', 'c', 'o', 'S', 'a', 's', 'i', 'n', 'm', 'u', 'h', 'd', 'g', 'w', ',', '.', '^', 't', 'r', 'p', 'j', '\'', 'U', ')', 'f', 'M', 'q', 'I', 'z', 'B', 'L', 'y', '\"', 'C', ':', '(', 'b', 'W', 'k', '>', 'E', '-', '2', 'x', 'D', 'P', '=', '1', 'O'}) );
        twoCharacterInputWithUnknownOutput.put("e.", new ProportionalProbability( new double[]{0.9949972811310495, 0.9951060358890701, 0.9952147906470907, 0.9953235454051114, 0.995432300163132, 0.9955410549211526, 0.9956498096791733, 0.9957585644371939, 0.9958673191952145, 0.9959760739532352, 0.9960848287112558, 0.9961935834692764, 0.9963023382272971, 0.9964110929853177, 0.9965198477433383, 0.996628602501359, 0.9967373572593796, 0.9968461120174003, 0.9969548667754209, 0.9970636215334415, 0.9971723762914622, 0.9972811310494828, 0.9973898858075034, 0.9974986405655241, 0.9976073953235447, 0.9977161500815653, 0.997824904839586, 0.9979336595976066, 0.9980424143556272, 0.9981511691136479, 0.9982599238716685, 0.9983686786296891, 0.9984774333877098, 0.9985861881457304, 0.998694942903751, 0.9988036976617717, 0.9989124524197923, 0.999021207177813, 0.9991299619358336, 0.9992387166938542, 0.9993474714518749, 0.9994562262098955, 0.9995649809679161, 0.9996737357259368, 0.9997824904839574, 0.999891245241978, 0.9999999999999987}, new char[]{'.', 'u', 'n', ' ', 'e', '(', 'a', 'o', 'i', 't', 'r', 'y', 'f', 'q', 'g', 'v', '-', '3', ':', 'l', 'I', 'm', 'd', '&', 'L', 'k', 'w', 'ç', 'b', 'h', ',', 's', 'T', '2', 'p', 'x', 'c', 'A', 'M', ')', 'H', 'U', 'W', 'C', '0', ' ', 'R'}) );
        twoCharacterInputWithUnknownOutput.put("e/", new ProportionalProbability( new double[]{0.9841954022988506, 0.9849137931034483, 0.985632183908046, 0.9863505747126436, 0.9870689655172413, 0.987787356321839, 0.9885057471264367, 0.9892241379310344, 0.989942528735632, 0.9906609195402297, 0.9913793103448274, 0.9920977011494251, 0.9928160919540228, 0.9935344827586204, 0.9942528735632181, 0.9949712643678158, 0.9956896551724135, 0.9964080459770112, 0.9971264367816088, 0.9978448275862065, 0.9985632183908042, 0.9992816091954019, 0.9999999999999996}, new char[]{'/', 'r', 'a', 'i', 'h', 'e', 'b', '.', ' ', 'm', 'o', 'C', 'n', 'g', 'l', 't', 'f', 'u', 'c', 'd', 'p', ',', 's'}) );
        twoCharacterInputWithUnknownOutput.put("cm", new ProportionalProbability( new double[]{0.9645390070921985, 0.9716312056737588, 0.9787234042553191, 0.9858156028368794, 0.9929078014184397, 1.0}, new char[]{'m', '0', 'd', ' ', 't', 'l'}) );
        twoCharacterInputWithUnknownOutput.put("cn", new ProportionalProbability( new double[]{0.9583333333333334, 0.9666666666666667, 0.975, 0.9833333333333333, 0.9916666666666666, 0.9999999999999999}, new char[]{'n', 'e', 'c', 'o', 'a', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("co", new ProportionalProbability( new double[]{0.9990126821670932, 0.9990265880520637, 0.9990404939370342, 0.9990543998220047, 0.9990683057069752, 0.9990822115919458, 0.9990961174769163, 0.9991100233618868, 0.9991239292468573, 0.9991378351318279, 0.9991517410167984, 0.9991656469017689, 0.9991795527867394, 0.9991934586717099, 0.9992073645566805, 0.999221270441651, 0.9992351763266215, 0.999249082211592, 0.9992629880965626, 0.9992768939815331, 0.9992907998665036, 0.9993047057514741, 0.9993186116364446, 0.9993325175214152, 0.9993464234063857, 0.9993603292913562, 0.9993742351763267, 0.9993881410612973, 0.9994020469462678, 0.9994159528312383, 0.9994298587162088, 0.9994437646011793, 0.9994576704861499, 0.9994715763711204, 0.9994854822560909, 0.9994993881410614, 0.999513294026032, 0.9995271999110025, 0.999541105795973, 0.9995550116809435, 0.999568917565914, 0.9995828234508846, 0.9995967293358551, 0.9996106352208256, 0.9996245411057961, 0.9996384469907666, 0.9996523528757372, 0.9996662587607077, 0.9996801646456782, 0.9996940705306487, 0.9997079764156193, 0.9997218823005898, 0.9997357881855603, 0.9997496940705308, 0.9997635999555013, 0.9997775058404719, 0.9997914117254424, 0.9998053176104129, 0.9998192234953834, 0.999833129380354, 0.9998470352653245, 0.999860941150295, 0.9998748470352655, 0.999888752920236, 0.9999026588052066, 0.9999165646901771, 0.9999304705751476, 0.9999443764601181, 0.9999582823450887, 0.9999721882300592, 0.9999860941150297, 1.0000000000000002}, new char[]{'o', ' ', 'n', 'e', 'i', 'm', 'l', 'h', 'r', 'c', 'd', 's', 'v', 't', ',', 'f', 'a', 'g', 'C', 'u', 'y', 'b', '\"', 'j', '.', 'O', 'p', 'w', ':', '(', '&', ';', '1', '4', 'k', ')', 'ï', '?', 'W', 'M', '>', 'A', '/', '-', 'x', 'P', '2', '\'', '+', 'D', 'L', '3', '0', 'z', 'N', 'E', '%', '•', 'B', '7', 'G', 'U', '_', 'q', 'S', '}', '6', 'F', '=', 'ì', 'I', 'T'}) );
        twoCharacterInputWithUnknownOutput.put("e1", new ProportionalProbability( new double[]{0.75, 1.0}, new char[]{'S', ' '}) );
        twoCharacterInputWithUnknownOutput.put("e2", new ProportionalProbability( new double[]{0.9583333333333334, 1.0}, new char[]{'e', '2'}) );
        twoCharacterInputWithUnknownOutput.put("cq", new ProportionalProbability( new double[]{0.9865591397849462, 0.989247311827957, 0.9919354838709677, 0.9946236559139785, 0.9973118279569892, 1.0}, new char[]{'n', 'q', 'c', ' ', 'u', 'p'}) );
        twoCharacterInputWithUnknownOutput.put("cr", new ProportionalProbability( new double[]{0.9965426200653759, 0.9966054815187326, 0.9966683429720894, 0.9967312044254462, 0.9967940658788029, 0.9968569273321597, 0.9969197887855165, 0.9969826502388732, 0.99704551169223, 0.9971083731455868, 0.9971712345989435, 0.9972340960523003, 0.9972969575056571, 0.9973598189590138, 0.9974226804123706, 0.9974855418657274, 0.9975484033190841, 0.9976112647724409, 0.9976741262257977, 0.9977369876791544, 0.9977998491325112, 0.997862710585868, 0.9979255720392247, 0.9979884334925815, 0.9980512949459382, 0.998114156399295, 0.9981770178526518, 0.9982398793060085, 0.9983027407593653, 0.9983656022127221, 0.9984284636660788, 0.9984913251194356, 0.9985541865727924, 0.9986170480261491, 0.9986799094795059, 0.9987427709328627, 0.9988056323862194, 0.9988684938395762, 0.998931355292933, 0.9989942167462897, 0.9990570781996465, 0.9991199396530033, 0.99918280110636, 0.9992456625597168, 0.9993085240130736, 0.9993713854664303, 0.9994342469197871, 0.9994971083731439, 0.9995599698265006, 0.9996228312798574, 0.9996856927332142, 0.9997485541865709, 0.9998114156399277, 0.9998742770932845, 0.9999371385466412, 0.999999999999998}, new char[]{'r', 'f', 'e', 'p', 'n', 't', 'I', 'a', ' ', 'c', 'S', 'i', 'u', 'G', 'g', 'h', 's', 'b', 'o', 'l', 'C', 'P', 'm', '.', '\'', 'k', '(', 'w', 'd', 'y', 'M', 'v', 'T', 'L', 'R', '8', 'F', '-', '?', 'D', '&', 'x', ',', 'A', ':', 'z', ';', 'B', 'K', 'O', '3', ')', 'H', 'W', 'q', '2'}) );
        twoCharacterInputWithUnknownOutput.put("cs", new ProportionalProbability( new double[]{0.9907178217821783, 0.9910272277227723, 0.9913366336633663, 0.9916460396039604, 0.9919554455445544, 0.9922648514851484, 0.9925742574257425, 0.9928836633663365, 0.9931930693069305, 0.9935024752475246, 0.9938118811881186, 0.9941212871287126, 0.9944306930693066, 0.9947400990099007, 0.9950495049504947, 0.9953589108910887, 0.9956683168316828, 0.9959777227722768, 0.9962871287128708, 0.9965965346534649, 0.9969059405940589, 0.9972153465346529, 0.997524752475247, 0.997834158415841, 0.998143564356435, 0.9984529702970291, 0.9987623762376231, 0.9990717821782171, 0.9993811881188112, 0.9996905940594052, 0.9999999999999992}, new char[]{'s', 'a', 'e', 'r', '.', 'm', ' ', 'o', 'i', 'k', 'l', 'b', 'p', 't', 'n', 'y', 'I', 'u', '-', 'g', 'c', 'd', 'w', 'D', '/', '2', 'R', 'h', 'x', 'f', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("dT", new ProportionalProbability( new double[]{0.9166666666666666, 1.0}, new char[]{'T', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("ct", new ProportionalProbability( new double[]{0.9989125420154221, 0.998929018651552, 0.998945495287682, 0.9989619719238119, 0.9989784485599418, 0.9989949251960717, 0.9990114018322016, 0.9990278784683315, 0.9990443551044614, 0.9990608317405913, 0.9990773083767213, 0.9990937850128512, 0.9991102616489811, 0.999126738285111, 0.9991432149212409, 0.9991596915573708, 0.9991761681935007, 0.9991926448296307, 0.9992091214657606, 0.9992255981018905, 0.9992420747380204, 0.9992585513741503, 0.9992750280102802, 0.9992915046464101, 0.9993079812825401, 0.99932445791867, 0.9993409345547999, 0.9993574111909298, 0.9993738878270597, 0.9993903644631896, 0.9994068410993195, 0.9994233177354495, 0.9994397943715794, 0.9994562710077093, 0.9994727476438392, 0.9994892242799691, 0.999505700916099, 0.9995221775522289, 0.9995386541883589, 0.9995551308244888, 0.9995716074606187, 0.9995880840967486, 0.9996045607328785, 0.9996210373690084, 0.9996375140051383, 0.9996539906412683, 0.9996704672773982, 0.9996869439135281, 0.999703420549658, 0.9997198971857879, 0.9997363738219178, 0.9997528504580477, 0.9997693270941777, 0.9997858037303076, 0.9998022803664375, 0.9998187570025674, 0.9998352336386973, 0.9998517102748272, 0.9998681869109571, 0.999884663547087, 0.999901140183217, 0.9999176168193469, 0.9999340934554768, 0.9999505700916067, 0.9999670467277366, 0.9999835233638665, 0.9999999999999964}, new char[]{'t', 'e', 'l', ' ', 'r', 'w', 'b', 'c', 'a', 'd', 'u', 'v', 'i', 's', 'y', 'o', 'n', 'j', 'f', '\"', 'g', 'p', ':', 'x', 'm', ',', '0', 'h', ';', '.', '=', '8', '2', '1', '-', 'z', 'k', 'B', 'J', 'M', ')', '9', '(', '7', 'E', 'q', 'U', 'R', 'S', 'G', 'T', '3', '_', '+', 'I', 'D', '6', 'A', 'N', 'W', 'C', '/', '…', '5', 'P', 'H', '&'}) );
        twoCharacterInputWithUnknownOutput.put("a²", new ProportionalProbability( new double[]{0.9886363636363636, 1.0}, new char[]{'²', 'b'}) );
        twoCharacterInputWithUnknownOutput.put("cu", new ProportionalProbability( new double[]{0.9978018354673848, 0.9978567895807001, 0.9979117436940155, 0.9979666978073308, 0.9980216519206462, 0.9980766060339615, 0.9981315601472769, 0.9981865142605922, 0.9982414683739076, 0.998296422487223, 0.9983513766005383, 0.9984063307138537, 0.998461284827169, 0.9985162389404844, 0.9985711930537997, 0.9986261471671151, 0.9986811012804304, 0.9987360553937458, 0.9987910095070611, 0.9988459636203765, 0.9989009177336918, 0.9989558718470072, 0.9990108259603225, 0.9990657800736379, 0.9991207341869532, 0.9991756883002686, 0.999230642413584, 0.9992855965268993, 0.9993405506402147, 0.99939550475353, 0.9994504588668454, 0.9995054129801607, 0.9995603670934761, 0.9996153212067914, 0.9996702753201068, 0.9997252294334221, 0.9997801835467375, 0.9998351376600528, 0.9998900917733682, 0.9999450458866835, 0.9999999999999989}, new char[]{'c', 'u', 'r', 't', ' ', 'g', 'h', 'a', 'p', 'i', 'm', 'T', 'o', 'n', 's', 'y', '-', 'w', 'f', 'v', 'e', 'l', 'b', '.', 'd', '\'', 'q', '+', 'B', 'k', 'x', '/', ',', '=', 'W', 'P', '1', 'z', 'U', 'N', 'C'}) );
        twoCharacterInputWithUnknownOutput.put("e:", new ProportionalProbability( new double[]{0.9851169383416017, 0.9858256555634303, 0.9865343727852588, 0.9872430900070873, 0.9879518072289158, 0.9886605244507444, 0.9893692416725729, 0.9900779588944014, 0.99078667611623, 0.9914953933380585, 0.992204110559887, 0.9929128277817155, 0.993621545003544, 0.9943302622253726, 0.9950389794472011, 0.9957476966690296, 0.9964564138908582, 0.9971651311126867, 0.9978738483345152, 0.9985825655563437, 0.9992912827781723, 1.0000000000000007}, new char[]{':', ' ', 'e', 'i', 'y', 'b', 'l', 'f', 'w', 't', 'u', 'g', 'o', 'r', 's', 'h', ',', 'c', 'a', 'z', 'm', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("cx", new ProportionalProbability( new double[]{0.9743589743589743, 0.9829059829059829, 0.9914529914529914, 0.9999999999999999}, new char[]{'x', 't', ' ', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("cy", new ProportionalProbability( new double[]{0.9939523995317987, 0.9941474834178697, 0.9943425673039408, 0.9945376511900118, 0.9947327350760828, 0.9949278189621539, 0.9951229028482249, 0.995317986734296, 0.995513070620367, 0.995708154506438, 0.995903238392509, 0.9960983222785801, 0.9962934061646511, 0.9964884900507222, 0.9966835739367932, 0.9968786578228642, 0.9970737417089353, 0.9972688255950063, 0.9974639094810773, 0.9976589933671484, 0.9978540772532194, 0.9980491611392904, 0.9982442450253615, 0.9984393289114325, 0.9986344127975035, 0.9988294966835746, 0.9990245805696456, 0.9992196644557166, 0.9994147483417877, 0.9996098322278587, 0.9998049161139297, 1.0000000000000007}, new char[]{'y', ' ', 'r', 's', 'c', ',', 'n', 'd', 'l', 'o', 'p', 't', 'e', 'k', 'a', 'W', 'b', 'i', 'w', 'C', 'g', 'u', 'h', 'm', 'v', '(', 'V', ':', 'f', '.', 'D', '-'}) );
        twoCharacterInputWithUnknownOutput.put("e;", new ProportionalProbability( new double[]{0.9955436720142602, 0.9959893048128342, 0.9964349376114082, 0.9968805704099822, 0.9973262032085563, 0.9977718360071303, 0.9982174688057043, 0.9986631016042783, 0.9991087344028523, 0.9995543672014263, 1.0000000000000002}, new char[]{';', 'u', 'd', 'n', ' ', 'l', 'e', 'r', 'E', 't', '1'}) );
        twoCharacterInputWithUnknownOutput.put("e<", new ProportionalProbability( new double[]{0.9990941259731069, 0.9991224345364473, 0.9991507430997878, 0.9991790516631283, 0.9992073602264687, 0.9992356687898092, 0.9992639773531496, 0.9992922859164901, 0.9993205944798306, 0.999348903043171, 0.9993772116065115, 0.999405520169852, 0.9994338287331924, 0.9994621372965329, 0.9994904458598733, 0.9995187544232138, 0.9995470629865543, 0.9995753715498947, 0.9996036801132352, 0.9996319886765757, 0.9996602972399161, 0.9996886058032566, 0.999716914366597, 0.9997452229299375, 0.999773531493278, 0.9998018400566184, 0.9998301486199589, 0.9998584571832994, 0.9998867657466398, 0.9999150743099803, 0.9999433828733207, 0.9999716914366612, 1.0000000000000016}, new char[]{' ', 'e', 't', 'u', 'a', 'n', 'd', 'r', 'l', 'g', 'o', 'I', '\"', 'p', '0', '<', 's', '.', 'c', 'i', 'U', 'v', 'b', 'm', 'G', 'q', '+', '\'', 'y', 'f', 'H', 'k', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("cz", new ProportionalProbability( new double[]{0.9906687402799378, 0.9922239502332815, 0.9937791601866252, 0.9953343701399688, 0.9968895800933125, 0.9984447900466562, 0.9999999999999999}, new char[]{'z', 'ł', ' ', 'm', 'p', 'r', 'c'}) );
        twoCharacterInputWithUnknownOutput.put("e=", new ProportionalProbability( new double[]{0.9923664122137404, 1.0}, new char[]{'=', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("e>", new ProportionalProbability( new double[]{0.9166666666666666, 0.9583333333333333, 0.9999999999999999}, new char[]{'>', 'd', ' '}) );
        twoCharacterInputWithUnknownOutput.put("f ", new ProportionalProbability( new double[]{0.9990300556773235, 0.9990426523568388, 0.999055249036354, 0.9990678457158693, 0.9990804423953845, 0.9990930390748998, 0.999105635754415, 0.9991182324339303, 0.9991308291134455, 0.9991434257929608, 0.999156022472476, 0.9991686191519913, 0.9991812158315065, 0.9991938125110218, 0.999206409190537, 0.9992190058700523, 0.9992316025495676, 0.9992441992290828, 0.9992567959085981, 0.9992693925881133, 0.9992819892676286, 0.9992945859471438, 0.9993071826266591, 0.9993197793061743, 0.9993323759856896, 0.9993449726652048, 0.9993575693447201, 0.9993701660242353, 0.9993827627037506, 0.9993953593832658, 0.9994079560627811, 0.9994205527422964, 0.9994331494218116, 0.9994457461013269, 0.9994583427808421, 0.9994709394603574, 0.9994835361398726, 0.9994961328193879, 0.9995087294989031, 0.9995213261784184, 0.9995339228579336, 0.9995465195374489, 0.9995591162169641, 0.9995717128964794, 0.9995843095759946, 0.9995969062555099, 0.9996095029350252, 0.9996220996145404, 0.9996346962940557, 0.9996472929735709, 0.9996598896530862, 0.9996724863326014, 0.9996850830121167, 0.9996976796916319, 0.9997102763711472, 0.9997228730506624, 0.9997354697301777, 0.9997480664096929, 0.9997606630892082, 0.9997732597687234, 0.9997858564482387, 0.999798453127754, 0.9998110498072692, 0.9998236464867845, 0.9998362431662997, 0.999848839845815, 0.9998614365253302, 0.9998740332048455, 0.9998866298843607, 0.999899226563876, 0.9999118232433912, 0.9999244199229065, 0.9999370166024217, 0.999949613281937, 0.9999622099614522, 0.9999748066409675, 0.9999874033204827, 0.999999999999998}, new char[]{'t', ' ', 'n', 'o', 'm', 'p', 'd', 'l', 'a', 'r', 'f', 'i', 'u', 'e', 's', '\"', 'g', 'h', 'y', ',', 'B', 'b', 'c', 'D', '.', 'N', 'k', '’', 'w', 'A', 'v', '-', 'I', 'x', '?', 'M', '=', 'q', '*', ')', '/', '>', '1', 'C', '4', 'L', 'S', '2', '3', '^', 'z', 'E', 'P', '(', '&', ':', '9', 'R', '•', '7', '|', 'G', '\'', 'F', 'W', 'T', '5', '…', 'H', '0', ';', 'J', '+', '6', 'j', '_', '}', '±'}) );
        twoCharacterInputWithUnknownOutput.put("e?", new ProportionalProbability( new double[]{0.9885161680265941, 0.9888183741311575, 0.9891205802357208, 0.9894227863402841, 0.9897249924448475, 0.9900271985494108, 0.9903294046539741, 0.9906316107585375, 0.9909338168631008, 0.9912360229676641, 0.9915382290722274, 0.9918404351767908, 0.9921426412813541, 0.9924448473859174, 0.9927470534904808, 0.9930492595950441, 0.9933514656996074, 0.9936536718041707, 0.9939558779087341, 0.9942580840132974, 0.9945602901178607, 0.9948624962224241, 0.9951647023269874, 0.9954669084315507, 0.995769114536114, 0.9960713206406774, 0.9963735267452407, 0.996675732849804, 0.9969779389543674, 0.9972801450589307, 0.997582351163494, 0.9978845572680574, 0.9981867633726207, 0.998488969477184, 0.9987911755817473, 0.9990933816863107, 0.999395587790874, 0.9996977938954373, 1.0000000000000007}, new char[]{'r', ' ', '?', 's', 'm', 'l', 'e', 'I', 'd', 'x', 't', 'i', 'v', 'p', 'n', 'a', 'u', 'c', 'o', 'g', 'y', 'h', 'b', 'S', 'D', 'z', 'B', 'w', ',', 'f', 'T', 'L', 'C', '-', 'W', ')', '.', 'G', 'k'}) );
        twoCharacterInputWithUnknownOutput.put("f!", new ProportionalProbability( new double[]{0.9285714285714286, 1.0}, new char[]{'!', 'f'}) );
        twoCharacterInputWithUnknownOutput.put("f\"", new ProportionalProbability( new double[]{0.9615384615384616, 1.0}, new char[]{'\"', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("da", new ProportionalProbability( new double[]{0.9972921914357683, 0.9973551637279597, 0.9974181360201512, 0.9974811083123426, 0.997544080604534, 0.9976070528967255, 0.9976700251889169, 0.9977329974811083, 0.9977959697732998, 0.9978589420654912, 0.9979219143576826, 0.9979848866498741, 0.9980478589420655, 0.9981108312342569, 0.9981738035264484, 0.9982367758186398, 0.9982997481108312, 0.9983627204030227, 0.9984256926952141, 0.9984886649874055, 0.998551637279597, 0.9986146095717884, 0.9986775818639798, 0.9987405541561712, 0.9988035264483627, 0.9988664987405541, 0.9989294710327455, 0.998992443324937, 0.9990554156171284, 0.9991183879093198, 0.9991813602015113, 0.9992443324937027, 0.9993073047858941, 0.9993702770780856, 0.999433249370277, 0.9994962216624684, 0.9995591939546599, 0.9996221662468513, 0.9996851385390427, 0.9997481108312342, 0.9998110831234256, 0.999874055415617, 0.9999370277078085, 0.9999999999999999}, new char[]{'a', 'd', 'u', ' ', 'r', 'f', 'e', 'H', 'n', 'h', 's', 't', 'i', 'D', 'm', '\'', 'c', 'o', '/', 'F', 'l', 'g', 'p', 'v', 'y', 'w', 'b', '\"', 'I', '-', '.', ',', 'T', 'P', 'í', '%', '1', 'j', '(', ')', 'x', 'z', ']', 'q'}) );
        twoCharacterInputWithUnknownOutput.put("eB", new ProportionalProbability( new double[]{0.8333333333333334, 0.9166666666666667, 1.0}, new char[]{' ', 't', 'B'}) );
        twoCharacterInputWithUnknownOutput.put("db", new ProportionalProbability( new double[]{0.956140350877193, 0.9590643274853801, 0.9619883040935672, 0.9649122807017543, 0.9678362573099414, 0.9707602339181285, 0.9736842105263156, 0.9766081871345027, 0.9795321637426898, 0.9824561403508769, 0.985380116959064, 0.9883040935672511, 0.9912280701754382, 0.9941520467836253, 0.9970760233918124, 0.9999999999999996}, new char[]{'b', 'a', 'e', 'h', ' ', 't', 'f', 's', 'r', '(', '3', 'o', 'd', 'w', 'i', 'n'}) );
        twoCharacterInputWithUnknownOutput.put("dc", new ProportionalProbability( new double[]{0.9715639810426541, 0.9763033175355451, 0.9810426540284362, 0.9857819905213272, 0.9905213270142182, 0.9952606635071093, 1.0000000000000002}, new char[]{'c', 'e', ' ', 'd', 'B', 'v', 'w'}) );
        twoCharacterInputWithUnknownOutput.put("dd", new ProportionalProbability( new double[]{0.9912232583653319, 0.9914975315414153, 0.9917718047174987, 0.9920460778935821, 0.9923203510696655, 0.992594624245749, 0.9928688974218324, 0.9931431705979158, 0.9934174437739992, 0.9936917169500826, 0.993965990126166, 0.9942402633022495, 0.9945145364783329, 0.9947888096544163, 0.9950630828304997, 0.9953373560065831, 0.9956116291826665, 0.99588590235875, 0.9961601755348334, 0.9964344487109168, 0.9967087218870002, 0.9969829950630836, 0.997257268239167, 0.9975315414152505, 0.9978058145913339, 0.9980800877674173, 0.9983543609435007, 0.9986286341195841, 0.9989029072956676, 0.999177180471751, 0.9994514536478344, 0.9997257268239178, 1.000000000000001}, new char[]{'d', 't', 'm', 'n', 'e', 'i', 'r', 'c', 'l', ' ', 'h', 'u', '\"', 's', 'o', 'v', 'p', '9', '0', 'a', 'b', '\'', 'f', '1', 'w', 'g', 'S', '…', 'A', 'k', '/', '-', '.'}) );
        twoCharacterInputWithUnknownOutput.put("de", new ProportionalProbability( new double[]{0.9990154519349105, 0.9990291262135923, 0.9990428004922741, 0.9990564747709559, 0.9990701490496378, 0.9990838233283196, 0.9990974976070014, 0.9991111718856832, 0.999124846164365, 0.9991385204430469, 0.9991521947217287, 0.9991658690004105, 0.9991795432790923, 0.9991932175577741, 0.999206891836456, 0.9992205661151378, 0.9992342403938196, 0.9992479146725014, 0.9992615889511832, 0.999275263229865, 0.9992889375085469, 0.9993026117872287, 0.9993162860659105, 0.9993299603445923, 0.9993436346232741, 0.999357308901956, 0.9993709831806378, 0.9993846574593196, 0.9993983317380014, 0.9994120060166832, 0.999425680295365, 0.9994393545740469, 0.9994530288527287, 0.9994667031314105, 0.9994803774100923, 0.9994940516887741, 0.999507725967456, 0.9995214002461378, 0.9995350745248196, 0.9995487488035014, 0.9995624230821832, 0.9995760973608651, 0.9995897716395469, 0.9996034459182287, 0.9996171201969105, 0.9996307944755923, 0.9996444687542742, 0.999658143032956, 0.9996718173116378, 0.9996854915903196, 0.9996991658690014, 0.9997128401476832, 0.9997265144263651, 0.9997401887050469, 0.9997538629837287, 0.9997675372624105, 0.9997812115410923, 0.9997948858197742, 0.999808560098456, 0.9998222343771378, 0.9998359086558196, 0.9998495829345014, 0.9998632572131833, 0.9998769314918651, 0.9998906057705469, 0.9999042800492287, 0.9999179543279105, 0.9999316286065923, 0.9999453028852742, 0.999958977163956, 0.9999726514426378, 0.9999863257213196, 1.0000000000000013}, new char[]{'e', 'b', 'a', 'd', 'n', ' ', 'f', 'h', 'r', 'u', 'p', 't', 's', 'l', 'D', 'o', ':', 'c', 'm', 'g', 'y', 'R', 'w', 'i', '/', '.', 'x', 'B', '–', '\"', '1', 'v', 'E', ',', 'k', '?', 'z', '0', '&', '-', '3', 'M', '9', 'T', 'K', 'C', 'I', 'W', '(', ')', '>', 'L', 'A', 'q', 'O', '2', 'P', 'H', 'V', 'F', 'N', '\'', '4', '8', '_', 'Y', 'G', 'Z', '=', 'j', 'J', 'S', '^'}) );
        twoCharacterInputWithUnknownOutput.put("f\'", new ProportionalProbability( new double[]{0.9700598802395209, 0.9760479041916168, 0.9820359281437127, 0.9880239520958085, 0.9940119760479044, 1.0000000000000002}, new char[]{'\'', 't', ' ', 'w', 's', 'g'}) );
        twoCharacterInputWithUnknownOutput.put("f(", new ProportionalProbability( new double[]{0.9722650231124808, 0.9738058551617874, 0.9753466872110941, 0.9768875192604007, 0.9784283513097074, 0.9799691833590141, 0.9815100154083207, 0.9830508474576274, 0.984591679506934, 0.9861325115562407, 0.9876733436055474, 0.989214175654854, 0.9907550077041607, 0.9922958397534674, 0.993836671802774, 0.9953775038520807, 0.9969183359013873, 0.998459167950694, 1.0000000000000007}, new char[]{')', 'h', '(', 'x', 'v', 'n', 'c', 'a', '+', 's', 'ε', 'e', ' ', 'y', '4', '^', '?', '-', 't'}) );
        twoCharacterInputWithUnknownOutput.put("df", new ProportionalProbability( new double[]{0.9708333333333333, 0.975, 0.9791666666666666, 0.9833333333333333, 0.9874999999999999, 0.9916666666666666, 0.9958333333333332, 0.9999999999999999}, new char[]{'f', 'e', 'd', ' ', 'a', 'n', 'o', 'r'}) );
        twoCharacterInputWithUnknownOutput.put("dg", new ProportionalProbability( new double[]{0.9876868953386104, 0.9881266490765171, 0.9885664028144239, 0.9890061565523306, 0.9894459102902373, 0.989885664028144, 0.9903254177660508, 0.9907651715039575, 0.9912049252418642, 0.9916446789797709, 0.9920844327176777, 0.9925241864555844, 0.9929639401934911, 0.9934036939313978, 0.9938434476693045, 0.9942832014072113, 0.994722955145118, 0.9951627088830247, 0.9956024626209314, 0.9960422163588382, 0.9964819700967449, 0.9969217238346516, 0.9973614775725583, 0.997801231310465, 0.9982409850483718, 0.9986807387862785, 0.9991204925241852, 0.999560246262092, 0.9999999999999987}, new char[]{'h', 'g', ' ', 'n', 'd', 'r', 's', 'e', 'c', 'o', 't', 'z', 'i', 'A', 'v', 'M', 'a', 'w', 'k', 'u', '-', '.', 'f', 'H', 'l', 'b', 'y', ',', 'm'}) );
        twoCharacterInputWithUnknownOutput.put("f)", new ProportionalProbability( new double[]{0.9977513652425313, 0.9979119820109219, 0.9980725987793125, 0.9982332155477032, 0.9983938323160938, 0.9985544490844844, 0.9987150658528751, 0.9988756826212657, 0.9990362993896563, 0.999196916158047, 0.9993575329264376, 0.9995181496948282, 0.9996787664632188, 0.9998393832316095, 1.0}, new char[]{'i', ' ', ')', 'f', 'o', 'm', 'n', '.', 'a', 'g', 't', 'u', 'h', 'ן', 'e'}) );
        twoCharacterInputWithUnknownOutput.put("dh", new ProportionalProbability( new double[]{0.972972972972973, 0.9768339768339769, 0.9806949806949807, 0.9845559845559846, 0.9884169884169884, 0.9922779922779923, 0.9961389961389961, 1.0}, new char[]{'h', 'd', 'l', 's', 'n', 'i', 'w', 'm'}) );
    }


}
